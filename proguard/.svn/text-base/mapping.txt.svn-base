android.annotation.SuppressLint -> android.annotation.SuppressLint:
    java.lang.String[] value() -> value
android.annotation.TargetApi -> android.annotation.TargetApi:
    int value() -> value
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.a:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> f
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.b:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> f
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.c:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> f
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.d:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> f
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.e:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.f:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> a
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> a
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.a:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.b:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.c:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.d:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.e:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.f:
    boolean mHasMirroring -> b
    android.graphics.Rect mTmpRect -> c
    float mPosition -> d
    float mOffset -> e
    android.support.v4.app.ActionBarDrawerToggle this$0 -> a
    void setPosition(float) -> a
    float getPosition() -> a
    void setOffset(float) -> b
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.g:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.h:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.i:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.j:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.k:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> a
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> a
    void finishAffinity(android.app.Activity) -> a
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.l:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> a
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.m:
    android.app.ActivityOptions mActivityOptions -> a
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> a
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> a
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> a
    android.os.Bundle toBundle() -> a
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> a
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> getName
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.o:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.p:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> a
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.q:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.r:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    int HONEYCOMB -> HONEYCOMB
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> a
    void onReallyStop() -> a
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.t:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.u:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.v:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.w:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.x:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> a
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> a
    void checkStateLoss() -> q
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> a
    boolean execPendingActions() -> b
    void reportBackStackChanged() -> c
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> d
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> e
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> f
    void dispatchCreate() -> g
    void dispatchActivityCreated() -> h
    void dispatchStart() -> i
    void dispatchResume() -> j
    void dispatchPause() -> k
    void dispatchStop() -> l
    void dispatchReallyStop() -> m
    void dispatchDestroyView() -> n
    void dispatchDestroy() -> o
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> p
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> b
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.y:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.z:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.aa:
    java.lang.String val$name -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.ab:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.ac:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.ad:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.ae:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.af:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.ag:
    android.content.Context mContext -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.ah:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.ai:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.aj:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ak:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.al:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> a
    void doStop() -> b
    void doRetain() -> c
    void finishRetain() -> d
    void doReportNextStart() -> e
    void doReportStart() -> f
    void doDestroy() -> g
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.am:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.an:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.ao:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.ap:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> b
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.app.aq:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ar:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> a
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.as:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.at:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.au:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.av:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.aw:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.ax:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> d
    java.lang.CharSequence mBigContentTitle -> e
    java.lang.CharSequence mSummaryText -> f
    boolean mSummaryTextSet -> g
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.ay:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.az:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.ba:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.bb:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> a
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> a
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.bc:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    java.lang.String escapeHtml(java.lang.CharSequence) -> a
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.bd:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    java.lang.String escapeHtml(java.lang.CharSequence) -> a
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> a
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.be:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> a
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.bf:
    java.lang.String escapeHtml(java.lang.CharSequence) -> a
    boolean shouldAddChooserIntent(android.view.MenuItem) -> a
android.support.v4.app.ShareCompatICS -> android.support.v4.app.bg:
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> a
android.support.v4.app.ShareCompatJB -> android.support.v4.app.bh:
    java.lang.String escapeHtml(java.lang.CharSequence) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.bi:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.bj:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.bk:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.bl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.bm:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> a
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> a
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.a:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.b:
    java.io.File getExternalCacheDir(android.content.Context) -> a
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> a
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.c:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
    java.io.File getObbDir(android.content.Context) -> a
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.d:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.e:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> a
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> a
    java.io.File[] getObbDirs(android.content.Context) -> b
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.f:
    android.net.Uri getUriForFile(java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.g:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    android.net.Uri getUriForFile(java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.h:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.i:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.j:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.k:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.l:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.m:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    boolean mProcessingChange -> t
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.n:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.o:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.p:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.q:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.r:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.s:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.t:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.u:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.v:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.w:
    java.lang.Object[] mParams -> b
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.a:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.b:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.c:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.d:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.e:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.f:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> a
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.a:
    java.lang.Object mDisplayManagerObj -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.b:
    android.view.WindowManager mWindowManager -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.c:
    java.lang.Object getDisplayManager(android.content.Context) -> a
    android.view.Display getDisplay(java.lang.Object,int) -> a
    android.view.Display[] getDisplays(java.lang.Object) -> a
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> a
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> a
    android.support.v4.media.TransportPerformer mCallbacks -> b
    android.media.AudioManager mAudioManager -> c
    android.view.View mView -> d
    java.lang.Object mDispatcherState -> e
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> f
    java.util.ArrayList mListeners -> g
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> h
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> i
    boolean isMediaKey(int) -> a
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.a:
    android.support.v4.media.TransportMediator this$0 -> a
    void handleKey(android.view.KeyEvent) -> a
    void handleAudioFocusChange(int) -> a
    long getPlaybackPosition() -> a
    void playbackPositionUpdate(long) -> a
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.b:
    android.support.v4.media.TransportMediator this$0 -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.c:
    void handleKey(android.view.KeyEvent) -> a
    void handleAudioFocusChange(int) -> a
    long getPlaybackPosition() -> a
    void playbackPositionUpdate(long) -> a
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.d:
    android.content.Context mContext -> a
    android.media.AudioManager mAudioManager -> b
    android.view.View mTargetView -> c
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> d
    java.lang.String mReceiverAction -> e
    android.content.IntentFilter mReceiverFilter -> f
    android.content.Intent mIntent -> g
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> h
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> i
    android.content.BroadcastReceiver mMediaButtonReceiver -> j
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> k
    android.app.PendingIntent mPendingIntent -> l
    android.media.RemoteControlClient mRemoteControl -> m
    boolean mFocused -> n
    int mPlayState -> o
    boolean mAudioFocused -> p
    java.lang.Object getRemoteControlClient() -> a
    void destroy() -> b
    void windowAttached() -> c
    void gainFocus() -> d
    void takeAudioFocus() -> e
    void startPlaying() -> f
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> a
    void pausePlaying() -> g
    void stopPlaying() -> h
    void dropAudioFocus() -> i
    void loseFocus() -> j
    void windowDetached() -> k
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.e:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.f:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.g:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.h:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.a:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.b:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.c:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.d:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.e:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.f:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.g:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.h:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.i:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.j:
    java.lang.ThreadLocal mThreadSocketTags -> a
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.k:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> a
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> a
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.l:
    int statsTag -> a
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.m:
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.n:
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.o:
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.a:
    java.lang.String getStorageState(java.io.File) -> a
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.c:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.d:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> a
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.a:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.b:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> a
    void setScaleMode(int) -> a
    int getScaleMode() -> a
    void setColorMode(int) -> b
    int getColorMode() -> b
    void setOrientation(int) -> c
    int getOrientation() -> c
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> a
    void printBitmap(java.lang.String,android.net.Uri) -> a
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.c:
    int mScaleMode -> a
    int mColorMode -> b
    int mOrientation -> c
    void setScaleMode(int) -> a
    int getColorMode() -> b
    void setColorMode(int) -> b
    void setOrientation(int) -> c
    int getOrientation() -> c
    int getScaleMode() -> a
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> a
    void printBitmap(java.lang.String,android.net.Uri) -> a
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.d:
    void setScaleMode(int) -> a
    int getScaleMode() -> a
    void setColorMode(int) -> b
    int getColorMode() -> b
    void setOrientation(int) -> c
    int getOrientation() -> c
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> a
    void printBitmap(java.lang.String,android.net.Uri) -> a
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.e:
    android.content.Context mContext -> a
    android.graphics.BitmapFactory$Options mDecodeOptions -> b
    java.lang.Object mLock -> f
    int mScaleMode -> c
    int mColorMode -> d
    int mOrientation -> e
    void setScaleMode(int) -> a
    int getScaleMode() -> a
    void setColorMode(int) -> b
    void setOrientation(int) -> c
    int getOrientation() -> b
    int getColorMode() -> c
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> a
    void printBitmap(java.lang.String,android.net.Uri) -> a
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.f:
    java.lang.String val$jobName -> a
    android.graphics.Bitmap val$bitmap -> b
    int val$fittingMode -> c
    android.support.v4.print.PrintHelperKitkat this$0 -> d
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.g:
    android.graphics.Bitmap mBitmap -> a
    java.lang.String val$jobName -> b
    android.net.Uri val$imageFile -> c
    int val$fittingMode -> d
    android.support.v4.print.PrintHelperKitkat this$0 -> e
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> a
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> a
    android.support.v4.text.BidiFormatter access$200() -> b
    android.support.v4.text.BidiFormatter access$300() -> c
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.a:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.b:
    byte[] DIR_TYPE_CACHE -> a
    java.lang.String text -> b
    boolean isHtml -> c
    int length -> d
    int charIndex -> e
    char lastChar -> f
    int getEntryDir() -> a
    int getExitDir() -> b
    byte getCachedDirectionality(char) -> a
    byte dirTypeForward() -> c
    byte dirTypeBackward() -> d
    byte skipTagForward() -> e
    byte skipTagBackward() -> f
    byte skipEntityForward() -> g
    byte skipEntityBackward() -> h
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.c:
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.d:
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.e:
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.f:
    java.lang.reflect.Method sGetScriptMethod -> a
    java.lang.reflect.Method sAddLikelySubtagsMethod -> b
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> a
    int access$200(int) -> b
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.g:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.h:
    boolean mLookForRtl -> c
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> a
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> b
    int checkRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.i:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> a
    int checkRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.j:
    int checkRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.k:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> a
    boolean defaultIsRtl() -> a
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.l:
    boolean mDefaultIsRtl -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.m:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.a:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> a
android.support.v4.util.ContainerHelpers -> android.support.v4.util.b:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealLongArraySize(int) -> b
    int idealByteArraySize(int) -> c
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
    int binarySearch(long[],int,long) -> a
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.c:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.d:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.e:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.f:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.g:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.a:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.b:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.c:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.e:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.f:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.g:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.h:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.i:
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.j:
    int mTouchSlopSquare -> a
    int mDoubleTapSlopSquare -> b
    int mMinimumFlingVelocity -> c
    int mMaximumFlingVelocity -> d
    int LONGPRESS_TIMEOUT -> e
    int TAP_TIMEOUT -> f
    int DOUBLE_TAP_TIMEOUT -> g
    android.os.Handler mHandler -> h
    android.view.GestureDetector$OnGestureListener mListener -> i
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> j
    boolean mStillDown -> k
    boolean mDeferConfirmSingleTap -> l
    boolean mInLongPress -> m
    boolean mAlwaysInTapRegion -> n
    boolean mAlwaysInBiggerTapRegion -> o
    android.view.MotionEvent mCurrentDownEvent -> p
    android.view.MotionEvent mPreviousUpEvent -> q
    boolean mIsDoubleTapping -> r
    float mLastFocusX -> s
    float mLastFocusY -> t
    float mDownFocusX -> u
    float mDownFocusY -> v
    boolean mIsLongpressEnabled -> w
    android.view.VelocityTracker mVelocityTracker -> x
    void init(android.content.Context) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
    void setIsLongpressEnabled(boolean) -> a
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void cancel() -> b
    void cancelTaps() -> c
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> a
    void dispatchLongPress() -> d
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.k:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.l:
    android.view.GestureDetector mDetector -> a
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.m:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.n:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.q:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
    java.lang.Object getKeyDispatcherState(android.view.View) -> a
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.r:
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
    java.lang.Object getKeyDispatcherState(android.view.View) -> a
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.s:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.t:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
    java.lang.Object getKeyDispatcherState(android.view.View) -> a
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.u:
    java.lang.Object getKeyDispatcherState(android.view.View) -> a
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> a
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> a
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.w:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> a
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> b
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> c
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> d
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> c
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> d
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.x:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> a
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> b
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> c
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> d
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> c
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> d
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.y:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> a
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> b
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> c
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> d
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> c
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> d
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.z:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> a
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> b
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> c
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> d
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> c
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> d
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.aa:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean collapseActionView(android.view.MenuItem) -> c
    boolean isActionViewExpanded(android.view.MenuItem) -> d
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.ab:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean collapseActionView(android.view.MenuItem) -> c
    boolean isActionViewExpanded(android.view.MenuItem) -> d
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.ac:
    boolean expandActionView(android.view.MenuItem) -> b
    boolean collapseActionView(android.view.MenuItem) -> c
    boolean isActionViewExpanded(android.view.MenuItem) -> d
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.ad:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> a
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> b
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.ae:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean collapseActionView(android.view.MenuItem) -> c
    boolean isActionViewExpanded(android.view.MenuItem) -> d
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.af:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.ag:
    boolean expandActionView(android.view.MenuItem) -> a
    boolean collapseActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> a
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.ah:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.ai:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aj:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ak:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.al:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.am:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.an:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.ao:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.ap:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.aq:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.ar:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.as:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.at:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.au:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.av:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> a
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.aw:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ax:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> a
    boolean isQuickScaleEnabled(java.lang.Object) -> a
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ay:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> a
    boolean isQuickScaleEnabled(java.lang.Object) -> a
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.az:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> a
    boolean isQuickScaleEnabled(java.lang.Object) -> a
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ba:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> a
    boolean isQuickScaleEnabled(java.lang.Object) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.bb:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.bc:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.bd:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.be:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.bf:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    int getLabelFor(android.view.View) -> h
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> i
    void setLayoutDirection(android.view.View,int) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> j
    boolean isOpaque(android.view.View) -> k
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> l
    int getMeasuredHeightAndState(android.view.View) -> m
    int getMeasuredState(android.view.View) -> n
    int getAccessibilityLiveRegion(android.view.View) -> o
    void setAccessibilityLiveRegion(android.view.View,int) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.bg:
    boolean isOpaque(android.view.View) -> k
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.bh:
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.bi:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> l
    int getMeasuredHeightAndState(android.view.View) -> m
    int getMeasuredState(android.view.View) -> n
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.bj:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.bk:
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> j
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.bl:
    int getLabelFor(android.view.View) -> h
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> i
    void setLayoutDirection(android.view.View,int) -> f
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.bm:
    int getAccessibilityLiveRegion(android.view.View) -> o
    void setAccessibilityLiveRegion(android.view.View,int) -> g
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.bn:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    int getLabelFor(android.view.View) -> h
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> i
    void setLayoutDirection(android.view.View,int) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> j
    boolean isOpaque(android.view.View) -> k
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> l
    int getMeasuredHeightAndState(android.view.View) -> m
    int getMeasuredState(android.view.View) -> n
    int getAccessibilityLiveRegion(android.view.View) -> o
    void setAccessibilityLiveRegion(android.view.View,int) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.bo:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.bp:
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.bq:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> b
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> c
    int getMeasuredHeightAndState(android.view.View) -> d
    int getMeasuredState(android.view.View) -> e
android.support.v4.view.ViewCompatICS -> android.support.v4.view.br:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> b
android.support.v4.view.ViewCompatJB -> android.support.v4.view.bs:
    boolean hasTransientState(android.view.View) -> a
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> d
    android.view.ViewParent getParentForAccessibility(android.view.View) -> e
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.bt:
    int getLabelFor(android.view.View) -> a
    void setLabelFor(android.view.View,int) -> a
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> b
    void setLayoutDirection(android.view.View,int) -> b
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bu:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bv:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bw:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bx:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.by:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bz:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ca:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
    int getLayoutMode(android.view.ViewGroup) -> a
    void setLayoutMode(android.view.ViewGroup,int) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.cb:
    int getLayoutMode(android.view.ViewGroup) -> a
    void setLayoutMode(android.view.ViewGroup,int) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.cc:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
    int getLayoutMode(android.view.ViewGroup) -> a
    void setLayoutMode(android.view.ViewGroup,int) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.cd:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ce:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.cf:
    int getLayoutMode(android.view.ViewGroup) -> a
    void setLayoutMode(android.view.ViewGroup,int) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.cg:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ch:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ci:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.cj:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ck:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> a
    boolean needsMeasure -> b
    int position -> c
    int childIndex -> d
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.cl:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.cm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.cn:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.co:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.cp:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.cq:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.cr:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.cs:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.a:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.b:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.c:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.d:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.e:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.f:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> a
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> b
    void onAccessibilityStateChanged(boolean) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.g:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.h:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.i:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.j:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.k:
    void onAccessibilityStateChanged(boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.l:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.Object getChild(java.lang.Object,int) -> b
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    java.lang.Object getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> c
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.m:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    java.lang.Object obtain(android.view.View,int) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void setSource(java.lang.Object,android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    int getWindowId(java.lang.Object) -> i
    int getChildCount(java.lang.Object) -> c
    java.lang.Object getChild(java.lang.Object,int) -> b
    void addChild(java.lang.Object,android.view.View) -> a
    void addChild(java.lang.Object,android.view.View,int) -> b
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    boolean performAction(java.lang.Object,int) -> c
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    java.lang.Object getParent(java.lang.Object) -> g
    void setParent(java.lang.Object,android.view.View,int) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> j
    void setCheckable(java.lang.Object,boolean) -> a
    boolean isChecked(java.lang.Object) -> k
    void setChecked(java.lang.Object,boolean) -> b
    boolean isFocusable(java.lang.Object) -> n
    void setFocusable(java.lang.Object,boolean) -> e
    boolean isFocused(java.lang.Object) -> o
    void setFocused(java.lang.Object,boolean) -> f
    boolean isVisibleToUser(java.lang.Object) -> v
    void setVisibleToUser(java.lang.Object,boolean) -> k
    boolean isAccessibilityFocused(java.lang.Object) -> w
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    boolean isSelected(java.lang.Object) -> s
    void setSelected(java.lang.Object,boolean) -> j
    boolean isClickable(java.lang.Object) -> l
    void setClickable(java.lang.Object,boolean) -> c
    boolean isLongClickable(java.lang.Object) -> p
    void setLongClickable(java.lang.Object,boolean) -> g
    boolean isEnabled(java.lang.Object) -> m
    void setEnabled(java.lang.Object,boolean) -> d
    boolean isPassword(java.lang.Object) -> q
    void setPassword(java.lang.Object,boolean) -> h
    boolean isScrollable(java.lang.Object) -> r
    void setScrollable(java.lang.Object,boolean) -> i
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> h
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> t
    java.lang.String getViewIdResourceName(java.lang.Object) -> x
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> b
    int getLiveRegion(java.lang.Object) -> y
    void setLiveRegion(java.lang.Object,int) -> g
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.n:
    java.lang.Object obtain(android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    void addChild(java.lang.Object,android.view.View,int) -> b
    void setSource(java.lang.Object,android.view.View,int) -> a
    boolean isVisibleToUser(java.lang.Object) -> v
    void setVisibleToUser(java.lang.Object,boolean) -> k
    boolean isAccessibilityFocused(java.lang.Object) -> w
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    void setParent(java.lang.Object,android.view.View,int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.o:
    java.lang.String getViewIdResourceName(java.lang.Object) -> x
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.p:
    int getLiveRegion(java.lang.Object) -> y
    void setLiveRegion(java.lang.Object,int) -> g
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.q:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(android.view.View,int) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    void addChild(java.lang.Object,android.view.View,int) -> b
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.Object getChild(java.lang.Object,int) -> b
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    java.lang.Object getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isVisibleToUser(java.lang.Object) -> v
    boolean isAccessibilityFocused(java.lang.Object) -> w
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> c
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setVisibleToUser(java.lang.Object,boolean) -> k
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setSource(java.lang.Object,android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
    void setParent(java.lang.Object,android.view.View,int) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> x
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> b
    int getLiveRegion(java.lang.Object) -> y
    void setLiveRegion(java.lang.Object,int) -> g
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.r:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.Object getChild(java.lang.Object,int) -> b
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    java.lang.Object getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> c
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.s:
    void addChild(java.lang.Object,android.view.View,int) -> a
    void setSource(java.lang.Object,android.view.View,int) -> b
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    java.lang.Object obtain(android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> b
    java.lang.Object focusSearch(java.lang.Object,int) -> c
    void setParent(java.lang.Object,android.view.View,int) -> c
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.t:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> a
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.u:
    int getLiveRegion(java.lang.Object) -> a
    void setLiveRegion(java.lang.Object,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.v:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.w:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.x:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.y:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.z:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.aa:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.ab:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.ac:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.ad:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.ae:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.af:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.ag:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.ah:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.ai:
    int getMaxScrollX(java.lang.Object) -> w
    int getMaxScrollY(java.lang.Object) -> x
    void setMaxScrollX(java.lang.Object,int) -> i
    void setMaxScrollY(java.lang.Object,int) -> j
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.aj:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> a
    void setSource(java.lang.Object,android.view.View,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    void setChecked(java.lang.Object,boolean) -> a
    boolean isEnabled(java.lang.Object) -> r
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> t
    void setPassword(java.lang.Object,boolean) -> d
    boolean isFullScreen(java.lang.Object) -> s
    void setFullScreen(java.lang.Object,boolean) -> c
    boolean isScrollable(java.lang.Object) -> u
    void setScrollable(java.lang.Object,boolean) -> e
    int getItemCount(java.lang.Object) -> h
    void setItemCount(java.lang.Object,int) -> d
    int getCurrentItemIndex(java.lang.Object) -> f
    void setCurrentItemIndex(java.lang.Object,int) -> b
    int getFromIndex(java.lang.Object) -> g
    void setFromIndex(java.lang.Object,int) -> c
    int getToIndex(java.lang.Object) -> o
    void setToIndex(java.lang.Object,int) -> h
    int getScrollX(java.lang.Object) -> k
    void setScrollX(java.lang.Object,int) -> f
    int getScrollY(java.lang.Object) -> l
    void setScrollY(java.lang.Object,int) -> g
    int getMaxScrollX(java.lang.Object) -> w
    void setMaxScrollX(java.lang.Object,int) -> i
    int getMaxScrollY(java.lang.Object) -> x
    void setMaxScrollY(java.lang.Object,int) -> j
    int getAddedCount(java.lang.Object) -> b
    void setAddedCount(java.lang.Object,int) -> a
    int getRemovedCount(java.lang.Object) -> j
    void setRemovedCount(java.lang.Object,int) -> e
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    java.util.List getText(java.lang.Object) -> n
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void recycle(java.lang.Object) -> v
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.ak:
    void setSource(java.lang.Object,android.view.View,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.al:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    int getMaxScrollX(java.lang.Object) -> w
    int getMaxScrollY(java.lang.Object) -> x
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setMaxScrollX(java.lang.Object,int) -> i
    void setMaxScrollY(java.lang.Object,int) -> j
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setSource(java.lang.Object,android.view.View,int) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.am:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    java.lang.Object getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.an:
    int getMaxScrollX(java.lang.Object) -> a
    int getMaxScrollY(java.lang.Object) -> b
    void setMaxScrollX(java.lang.Object,int) -> a
    void setMaxScrollY(java.lang.Object,int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.ao:
    void setSource(java.lang.Object,android.view.View,int) -> a
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> a
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> b
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> a
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> c
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> d
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> b
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> e
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> c
    void access$600(android.support.v4.widget.AutoScrollHelper) -> f
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> g
    int access$800(int,int,int) -> a
    float access$900(float,float,float) -> a
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.a:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.b:
    int mRampUpDuration -> a
    int mRampDownDuration -> b
    float mTargetVelocityX -> c
    float mTargetVelocityY -> d
    long mStartTime -> e
    long mDeltaTime -> f
    int mDeltaX -> g
    int mDeltaY -> h
    long mStopTime -> i
    float mStopValue -> j
    int mEffectiveRampDown -> k
    void setRampUpDuration(int) -> a
    void setRampDownDuration(int) -> b
    void start() -> a
    void requestStop() -> b
    boolean isFinished() -> c
    float getValueAt(long) -> a
    float interpolateValue(float) -> a
    void computeScrollDelta() -> d
    void setTargetVelocity(float,float) -> a
    int getHorizontalDirection() -> e
    int getVerticalDirection() -> f
    int getDeltaX() -> g
    int getDeltaY() -> h
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.c:
    android.support.v4.widget.AutoScrollHelper this$0 -> a
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.d:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> a
    float[] VALUES -> b
    float STEP_SIZE -> c
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> a
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> a
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.e:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.f:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.g:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.h:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.i:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.j:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.k:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> a
    void dispatchOnDrawerOpened(android.view.View) -> b
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> c
    int getDrawerViewAbsoluteGravity(android.view.View) -> d
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> e
    boolean isDrawerView(android.view.View) -> f
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.l:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> a
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> a
    boolean isPeeking -> b
    boolean knownOpen -> c
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.m:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.n:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.o:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.p:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.q:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.r:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.s:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> a
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> a
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.t:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.u:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> a
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.v:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> a
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.w:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> a
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.x:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> a
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.y:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> a
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> a
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.z:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> a
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.aa:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> a
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.ab:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> a
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.ac:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ad:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> g
    int getFinalX(java.lang.Object) -> h
    int getFinalY(java.lang.Object) -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ae:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> g
    int getFinalX(java.lang.Object) -> h
    int getFinalY(java.lang.Object) -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.af:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> g
    int getFinalX(java.lang.Object) -> h
    int getFinalY(java.lang.Object) -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ag:
    float getCurrVelocity(java.lang.Object) -> d
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ah:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> f
    int getFinalX(java.lang.Object) -> g
    int getFinalY(java.lang.Object) -> h
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ai:
    float getCurrVelocity(java.lang.Object) -> a
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> a
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.aj:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.ak:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.al:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onClose() -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.am:
    android.view.View newSearchView(android.content.Context) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.an:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.ao:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.ap:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.aq:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.ar:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.as:
    boolean onClose() -> a
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.at:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> a
    void setImeOptions(android.view.View,int) -> a
    void setInputType(android.view.View,int) -> b
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.au:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.av:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> a
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.aw:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.ax:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> a
    boolean dimWhenOffset -> b
    android.graphics.Paint dimPaint -> c
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.ay:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.az:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.ba:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.bb:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.bc:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.bd:
    android.view.animation.Interpolator INTERPOLATOR -> a
    android.graphics.Paint mPaint -> b
    android.graphics.RectF mClipRect -> c
    float mTriggerPercentage -> d
    long mStartTime -> e
    long mFinishTime -> f
    boolean mRunning -> g
    int mColor1 -> h
    int mColor2 -> i
    int mColor3 -> j
    int mColor4 -> k
    android.view.View mParent -> l
    android.graphics.Rect mBounds -> m
    void setColorScheme(int,int,int,int) -> a
    void setTriggerPercentage(float) -> a
    void start() -> a
    void stop() -> b
    void draw(android.graphics.Canvas) -> a
    void drawTrigger(android.graphics.Canvas,int,int) -> a
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> a
    void setBounds(int,int,int,int) -> b
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    long RETURN_TO_ORIGINAL_POSITION_TIMEOUT -> RETURN_TO_ORIGINAL_POSITION_TIMEOUT
    float ACCELERATE_INTERPOLATION_FACTOR -> ACCELERATE_INTERPOLATION_FACTOR
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    float PROGRESS_BAR_HEIGHT -> PROGRESS_BAR_HEIGHT
    float MAX_SWIPE_DISTANCE_FACTOR -> MAX_SWIPE_DISTANCE_FACTOR
    int REFRESH_TRIGGER_DISTANCE -> REFRESH_TRIGGER_DISTANCE
    android.support.v4.widget.SwipeProgressBar mProgressBar -> mProgressBar
    android.view.View mTarget -> mTarget
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    android.view.MotionEvent mDownEvent -> mDownEvent
    int mFrom -> mFrom
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mDistanceToTriggerSync -> mDistanceToTriggerSync
    float mPrevY -> mPrevY
    int mMediumAnimationDuration -> mMediumAnimationDuration
    float mFromPercentage -> mFromPercentage
    float mCurrPercentage -> mCurrPercentage
    int mProgressBarHeight -> mProgressBarHeight
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> mAccelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    android.view.animation.Animation mShrinkTrigger -> mShrinkTrigger
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> mReturnToStartPositionListener
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> mShrinkAnimationListener
    java.lang.Runnable mReturnToStartPosition -> mReturnToStartPosition
    java.lang.Runnable mCancel -> mCancel
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> startRefresh
    void updateContentOffsetTop(int) -> updateContentOffsetTop
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> updatePositionTimeout
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> e
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> b
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> a
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> f
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> g
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> a
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> b
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> h
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> i
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> j
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> k
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> l
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.be:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.bf:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.bg:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.bh:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.bi:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.bj:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.bk:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> a
    boolean tryCaptureViewForDrag(android.view.View,int) -> a
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.bl:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.bm:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
cn.ingenic.contactslite.common.ContactPacket -> cn.ingenic.contactslite.common.ContactPacket:
    java.lang.String lookupKey -> lookupKey
    long conactId -> conactId
    long name_raw_contact_id -> name_raw_contact_id
    java.lang.String mDisplayName -> mDisplayName
    java.lang.String mSortKey -> mSortKey
    int mPhoneId -> mPhoneId
    java.lang.String mPhoneUri -> mPhoneUri
    java.util.Map versions -> versions
    java.util.List datas -> datas
    java.lang.String getLookupKey() -> getLookupKey
    cn.ingenic.contactslite.common.ContactPacket getContactPacketByContactId(android.content.Context,java.lang.String) -> getContactPacketByContactId
    boolean isCursorEmpty(android.database.Cursor) -> isCursorEmpty
    void appendVersion(java.lang.String,java.lang.String) -> appendVersion
    java.lang.String getVersion() -> getVersion
    void addDataEntity(cn.ingenic.contactslite.common.ContactPacket$DataEntity) -> addDataEntity
    java.util.List getDatas() -> getDatas
    java.lang.String toString() -> toString
    android.content.ContentValues getContactContentValues() -> getContactContentValues
    java.util.List getDataContentValues() -> getDataContentValues
cn.ingenic.contactslite.common.ContactPacket$DataEntity -> cn.ingenic.contactslite.common.ContactPacket$DataEntity:
    java.lang.String mimeType -> mimeType
    java.lang.String data -> data
    int type -> type
    java.lang.String label -> label
    java.lang.String getData() -> getData
    java.lang.String getLabel() -> getLabel
    int getType() -> getType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String access$000(cn.ingenic.contactslite.common.ContactPacket$DataEntity) -> access$000
    java.lang.String access$100(cn.ingenic.contactslite.common.ContactPacket$DataEntity) -> access$100
    int access$200(cn.ingenic.contactslite.common.ContactPacket$DataEntity) -> access$200
    java.lang.String access$300(cn.ingenic.contactslite.common.ContactPacket$DataEntity) -> access$300
cn.ingenic.contactslite.common.ContactPacketUtils -> cn.ingenic.contactslite.common.ContactPacketUtils:
    void fillWith(cn.ingenic.indroidsync.services.SyncData,cn.ingenic.contactslite.common.ContactPacket) -> fillWith
    cn.ingenic.contactslite.common.ContactPacket createContactPacket(cn.ingenic.indroidsync.services.SyncData) -> createContactPacket
cn.ingenic.contactslite.common.ContactsLiteContract -> cn.ingenic.contactslite.common.ContactsLiteContract:
    java.lang.String AUTHORITY -> AUTHORITY
    android.net.Uri AUTHORITY_URI -> AUTHORITY_URI
cn.ingenic.contactslite.common.ContactsLiteContract$Contacts -> cn.ingenic.contactslite.common.ContactsLiteContract$Contacts:
    android.net.Uri CONTENT_URI -> CONTENT_URI
    android.net.Uri CONTENT_LOOKUP_URI -> CONTENT_LOOKUP_URI
cn.ingenic.contactslite.common.ContactsLiteContract$ContactsColumn -> cn.ingenic.contactslite.common.ContactsLiteContract$ContactsColumn:
    java.lang.String DISPLAY_NAME -> DISPLAY_NAME
    java.lang.String SORT_KEY -> SORT_KEY
    java.lang.String VERSION -> VERSION
    java.lang.String LOOKUP_KEY -> LOOKUP_KEY
cn.ingenic.contactslite.common.ContactsLiteContract$ContentColumn -> cn.ingenic.contactslite.common.ContactsLiteContract$ContentColumn:
    java.lang.String _ID -> _ID
cn.ingenic.contactslite.common.ContactsLiteContract$Data -> cn.ingenic.contactslite.common.ContactsLiteContract$Data:
    android.net.Uri CONTENT_URI -> CONTENT_URI
cn.ingenic.contactslite.common.ContactsLiteContract$DataColumn -> cn.ingenic.contactslite.common.ContactsLiteContract$DataColumn:
    java.lang.String CONTACT_ID -> CONTACT_ID
    java.lang.String MIMETYPE -> MIMETYPE
    java.lang.String DATA1 -> DATA1
    java.lang.String TYPE -> TYPE
    java.lang.String LABEL -> LABEL
cn.ingenic.contactslite.common.ContactsLiteContract$MidTable -> cn.ingenic.contactslite.common.ContactsLiteContract$MidTable:
    java.lang.String AUTHORITY -> AUTHORITY
cn.ingenic.contactslite.common.ContactsLiteContract$Tables -> cn.ingenic.contactslite.common.ContactsLiteContract$Tables:
    java.lang.String CONTACTS -> CONTACTS
    java.lang.String DATA -> DATA
cn.ingenic.indroidsync.ClearSettingsDialogPreference -> cn.ingenic.indroidsync.ClearSettingsDialogPreference:
    java.lang.String TAG -> TAG
    void init() -> init
    void onClick(android.content.DialogInterface,int) -> onClick
cn.ingenic.indroidsync.ClearSettingsDialogPreference$1 -> cn.ingenic.indroidsync.ClearSettingsDialogPreference$1:
    cn.ingenic.indroidsync.ClearSettingsDialogPreference this$0 -> this$0
    android.app.ProgressDialog val$progressDialog -> val$progressDialog
    cn.ingenic.indroidsync.DefaultSyncManager val$manager -> val$manager
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.ClearSettingsDialogPreference$2 -> cn.ingenic.indroidsync.ClearSettingsDialogPreference$2:
    cn.ingenic.indroidsync.ClearSettingsDialogPreference this$0 -> this$0
    cn.ingenic.indroidsync.DefaultSyncManager val$manager -> val$manager
    android.os.Handler val$handler -> val$handler
    android.app.ProgressDialog val$progressDialog -> val$progressDialog
    void run() -> run
cn.ingenic.indroidsync.Column -> cn.ingenic.indroidsync.Column:
    java.lang.Class type() -> type
    java.lang.String key() -> key
cn.ingenic.indroidsync.Config -> cn.ingenic.indroidsync.Config:
    java.lang.String mModule -> mModule
    java.lang.String mFeature -> mFeature
    boolean mIsService -> mIsService
    boolean mIsReply -> mIsReply
    boolean mIsMid -> mIsMid
    android.os.Message mCallback -> mCallback
    cn.ingenic.indroidsync.data.ControlProjo getControl() -> getControl
    void dump(java.lang.String) -> dump
    cn.ingenic.indroidsync.Config getConfig(cn.ingenic.indroidsync.data.ControlProjo) -> getConfig
cn.ingenic.indroidsync.ConfigTools -> cn.ingenic.indroidsync.ConfigTools:
    java.util.concurrent.atomic.AtomicInteger sTid -> sTid
    int generateId() -> generateId
cn.ingenic.indroidsync.CrashHandler -> cn.ingenic.indroidsync.CrashHandler:
    java.lang.String TAG -> TAG
    java.lang.StringBuffer sbs -> sbs
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> mDefaultHandler
    cn.ingenic.indroidsync.CrashHandler INSTANCE -> INSTANCE
    android.content.Context mContext -> mContext
    java.util.Map infos -> infos
    int config -> config
    java.text.DateFormat formatter -> formatter
    cn.ingenic.indroidsync.CrashHandler getInstance() -> getInstance
    void init(android.content.Context) -> init
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> handleException
    void showDialog(android.content.Context) -> showDialog
    java.lang.String getErrorInfo(java.lang.Throwable) -> getErrorInfo
    android.content.Context access$0(cn.ingenic.indroidsync.CrashHandler) -> access$0
    void access$1(cn.ingenic.indroidsync.CrashHandler,android.content.Context) -> access$1
cn.ingenic.indroidsync.CrashHandler$1 -> cn.ingenic.indroidsync.CrashHandler$1:
    cn.ingenic.indroidsync.CrashHandler this$0 -> this$0
    void run() -> run
cn.ingenic.indroidsync.CrashHandler$2 -> cn.ingenic.indroidsync.CrashHandler$2:
    cn.ingenic.indroidsync.CrashHandler this$0 -> this$0
    android.app.Dialog val$dialog -> val$dialog
    void onClick(android.view.View) -> onClick
cn.ingenic.indroidsync.CrashHandler$2$1 -> cn.ingenic.indroidsync.CrashHandler$2$1:
    cn.ingenic.indroidsync.CrashHandler$2 this$1 -> this$1
    void run() -> run
cn.ingenic.indroidsync.CrashHandler$3 -> cn.ingenic.indroidsync.CrashHandler$3:
    cn.ingenic.indroidsync.CrashHandler this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.ingenic.indroidsync.DefaultSyncManager -> cn.ingenic.indroidsync.DefaultSyncManager:
    android.content.Context mContext -> mContext
    int SUCCESS -> SUCCESS
    int NO_CONNECTIVITY -> NO_CONNECTIVITY
    int FEATURE_DISABLED -> FEATURE_DISABLED
    int NO_LOCKED_ADDRESS -> NO_LOCKED_ADDRESS
    int SAVING_POWER_MODE -> SAVING_POWER_MODE
    int RIGHT_NOW_MODE -> RIGHT_NOW_MODE
    int IDLE -> IDLE
    int NON_REASON -> NON_REASON
    int CONNECT_FAILED -> CONNECT_FAILED
    int CONNECTING -> CONNECTING
    int CONNECTED -> CONNECTED
    int DISCONNECTING -> DISCONNECTING
    int REQUESTING -> REQUESTING
    int RESPONDING -> RESPONDING
    java.lang.String MODE_SETTINGS_KEY -> MODE_SETTINGS_KEY
    java.lang.String CLEAR_SETTINGS_KEY -> CLEAR_SETTINGS_KEY
    java.lang.String TIMEOUT_NOTIFICATION_KEY -> TIMEOUT_NOTIFICATION_KEY
    int mState -> mState
    android.content.SharedPreferences mSharedPreferences -> mSharedPreferences
    cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler mReConnectScheduler -> mReConnectScheduler
    cn.ingenic.indroidsync.transport.TransportManager mTransportManager -> mTransportManager
    java.lang.String RECEIVER_ACTION_STATE_CHANGE -> RECEIVER_ACTION_STATE_CHANGE
    java.lang.String EXTRA_STATE -> EXTRA_STATE
    int MSG_BASE -> MSG_BASE
    int MSG_STATE_CHANGE -> MSG_STATE_CHANGE
    int MSG_TIME_OUT -> MSG_TIME_OUT
    int MSG_SEND_FILE -> MSG_SEND_FILE
    int MSG_CLEAR_ADDRESS -> MSG_CLEAR_ADDRESS
    cn.ingenic.indroidsync.DefaultSyncManager$MyHandler mHandler -> mHandler
    cn.ingenic.indroidsync.DefaultSyncManager sManager -> sManager
    java.lang.String PREF_FILE_NAME -> PREF_FILE_NAME
    java.lang.String FILE_NAME -> FILE_NAME
    java.lang.String UNIQUE_ADDRESS -> UNIQUE_ADDRESS
    long TIMEOUT -> TIMEOUT
    java.lang.String mConnectingAddress -> mConnectingAddress
    java.util.Map mModules -> mModules
    int getState() -> getState
    void notifyModeChanged(int) -> notifyModeChanged
    void notifyTimeoutNotificationChange(boolean) -> notifyTimeoutNotificationChange
    int getCurrentMode() -> getCurrentMode
    cn.ingenic.indroidsync.DefaultSyncManager init(android.content.Context) -> init
    cn.ingenic.indroidsync.DefaultSyncManager getDefault() -> getDefault
    boolean isWatch() -> isWatch
    boolean hasLockedAddress() -> hasLockedAddress
    void setLockedAddress(java.lang.String) -> setLockedAddress
    void setLockedAddress(java.lang.String,boolean) -> setLockedAddress
    void holdOnConnTemporary(java.lang.String) -> holdOnConnTemporary
    void holdOnConnTemporaryInternal(android.os.Message) -> holdOnConnTemporaryInternal
    void callModulesOnInit() -> callModulesOnInit
    void sendClearMsg() -> sendClearMsg
    void notifyCleared(java.lang.String) -> notifyCleared
    void connect() -> connect
    void connect(java.lang.String) -> connect
    void disconnect() -> disconnect
    boolean isConnect() -> isConnect
    java.lang.String getLockedAddress() -> getLockedAddress
    java.lang.String getConnectAddress() -> getConnectAddress
    void destoryChannel(java.lang.String,java.util.UUID) -> destoryChannel
    void createChannel(java.lang.String,java.util.UUID) -> createChannel
    boolean sendFile(java.lang.String,java.lang.String,int,java.io.InputStream) -> sendFile
    void retriveFile(java.lang.String,java.lang.String,int,java.lang.String) -> retriveFile
    void requestChannel(cn.ingenic.indroidsync.Config,cn.ingenic.indroidsync.data.Projo,java.util.UUID) -> requestChannel
    void requestChannel(cn.ingenic.indroidsync.Config,java.util.ArrayList,java.util.UUID) -> requestChannel
    int request(cn.ingenic.indroidsync.Config,cn.ingenic.indroidsync.data.Projo) -> request
    int request(cn.ingenic.indroidsync.Config,java.util.ArrayList) -> request
    void sendCallbackMsg(cn.ingenic.indroidsync.Config,int) -> sendCallbackMsg
    java.lang.String convertReason(int) -> convertReason
    int request(cn.ingenic.indroidsync.Config,java.util.ArrayList,boolean) -> request
    void response(cn.ingenic.indroidsync.Config,java.util.ArrayList) -> response
    cn.ingenic.indroidsync.Transaction createTransaction(cn.ingenic.indroidsync.Config) -> createTransaction
    void startTransaction(cn.ingenic.indroidsync.Transaction,java.util.ArrayList) -> startTransaction
    boolean registModule(cn.ingenic.indroidsync.Module) -> registModule
    void featureStateChange(java.lang.String,boolean) -> featureStateChange
    void applyFeatures(java.util.Map) -> applyFeatures
    void featureStateChange(cn.ingenic.indroidsync.Module,java.lang.String,boolean) -> featureStateChange
    cn.ingenic.indroidsync.Module getModule(java.lang.String) -> getModule
    boolean isFeatureEnabled(java.lang.String) -> isFeatureEnabled
    boolean isSync(java.lang.String) -> isSync
    java.lang.String[] getNonSyncArray() -> getNonSyncArray
    java.util.Map getSyncMap() -> getSyncMap
    void applyMode(int) -> applyMode
    void access$0(cn.ingenic.indroidsync.DefaultSyncManager,android.os.Message) -> access$0
    android.content.Context access$1(cn.ingenic.indroidsync.DefaultSyncManager) -> access$1
    android.content.SharedPreferences access$2(cn.ingenic.indroidsync.DefaultSyncManager) -> access$2
    int access$3(cn.ingenic.indroidsync.DefaultSyncManager) -> access$3
    void access$4(cn.ingenic.indroidsync.DefaultSyncManager,int) -> access$4
    void access$5(cn.ingenic.indroidsync.DefaultSyncManager,java.lang.String) -> access$5
    java.util.Map access$6(cn.ingenic.indroidsync.DefaultSyncManager) -> access$6
    void access$7(cn.ingenic.indroidsync.DefaultSyncManager,cn.ingenic.indroidsync.Config,int) -> access$7
    cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler access$8(cn.ingenic.indroidsync.DefaultSyncManager) -> access$8
    java.lang.String access$9(cn.ingenic.indroidsync.DefaultSyncManager) -> access$9
    java.util.Map access$10(cn.ingenic.indroidsync.DefaultSyncManager) -> access$10
cn.ingenic.indroidsync.DefaultSyncManager$Arg -> cn.ingenic.indroidsync.DefaultSyncManager$Arg:
    cn.ingenic.indroidsync.Config mmConfig -> mmConfig
    java.util.ArrayList mmDatas -> mmDatas
    boolean mmIsSync -> mmIsSync
cn.ingenic.indroidsync.DefaultSyncManager$FileArg -> cn.ingenic.indroidsync.DefaultSyncManager$FileArg:
    java.lang.String mmModule -> mmModule
    java.lang.String mmName -> mmName
    int mmLength -> mmLength
    java.io.InputStream mmIn -> mmIn
cn.ingenic.indroidsync.DefaultSyncManager$MyHandler -> cn.ingenic.indroidsync.DefaultSyncManager$MyHandler:
    java.util.LinkedList mmWaitingList -> mmWaitingList
    boolean mmConnected -> mmConnected
    cn.ingenic.indroidsync.DefaultSyncManager this$0 -> this$0
    java.lang.String convertMsg(int) -> convertMsg
    void push(cn.ingenic.indroidsync.DefaultSyncManager$Arg) -> push
    void handleMessage(android.os.Message) -> handleMessage
    void sendInitConfig() -> sendInitConfig
    void notifyStateChange(int) -> notifyStateChange
cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack -> cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack:
    void onCreateComplete(boolean,boolean) -> onCreateComplete
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void onDestory() -> onDestory
cn.ingenic.indroidsync.DefaultSyncManager$OnFileChannelCallBack -> cn.ingenic.indroidsync.DefaultSyncManager$OnFileChannelCallBack:
    void onSendComplete(java.lang.String,boolean) -> onSendComplete
    void onRetriveComplete(java.lang.String,boolean) -> onRetriveComplete
cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler -> cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler:
    java.lang.String R_TAG -> R_TAG
    java.lang.String ACTION -> ACTION
    java.lang.String ACTION_CONNECT -> ACTION_CONNECT
    int NOTI_ID -> NOTI_ID
    long[] TIMES -> TIMES
    int MAX -> MAX
    boolean mmReConnecting -> mmReConnecting
    int mmRetryIndex -> mmRetryIndex
    android.app.PendingIntent mmPending -> mmPending
    android.widget.Toast mmToast -> mmToast
    cn.ingenic.indroidsync.Enviroment$ResourceManager mmResMgr -> mmResMgr
    int MSG_R_CALLBACK -> MSG_R_CALLBACK
    android.os.Handler mmRetryHandler -> mmRetryHandler
    cn.ingenic.indroidsync.DefaultSyncManager this$0 -> this$0
    long getTime() -> getTime
    void notifyTimeoutNotificationChange(boolean) -> notifyTimeoutNotificationChange
    void schedule() -> schedule
    void notifyFailed() -> notifyFailed
    void clearReConnectStatus() -> clearReConnectStatus
    void logv(java.lang.String) -> logv
    void log(java.lang.String) -> log
    void logw(java.lang.String) -> logw
    android.widget.Toast access$0(cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler) -> access$0
    cn.ingenic.indroidsync.Enviroment$ResourceManager access$1(cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler) -> access$1
    void access$2(cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler,android.widget.Toast) -> access$2
    android.os.Handler access$3(cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler) -> access$3
    int access$4(cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler) -> access$4
    void access$5(cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler,int) -> access$5
    void access$6(cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler,boolean) -> access$6
    cn.ingenic.indroidsync.DefaultSyncManager access$7(cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler) -> access$7
cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler$1 -> cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler$1:
    cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler this$1 -> this$1
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler$MyBroadcastReceiver -> cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler$MyBroadcastReceiver:
    cn.ingenic.indroidsync.DefaultSyncManager$ReConnectScheduler this$1 -> this$1
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void doConnect() -> doConnect
cn.ingenic.indroidsync.Enviroment -> cn.ingenic.indroidsync.Enviroment:
    java.lang.String TAG -> TAG
    cn.ingenic.indroidsync.Enviroment sInstance -> sInstance
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.Enviroment$ResourceManager mResMgr -> mResMgr
    cn.ingenic.indroidsync.Enviroment init(cn.ingenic.indroidsync.Enviroment$EnviromentCallback) -> init
    cn.ingenic.indroidsync.Enviroment getDefault() -> getDefault
    android.app.Dialog createBondDialog(java.lang.String,java.lang.String,java.lang.String) -> createBondDialog
    cn.ingenic.indroidsync.Enviroment$ResourceManager getResourceManager() -> getResourceManager
    boolean isWatch() -> isWatch
    void processBondRequest(java.lang.String) -> processBondRequest
    void processBondResponse(boolean) -> processBondResponse
    java.util.UUID getUUID(int,boolean) -> getUUID
    boolean isMainChannel(java.util.UUID,boolean) -> isMainChannel
    cn.ingenic.indroidsync.transport.BluetoothChannel getAnotherMainChannel(java.util.UUID,boolean,java.util.Map) -> getAnotherMainChannel
cn.ingenic.indroidsync.Enviroment$1 -> cn.ingenic.indroidsync.Enviroment$1:
    cn.ingenic.indroidsync.Enviroment this$0 -> this$0
    java.lang.String val$address -> val$address
    void onClick(android.content.DialogInterface,int) -> onClick
cn.ingenic.indroidsync.Enviroment$EnviromentCallback -> cn.ingenic.indroidsync.Enviroment$EnviromentCallback:
    cn.ingenic.indroidsync.Enviroment createEnviroment() -> createEnviroment
cn.ingenic.indroidsync.Enviroment$ResourceManager -> cn.ingenic.indroidsync.Enviroment$ResourceManager:
    android.content.Context mContext -> mContext
    android.app.Notification getRetryFailedNotification() -> getRetryFailedNotification
    android.widget.Toast getRetryToast(int) -> getRetryToast
cn.ingenic.indroidsync.ILocalBinder -> cn.ingenic.indroidsync.ILocalBinder:
    cn.ingenic.indroidsync.data.RemoteParcel onTransact(int,cn.ingenic.indroidsync.data.RemoteParcel) -> onTransact
cn.ingenic.indroidsync.IRemoteBinder -> cn.ingenic.indroidsync.IRemoteBinder:
    cn.ingenic.indroidsync.data.RemoteParcel transact(int,cn.ingenic.indroidsync.data.RemoteParcel) -> transact
    void onReply(int,cn.ingenic.indroidsync.data.RemoteParcel) -> onReply
cn.ingenic.indroidsync.IRemoteService -> cn.ingenic.indroidsync.IRemoteService:
    cn.ingenic.indroidsync.IRemoteBinder asRemoteBinder() -> asRemoteBinder
cn.ingenic.indroidsync.LogTag -> cn.ingenic.indroidsync.LogTag:
    java.lang.String APP -> APP
    java.lang.String MGR -> MGR
    java.lang.String TRAN -> TRAN
    java.lang.String TRANSPORT -> TRANSPORT
    java.lang.String CACHE -> CACHE
    java.lang.String CLIENT -> CLIENT
    java.lang.String SERVER -> SERVER
    java.lang.String Sync_EXP -> Sync_EXP
    boolean V -> V
    void printExp(java.lang.String,java.lang.Throwable) -> printExp
cn.ingenic.indroidsync.LogTag$Cache -> cn.ingenic.indroidsync.LogTag$Cache:
    void d(java.lang.String) -> d
    void w(java.lang.String) -> w
    void e(java.lang.String) -> e
    void i(java.lang.String) -> i
cn.ingenic.indroidsync.LogTag$Client -> cn.ingenic.indroidsync.LogTag$Client:
    void v(java.lang.String) -> v
    void d(java.lang.String) -> d
    void w(java.lang.String) -> w
    void e(java.lang.String) -> e
cn.ingenic.indroidsync.LogTag$Mgr -> cn.ingenic.indroidsync.LogTag$Mgr:
    void d(java.lang.String) -> d
    void i(java.lang.String) -> i
    void w(java.lang.String) -> w
    void e(java.lang.String) -> e
cn.ingenic.indroidsync.LogTag$Server -> cn.ingenic.indroidsync.LogTag$Server:
    void d(java.lang.String) -> d
    void w(java.lang.String) -> w
    void i(java.lang.String) -> i
    void e(java.lang.String) -> e
cn.ingenic.indroidsync.LogTag$Tran -> cn.ingenic.indroidsync.LogTag$Tran:
    void d(java.lang.String) -> d
cn.ingenic.indroidsync.LogTag$Transport -> cn.ingenic.indroidsync.LogTag$Transport:
    void i(java.lang.String) -> i
    void d(java.lang.String) -> d
    void w(java.lang.String) -> w
    void v(java.lang.String) -> v
    void e(java.lang.String) -> e
cn.ingenic.indroidsync.MSettings -> cn.ingenic.indroidsync.MSettings:
    java.lang.String KEY_CAMERA_WINDOW -> KEY_CAMERA_WINDOW
    android.preference.ListPreference mMode -> mMode
    android.preference.CheckBoxPreference cameraPreviewSetting -> cameraPreviewSetting
    android.preference.CheckBoxPreference mTimeoutNotificationSettings -> mTimeoutNotificationSettings
    cn.ingenic.indroidsync.ClearSettingsDialogPreference mClearSettings -> mClearSettings
    android.os.Handler mHandler -> mHandler
    android.preference.PreferenceScreen mSync -> mSync
    android.preference.PreferenceScreen mMms -> mMms
    android.preference.PreferenceScreen mBT -> mBT
    android.preference.PreferenceScreen mSearch -> mSearch
    int NOTIFY_MODE_CHANGED_MSG -> NOTIFY_MODE_CHANGED_MSG
    int NOTIF_TIMEOUT_NOTI_CHANGED_MSG -> NOTIF_TIMEOUT_NOTI_CHANGED_MSG
    java.lang.String KEY_SYNC -> KEY_SYNC
    java.lang.String KEY_MMS -> KEY_MMS
    java.lang.String KEY_BT -> KEY_BT
    java.lang.CharSequence KEY_SEARCH -> KEY_SEARCH
    cn.ingenic.indroidsync.SportsApp mSportsApp -> mSportsApp
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    void snedModeCmd(int) -> snedModeCmd
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    void updateBTSum() -> updateBTSum
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(cn.ingenic.indroidsync.MSettings,int) -> access$0
cn.ingenic.indroidsync.MSettings$1 -> cn.ingenic.indroidsync.MSettings$1:
    cn.ingenic.indroidsync.MSettings this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.MSyncSettings -> cn.ingenic.indroidsync.MSyncSettings:
    java.lang.String TAG -> TAG
    java.lang.String MMS_KEY -> MMS_KEY
    java.lang.String CONTACT_KEY -> CONTACT_KEY
    java.lang.String CALLL0G_KEY -> CALLL0G_KEY
    java.lang.String WEATHER_KEY -> WEATHER_KEY
    java.lang.String TIME_KEY -> TIME_KEY
    java.lang.String BATTERY_KEY -> BATTERY_KEY
    cn.ingenic.indroidsync.MSyncSettings$Entry[] ENTRIES -> ENTRIES
    int MSG_NOTIFY -> MSG_NOTIFY
    android.os.Handler mHandler -> mHandler
    android.preference.Preference$OnPreferenceChangeListener mListener -> mListener
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onResume() -> onResume
    void onPause() -> onPause
    android.os.Handler access$0(cn.ingenic.indroidsync.MSyncSettings) -> access$0
cn.ingenic.indroidsync.MSyncSettings$1 -> cn.ingenic.indroidsync.MSyncSettings$1:
    cn.ingenic.indroidsync.MSyncSettings this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.MSyncSettings$2 -> cn.ingenic.indroidsync.MSyncSettings$2:
    cn.ingenic.indroidsync.MSyncSettings this$0 -> this$0
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
cn.ingenic.indroidsync.MSyncSettings$Arg -> cn.ingenic.indroidsync.MSyncSettings$Arg:
    java.lang.String key -> key
    boolean value -> value
cn.ingenic.indroidsync.MSyncSettings$Entry -> cn.ingenic.indroidsync.MSyncSettings$Entry:
    java.lang.String key -> key
    int title -> title
cn.ingenic.indroidsync.MainActivity -> cn.ingenic.indroidsync.MainActivity:
    android.bluetooth.BluetoothAdapter mAdapter -> mAdapter
    cn.ingenic.indroidsync.DefaultSyncManager mManager -> mManager
    android.preference.Preference mBondedPreference -> mBondedPreference
    android.preference.Preference mSearchPreference -> mSearchPreference
    android.preference.PreferenceGroup mPairedDevicesCategory -> mPairedDevicesCategory
    android.preference.PreferenceGroup mBoundedDeviceCategory -> mBoundedDeviceCategory
    android.preference.PreferenceGroup mAvailableDevicesCategory -> mAvailableDevicesCategory
    android.preference.PreferenceGroup mSearchCategory -> mSearchCategory
    boolean mShowingScanDevices -> mShowingScanDevices
    boolean mScanning -> mScanning
    java.util.HashMap mScanDevices -> mScanDevices
    android.content.SharedPreferences$Editor edit -> edit
    int REQUEST_ENABLE_BT -> REQUEST_ENABLE_BT
    java.lang.String EXTRA_DEVICE_ADDRESS -> EXTRA_DEVICE_ADDRESS
    java.lang.String EXTRA_DEVICE_NAME -> EXTRA_DEVICE_NAME
    android.preference.Preference pairedPreference -> pairedPreference
    android.content.BroadcastReceiver mBluetoothReceiver -> mBluetoothReceiver
    java.lang.String title -> title
    android.app.ProgressDialog mBindProgressDialog -> mBindProgressDialog
    android.app.Dialog mConfirmDialog -> mConfirmDialog
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void ensureBluetoothIsEnabled() -> ensureBluetoothIsEnabled
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void addDeviceCategory() -> addDeviceCategory
    void initDevicePreference(android.bluetooth.BluetoothDevice,android.preference.PreferenceGroup) -> initDevicePreference
    void updateUI() -> updateUI
    void addSearchCategory() -> addSearchCategory
    void addScanDeviceCategory() -> addScanDeviceCategory
    void addScanDevice(android.bluetooth.BluetoothDevice) -> addScanDevice
    void addBondedDeviceCategory() -> addBondedDeviceCategory
    void onFinish() -> onFinish
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    void initiateProgressDialog() -> initiateProgressDialog
    void luluBind(android.preference.Preference) -> luluBind
    void luluBindPair(android.preference.Preference) -> luluBindPair
    void access$0(cn.ingenic.indroidsync.MainActivity) -> access$0
    android.preference.Preference access$1() -> access$1
    java.util.HashMap access$2(cn.ingenic.indroidsync.MainActivity) -> access$2
    void access$3(cn.ingenic.indroidsync.MainActivity,boolean) -> access$3
    void access$4(cn.ingenic.indroidsync.MainActivity,boolean) -> access$4
    android.preference.Preference access$5(cn.ingenic.indroidsync.MainActivity) -> access$5
    android.app.Dialog access$6(cn.ingenic.indroidsync.MainActivity) -> access$6
    android.app.ProgressDialog access$7(cn.ingenic.indroidsync.MainActivity) -> access$7
    cn.ingenic.indroidsync.DefaultSyncManager access$8(cn.ingenic.indroidsync.MainActivity) -> access$8
    android.bluetooth.BluetoothAdapter access$9(cn.ingenic.indroidsync.MainActivity) -> access$9
    void access$10(cn.ingenic.indroidsync.MainActivity,java.lang.String) -> access$10
    java.lang.String access$11(cn.ingenic.indroidsync.MainActivity) -> access$11
    void access$12(android.preference.Preference) -> access$12
    android.content.SharedPreferences$Editor access$13(cn.ingenic.indroidsync.MainActivity) -> access$13
    android.preference.Preference access$14(cn.ingenic.indroidsync.MainActivity) -> access$14
cn.ingenic.indroidsync.MainActivity$1 -> cn.ingenic.indroidsync.MainActivity$1:
    cn.ingenic.indroidsync.MainActivity this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.MainActivity$2 -> cn.ingenic.indroidsync.MainActivity$2:
    cn.ingenic.indroidsync.MainActivity this$0 -> this$0
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
cn.ingenic.indroidsync.MainActivity$3 -> cn.ingenic.indroidsync.MainActivity$3:
    cn.ingenic.indroidsync.MainActivity this$0 -> this$0
    android.bluetooth.BluetoothDevice val$device -> val$device
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
cn.ingenic.indroidsync.MainActivity$4 -> cn.ingenic.indroidsync.MainActivity$4:
    cn.ingenic.indroidsync.MainActivity this$0 -> this$0
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
cn.ingenic.indroidsync.MainActivity$5 -> cn.ingenic.indroidsync.MainActivity$5:
    cn.ingenic.indroidsync.MainActivity this$0 -> this$0
    android.preference.Preference val$preference -> val$preference
    void onClick(android.content.DialogInterface,int) -> onClick
cn.ingenic.indroidsync.MainActivity$6 -> cn.ingenic.indroidsync.MainActivity$6:
    cn.ingenic.indroidsync.MainActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
    cn.ingenic.indroidsync.MainActivity access$0(cn.ingenic.indroidsync.MainActivity$6) -> access$0
cn.ingenic.indroidsync.MainActivity$6$1 -> cn.ingenic.indroidsync.MainActivity$6$1:
    cn.ingenic.indroidsync.MainActivity$6 this$1 -> this$1
    android.app.ProgressDialog val$progressDialog -> val$progressDialog
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.MainActivity$6$2 -> cn.ingenic.indroidsync.MainActivity$6$2:
    cn.ingenic.indroidsync.MainActivity$6 this$1 -> this$1
    android.os.Handler val$handler -> val$handler
    android.app.ProgressDialog val$progressDialog -> val$progressDialog
    void run() -> run
cn.ingenic.indroidsync.MainActivity$7 -> cn.ingenic.indroidsync.MainActivity$7:
    cn.ingenic.indroidsync.MainActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
cn.ingenic.indroidsync.MainActivity$8 -> cn.ingenic.indroidsync.MainActivity$8:
    cn.ingenic.indroidsync.MainActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
    cn.ingenic.indroidsync.MainActivity access$0(cn.ingenic.indroidsync.MainActivity$8) -> access$0
cn.ingenic.indroidsync.MainActivity$8$1 -> cn.ingenic.indroidsync.MainActivity$8$1:
    cn.ingenic.indroidsync.MainActivity$8 this$1 -> this$1
    android.app.ProgressDialog val$progressDialog -> val$progressDialog
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.MainActivity$8$2 -> cn.ingenic.indroidsync.MainActivity$8$2:
    cn.ingenic.indroidsync.MainActivity$8 this$1 -> this$1
    android.os.Handler val$handler -> val$handler
    android.app.ProgressDialog val$progressDialog -> val$progressDialog
    void run() -> run
cn.ingenic.indroidsync.MainActivity$9 -> cn.ingenic.indroidsync.MainActivity$9:
    cn.ingenic.indroidsync.MainActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
cn.ingenic.indroidsync.Module -> cn.ingenic.indroidsync.Module:
    java.lang.String TAG -> TAG
    java.lang.String mName -> mName
    java.lang.String[] mFeatures -> mFeatures
    java.util.Map mServiceMap -> mServiceMap
    java.util.Map mRemoteServiceMap -> mRemoteServiceMap
    void onFeatureStateChange(java.lang.String,boolean) -> onFeatureStateChange
    void onInit() -> onInit
    void onClear(java.lang.String) -> onClear
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    void onModeChanged(int) -> onModeChanged
    boolean hasFeature(java.lang.String) -> hasFeature
    cn.ingenic.indroidsync.DefaultSyncManager$OnFileChannelCallBack getFileChannelCallBack() -> getFileChannelCallBack
    cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack getChannelCallBack(java.util.UUID) -> getChannelCallBack
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
    cn.ingenic.indroidsync.ILocalBinder getService(java.lang.String) -> getService
    cn.ingenic.indroidsync.IRemoteBinder getRemoteService(java.lang.String) -> getRemoteService
    java.lang.String getName() -> getName
    java.lang.String[] getFeatures() -> getFeatures
    void onCreate(android.content.Context) -> onCreate
    boolean checkServiceDespritor(java.lang.String) -> checkServiceDespritor
    boolean checkRemoteServiceDespritor(java.lang.String) -> checkRemoteServiceDespritor
    boolean registService(java.lang.String,cn.ingenic.indroidsync.ILocalBinder) -> registService
    boolean registRemoteService(java.lang.String,cn.ingenic.indroidsync.RemoteBinderImpl) -> registRemoteService
cn.ingenic.indroidsync.PhoneEnviroment -> cn.ingenic.indroidsync.PhoneEnviroment:
    android.app.Dialog mDialog -> mDialog
    android.content.SharedPreferences$Editor edit -> edit
    boolean isWatch() -> isWatch
    void processBondRequest(java.lang.String) -> processBondRequest
    void processBondResponse(boolean) -> processBondResponse
    java.util.UUID getUUID(int,boolean) -> getUUID
cn.ingenic.indroidsync.PhoneEnviroment$1 -> cn.ingenic.indroidsync.PhoneEnviroment$1:
    cn.ingenic.indroidsync.PhoneEnviroment this$0 -> this$0
    android.app.Notification getRetryFailedNotification() -> getRetryFailedNotification
    android.widget.Toast getRetryToast(int) -> getRetryToast
cn.ingenic.indroidsync.RemoteBinderException -> cn.ingenic.indroidsync.RemoteBinderException:
    long serialVersionUID -> serialVersionUID
cn.ingenic.indroidsync.RemoteBinderImpl -> cn.ingenic.indroidsync.RemoteBinderImpl:
    java.lang.Object mObject -> mObject
    java.lang.String mModule -> mModule
    java.lang.String mDescriptor -> mDescriptor
    boolean mIsWaiting -> mIsWaiting
    cn.ingenic.indroidsync.data.RemoteParcel mReply -> mReply
    cn.ingenic.indroidsync.data.RemoteParcel transact(int,cn.ingenic.indroidsync.data.RemoteParcel) -> transact
    void onReply(int,cn.ingenic.indroidsync.data.RemoteParcel) -> onReply
    void onConnectivityChange(boolean) -> onConnectivityChange
cn.ingenic.indroidsync.RemoteChannelManagerImpl -> cn.ingenic.indroidsync.RemoteChannelManagerImpl:
    java.lang.String TAG -> TAG
    cn.ingenic.indroidsync.transport.TransportManager mManager -> mManager
    int BASE -> BASE
    int RemoteChannelManagerImpl_listenChannel -> RemoteChannelManagerImpl_listenChannel
    int RemoteChannelManagerImpl_sendClearMessage -> RemoteChannelManagerImpl_sendClearMessage
    int MSG_CLEAR -> MSG_CLEAR
    android.os.Handler mHandler -> mHandler
    void sendClearMessage() -> sendClearMessage
    boolean listenChannel(java.lang.String,java.util.UUID) -> listenChannel
    cn.ingenic.indroidsync.data.RemoteParcel onTransact(int,cn.ingenic.indroidsync.data.RemoteParcel) -> onTransact
    cn.ingenic.indroidsync.RemoteChannelManagerService asRemoteInterface(cn.ingenic.indroidsync.IRemoteBinder) -> asRemoteInterface
cn.ingenic.indroidsync.RemoteChannelManagerImpl$1 -> cn.ingenic.indroidsync.RemoteChannelManagerImpl$1:
    cn.ingenic.indroidsync.RemoteChannelManagerImpl this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.RemoteChannelManagerImpl$RemoteChannelManagerProxy -> cn.ingenic.indroidsync.RemoteChannelManagerImpl$RemoteChannelManagerProxy:
    cn.ingenic.indroidsync.IRemoteBinder mRemoteBinder -> mRemoteBinder
    boolean listenChannel(java.lang.String,java.util.UUID) -> listenChannel
    void sendClearMessage() -> sendClearMessage
cn.ingenic.indroidsync.RemoteChannelManagerService -> cn.ingenic.indroidsync.RemoteChannelManagerService:
    java.lang.String DESPRITOR -> DESPRITOR
    boolean listenChannel(java.lang.String,java.util.UUID) -> listenChannel
    void sendClearMessage() -> sendClearMessage
cn.ingenic.indroidsync.SportsApp -> cn.ingenic.indroidsync.SportsApp:
    java.lang.String TAG -> TAG
    boolean LoginOption -> LoginOption
    com.fox.exercise.MainFragmentActivity mainFragmentActivity -> mainFragmentActivity
    com.fox.exercise.api.entity.FindMore mFindMore -> mFindMore
    boolean LoginNet -> LoginNet
    com.fox.exercise.login.SportMain sportMain -> sportMain
    com.amap.api.location.LocationManagerProxy mLocationManagerProxy -> mLocationManagerProxy
    int forgetPwdTime -> forgetPwdTime
    com.fox.exercise.login.LoginActivity loginActivity -> loginActivity
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> mExceptionHandler
    android.os.Message eMsg -> eMsg
    boolean mIsAdmin -> mIsAdmin
    int config -> config
    boolean isLogin -> isLogin
    com.fox.exercise.api.entity.UserDetail mSportUser -> mSportUser
    com.fox.exercise.publish.SendMsgDetail mSendMsgDetail -> mSendMsgDetail
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.SportsApp mInstance -> mInstance
    int DEFAULT_DISK_CACHE_SIZE -> DEFAULT_DISK_CACHE_SIZE
    int ScreenWidth -> ScreenWidth
    int ScreenHeight -> ScreenHeight
    java.lang.String sessionId -> sessionId
    int managerId -> managerId
    android.graphics.Bitmap previewBitmap -> previewBitmap
    com.fox.exercise.dao.SportsDAO sportsDAO -> sportsDAO
    java.lang.String DEFAULT_ICON -> DEFAULT_ICON
    java.util.List itemCates -> itemCates
    java.lang.String DB_PATH -> DB_PATH
    java.util.HashMap mWeatherIcon -> mWeatherIcon
    com.fox.exercise.StateActivity stateActivity -> stateActivity
    android.app.ActivityManager activityManager -> activityManager
    java.lang.String packageName -> packageName
    android.os.Handler mHandler -> mHandler
    android.os.Handler fHandler -> fHandler
    android.os.Handler mainHandler -> mainHandler
    android.os.Handler myHandler -> myHandler
    android.os.Handler findHandler -> findHandler
    android.os.Handler goodfriendsHandler -> goodfriendsHandler
    android.os.Handler personalFindHandler -> personalFindHandler
    android.os.Handler mSportsCircleMainhandler -> mSportsCircleMainhandler
    android.os.Handler mBaseFragmentHandler -> mBaseFragmentHandler
    android.os.Handler mYePaoHandler -> mYePaoHandler
    com.fox.exercise.newversion.entity.TrainCount mCount -> mCount
    android.os.Handler mShopHandler -> mShopHandler
    java.lang.String CITY_DB_NAME -> CITY_DB_NAME
    int MAP_TYPE_BAIDU -> MAP_TYPE_BAIDU
    int MAP_TYPE_GAODE -> MAP_TYPE_GAODE
    int mCurMapType -> mCurMapType
    java.lang.String curCity -> curCity
    android.content.BroadcastReceiver mNetworkStateIntentReceiver -> mNetworkStateIntentReceiver
    boolean mIsNetWork -> mIsNetWork
    android.app.Dialog alertDialog -> alertDialog
    boolean isHomeKey -> isHomeKey
    android.widget.EditText mFriends_editext -> mFriends_editext
    java.util.List activitys -> activitys
    int ExitPreMessage -> ExitPreMessage
    int ExitSysMessage -> ExitSysMessage
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    android.os.Handler friendsHandler -> friendsHandler
    android.os.Handler mapHandler -> mapHandler
    java.lang.Boolean isStartY -> isStartY
    android.net.ConnectivityManager mConnectivityManager -> mConnectivityManager
    android.net.NetworkInfo netInfo -> netInfo
    android.os.Handler wtHandler -> wtHandler
    boolean liveTemp -> liveTemp
    boolean forcastTemp -> forcastTemp
    int getForgetPwdTime() -> getForgetPwdTime
    void setForgetPwdTime(int) -> setForgetPwdTime
    com.fox.exercise.publish.SendMsgDetail getmSendMsgDetail() -> getmSendMsgDetail
    void setmSendMsgDetail(com.fox.exercise.publish.SendMsgDetail) -> setmSendMsgDetail
    com.fox.exercise.newversion.entity.TrainCount getmCount() -> getmCount
    void setmCount(com.fox.exercise.newversion.entity.TrainCount) -> setmCount
    android.os.Handler getmShopHandler() -> getmShopHandler
    void setmShopHandler(android.os.Handler) -> setmShopHandler
    android.os.Handler getmYePaoHandler() -> getmYePaoHandler
    void setmYePaoHandler(android.os.Handler) -> setmYePaoHandler
    android.os.Handler getmBaseFragmentHandler() -> getmBaseFragmentHandler
    void setmBaseFragmentHandler(android.os.Handler) -> setmBaseFragmentHandler
    android.os.Handler getmSportsCircleMainhandler() -> getmSportsCircleMainhandler
    void setmSportsCircleMainhandler(android.os.Handler) -> setmSportsCircleMainhandler
    android.os.Handler getPersonalFindHandler() -> getPersonalFindHandler
    void setPersonalFindHandler(android.os.Handler) -> setPersonalFindHandler
    android.os.Handler getGoodfriendsHandler() -> getGoodfriendsHandler
    void setGoodfriendsHandler(android.os.Handler) -> setGoodfriendsHandler
    android.widget.EditText getmFriends_editext() -> getmFriends_editext
    void addActivity(android.app.Activity) -> addActivity
    void removeActivity(android.app.Activity) -> removeActivity
    void removeAllActivity() -> removeAllActivity
    java.util.List getActivitys() -> getActivitys
    void setmFriends_editext(android.widget.EditText) -> setmFriends_editext
    com.fox.exercise.login.LoginActivity getLoginActivity() -> getLoginActivity
    void setLoginActivity(com.fox.exercise.login.LoginActivity) -> setLoginActivity
    void clearSportUser() -> clearSportUser
    com.fox.exercise.api.entity.UserDetail getSportUser() -> getSportUser
    void setSportUser(com.fox.exercise.api.entity.UserDetail) -> setSportUser
    boolean isLogin() -> isLogin
    void setLogin(boolean) -> setLogin
    com.fox.exercise.StateActivity getStateActivity() -> getStateActivity
    void setStateActivity(com.fox.exercise.StateActivity) -> setStateActivity
    android.content.Context getContext() -> getContext
    com.fox.exercise.MainFragmentActivity getMainFragmentActivity() -> getMainFragmentActivity
    void setMainFragmentActivity(com.fox.exercise.MainFragmentActivity) -> setMainFragmentActivity
    com.fox.exercise.login.SportMain getSportMain() -> getSportMain
    void setSportMain(com.fox.exercise.login.SportMain) -> setSportMain
    void onCreate() -> onCreate
    boolean isOpenNetwork() -> isOpenNetwork
    void isConnectNetwork() -> isConnectNetwork
    cn.ingenic.indroidsync.SportsApp getInstance() -> getInstance
    java.lang.String getSessionId() -> getSessionId
    void setSessionId(java.lang.String) -> setSessionId
    java.util.List getItemCates() -> getItemCates
    void setItemCates(java.util.List) -> setItemCates
    com.fox.exercise.SportsExceptionHandler getmExceptionHandler() -> getmExceptionHandler
    android.graphics.Bitmap getPreviewBitmap() -> getPreviewBitmap
    void setPreviewBitmap(android.graphics.Bitmap) -> setPreviewBitmap
    com.fox.exercise.bitmap.util.ImageResizer getImageWorker(android.content.Context,int,int) -> getImageWorker
    com.fox.exercise.dao.SportsDAO getSportsDAO() -> getSportsDAO
    void getGaodeWeather(android.os.Handler) -> getGaodeWeather
    void onWeatherForecaseSearched(com.amap.api.location.AMapLocalWeatherForecast) -> onWeatherForecaseSearched
    void onWeatherLiveSearched(com.amap.api.location.AMapLocalWeatherLive) -> onWeatherLiveSearched
    void initWeatherIcon() -> initWeatherIcon
    void loadModules(android.content.res.XmlResourceParser) -> loadModules
    void registModule(android.content.res.XmlResourceParser) -> registModule
    cn.ingenic.indroidsync.Enviroment createEnviroment() -> createEnviroment
    boolean isAppOnForeground() -> isAppOnForeground
    boolean isServiceRunning(android.content.Context,java.lang.String) -> isServiceRunning
    void StartMessageTask() -> StartMessageTask
    android.os.Handler getmHandler() -> getmHandler
    void setmHandler(android.os.Handler) -> setmHandler
    android.os.Handler getmofHandler() -> getmofHandler
    void setmofHandler(android.os.Handler) -> setmofHandler
    android.os.Handler getmyHandler() -> getmyHandler
    android.os.Handler getFindHandler() -> getFindHandler
    void setFindHandler(android.os.Handler) -> setFindHandler
    void setmyHandler(android.os.Handler) -> setmyHandler
    void setfHandler(android.os.Handler) -> setfHandler
    android.os.Handler getfHandler() -> getfHandler
    android.os.Handler getMainHandler() -> getMainHandler
    void setMainHandler(android.os.Handler) -> setMainHandler
    void setFriendsHandler(android.os.Handler) -> setFriendsHandler
    android.os.Handler getFriendsHandler() -> getFriendsHandler
    android.os.Handler getMapHandler() -> getMapHandler
    void setMapHandler(android.os.Handler) -> setMapHandler
    void TyrLoginAction(android.content.Context,java.lang.String,java.lang.String) -> TyrLoginAction
    void initTryLoginDialog(android.content.Context,java.lang.String,java.lang.String) -> initTryLoginDialog
    void NoNetLogin(android.content.Context) -> NoNetLogin
    int dip2px(float) -> dip2px
    java.lang.String getCurrentDate() -> getCurrentDate
    void setDataToLocal(com.fox.exercise.api.entity.UserDetail) -> setDataToLocal
    void getLocalData() -> getLocalData
    void access$0(cn.ingenic.indroidsync.SportsApp,android.net.ConnectivityManager) -> access$0
    android.net.ConnectivityManager access$1(cn.ingenic.indroidsync.SportsApp) -> access$1
    void access$2(cn.ingenic.indroidsync.SportsApp,android.net.NetworkInfo) -> access$2
    android.net.NetworkInfo access$3(cn.ingenic.indroidsync.SportsApp) -> access$3
    java.lang.String access$4(cn.ingenic.indroidsync.SportsApp) -> access$4
    com.fox.exercise.api.entity.UserDetail access$5(cn.ingenic.indroidsync.SportsApp) -> access$5
    android.os.Handler access$6(cn.ingenic.indroidsync.SportsApp) -> access$6
cn.ingenic.indroidsync.SportsApp$1 -> cn.ingenic.indroidsync.SportsApp$1:
    cn.ingenic.indroidsync.SportsApp this$0 -> this$0
    java.lang.String doInBackground(java.lang.String[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.ingenic.indroidsync.SportsApp$2 -> cn.ingenic.indroidsync.SportsApp$2:
    cn.ingenic.indroidsync.SportsApp this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.SportsApp$3 -> cn.ingenic.indroidsync.SportsApp$3:
    cn.ingenic.indroidsync.SportsApp this$0 -> this$0
    android.content.Context val$context -> val$context
    void onClick(android.view.View) -> onClick
cn.ingenic.indroidsync.SportsApp$4 -> cn.ingenic.indroidsync.SportsApp$4:
    cn.ingenic.indroidsync.SportsApp this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.ingenic.indroidsync.SportsApp$5 -> cn.ingenic.indroidsync.SportsApp$5:
    cn.ingenic.indroidsync.SportsApp this$0 -> this$0
    void onDismiss(android.content.DialogInterface) -> onDismiss
cn.ingenic.indroidsync.SportsApp$HaveNetLoginTask -> cn.ingenic.indroidsync.SportsApp$HaveNetLoginTask:
    cn.ingenic.indroidsync.SportsApp this$0 -> this$0
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.fox.exercise.api.ApiBack) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    cn.ingenic.indroidsync.SportsApp access$2(cn.ingenic.indroidsync.SportsApp$HaveNetLoginTask) -> access$2
cn.ingenic.indroidsync.SportsApp$HaveNetLoginTask$1 -> cn.ingenic.indroidsync.SportsApp$HaveNetLoginTask$1:
    cn.ingenic.indroidsync.SportsApp$HaveNetLoginTask this$1 -> this$1
    com.fox.exercise.api.entity.UserDetail doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.fox.exercise.api.entity.UserDetail) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.ingenic.indroidsync.SportsApp$MessageTask -> cn.ingenic.indroidsync.SportsApp$MessageTask:
    cn.ingenic.indroidsync.SportsApp this$0 -> this$0
    com.fox.exercise.api.entity.UserDetail doInBackground(java.lang.Integer[]) -> doInBackground
    void onPostExecute(com.fox.exercise.api.entity.UserDetail) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.ingenic.indroidsync.SystemModule -> cn.ingenic.indroidsync.SystemModule:
    java.lang.String SYSTEM -> SYSTEM
    java.lang.String TAG -> TAG
    boolean V -> V
    void onCreate(android.content.Context) -> onCreate
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
cn.ingenic.indroidsync.SystemTransaction -> cn.ingenic.indroidsync.SystemTransaction:
    java.lang.String TAG -> TAG
    void onStart(java.util.ArrayList) -> onStart
cn.ingenic.indroidsync.Transaction -> cn.ingenic.indroidsync.Transaction:
    cn.ingenic.indroidsync.Config mConfig -> mConfig
    android.content.Context mContext -> mContext
    java.util.ArrayList mDatas -> mDatas
    android.os.Handler mHandler -> mHandler
    cn.ingenic.indroidsync.Config getConfig() -> getConfig
    void onCreate(cn.ingenic.indroidsync.Config,android.content.Context) -> onCreate
    void setHandler(android.os.Handler) -> setHandler
    void onStart(java.util.ArrayList) -> onStart
    android.os.Handler getHandler() -> getHandler
cn.ingenic.indroidsync.calendar.CalendarColumn -> cn.ingenic.indroidsync.calendar.CalendarColumn:
    cn.ingenic.indroidsync.calendar.CalendarColumn accounttype -> accounttype
    cn.ingenic.indroidsync.calendar.CalendarColumn accountname -> accountname
    cn.ingenic.indroidsync.calendar.CalendarColumn event_id -> event_id
    cn.ingenic.indroidsync.calendar.CalendarColumn events -> events
    cn.ingenic.indroidsync.calendar.CalendarColumn tag -> tag
    java.lang.Class mClass -> mClass
    cn.ingenic.indroidsync.calendar.CalendarColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.calendar.CalendarColumn[] values() -> values
    cn.ingenic.indroidsync.calendar.CalendarColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.calendar.CalendarController -> cn.ingenic.indroidsync.calendar.CalendarController:
    java.lang.String TAG -> TAG
    cn.ingenic.indroidsync.calendar.CalendarController sInstance -> sInstance
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.calendar.CalendarController$MyThread mThread -> mThread
    cn.ingenic.indroidsync.calendar.CalendarController$ExecuteHandler mHandler -> mHandler
    java.lang.String SORT_ORDER -> SORT_ORDER
    java.lang.String UPDATE_AGENDA_TO_WATCH_TAG -> UPDATE_AGENDA_TO_WATCH_TAG
    java.lang.String DELETE_ALL_TO_WATCH_TAG -> DELETE_ALL_TO_WATCH_TAG
    java.lang.String WATCH_DELETE_AGENDA_TAG -> WATCH_DELETE_AGENDA_TAG
    java.lang.String WATCH_REQUEST_UPDATE_TAG -> WATCH_REQUEST_UPDATE_TAG
    java.lang.String[] PROJECTION -> PROJECTION
    int ACCOUNT_SYNC -> ACCOUNT_SYNC
    int ACCOUNT_NOT_SYNC -> ACCOUNT_NOT_SYNC
    java.lang.String SELECTION -> SELECTION
    java.lang.String[] mArgs -> mArgs
    java.lang.String[] ALERT_PROJECTION -> ALERT_PROJECTION
    int MSG_UPDATE_ONE_EVENT -> MSG_UPDATE_ONE_EVENT
    int MSG_UPDATE_ALL -> MSG_UPDATE_ALL
    int MSG_INSERT_ONE_EVENT -> MSG_INSERT_ONE_EVENT
    int MSG_INSERT_ONE_ACCOUNT -> MSG_INSERT_ONE_ACCOUNT
    int MSG_INSERT_ALL -> MSG_INSERT_ALL
    int MSG_DELETE_ONE_EVENT -> MSG_DELETE_ONE_EVENT
    int MSG_DELETE_ONE_ACCOUNT -> MSG_DELETE_ONE_ACCOUNT
    int MSG_DELETE_ALL -> MSG_DELETE_ALL
    int MSG_UPDATE_NOTIFICATION -> MSG_UPDATE_NOTIFICATION
    int MSG_UPDATE_REQUEST -> MSG_UPDATE_REQUEST
    android.content.ContentResolver mContentResolver -> mContentResolver
    android.os.Handler mHander -> mHander
    cn.ingenic.indroidsync.calendar.CalendarController getInstance(android.content.Context) -> getInstance
    void ensureHandlerExists() -> ensureHandlerExists
    void updateByEventId(int) -> updateByEventId
    void doUpdate() -> doUpdate
    void doInsert() -> doInsert
    void doDelete(int) -> doDelete
    void doDeleteAll(android.os.Bundle) -> doDeleteAll
    java.util.ArrayList constuctVcalendar(long) -> constuctVcalendar
    java.lang.String onBuilder(int) -> onBuilder
    void sendEvents(java.util.ArrayList) -> sendEvents
    void access$0(cn.ingenic.indroidsync.calendar.CalendarController,int) -> access$0
    void access$1(cn.ingenic.indroidsync.calendar.CalendarController) -> access$1
    void access$2(cn.ingenic.indroidsync.calendar.CalendarController) -> access$2
    void access$3(cn.ingenic.indroidsync.calendar.CalendarController,android.os.Bundle) -> access$3
    void access$4(cn.ingenic.indroidsync.calendar.CalendarController,int) -> access$4
cn.ingenic.indroidsync.calendar.CalendarController$1 -> cn.ingenic.indroidsync.calendar.CalendarController$1:
    cn.ingenic.indroidsync.calendar.CalendarController this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.calendar.CalendarController$ExecuteHandler -> cn.ingenic.indroidsync.calendar.CalendarController$ExecuteHandler:
    cn.ingenic.indroidsync.calendar.CalendarController this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.calendar.CalendarController$MyThread -> cn.ingenic.indroidsync.calendar.CalendarController$MyThread:
    java.lang.Object mLock -> mLock
    android.os.Looper mLooper -> mLooper
    void run() -> run
    void quit() -> quit
    android.os.Looper getLooper() -> getLooper
cn.ingenic.indroidsync.calendar.CalendarModule -> cn.ingenic.indroidsync.calendar.CalendarModule:
    java.lang.String TAG -> TAG
    boolean V -> V
    java.lang.String CALENDAR -> CALENDAR
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.calendar.CalendarController mController -> mController
    boolean isRegister -> isRegister
    android.database.ContentObserver mObserver -> mObserver
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
    void onCreate(android.content.Context) -> onCreate
    void onInit() -> onInit
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    void onFeatureStateChange(java.lang.String,boolean) -> onFeatureStateChange
    void onModeChanged(int) -> onModeChanged
    void recallBackSyncMsg() -> recallBackSyncMsg
    void sendMsgToSync(long) -> sendMsgToSync
cn.ingenic.indroidsync.calendar.CalendarModule$1 -> cn.ingenic.indroidsync.calendar.CalendarModule$1:
    cn.ingenic.indroidsync.calendar.CalendarModule this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
cn.ingenic.indroidsync.calendar.CalendarSyncHelper -> cn.ingenic.indroidsync.calendar.CalendarSyncHelper:
    android.content.Context mContext -> mContext
    java.lang.String ACCOUNT_NAME -> ACCOUNT_NAME
    java.lang.String DISPLAY_NAME_PREFIX -> DISPLAY_NAME_PREFIX
    java.lang.String TAG -> TAG
    boolean isSynced -> isSynced
    android.net.Uri addLocalCalendar(android.accounts.Account,android.content.ContentResolver) -> addLocalCalendar
    android.content.ContentValues buildContentValues(android.accounts.Account) -> buildContentValues
    android.net.Uri buildCalUri() -> buildCalUri
    java.lang.String appendLocalCalendarName(java.lang.String) -> appendLocalCalendarName
    void setSyncState(boolean) -> setSyncState
    boolean isSynced() -> isSynced
cn.ingenic.indroidsync.calendar.CalendarSyncReceiver -> cn.ingenic.indroidsync.calendar.CalendarSyncReceiver:
    cn.ingenic.indroidsync.calendar.CalendarController mController -> mController
    java.lang.String TAG -> TAG
    java.lang.String ACTION_DELETE_EVENT_FROM_WATCH -> ACTION_DELETE_EVENT_FROM_WATCH
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.calendar.CalendarTransaction -> cn.ingenic.indroidsync.calendar.CalendarTransaction:
    java.lang.String TAG -> TAG
    cn.ingenic.indroidsync.calendar.CalendarTransaction$MyHandler mHandler -> mHandler
    android.os.HandlerThread thread -> thread
    int MSG_UPDATE_ONE_EVENT -> MSG_UPDATE_ONE_EVENT
    int MSG_UPDATE_ALL -> MSG_UPDATE_ALL
    int MSG_INSERT_ONE_EVENT -> MSG_INSERT_ONE_EVENT
    int MSG_INSERT_ONE_ACCOUNT -> MSG_INSERT_ONE_ACCOUNT
    int MSG_INSERT_ALL -> MSG_INSERT_ALL
    int MSG_DELETE_ONE_EVENT -> MSG_DELETE_ONE_EVENT
    int MSG_DELETE_ONE_ACCOUNT -> MSG_DELETE_ONE_ACCOUNT
    int MSG_DELETE_ALL -> MSG_DELETE_ALL
    int MSG_ALERT_NOTIFICATION -> MSG_ALERT_NOTIFICATION
    java.lang.String CHARSET -> CHARSET
    cn.ingenic.indroidsync.calendar.CalendarSyncHelper syncHelper -> syncHelper
    void onStart(java.util.ArrayList) -> onStart
    cn.ingenic.indroidsync.calendar.CalendarTransaction$MyHandler ensureHandlerExists() -> ensureHandlerExists
    void startUpdate(java.util.ArrayList) -> startUpdate
    void startInsert(java.util.ArrayList) -> startInsert
    void startDelete(java.util.ArrayList) -> startDelete
    void startAlertNotification(java.util.ArrayList) -> startAlertNotification
    void insertEventList(android.content.ContentResolver,long,java.util.ArrayList) -> insertEventList
    void doReadOneVCalendar(android.content.ContentResolver,long,java.lang.String) -> doReadOneVCalendar
    void access$0(cn.ingenic.indroidsync.calendar.CalendarTransaction,java.util.ArrayList) -> access$0
    void access$1(cn.ingenic.indroidsync.calendar.CalendarTransaction,java.util.ArrayList) -> access$1
    void access$2(cn.ingenic.indroidsync.calendar.CalendarTransaction,java.util.ArrayList) -> access$2
    void access$3(cn.ingenic.indroidsync.calendar.CalendarTransaction,java.util.ArrayList) -> access$3
    void access$4(cn.ingenic.indroidsync.calendar.CalendarTransaction,android.content.ContentResolver,long,java.util.ArrayList) -> access$4
cn.ingenic.indroidsync.calendar.CalendarTransaction$AsyncUpdateTask -> cn.ingenic.indroidsync.calendar.CalendarTransaction$AsyncUpdateTask:
    android.content.ContentResolver mResolver -> mResolver
    java.util.ArrayList datas -> datas
    cn.ingenic.indroidsync.calendar.CalendarTransaction this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
cn.ingenic.indroidsync.calendar.CalendarTransaction$MyHandler -> cn.ingenic.indroidsync.calendar.CalendarTransaction$MyHandler:
    cn.ingenic.indroidsync.calendar.CalendarTransaction this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.calllog.CacheHelper -> cn.ingenic.indroidsync.calllog.CacheHelper:
    java.lang.String TABLE_CALLS -> TABLE_CALLS
    java.lang.String SQL_CREATE_TABLE_CALLS -> SQL_CREATE_TABLE_CALLS
    java.lang.String SQL_DROP_TABLE_CALLS -> SQL_DROP_TABLE_CALLS
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void clearTableCalls() -> clearTableCalls
cn.ingenic.indroidsync.calllog.CallLogManager -> cn.ingenic.indroidsync.calllog.CallLogManager:
    long TRANS_TIME -> TRANS_TIME
    long ONE_CALLLOG_TIME -> ONE_CALLLOG_TIME
    boolean DEBUG -> DEBUG
    java.lang.String CALL_LOG_PREF -> CALL_LOG_PREF
    java.lang.String PREF_DATA_CHAOS -> PREF_DATA_CHAOS
    int RES_SUCCESS -> RES_SUCCESS
    int RES_FAILED -> RES_FAILED
    int RES_FAILED_WITH_DATA_CHAOS -> RES_FAILED_WITH_DATA_CHAOS
    int RES_TIME_OUT -> RES_TIME_OUT
    int NOTIFICATION_ID -> NOTIFICATION_ID
    java.lang.String TRANSLATE_FILE_NAME -> TRANSLATE_FILE_NAME
    int MSG_SYNC_START -> MSG_SYNC_START
    int MSG_SYNC_FINISH -> MSG_SYNC_FINISH
    int MSG_CLEAR_FINISH -> MSG_CLEAR_FINISH
    int MSG_LOAD_FILE -> MSG_LOAD_FILE
    int MSG_LOAD_FINISH -> MSG_LOAD_FINISH
    int MSG_CLEAR_DATA -> MSG_CLEAR_DATA
    int MSG_CLEAR_CACHE -> MSG_CLEAR_CACHE
    int MSG_CLEAR_TIME_OUT -> MSG_CLEAR_TIME_OUT
    int MSG_SYNC_TIME_OUT -> MSG_SYNC_TIME_OUT
    int THREAD_COUNT -> THREAD_COUNT
    cn.ingenic.indroidsync.calllog.CallLogManager sInstance -> sInstance
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.calllog.CacheHelper mCacheHelper -> mCacheHelper
    android.database.ContentObserver mObserver -> mObserver
    cn.ingenic.indroidsync.calllog.CallLogManager$SyncTask mSyncTask -> mSyncTask
    cn.ingenic.indroidsync.calllog.CallLogManager$ClearWatchDataTask mClearTask -> mClearTask
    boolean mStoreSync -> mStoreSync
    boolean mCleared -> mCleared
    boolean mIgnoreMode -> mIgnoreMode
    cn.ingenic.indroidsync.calllog.CallLogManager$SyncLock mWatchSyncRes -> mWatchSyncRes
    cn.ingenic.indroidsync.calllog.CallLogManager$SyncLock mWatchClearRes -> mWatchClearRes
    android.os.Handler mHandler -> mHandler
    cn.ingenic.indroidsync.calllog.CallLogManager getInstance(android.content.Context) -> getInstance
    void dataReceived(java.lang.String) -> dataReceived
    void watchSyncFinished(int) -> watchSyncFinished
    void watchClearFinished(int) -> watchClearFinished
    void sync() -> sync
    void syncIgnoreMode() -> syncIgnoreMode
    void reset() -> reset
    void startSync() -> startSync
    boolean needToClearWatchData() -> needToClearWatchData
    void onClearTaskFinsh(int) -> onClearTaskFinsh
    void onSyncTaskFinsh(int) -> onSyncTaskFinsh
    boolean hasDataChaos() -> hasDataChaos
    void setDataChaos(boolean) -> setDataChaos
    void sendSyncCmd(java.lang.String) -> sendSyncCmd
    void updateCache(java.util.List) -> updateCache
    org.json.JSONObject collectData(java.util.List) -> collectData
    int abs(int) -> abs
    java.util.List getChanges() -> getChanges
    java.util.List getIntArrayFromCursor(android.database.Cursor,int) -> getIntArrayFromCursor
    java.util.List getChanges(java.util.List,java.util.List) -> getChanges
    void onDisconnected() -> onDisconnected
    void stopClearTask() -> stopClearTask
    void stopSyncTask() -> stopSyncTask
    void access$0(cn.ingenic.indroidsync.calllog.CallLogManager) -> access$0
    void access$1(cn.ingenic.indroidsync.calllog.CallLogManager,int) -> access$1
    void access$2(cn.ingenic.indroidsync.calllog.CallLogManager,int) -> access$2
    cn.ingenic.indroidsync.calllog.CacheHelper access$3(cn.ingenic.indroidsync.calllog.CallLogManager) -> access$3
    cn.ingenic.indroidsync.calllog.CallLogManager$SyncLock access$4(cn.ingenic.indroidsync.calllog.CallLogManager) -> access$4
    android.os.Handler access$5(cn.ingenic.indroidsync.calllog.CallLogManager) -> access$5
    int access$6() -> access$6
    void access$7(int) -> access$7
    java.util.List access$8(cn.ingenic.indroidsync.calllog.CallLogManager) -> access$8
    org.json.JSONObject access$9(cn.ingenic.indroidsync.calllog.CallLogManager,java.util.List) -> access$9
    void access$10(cn.ingenic.indroidsync.calllog.CallLogManager,java.lang.String) -> access$10
    cn.ingenic.indroidsync.calllog.CallLogManager$SyncLock access$11(cn.ingenic.indroidsync.calllog.CallLogManager) -> access$11
    void access$12(cn.ingenic.indroidsync.calllog.CallLogManager,java.util.List) -> access$12
cn.ingenic.indroidsync.calllog.CallLogManager$1 -> cn.ingenic.indroidsync.calllog.CallLogManager$1:
    cn.ingenic.indroidsync.calllog.CallLogManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.calllog.CallLogManager$CallLogObserver -> cn.ingenic.indroidsync.calllog.CallLogManager$CallLogObserver:
    android.os.Handler handler -> handler
    cn.ingenic.indroidsync.calllog.CallLogManager this$0 -> this$0
    void onChange(boolean) -> onChange
cn.ingenic.indroidsync.calllog.CallLogManager$ClearWatchDataTask -> cn.ingenic.indroidsync.calllog.CallLogManager$ClearWatchDataTask:
    int res -> res
    cn.ingenic.indroidsync.calllog.CallLogManager this$0 -> this$0
    java.lang.Integer doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.Integer) -> onPostExecute
    void onCancelled(java.lang.Integer) -> onCancelled
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onTaskFinished(int) -> onTaskFinished
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
cn.ingenic.indroidsync.calllog.CallLogManager$SyncLock -> cn.ingenic.indroidsync.calllog.CallLogManager$SyncLock:
    java.lang.Integer value -> value
    cn.ingenic.indroidsync.calllog.CallLogManager this$0 -> this$0
cn.ingenic.indroidsync.calllog.CallLogManager$SyncTask -> cn.ingenic.indroidsync.calllog.CallLogManager$SyncTask:
    java.util.List changes -> changes
    org.json.JSONObject changeData -> changeData
    int res -> res
    cn.ingenic.indroidsync.calllog.CallLogManager this$0 -> this$0
    void onPreExecute() -> onPreExecute
    java.lang.Integer doInBackground(java.lang.Integer[]) -> doInBackground
    java.util.List filterChanges(java.util.List) -> filterChanges
    void onPostExecute(java.lang.Integer) -> onPostExecute
    void onCancelled(java.lang.Integer) -> onCancelled
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onTaskFinished(int) -> onTaskFinished
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
cn.ingenic.indroidsync.calllog.CallLogUtils -> cn.ingenic.indroidsync.calllog.CallLogUtils:
    android.content.ContentValues json2ContentValues(org.json.JSONObject) -> json2ContentValues
    void putIntIntoContentValue(android.content.ContentValues,org.json.JSONObject,java.lang.String) -> putIntIntoContentValue
    void putStringIntoContentValue(android.content.ContentValues,org.json.JSONObject,java.lang.String) -> putStringIntoContentValue
    void putLongIntoContentValue(android.content.ContentValues,org.json.JSONObject,java.lang.String) -> putLongIntoContentValue
    org.json.JSONObject cursor2Json(android.database.Cursor) -> cursor2Json
    void putIntIntoJson(org.json.JSONObject,android.database.Cursor,java.lang.String) -> putIntIntoJson
    void putLongIntoJson(org.json.JSONObject,android.database.Cursor,java.lang.String) -> putLongIntoJson
    void putStringIntoJson(org.json.JSONObject,android.database.Cursor,java.lang.String) -> putStringIntoJson
cn.ingenic.indroidsync.camera.CameraBase -> cn.ingenic.indroidsync.camera.CameraBase:
    java.lang.String TAG -> TAG
    int expectFrameRate -> expectFrameRate
    boolean displayTestWindow -> displayTestWindow
    java.util.UUID PREVIEW_UUID -> PREVIEW_UUID
    int defaultAngle -> defaultAngle
    void showToast(int) -> showToast
    void showToast(java.lang.String) -> showToast
    void setDefaultAngle(int) -> setDefaultAngle
    int getDefaultAngle() -> getDefaultAngle
    void recoverAngle() -> recoverAngle
    void setFrameToDisplay(byte[],android.view.SurfaceHolder,android.graphics.Rect) -> setFrameToDisplay
cn.ingenic.indroidsync.camera.CameraColumn -> cn.ingenic.indroidsync.camera.CameraColumn:
    cn.ingenic.indroidsync.camera.CameraColumn watchRequest -> watchRequest
    cn.ingenic.indroidsync.camera.CameraColumn maxScreen -> maxScreen
    cn.ingenic.indroidsync.camera.CameraColumn phoneResponseState -> phoneResponseState
    cn.ingenic.indroidsync.camera.CameraColumn openCameraResult -> openCameraResult
    cn.ingenic.indroidsync.camera.CameraColumn previewData -> previewData
    cn.ingenic.indroidsync.camera.CameraColumn takePictureResult -> takePictureResult
    cn.ingenic.indroidsync.camera.CameraColumn picturePath -> picturePath
    cn.ingenic.indroidsync.camera.CameraColumn pictureData -> pictureData
    cn.ingenic.indroidsync.camera.CameraColumn exit -> exit
    java.lang.Class mClass -> mClass
    cn.ingenic.indroidsync.camera.CameraColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String key() -> key
    java.lang.Class type() -> type
    cn.ingenic.indroidsync.camera.CameraColumn[] values() -> values
    cn.ingenic.indroidsync.camera.CameraColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.camera.CameraModule -> cn.ingenic.indroidsync.camera.CameraModule:
    java.lang.String TAG -> TAG
    java.lang.String CAMERA -> CAMERA
    java.lang.String PREVIEW_SETTING -> PREVIEW_SETTING
    boolean mSettingHasWindow -> mSettingHasWindow
    cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow mServer -> mServer
    int HIDE_PREVIEW_WINDOW -> HIDE_PREVIEW_WINDOW
    cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack mCallback -> mCallback
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
    void setServer(cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow) -> setServer
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    void onFeatureStateChange(java.lang.String,boolean) -> onFeatureStateChange
    boolean getWindowSetting() -> getWindowSetting
    void setChannelCallBack(cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> setChannelCallBack
    cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack getChannelCallBack(java.util.UUID) -> getChannelCallBack
cn.ingenic.indroidsync.camera.CameraTransaction -> cn.ingenic.indroidsync.camera.CameraTransaction:
    java.lang.String TAG -> TAG
    int OPEN_CAMERA_REQUEST -> OPEN_CAMERA_REQUEST
    int TAKE_PICTURE_REQUEST -> TAKE_PICTURE_REQUEST
    int SWITCH_CAMERA_REQUEST -> SWITCH_CAMERA_REQUEST
    int EXIT_CAMERA_REQUEST -> EXIT_CAMERA_REQUEST
    int OPEN_RESULT_RESPONSE -> OPEN_RESULT_RESPONSE
    int TAKE_RESULT_RESPONSE -> TAKE_RESULT_RESPONSE
    int EXIT_CAMERA_RESPONSE -> EXIT_CAMERA_RESPONSE
    int OPEN_RESULT_SUCCESS -> OPEN_RESULT_SUCCESS
    int OPEN_RESULT_FAILED -> OPEN_RESULT_FAILED
    int OPEN_RESULT_FAILED_POWER -> OPEN_RESULT_FAILED_POWER
    int OPEN_RESULT_FAILED_SENSOR -> OPEN_RESULT_FAILED_SENSOR
    int OPEN_RESULT_FAILED_CHANNEL -> OPEN_RESULT_FAILED_CHANNEL
    void openFailedPower() -> openFailedPower
    void onStart(java.util.ArrayList) -> onStart
    void sendRequestToService(int) -> sendRequestToService
    void sendRequestToService(int,int) -> sendRequestToService
cn.ingenic.indroidsync.camera.CameraUtil -> cn.ingenic.indroidsync.camera.CameraUtil:
    java.lang.String TAG -> TAG
    boolean CHECK_RATIO -> CHECK_RATIO
    java.lang.String PATH -> PATH
    int getDisplayRotation(android.app.Activity) -> getDisplayRotation
    int getDisplayRotation(android.view.WindowManager) -> getDisplayRotation
    int getDisplayOrientation(int,int) -> getDisplayOrientation
    int getJpegRotation(int,int) -> getJpegRotation
    android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,int) -> rotateBitmap
    android.hardware.Camera$Size getOptimalPreviewSize(int,int,java.util.List) -> getOptimalPreviewSize
    android.hardware.Camera$Size getMinPreviewSize(java.util.List) -> getMinPreviewSize
    boolean checkSpace() -> checkSpace
    boolean saveJpegPicture(android.content.Context,byte[],long,int,int) -> saveJpegPicture
    byte[] compressJpegSize(byte[],float,float) -> compressJpegSize
cn.ingenic.indroidsync.camera.CameraWindowService -> cn.ingenic.indroidsync.camera.CameraWindowService:
    java.lang.String TAG -> TAG
    java.util.UUID PREVIEW_UUID -> PREVIEW_UUID
    int DEFAULT_SWITCH -> DEFAULT_SWITCH
    int expectFrameRate -> expectFrameRate
    int defaultAngle -> defaultAngle
    int NONE -> NONE
    int DRAG -> DRAG
    int ZOOM -> ZOOM
    int INIT_HEIGHT -> INIT_HEIGHT
    int INIT_WIDTH -> INIT_WIDTH
    int MIN_HEIGHT -> MIN_HEIGHT
    int EVENT_INIT_WINDOW -> EVENT_INIT_WINDOW
    int EVENT_SCREEN_OFF -> EVENT_SCREEN_OFF
    int DISPLAY_WINDOW -> DISPLAY_WINDOW
    int CREATE_PREVIEW_CHANNEL -> CREATE_PREVIEW_CHANNEL
    int WINDOW_EVENT_CLOSE -> WINDOW_EVENT_CLOSE
    int CLOSE_SERVICE_NO_NOTIFY -> CLOSE_SERVICE_NO_NOTIFY
    android.content.Context mContext -> mContext
    android.hardware.Camera mCameraDevice -> mCameraDevice
    int cameraId -> cameraId
    boolean hasOpenedCamera -> hasOpenedCamera
    boolean hasConnectSuccess -> hasConnectSuccess
    boolean takePictureSuccess -> takePictureSuccess
    android.hardware.Camera$Parameters mParameters -> mParameters
    android.view.SurfaceHolder mainHolder -> mainHolder
    android.view.WindowManager mWinManager -> mWinManager
    cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow mWindow -> mWindow
    int dropCount -> dropCount
    long mDateTaken -> mDateTaken
    java.lang.String mPath -> mPath
    float sendPictureWidth -> sendPictureWidth
    boolean isStopping -> isStopping
    android.os.Handler mServiceHandler -> mServiceHandler
    void logi(java.lang.String) -> logi
    void loge(java.lang.String) -> loge
    void showToast(int) -> showToast
    void showToast(java.lang.String) -> showToast
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void initWindow() -> initWindow
    void onDestroy() -> onDestroy
    void stopService() -> stopService
    void setDefaultAngle(int) -> setDefaultAngle
    int getDefaultAngle() -> getDefaultAngle
    void recoverAngle() -> recoverAngle
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void onCreateComplete(boolean,boolean) -> onCreateComplete
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void onDestory() -> onDestory
    boolean openCamera(int) -> openCamera
    void startPreview() -> startPreview
    void stopPreview() -> stopPreview
    void takePicture() -> takePicture
    void reopenCamera(int) -> reopenCamera
    void hidePreviewWindow() -> hidePreviewWindow
    void closeCamera() -> closeCamera
    byte[] compressToJpeg(byte[]) -> compressToJpeg
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
    java.util.ArrayList getServerProjos(int) -> getServerProjos
    java.util.ArrayList getServerProjos(int,int) -> getServerProjos
    void sendDataToClient(java.util.ArrayList,cn.ingenic.indroidsync.data.Projo) -> sendDataToClient
    void sendOpenResult(int) -> sendOpenResult
    void sendTakeResult(boolean,byte[],java.lang.String) -> sendTakeResult
    void sendExitResponse() -> sendExitResponse
    void access$0(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$0
    boolean access$1(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$1
    android.content.Context access$2(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$2
    long access$3(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$3
    android.hardware.Camera$Parameters access$4(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$4
    void access$5(cn.ingenic.indroidsync.camera.CameraWindowService,boolean) -> access$5
    float access$6(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$6
    boolean access$7(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$7
    java.lang.String access$8(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$8
    void access$9(cn.ingenic.indroidsync.camera.CameraWindowService,boolean,byte[],java.lang.String) -> access$9
    void access$10(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$10
    android.view.WindowManager access$11(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$11
    android.os.Handler access$12(cn.ingenic.indroidsync.camera.CameraWindowService) -> access$12
cn.ingenic.indroidsync.camera.CameraWindowService$1 -> cn.ingenic.indroidsync.camera.CameraWindowService$1:
    cn.ingenic.indroidsync.camera.CameraWindowService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.camera.CameraWindowService$JpegPictureCallback -> cn.ingenic.indroidsync.camera.CameraWindowService$JpegPictureCallback:
    cn.ingenic.indroidsync.camera.CameraWindowService this$0 -> this$0
    void onPictureTaken(byte[],android.hardware.Camera) -> onPictureTaken
cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow -> cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow:
    android.view.WindowManager$LayoutParams mParams -> mParams
    android.view.View mPreviewPanel -> mPreviewPanel
    android.view.SurfaceView mPreviewView -> mPreviewView
    cn.ingenic.indroidsync.camera.ControlPanel mController -> mController
    boolean mPanelVisble -> mPanelVisble
    double mScale -> mScale
    java.lang.String ACTION_FROM -> ACTION_FROM
    int mLastScreenWidth -> mLastScreenWidth
    android.os.Handler mWindowHandler -> mWindowHandler
    android.content.BroadcastReceiver mBcr -> mBcr
    cn.ingenic.indroidsync.camera.CameraWindowService this$0 -> this$0
    android.os.Handler getWindowHandler() -> getWindowHandler
    void displayWindow(boolean) -> displayWindow
    void sendDisplayWindowMessage(boolean) -> sendDisplayWindowMessage
    void init() -> init
    void initFloat() -> initFloat
    void loadTheme() -> loadTheme
    void openPanel() -> openPanel
    void closePanel() -> closePanel
    boolean hasWindow() -> hasWindow
    android.content.Context getContext() -> getContext
    void onClosePreviewWindow() -> onClosePreviewWindow
    void onClosePreviewWindowNoNotify() -> onClosePreviewWindowNoNotify
    void access$0(cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow) -> access$0
    int access$1(cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow) -> access$1
    void access$2(cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow,int) -> access$2
    android.view.WindowManager$LayoutParams access$3(cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow) -> access$3
    double access$4(cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow) -> access$4
    boolean access$5(cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow) -> access$5
    android.view.View access$6(cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow) -> access$6
    cn.ingenic.indroidsync.camera.CameraWindowService access$7(cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow) -> access$7
cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow$1 -> cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow$1:
    cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow this$1 -> this$1
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow$2 -> cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow$2:
    cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow this$1 -> this$1
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow$3 -> cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow$3:
    cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow this$1 -> this$1
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow$4 -> cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow$4:
    float startX -> startX
    float startY -> startY
    int originX -> originX
    int originY -> originY
    long downTime -> downTime
    long upTime -> upTime
    long pDownTime -> pDownTime
    long pUpTime -> pUpTime
    float difY -> difY
    float difX -> difX
    float pDifX -> pDifX
    float pDifY -> pDifY
    int mode -> mode
    cn.ingenic.indroidsync.camera.CameraWindowService$PreviewWindow this$1 -> this$1
    android.view.View val$header -> val$header
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void updateLocation(android.view.View,float,float) -> updateLocation
cn.ingenic.indroidsync.camera.ControlPanel -> cn.ingenic.indroidsync.camera.ControlPanel:
    cn.ingenic.indroidsync.camera.ControlPanel$Listener listener -> listener
    android.widget.ImageView closeView -> closeView
    void setListener(cn.ingenic.indroidsync.camera.ControlPanel$Listener) -> setListener
    android.view.View getView() -> getView
    void onClick(android.view.View) -> onClick
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
cn.ingenic.indroidsync.camera.ControlPanel$Listener -> cn.ingenic.indroidsync.camera.ControlPanel$Listener:
    void onClosePreviewWindow() -> onClosePreviewWindow
cn.ingenic.indroidsync.camera.Exif -> cn.ingenic.indroidsync.camera.Exif:
    java.lang.String TAG -> TAG
    int getOrientation(byte[]) -> getOrientation
    int pack(byte[],int,int,boolean) -> pack
cn.ingenic.indroidsync.contactslite.ContactsLiteMidSrcContentProvider -> cn.ingenic.indroidsync.contactslite.ContactsLiteMidSrcContentProvider:
    cn.ingenic.indroidsync.services.SyncModule getSyncModule() -> getSyncModule
cn.ingenic.indroidsync.contactslite.ContactsLiteMidSrcManager -> cn.ingenic.indroidsync.contactslite.ContactsLiteMidSrcManager:
    cn.ingenic.indroidsync.services.mid.MidTableManager sInstance -> sInstance
    android.content.Context mContext -> mContext
    java.lang.String TAG -> TAG
    java.util.Map mCacheContacts -> mCacheContacts
    java.lang.String[] CONTACT_PROJECTION -> CONTACT_PROJECTION
    java.lang.String[] RAWCONTACTS_MINIMUM_PROJECTION -> RAWCONTACTS_MINIMUM_PROJECTION
    java.lang.String[] CONTACTS_MINIMUM_DATA -> CONTACTS_MINIMUM_DATA
    cn.ingenic.indroidsync.services.mid.MidTableManager getInstance(android.content.Context,cn.ingenic.indroidsync.services.SyncModule) -> getInstance
    android.net.Uri[] getSrcObservedUris() -> getSrcObservedUris
    java.util.List getSrcColumnList() -> getSrcColumnList
    android.database.Cursor getSrcDataCursor(java.util.Set) -> getSrcDataCursor
    java.util.Map readContacts(java.util.Collection) -> readContacts
    java.lang.String buildSelectionByIdList(java.lang.String,java.util.List) -> buildSelectionByIdList
    cn.ingenic.contactslite.common.ContactPacket$DataEntity getDataEntity(android.database.Cursor) -> getDataEntity
    java.lang.String buildSelectionByLookupKeyList(java.util.Collection) -> buildSelectionByLookupKeyList
    void fillSrcSyncData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor) -> fillSrcSyncData
    cn.ingenic.indroidsync.services.mid.KeyColumn getSrcKeyColumn() -> getSrcKeyColumn
    cn.ingenic.indroidsync.services.SyncData[] appendSrcSyncData(java.util.Set,android.database.Cursor) -> appendSrcSyncData
    java.lang.String getMidAuthorityName() -> getMidAuthorityName
cn.ingenic.indroidsync.contactslite.ContactsLiteMidSrcManager$ContactsLiteMidTable -> cn.ingenic.indroidsync.contactslite.ContactsLiteMidSrcManager$ContactsLiteMidTable:
    java.lang.String LOOKUP_KEY -> LOOKUP_KEY
    java.lang.String VERSION -> VERSION
    cn.ingenic.indroidsync.contactslite.ContactsLiteMidSrcManager this$0 -> this$0
cn.ingenic.indroidsync.contactslite.ContactsLiteModule -> cn.ingenic.indroidsync.contactslite.ContactsLiteModule:
    java.lang.String MODULE_NAME -> MODULE_NAME
    java.lang.String TAG -> TAG
    cn.ingenic.indroidsync.services.SyncModule sInstance -> sInstance
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.services.SyncModule getInstance(android.content.Context) -> getInstance
    void onCreate() -> onCreate
    cn.ingenic.indroidsync.services.mid.MidTableManager getMidTableManager() -> getMidTableManager
    android.content.Context getcontext() -> getcontext
cn.ingenic.indroidsync.contactsms.contacts.ContactColumn -> cn.ingenic.indroidsync.contactsms.contacts.ContactColumn:
    cn.ingenic.indroidsync.contactsms.contacts.ContactColumn phonekey -> phonekey
    cn.ingenic.indroidsync.contactsms.contacts.ContactColumn watchkey -> watchkey
    cn.ingenic.indroidsync.contactsms.contacts.ContactColumn onevcard -> onevcard
    cn.ingenic.indroidsync.contactsms.contacts.ContactColumn tag -> tag
    cn.ingenic.indroidsync.contactsms.contacts.ContactColumn address -> address
    cn.ingenic.indroidsync.contactsms.contacts.ContactColumn delete -> delete
    java.lang.Class mClass -> mClass
    cn.ingenic.indroidsync.contactsms.contacts.ContactColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.contactsms.contacts.ContactColumn[] values() -> values
    cn.ingenic.indroidsync.contactsms.contacts.ContactColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.contactsms.contacts.ContactModule -> cn.ingenic.indroidsync.contactsms.contacts.ContactModule:
    java.lang.String CONTACT -> CONTACT
    android.content.Context mContext -> mContext
    java.lang.String TAG -> TAG
    java.lang.String DEBUG -> DEBUG
    boolean debug -> debug
    boolean serviceHaveStarted -> serviceHaveStarted
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
    void onCreate(android.content.Context) -> onCreate
    void onClear(java.lang.String) -> onClear
    void clear() -> clear
    void onInit() -> onInit
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    void onModeChanged(int) -> onModeChanged
    void startService() -> startService
    void stopService() -> stopService
    void init(boolean) -> init
    int getMode() -> getMode
    void onFeatureStateChange(java.lang.String,boolean) -> onFeatureStateChange
cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction -> cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction:
    java.lang.String TAG -> TAG
    java.lang.String tag -> tag
    java.lang.String DEBUG -> DEBUG
    boolean debug -> debug
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB db -> db
    cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction$ExecuteDatasHandler datasHandler -> datasHandler
    cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction$ExecuteDatasHandler Instance -> Instance
    android.os.HandlerThread thread -> thread
    java.lang.String PHONE_ADDRESS -> PHONE_ADDRESS
    java.lang.String ADDRESS -> ADDRESS
    void onStart(java.util.ArrayList) -> onStart
    void handlerSendMessage(int,java.util.ArrayList) -> handlerSendMessage
    cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction$ExecuteDatasHandler getExecuteDatasHandler() -> getExecuteDatasHandler
    java.lang.String getLocalPhoneAddress(android.content.Context) -> getLocalPhoneAddress
    void executeNOConnectDelete(java.util.ArrayList) -> executeNOConnectDelete
    java.util.ArrayList executeWatchInsert(java.util.ArrayList) -> executeWatchInsert
    void executeWatchDelete(java.util.ArrayList) -> executeWatchDelete
    java.util.ArrayList executeWatchUpdate(java.util.ArrayList) -> executeWatchUpdate
    void phoneTag(java.util.ArrayList) -> phoneTag
    void phoneDelete(java.util.ArrayList) -> phoneDelete
    void executeWatchKey(java.util.ArrayList) -> executeWatchKey
    void changesShowToContacts(int,int,java.lang.String) -> changesShowToContacts
    void sendContactsList(java.util.ArrayList) -> sendContactsList
    java.util.ArrayList access$0(cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction,java.util.ArrayList) -> access$0
    void access$1(cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction,java.util.ArrayList) -> access$1
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB access$2(cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction) -> access$2
    android.content.Context access$3(cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction) -> access$3
    java.util.ArrayList access$4(cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction,java.util.ArrayList) -> access$4
    void access$5(cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction,java.util.ArrayList) -> access$5
    void access$6(cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction,java.util.ArrayList) -> access$6
    void access$7(cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction,java.util.ArrayList) -> access$7
    void access$8(cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction,java.util.ArrayList) -> access$8
cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction$ExecuteDatasHandler -> cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction$ExecuteDatasHandler:
    cn.ingenic.indroidsync.contactsms.contacts.ContactTransaction this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.contactsms.contacts.ParseOneContact -> cn.ingenic.indroidsync.contactsms.contacts.ParseOneContact:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String oneVCard -> oneVCard
    android.content.Context mContext -> mContext
    int VCARD_VERSION_V21 -> VCARD_VERSION_V21
    int VCARD_VERSION_V30 -> VCARD_VERSION_V30
    com.android.vcard.VCardParser mVCardParser -> mVCardParser
    java.lang.String start() -> start
    java.lang.String getLookupKey(android.content.ContentResolver,android.net.Uri) -> getLookupKey
    cn.ingenic.indroidsync.contactsms.contacts.ParseOneContact$ImportRequest constructImportRequest(byte[]) -> constructImportRequest
    boolean readOneVCard(java.io.InputStream,int,java.lang.String,com.android.vcard.VCardInterpreter,int) -> readOneVCard
cn.ingenic.indroidsync.contactsms.contacts.ParseOneContact$ImportRequest -> cn.ingenic.indroidsync.contactsms.contacts.ParseOneContact$ImportRequest:
    byte[] data -> data
    int estimatedVCardType -> estimatedVCardType
    java.lang.String estimatedCharset -> estimatedCharset
    int vcardVersion -> vcardVersion
    int entryCount -> entryCount
    cn.ingenic.indroidsync.contactsms.contacts.ParseOneContact this$0 -> this$0
cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService -> cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService:
    java.lang.String TAG -> TAG
    java.lang.String tag -> tag
    java.lang.String DEBUG -> DEBUG
    boolean debug -> debug
    int INSERT_CONTACT_START -> INSERT_CONTACT_START
    int CHANGE_CONTACT -> CHANGE_CONTACT
    int CONTACT_LISTENER -> CONTACT_LISTENER
    int DELAY_MESSAGE -> DELAY_MESSAGE
    int REMOVE_DELAY_MESSAGE -> REMOVE_DELAY_MESSAGE
    int CAN_LOADING_ALL -> CAN_LOADING_ALL
    int CAN_GET_WATCH_NEED -> CAN_GET_WATCH_NEED
    long listener_time -> listener_time
    long dalay_time -> dalay_time
    long DELAY_TIME -> DELAY_TIME
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ExecuteContactsHandler contactHandler -> contactHandler
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ExecuteDelayHandler delayHandler -> delayHandler
    android.database.ContentObserver mContactChangeObserver -> mContactChangeObserver
    boolean whenSavePowerModeUpdate -> whenSavePowerModeUpdate
    int SEND_ALL -> SEND_ALL
    int SEND_CHANGE_INSERT -> SEND_CHANGE_INSERT
    int SEND_CHANGE_DELETE -> SEND_CHANGE_DELETE
    int SEND_CHANGE_UPDATE -> SEND_CHANGE_UPDATE
    int SEND_SAVE_POWER_MESSAGE -> SEND_SAVE_POWER_MESSAGE
    int SEND_HAVE_SEND_SAVE_POWER_DATAS_MESSAGE -> SEND_HAVE_SEND_SAVE_POWER_DATAS_MESSAGE
    int SEND_WATCH_NEEDED_DATAS -> SEND_WATCH_NEEDED_DATAS
    int START_GAT_ALL_MESSAGE -> START_GAT_ALL_MESSAGE
    int STOP_GET_ALL_MESSAGE -> STOP_GET_ALL_MESSAGE
    int START_GET_ALL_CHANGE_MESSAGE -> START_GET_ALL_CHANGE_MESSAGE
    int STOP_GET_ALL_CHANGE_MESSAGE -> STOP_GET_ALL_CHANGE_MESSAGE
    int NO_DATAS_CHANGES -> NO_DATAS_CHANGES
    int DELAY_TIME_MESSAGE -> DELAY_TIME_MESSAGE
    boolean Connect_sync -> Connect_sync
    boolean canGetNeedDatas -> canGetNeedDatas
    android.os.HandlerThread responseThread -> responseThread
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ResponseHandler mResponseSend -> mResponseSend
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB db -> db
    android.content.BroadcastReceiver mBluetoothStateReceiver -> mBluetoothStateReceiver
    boolean canLoadAll -> canLoadAll
    int SYNC_NO_CHANGE -> SYNC_NO_CHANGE
    int SYNC_CHECK_CHANGED -> SYNC_CHECK_CHANGED
    int SYNC_ADD -> SYNC_ADD
    int SYNC_DELETE -> SYNC_DELETE
    int SYNC_UPDATE -> SYNC_UPDATE
    int SYNC_ALL -> SYNC_ALL
    int SYNC_STATUS -> SYNC_STATUS
    java.util.ArrayList SEND_LIST -> SEND_LIST
    int codeNumber -> codeNumber
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void ContactSync() -> ContactSync
    java.lang.String getAddress() -> getAddress
    void sendMessage(int) -> sendMessage
    void Stop() -> Stop
    void insertSyncDB() -> insertSyncDB
    void finishLoadAll() -> finishLoadAll
    java.lang.String getOneContactVcard(int) -> getOneContactVcard
    java.util.ArrayList getWatchNeedDatas() -> getWatchNeedDatas
    void returnCheckContactFailed(java.util.ArrayList) -> returnCheckContactFailed
    void getChange() -> getChange
    void onChanged(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> onChanged
    void executeList(java.util.ArrayList,int) -> executeList
    void doInsert(java.util.ArrayList) -> doInsert
    void doDelete(java.util.ArrayList) -> doDelete
    void doUpdate() -> doUpdate
    int getRawContactVersion(int) -> getRawContactVersion
    void sendContactsList(java.util.ArrayList,int) -> sendContactsList
    void deleteReturnFailed(java.util.ArrayList) -> deleteReturnFailed
    void sendTitleMessage(java.lang.String,int) -> sendTitleMessage
    boolean access$0(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService) -> access$0
    java.lang.String access$1(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService) -> access$1
    void access$2(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService,boolean) -> access$2
    void access$3(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService,boolean) -> access$3
    boolean access$4() -> access$4
    void access$5(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService) -> access$5
    void access$6(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService,int) -> access$6
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ExecuteContactsHandler access$7(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService) -> access$7
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ExecuteDelayHandler access$8(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService) -> access$8
    void access$9(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService) -> access$9
    void access$10(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService) -> access$10
    java.util.ArrayList access$11(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService) -> access$11
    void access$12(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService,java.lang.String,int) -> access$12
    java.util.ArrayList access$13() -> access$13
    java.lang.String access$14(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService) -> access$14
    void access$15(boolean) -> access$15
    void access$16(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService,java.util.ArrayList) -> access$16
    void access$17(cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService,java.util.ArrayList) -> access$17
cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$1 -> cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$1:
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ContactChangeObserver -> cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ContactChangeObserver:
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService this$0 -> this$0
    void onChange(boolean) -> onChange
cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ExecuteContactsHandler -> cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ExecuteContactsHandler:
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ExecuteDelayHandler -> cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ExecuteDelayHandler:
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ResponseHandler -> cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService$ResponseHandler:
    cn.ingenic.indroidsync.contactsms.contacts.phone.ContactSyncService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.contactsms.contacts.provider.ContactSyncDatabaseHelper -> cn.ingenic.indroidsync.contactsms.contacts.provider.ContactSyncDatabaseHelper:
    java.lang.String CONTACT_SYNC_DATABASE -> CONTACT_SYNC_DATABASE
    int DATABASE_VERSION -> DATABASE_VERSION
    android.database.sqlite.SQLiteDatabase db -> db
    cn.ingenic.indroidsync.contactsms.contacts.provider.ContactSyncDatabaseHelper sSingleton -> sSingleton
    cn.ingenic.indroidsync.contactsms.contacts.provider.ContactSyncDatabaseHelper getInstance(android.content.Context) -> getInstance
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.ingenic.indroidsync.contactsms.contacts.provider.ContactSyncDatabaseHelper$ContactColumns -> cn.ingenic.indroidsync.contactsms.contacts.provider.ContactSyncDatabaseHelper$ContactColumns:
    java.lang.String PHONELOOKUPKEY -> PHONELOOKUPKEY
    java.lang.String WATCHLOOKUPKEY -> WATCHLOOKUPKEY
    java.lang.String VERSION -> VERSION
    java.lang.String SYNC_DELETE -> SYNC_DELETE
cn.ingenic.indroidsync.contactsms.contacts.provider.ContactSyncDatabaseHelper$Tables -> cn.ingenic.indroidsync.contactsms.contacts.provider.ContactSyncDatabaseHelper$Tables:
    java.lang.String CONTACTSYNC -> CONTACTSYNC
cn.ingenic.indroidsync.contactsms.contacts.provider.ContactsSyncProvider -> cn.ingenic.indroidsync.contactsms.contacts.provider.ContactsSyncProvider:
    cn.ingenic.indroidsync.contactsms.contacts.provider.ContactSyncDatabaseHelper contactSyncHelper -> contactSyncHelper
    android.content.Context mContext -> mContext
    java.lang.String getType(android.net.Uri) -> getType
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    long insert(android.content.ContentValues) -> insert
    long insert(java.lang.String,java.lang.String,int) -> insert
    boolean onCreate() -> onCreate
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    void updateForWatchLookupKey(java.lang.String,android.content.ContentValues) -> updateForWatchLookupKey
cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB -> cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB:
    cn.ingenic.indroidsync.contactsms.contacts.provider.ContactsSyncProvider contactProvider -> contactProvider
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$ContactDB mContactDB -> mContactDB
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$SyncDB mSyncDB -> mSyncDB
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$WatchContactDB mWatchContactDB -> mWatchContactDB
    void CreateSyncDB(android.content.Context) -> CreateSyncDB
    cn.ingenic.indroidsync.contactsms.contacts.provider.ContactsSyncProvider getContactSyncProvider(android.content.Context) -> getContactSyncProvider
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$ContactDB getContactDB(android.content.Context) -> getContactDB
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$SyncDB getSyncDB() -> getSyncDB
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$WatchContactDB getWatchContactDB(android.content.Context) -> getWatchContactDB
    cn.ingenic.indroidsync.contactsms.contacts.provider.ContactsSyncProvider access$0() -> access$0
cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$ContactDB -> cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$ContactDB:
    android.content.Context mContext -> mContext
    java.lang.String[] LOCALPROJECTION -> LOCALPROJECTION
    java.lang.String[] LOCALID -> LOCALID
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB this$0 -> this$0
    android.database.Cursor queryAllDB() -> queryAllDB
    int getLocalCursorId(android.database.Cursor) -> getLocalCursorId
    java.lang.String getLocalCursorLookupKey(android.database.Cursor) -> getLocalCursorLookupKey
    android.database.Cursor queryRawContactVersion(int) -> queryRawContactVersion
    android.database.Cursor queryLocalContactId(java.lang.String) -> queryLocalContactId
    void deleteContactByPhoneKey(java.lang.String) -> deleteContactByPhoneKey
cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$DB -> cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$DB:
    android.database.Cursor queryAllDB() -> queryAllDB
cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$SyncDB -> cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$SyncDB:
    java.lang.String[] projection -> projection
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB this$0 -> this$0
    android.database.Cursor queryAllDB() -> queryAllDB
    void deleteAll() -> deleteAll
    android.database.Cursor querySyncContactByPhoneKey(java.lang.String) -> querySyncContactByPhoneKey
    android.database.Cursor querySyncContactByWatchKey(java.lang.String) -> querySyncContactByWatchKey
    void updateContactByPhoneKey(java.lang.String,java.lang.String,int) -> updateContactByPhoneKey
    void updateContactByPhoneKey(java.lang.String,java.lang.String) -> updateContactByPhoneKey
    void deleteSyncContactByPhonekey(java.lang.String) -> deleteSyncContactByPhonekey
    void addDeleteFailedDatas(java.lang.String) -> addDeleteFailedDatas
    void insertDB(java.lang.String,java.lang.String,int) -> insertDB
    void updataWatchKey(java.lang.String,java.lang.String) -> updataWatchKey
cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$WatchContactDB -> cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB$WatchContactDB:
    android.content.Context mContext -> mContext
    java.lang.String[] GETWATCHKEYPROJECTION -> GETWATCHKEYPROJECTION
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB this$0 -> this$0
    android.database.Cursor queryAll() -> queryAll
    void deleteAll() -> deleteAll
    void deleteOneContactByWatchKey(java.lang.String) -> deleteOneContactByWatchKey
    void deleteOneContactByPhoneKey(java.lang.String) -> deleteOneContactByPhoneKey
    android.database.Cursor getWatchKeyCursor(int) -> getWatchKeyCursor
    void updatePhoneKey(java.lang.String,java.lang.String) -> updatePhoneKey
    android.database.Cursor queryHaveDeleteContacts() -> queryHaveDeleteContacts
cn.ingenic.indroidsync.contactsms.manager.ContactAndSms2Columns -> cn.ingenic.indroidsync.contactsms.manager.ContactAndSms2Columns:
    java.lang.String SYNC_CONNECTIVITY_TRUE_ACTION -> SYNC_CONNECTIVITY_TRUE_ACTION
    java.lang.String SYNC_CONNECTIVITY_FALSE_ACTION -> SYNC_CONNECTIVITY_FALSE_ACTION
    java.lang.String MODE_CHANGED_ACTION -> MODE_CHANGED_ACTION
    java.lang.String SAME_PHONE_ACTION -> SAME_PHONE_ACTION
    java.lang.String DIFF_PHONE_ACTION -> DIFF_PHONE_ACTION
    java.lang.String MANAGER_SEND_ADDRESS -> MANAGER_SEND_ADDRESS
    java.lang.String DIFF_PHONE_SEND_ADDRESS -> DIFF_PHONE_SEND_ADDRESS
    java.lang.String insert_watch_tag -> insert_watch_tag
    java.lang.String delete_watch_tag -> delete_watch_tag
    java.lang.String update_watch_tag -> update_watch_tag
    int FOR_RESPONSE -> FOR_RESPONSE
    java.lang.String INIT_MESSAGE -> INIT_MESSAGE
cn.ingenic.indroidsync.contactsms.manager.ContactAndSms2Columns$ContactColumn -> cn.ingenic.indroidsync.contactsms.manager.ContactAndSms2Columns$ContactColumn:
    java.lang.String WATCH_TAG_INSERT_ALL -> WATCH_TAG_INSERT_ALL
    java.lang.String SEND_WATCH_NEED_DATAS -> SEND_WATCH_NEED_DATAS
    java.lang.String WATCH_TAG_INSERT -> WATCH_TAG_INSERT
    java.lang.String WATCH_TAG_DELETE -> WATCH_TAG_DELETE
    java.lang.String WATCH_TAG_UPDATE -> WATCH_TAG_UPDATE
    java.lang.String SEND_ADDRESS -> SEND_ADDRESS
    java.lang.String PHONE_TAG -> PHONE_TAG
    java.lang.String SEND_WATCHKEY_MESSAGE -> SEND_WATCHKEY_MESSAGE
    int FOR_SEND_WATCHKEY_MESSAGE -> FOR_SEND_WATCHKEY_MESSAGE
    java.lang.String SEND_PHONEKEY_ONLY -> SEND_PHONEKEY_ONLY
    java.lang.String SYNC_CONTACTS_MESSAGE -> SYNC_CONTACTS_MESSAGE
    java.lang.String CONTACT_SYNC_ACTION -> CONTACT_SYNC_ACTION
    java.lang.String PHONE_DELETE -> PHONE_DELETE
    java.lang.String PHONE_HAVE_INSERT_WATCH_LOOKUPKEY -> PHONE_HAVE_INSERT_WATCH_LOOKUPKEY
    java.lang.String SAME_PHONE -> SAME_PHONE
    java.lang.String SAME_PHONE_DATAS -> SAME_PHONE_DATAS
    java.lang.String DIFF_PHONE -> DIFF_PHONE
    java.lang.String SAVE_POWER_MESSAGE -> SAVE_POWER_MESSAGE
    java.lang.String START_INSERT_ALL_MESSAGE -> START_INSERT_ALL_MESSAGE
    java.lang.String STOP_INSERT_ALL_MESSAGE -> STOP_INSERT_ALL_MESSAGE
    java.lang.String START_INSERT_CHANGE_MESSAGE -> START_INSERT_CHANGE_MESSAGE
    java.lang.String STOP_INSERT_CHANGE_MESSAGE -> STOP_INSERT_CHANGE_MESSAGE
    java.lang.String CONTACT_SYNC_NO_DATAS_CHANGED_MESSAGE -> CONTACT_SYNC_NO_DATAS_CHANGED_MESSAGE
    java.lang.String CONTACT_WANT_DATAS -> CONTACT_WANT_DATAS
    java.lang.String PHONE_HAVE_SEND_CONTACTS -> PHONE_HAVE_SEND_CONTACTS
    java.lang.String SAVE_POWER_TO_RIGHT_AND_DATAS_CHANGED -> SAVE_POWER_TO_RIGHT_AND_DATAS_CHANGED
    java.lang.String SAVE_POWER_TO_RIGHT_WANT_NEW_DATAS_ACTION -> SAVE_POWER_TO_RIGHT_WANT_NEW_DATAS_ACTION
    java.lang.String CONTACT_DELAY_TIME_MESSAGE -> CONTACT_DELAY_TIME_MESSAGE
    int FOR_WATCH_INSERT -> FOR_WATCH_INSERT
    int FOR_WATCH_UPDATE -> FOR_WATCH_UPDATE
    int FOR_WATCH_DELETE -> FOR_WATCH_DELETE
    int FOR_PHONE_DELETE -> FOR_PHONE_DELETE
    int FOR_PHONE_TAG -> FOR_PHONE_TAG
    int FOR_RESPONSE -> FOR_RESPONSE
    int FOR_WATCH_INSERT_ALL -> FOR_WATCH_INSERT_ALL
    int FOR_SEND_ADDRESS -> FOR_SEND_ADDRESS
    int FOR_SAME_PHONE_DATAS -> FOR_SAME_PHONE_DATAS
    int For_SAME_PHONE -> For_SAME_PHONE
    int FOR_SAVE_POWER_MESSAGE -> FOR_SAVE_POWER_MESSAGE
    int FOR_CONTACT_WANT_DATAS -> FOR_CONTACT_WANT_DATAS
    int FOR_PHONE_HAVE_SEND_CONTACTS -> FOR_PHONE_HAVE_SEND_CONTACTS
    int FOR_SAVE_POWER_TO_RIGHT_AND_DATAS_CHANGED -> FOR_SAVE_POWER_TO_RIGHT_AND_DATAS_CHANGED
    int FOR_SYNC_CONTACTS_MESSAGE -> FOR_SYNC_CONTACTS_MESSAGE
    java.lang.String ToContactReceiverAction -> ToContactReceiverAction
    java.lang.String WATCH_SEND_INIT_CONTACT_MESSAGE -> WATCH_SEND_INIT_CONTACT_MESSAGE
    java.lang.String SAVE_POWER_MESSAGE_ACTION -> SAVE_POWER_MESSAGE_ACTION
    java.lang.String CONTACT_WANT_UPDATE_DATAS_ACTION -> CONTACT_WANT_UPDATE_DATAS_ACTION
    java.lang.String UPDATE_ACTION -> UPDATE_ACTION
    java.lang.String PHONE_HAVE_SEND_CONTACTS_ACTION -> PHONE_HAVE_SEND_CONTACTS_ACTION
    java.lang.String CATCH_ALL_COTNACTS_DATAS_ACTION -> CATCH_ALL_COTNACTS_DATAS_ACTION
    java.lang.String SAVE_POWER_TO_RIGHT_AND_DATAS_CHANGED_ACTION -> SAVE_POWER_TO_RIGHT_AND_DATAS_CHANGED_ACTION
    cn.ingenic.indroidsync.contactsms.manager.ContactAndSms2Columns this$0 -> this$0
cn.ingenic.indroidsync.contactsms.manager.ContactAndSms2Columns$SmsColumn -> cn.ingenic.indroidsync.contactsms.manager.ContactAndSms2Columns$SmsColumn:
    java.lang.String SEND_NEW_SMS -> SEND_NEW_SMS
    java.lang.String SEND_ADDRESS_SMS2 -> SEND_ADDRESS_SMS2
    java.lang.String CATCH_ALL_SMS_ACTION -> CATCH_ALL_SMS_ACTION
    int FOR_SEND_ADDRESS_SMS2 -> FOR_SEND_ADDRESS_SMS2
    java.lang.String SMS_SAME_PHONE_TAG -> SMS_SAME_PHONE_TAG
    java.lang.String SMS_DIFF_PHONE_TAG -> SMS_DIFF_PHONE_TAG
    java.lang.String SMS_INSERT_TAG -> SMS_INSERT_TAG
    java.lang.String SMS_SEND_THREAD_DATAS -> SMS_SEND_THREAD_DATAS
    int FOR_SMS_INSERT_TAG -> FOR_SMS_INSERT_TAG
    java.lang.String SMS_UPDATE_TAG -> SMS_UPDATE_TAG
    int FOR_SMS_UPDATE_TAG -> FOR_SMS_UPDATE_TAG
    java.lang.String SMS_DELETE_TAG -> SMS_DELETE_TAG
    int FOR_SMS_DELETE_TAG -> FOR_SMS_DELETE_TAG
    java.lang.String SMS_INSERT_ALL_TAG -> SMS_INSERT_ALL_TAG
    java.lang.String SMS_CHECK_MESSAGE -> SMS_CHECK_MESSAGE
    java.lang.String SMS_WANT_SYNC_DATAS_MESSAGE -> SMS_WANT_SYNC_DATAS_MESSAGE
    int FOR_SMS_WANT_SYNC_DATAS_MESSAGE -> FOR_SMS_WANT_SYNC_DATAS_MESSAGE
    java.lang.String SMS_SYNC_NO_DATAS_CHANGED_MESSAGE -> SMS_SYNC_NO_DATAS_CHANGED_MESSAGE
    java.lang.String SMS_SYNC_ACTION -> SMS_SYNC_ACTION
    int FOR_SMS_INSERT_ALL_TAG -> FOR_SMS_INSERT_ALL_TAG
    java.lang.String RESPONSE_PHONE -> RESPONSE_PHONE
    int FOR_RESPONSE_PHONE -> FOR_RESPONSE_PHONE
    java.lang.String WATCH_DELETE_SMS_TAG -> WATCH_DELETE_SMS_TAG
    int FOR_WATCH_DELETE_SMS_TAG -> FOR_WATCH_DELETE_SMS_TAG
    java.lang.String SMSAPP_WANT_GET_NEW_DATAS_TAG -> SMSAPP_WANT_GET_NEW_DATAS_TAG
    int FOR_SMSAPP_WANT_GET_NEW_DATAS_TAG -> FOR_SMSAPP_WANT_GET_NEW_DATAS_TAG
    java.lang.String SEND_READ -> SEND_READ
    int FOR_SEND_READ -> FOR_SEND_READ
    java.lang.String UPDATE_RESPONSE_TAG -> UPDATE_RESPONSE_TAG
    int FOR_UPDATE_RESPONSE_TAG -> FOR_UPDATE_RESPONSE_TAG
    java.lang.String START_INSERT_ALL_SMS_MESSAGE -> START_INSERT_ALL_SMS_MESSAGE
    java.lang.String STOP_INSERT_ALL_SMS_MESSAGE -> STOP_INSERT_ALL_SMS_MESSAGE
    java.lang.String START_GET_SMS_CHANGE_MESSAGE -> START_GET_SMS_CHANGE_MESSAGE
    java.lang.String STOP_GET_SMS_CHANGE_MESSAGE -> STOP_GET_SMS_CHANGE_MESSAGE
    java.lang.String WATCH_SEND_INIT_MESSAGE -> WATCH_SEND_INIT_MESSAGE
    java.lang.String SMS_SAVE_POWER_CHANGED_MESSAGE -> SMS_SAVE_POWER_CHANGED_MESSAGE
    java.lang.String SAVE_POWER_WATCH_WANT_CHANGED_DATAS -> SAVE_POWER_WATCH_WANT_CHANGED_DATAS
    java.lang.String SMS_PHONE_HAVE_SEND_CHANGED_DATAS -> SMS_PHONE_HAVE_SEND_CHANGED_DATAS
    int FOR_SMS_PHONE_HAVE_SEND_CHANGED_DATAS -> FOR_SMS_PHONE_HAVE_SEND_CHANGED_DATAS
    int FOR_SMS_SAVE_POWER_MESSAGE -> FOR_SMS_SAVE_POWER_MESSAGE
    java.lang.String SMS_DELAY_TIME_MESSAGE -> SMS_DELAY_TIME_MESSAGE
    java.lang.String SMS_SAME_PHONE_ACTION -> SMS_SAME_PHONE_ACTION
    java.lang.String SMS_DIFF_PHONE_ACTION -> SMS_DIFF_PHONE_ACTION
    java.lang.String SMS_SAVE_POWER_CHANGED_MESSAGE_ACTION -> SMS_SAVE_POWER_CHANGED_MESSAGE_ACTION
    java.lang.String SMS_WANT_GET_NEW_DATAS_ACTION -> SMS_WANT_GET_NEW_DATAS_ACTION
    java.lang.String SMS_WANT_DATAS_ACTION -> SMS_WANT_DATAS_ACTION
    java.lang.String SMS_PHONE_HAVE_SEND_CHANGED_DATAS_ACTION -> SMS_PHONE_HAVE_SEND_CHANGED_DATAS_ACTION
    java.lang.String SMS_SAVE_POWER_TO_RIGHT_AND_DATAS_CHANGED_ACTION -> SMS_SAVE_POWER_TO_RIGHT_AND_DATAS_CHANGED_ACTION
    java.lang.String SMS_SHOW_PROCESSBAR_ACTION -> SMS_SHOW_PROCESSBAR_ACTION
    java.lang.String SMS_SHOW_UPDATE_THREAD_ACTION -> SMS_SHOW_UPDATE_THREAD_ACTION
    java.lang.String SMS_HAVE_DELETE_ACTION -> SMS_HAVE_DELETE_ACTION
    java.lang.String WATCH_RESPONSE_SMS_ACTION -> WATCH_RESPONSE_SMS_ACTION
    java.lang.String SMS_SEND_READ_ACTION -> SMS_SEND_READ_ACTION
    cn.ingenic.indroidsync.contactsms.manager.ContactAndSms2Columns this$0 -> this$0
cn.ingenic.indroidsync.contactsms.manager.ManagerColumns -> cn.ingenic.indroidsync.contactsms.manager.ManagerColumns:
    cn.ingenic.indroidsync.contactsms.manager.ManagerColumns tag -> tag
    cn.ingenic.indroidsync.contactsms.manager.ManagerColumns address -> address
    cn.ingenic.indroidsync.contactsms.manager.ManagerColumns contactsize -> contactsize
    cn.ingenic.indroidsync.contactsms.manager.ManagerColumns smssize -> smssize
    java.lang.Class mClass -> mClass
    cn.ingenic.indroidsync.contactsms.manager.ManagerColumns[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.contactsms.manager.ManagerColumns[] values() -> values
    cn.ingenic.indroidsync.contactsms.manager.ManagerColumns valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.contactsms.manager.ManagerModule -> cn.ingenic.indroidsync.contactsms.manager.ManagerModule:
    java.lang.String MANAGER -> MANAGER
    android.content.Context mContext -> mContext
    java.lang.String TAG -> TAG
    java.lang.String myTag -> myTag
    java.lang.String PHONE_ADDRESS -> PHONE_ADDRESS
    java.lang.String ADDRESS -> ADDRESS
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
    void onCreate(android.content.Context) -> onCreate
    void onClear(java.lang.String) -> onClear
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    java.lang.String getLocalPhoneAddress(android.content.Context) -> getLocalPhoneAddress
    void onModeChanged(int) -> onModeChanged
    int getMode() -> getMode
    void onFeatureStateChange(java.lang.String,boolean) -> onFeatureStateChange
cn.ingenic.indroidsync.contactsms.manager.ManagerTransaction -> cn.ingenic.indroidsync.contactsms.manager.ManagerTransaction:
    java.lang.String PHONE_ADDRESS -> PHONE_ADDRESS
    java.lang.String ADDRESS -> ADDRESS
    void onStart(java.util.ArrayList) -> onStart
    java.lang.String getPhoneAddress() -> getPhoneAddress
    void sendManagerList(java.lang.String) -> sendManagerList
    void setLocalPhoneAddress(java.lang.String,android.content.Context) -> setLocalPhoneAddress
cn.ingenic.indroidsync.contactsms.manager.SyncReceiver -> cn.ingenic.indroidsync.contactsms.manager.SyncReceiver:
    cn.ingenic.indroidsync.contactsms.contacts.provider.OperateDB db -> db
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB smsdb -> smsdb
    boolean hasConnectivity -> hasConnectivity
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void sendContactsList(java.util.ArrayList) -> sendContactsList
    void sendSmsList(java.util.ArrayList) -> sendSmsList
cn.ingenic.indroidsync.contactsms.sms2.Attribute -> cn.ingenic.indroidsync.contactsms.sms2.Attribute:
    android.net.Uri MMSSMS_CONTENT_URI -> MMSSMS_CONTENT_URI
    android.net.Uri SMS_CONTENT_URI -> SMS_CONTENT_URI
    android.net.Uri THREAD_CONTENT_URI -> THREAD_CONTENT_URI
    android.net.Uri THREAD_ID_CONTENT_URI -> THREAD_ID_CONTENT_URI
    android.content.Context mContext -> mContext
    android.telephony.TelephonyManager getTelephonyManager() -> getTelephonyManager
    android.net.Uri access$0() -> access$0
cn.ingenic.indroidsync.contactsms.sms2.Attribute$CanonicalAddressesColumns -> cn.ingenic.indroidsync.contactsms.sms2.Attribute$CanonicalAddressesColumns:
    java.lang.String _ID -> _ID
    java.lang.String ADDRESS -> ADDRESS
    cn.ingenic.indroidsync.contactsms.sms2.Attribute this$0 -> this$0
cn.ingenic.indroidsync.contactsms.sms2.Attribute$Sms -> cn.ingenic.indroidsync.contactsms.sms2.Attribute$Sms:
    java.lang.String _ID -> _ID
    java.lang.String TYPE -> TYPE
    java.lang.String THREAD_ID -> THREAD_ID
    java.lang.String ADDRESS -> ADDRESS
    java.lang.String PERSON_ID -> PERSON_ID
    java.lang.String DATE -> DATE
    java.lang.String DATE_SENT -> DATE_SENT
    java.lang.String READ -> READ
    java.lang.String SEEN -> SEEN
    java.lang.String STATUS -> STATUS
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String BODY -> BODY
    java.lang.String PERSON -> PERSON
    java.lang.String PROTOCOL -> PROTOCOL
    java.lang.String REPLY_PATH_PRESENT -> REPLY_PATH_PRESENT
    java.lang.String SERVICE_CENTER -> SERVICE_CENTER
    java.lang.String LOCKED -> LOCKED
    java.lang.String ERROR_CODE -> ERROR_CODE
    java.lang.String META_DATA -> META_DATA
    cn.ingenic.indroidsync.contactsms.sms2.Attribute this$0 -> this$0
cn.ingenic.indroidsync.contactsms.sms2.Attribute$SmsMessage -> cn.ingenic.indroidsync.contactsms.sms2.Attribute$SmsMessage:
    java.lang.String FORMAT_3GPP -> FORMAT_3GPP
    java.lang.String FORMAT_3GPP2 -> FORMAT_3GPP2
    cn.ingenic.indroidsync.contactsms.sms2.Attribute this$0 -> this$0
cn.ingenic.indroidsync.contactsms.sms2.Attribute$Threads -> cn.ingenic.indroidsync.contactsms.sms2.Attribute$Threads:
    java.lang.String _ID -> _ID
    java.lang.String DATE -> DATE
    java.lang.String RECIPIENT_IDS -> RECIPIENT_IDS
    java.lang.String SNIPPET -> SNIPPET
    long getOrCreateThreadId(android.content.Context,java.lang.String) -> getOrCreateThreadId
cn.ingenic.indroidsync.contactsms.sms2.Pdu -> cn.ingenic.indroidsync.contactsms.sms2.Pdu:
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.contactsms.sms2.Attribute mAttribute -> mAttribute
    java.lang.String RECEIVE_SMS_PERMISSION -> RECEIVE_SMS_PERMISSION
    java.lang.String RECEIVER_SMS_ACTION -> RECEIVER_SMS_ACTION
    void sendBroadCase(int,byte[][],int,int,long,java.lang.String,java.lang.String,int,int,java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String,int,java.lang.String) -> sendBroadCase
cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction -> cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction:
    cn.ingenic.indroidsync.contactsms.sms2.Pdu pdu -> pdu
    java.lang.String TAG -> TAG
    java.lang.String tag -> tag
    java.lang.String DEBUG -> DEBUG
    boolean debug -> debug
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB smsDB -> smsDB
    cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction$ExecuteDatasHandler Instance -> Instance
    android.os.HandlerThread thread -> thread
    cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction$ExecuteDatasHandler datasHandler -> datasHandler
    void onStart(java.util.ArrayList) -> onStart
    void handlerSendMessage(int,java.util.ArrayList) -> handlerSendMessage
    cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction$ExecuteDatasHandler getExecuteDatasHandler() -> getExecuteDatasHandler
    void updateResponseRead(java.util.ArrayList) -> updateResponseRead
    void executePhoneInsert(java.util.ArrayList) -> executePhoneInsert
    java.util.ArrayList executeWatchInsert(java.util.ArrayList) -> executeWatchInsert
    void executeWatchDelete(java.util.ArrayList) -> executeWatchDelete
    java.util.ArrayList executeWatchUpdate(java.util.ArrayList) -> executeWatchUpdate
    void executePhoneDelete(java.util.ArrayList) -> executePhoneDelete
    void changesShowToMms(int,int,java.lang.String) -> changesShowToMms
    void sendSmsList(java.util.ArrayList) -> sendSmsList
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB access$0(cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction) -> access$0
    android.content.Context access$1(cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction) -> access$1
    java.util.ArrayList access$2(cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction,java.util.ArrayList) -> access$2
    void access$3(cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction,int,java.util.ArrayList) -> access$3
    void access$4(cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction,java.util.ArrayList) -> access$4
    java.util.ArrayList access$5(cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction,java.util.ArrayList) -> access$5
    void access$6(cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction,java.util.ArrayList) -> access$6
    void access$7(cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction,java.util.ArrayList) -> access$7
    void access$8(cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction,java.util.ArrayList) -> access$8
cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction$ExecuteDatasHandler -> cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction$ExecuteDatasHandler:
    cn.ingenic.indroidsync.contactsms.sms2.Sms2Transaction this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 -> cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2:
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 phone_id -> phone_id
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 pdu -> pdu
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 tag -> tag
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 body -> body
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 date -> date
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 threadid -> threadid
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 subject -> subject
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 address -> address
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 phoneid -> phoneid
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 read -> read
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 errorcode -> errorcode
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 status -> status
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 phone_mac_address -> phone_mac_address
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 watch_id -> watch_id
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 type -> type
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 service_center -> service_center
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 data_send -> data_send
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 protocol -> protocol
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 send -> send
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 reply_path_present -> reply_path_present
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 threaddata -> threaddata
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 delete -> delete
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 phone_address -> phone_address
    java.lang.Class mClass -> mClass
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2[] values() -> values
    cn.ingenic.indroidsync.contactsms.sms2.SmsColumn2 valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.contactsms.sms2.SmsDB -> cn.ingenic.indroidsync.contactsms.sms2.SmsDB:
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB$LocalSmsDB mLocalSmsDB -> mLocalSmsDB
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB$SyncSmsDB mSyncSmsDB -> mSyncSmsDB
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB$WatchSmsDB mWatchSmsDB -> mWatchSmsDB
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncProvider mSmsSyncProvider -> mSmsSyncProvider
    java.lang.String DEBUG -> DEBUG
    boolean debug -> debug
    java.util.ArrayList exclude -> exclude
    java.util.ArrayList proList -> proList
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncProvider getSmsSyncProvider(android.content.Context) -> getSmsSyncProvider
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB$LocalSmsDB getLocalSmsDB(android.content.Context) -> getLocalSmsDB
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB$SyncSmsDB getSyncSmsDB() -> getSyncSmsDB
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB$WatchSmsDB getWatchSmsDB(android.content.Context) -> getWatchSmsDB
    boolean access$0(cn.ingenic.indroidsync.contactsms.sms2.SmsDB) -> access$0
    java.lang.String access$1(cn.ingenic.indroidsync.contactsms.sms2.SmsDB) -> access$1
cn.ingenic.indroidsync.contactsms.sms2.SmsDB$LocalSmsDB -> cn.ingenic.indroidsync.contactsms.sms2.SmsDB$LocalSmsDB:
    android.net.Uri sAllCanonical -> sAllCanonical
    java.lang.String UNREAD_SELECTION -> UNREAD_SELECTION
    android.net.Uri sAllThreadsUri -> sAllThreadsUri
    android.net.Uri uri -> uri
    android.content.Context mContext -> mContext
    java.lang.String[] SmsProjects1 -> SmsProjects1
    java.lang.String[] threadProject -> threadProject
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB this$0 -> this$0
    android.database.Cursor queryAllSms() -> queryAllSms
    java.lang.String[] getCurrentProject() -> getCurrentProject
    java.lang.String getAddress(java.lang.String) -> getAddress
    android.database.Cursor querySmsById(int) -> querySmsById
    void deleteOneSmsById(int) -> deleteOneSmsById
    void updateRead(java.lang.String) -> updateRead
    long getThreadData(java.lang.String) -> getThreadData
    android.database.Cursor getAllThreadDatas() -> getAllThreadDatas
    android.database.Cursor getCanonicalDatas() -> getCanonicalDatas
cn.ingenic.indroidsync.contactsms.sms2.SmsDB$SyncSmsDB -> cn.ingenic.indroidsync.contactsms.sms2.SmsDB$SyncSmsDB:
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncProvider smsSyncProvider -> smsSyncProvider
    java.lang.String[] WatchProjects -> WatchProjects
    java.lang.String[] PhoneProjects -> PhoneProjects
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB this$0 -> this$0
    void insertOneSms(int,int,int,int,int,int) -> insertOneSms
    void deleteAllSms() -> deleteAllSms
    android.database.Cursor queryAllSms() -> queryAllSms
    void updateSyncRead(int,int) -> updateSyncRead
    void updateSyncError(int,int) -> updateSyncError
    void updateSyncType(int,int) -> updateSyncType
    void deleteOneSms(int) -> deleteOneSms
    void updateWatchId(int,int) -> updateWatchId
    android.database.Cursor queryOneSmsWatchIdCursor(int) -> queryOneSmsWatchIdCursor
    android.database.Cursor queryOneSmsPhoneIdByWatchId(int) -> queryOneSmsPhoneIdByWatchId
    void updateDeleteFailed(int) -> updateDeleteFailed
cn.ingenic.indroidsync.contactsms.sms2.SmsDB$WatchSmsDB -> cn.ingenic.indroidsync.contactsms.sms2.SmsDB$WatchSmsDB:
    android.content.Context mContext -> mContext
    java.lang.String[] SmsIdProjections -> SmsIdProjections
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB this$0 -> this$0
    void deleteOneSmsById(int) -> deleteOneSmsById
    android.database.Cursor querySmsIdByThreadId(long) -> querySmsIdByThreadId
    void deleteAll() -> deleteAll
    void updateWatchSmsDB(int,int,int,int) -> updateWatchSmsDB
cn.ingenic.indroidsync.contactsms.sms2.SmsModule2 -> cn.ingenic.indroidsync.contactsms.sms2.SmsModule2:
    java.lang.String SMS2 -> SMS2
    android.content.Context mContext -> mContext
    java.lang.String TAG -> TAG
    java.lang.String DEBUG -> DEBUG
    boolean debug -> debug
    boolean serviceSmsHaveStarted -> serviceSmsHaveStarted
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
    void onCreate(android.content.Context) -> onCreate
    void startService() -> startService
    void stopService() -> stopService
    void onClear(java.lang.String) -> onClear
    void clear() -> clear
    int getMode() -> getMode
    void onInit() -> onInit
    void init(boolean) -> init
    void onFeatureStateChange(java.lang.String,boolean) -> onFeatureStateChange
cn.ingenic.indroidsync.contactsms.sms2.SmsReceiver -> cn.ingenic.indroidsync.contactsms.sms2.SmsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncDatabaseHelper -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncDatabaseHelper:
    java.lang.String SMS_SYNC_DATABASE -> SMS_SYNC_DATABASE
    java.lang.String smsTable -> smsTable
    int DATABASE_VERSION -> DATABASE_VERSION
    android.database.sqlite.SQLiteDatabase db -> db
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncDatabaseHelper sSingleton -> sSingleton
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncDatabaseHelper getInstance(android.content.Context) -> getInstance
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncDatabaseHelper$SmsColumns -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncDatabaseHelper$SmsColumns:
    java.lang.String phone_id -> phone_id
    java.lang.String read -> read
    java.lang.String error_code -> error_code
    java.lang.String watch_id -> watch_id
    java.lang.String delete -> delete
    java.lang.String type -> type
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncDatabaseHelper$Tables -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncDatabaseHelper$Tables:
    java.lang.String SMSTSYNC -> SMSTSYNC
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncProvider -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncProvider:
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncDatabaseHelper mSmsSyncDatabaseHelper -> mSmsSyncDatabaseHelper
    java.lang.String[] syncProject -> syncProject
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    void delete(java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    long insert(android.content.ContentValues) -> insert
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.database.Cursor queryAll() -> queryAll
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    void updateRead(int,int) -> updateRead
    void updateError(int,int) -> updateError
    void updateType(int,int) -> updateType
    void deleteOneSms(int) -> deleteOneSms
    void updateOneSmsWatchId(int,android.content.ContentValues) -> updateOneSmsWatchId
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService:
    java.lang.String TAG -> TAG
    java.lang.String tag -> tag
    java.lang.String DEBUG -> DEBUG
    boolean debug -> debug
    cn.ingenic.indroidsync.contactsms.sms2.SmsDB mSmsDB -> mSmsDB
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ExecuteSmsHandler smsHandler -> smsHandler
    int INSERT_LOCAL_SMS -> INSERT_LOCAL_SMS
    int GET_CHANGED_SMS -> GET_CHANGED_SMS
    int SEND_THREAD_DATAS -> SEND_THREAD_DATAS
    int GET_CHECK -> GET_CHECK
    int DELAY_MESSAGE -> DELAY_MESSAGE
    int REMOVE_DELAY_MESSAGE -> REMOVE_DELAY_MESSAGE
    int CAN_LOADING_ALL -> CAN_LOADING_ALL
    int CAN_GET_WATCH_NEED -> CAN_GET_WATCH_NEED
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$SmsChangeObserver mSmsChangeObserver -> mSmsChangeObserver
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ExecuteDelayHandler delayHandler -> delayHandler
    cn.ingenic.indroidsync.contactsms.sms2.Pdu pdu -> pdu
    java.lang.String INSERT_ALL_LOCAL_SMS -> INSERT_ALL_LOCAL_SMS
    boolean whenSavePowerModeUpdate -> whenSavePowerModeUpdate
    int all_mode -> all_mode
    int add_mode -> add_mode
    int update_mode -> update_mode
    int check_mode -> check_mode
    long checkDelayTime -> checkDelayTime
    long DELAY_TIME -> DELAY_TIME
    int SEND_ALL -> SEND_ALL
    int SEND_CHANGE_INSERT -> SEND_CHANGE_INSERT
    int SEND_CHANGE_DELETE -> SEND_CHANGE_DELETE
    int SEND_CHANGE_UPDATE -> SEND_CHANGE_UPDATE
    int SEND_SAVE_POWER_MESSAGE -> SEND_SAVE_POWER_MESSAGE
    int SEND_HAVE_SEND_SAVE_POWER_DATAS_MESSAGE -> SEND_HAVE_SEND_SAVE_POWER_DATAS_MESSAGE
    int SEND_WATCH_NEEDED_DATAS -> SEND_WATCH_NEEDED_DATAS
    int START_GAT_ALL_MESSAGE -> START_GAT_ALL_MESSAGE
    int STOP_GET_ALL_MESSAGE -> STOP_GET_ALL_MESSAGE
    int START_GET_ALL_CHANGE_MESSAGE -> START_GET_ALL_CHANGE_MESSAGE
    int STOP_GET_ALL_CHANGE_MESSAGE -> STOP_GET_ALL_CHANGE_MESSAGE
    int NO_DATAS_CHANGES -> NO_DATAS_CHANGES
    int DELAY_TIME_MESSAGE -> DELAY_TIME_MESSAGE
    int SEND_THREAD -> SEND_THREAD
    boolean Sms_Sync -> Sms_Sync
    boolean canGetNeedDatas -> canGetNeedDatas
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ResponseHandler mResponseSend -> mResponseSend
    android.content.BroadcastReceiver mBluetoothStateReceiver -> mBluetoothStateReceiver
    boolean localSms -> localSms
    int SYNC_NO_CHANGE -> SYNC_NO_CHANGE
    int SYNC_CHECK_CHANGED -> SYNC_CHECK_CHANGED
    int SYNC_ADD -> SYNC_ADD
    int SYNC_DELETE -> SYNC_DELETE
    int SYNC_UPDATE -> SYNC_UPDATE
    int SYNC_ALL -> SYNC_ALL
    int SYNC_STATUS -> SYNC_STATUS
    java.util.ArrayList SEND_LIST -> SEND_LIST
    int codeNumber -> codeNumber
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void SmsSync() -> SmsSync
    java.lang.String getAddress() -> getAddress
    void Start(int) -> Start
    void Stop() -> Stop
    void getThreadInfoAndSend() -> getThreadInfoAndSend
    void insertLocalSms() -> insertLocalSms
    cn.ingenic.indroidsync.data.Projo getDefaultInfo(android.database.Cursor,int,int,int,int,int,int,int) -> getDefaultInfo
    void getchange() -> getchange
    void onChanged(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> onChanged
    void execute(java.util.ArrayList,int) -> execute
    java.util.ArrayList checkSyncSms() -> checkSyncSms
    void doSmsAdd(java.util.ArrayList) -> doSmsAdd
    void doSmsDelete(java.util.ArrayList) -> doSmsDelete
    void doSmsUpdate() -> doSmsUpdate
    void returnCheckSendFailed(java.util.ArrayList) -> returnCheckSendFailed
    void responseDeleteFailed(java.util.ArrayList) -> responseDeleteFailed
    void responseUpdateFailed(java.util.ArrayList) -> responseUpdateFailed
    void sendSmsToWatch(java.util.ArrayList,int) -> sendSmsToWatch
    void sendTitleMessage(java.lang.String,int) -> sendTitleMessage
    boolean access$0(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService) -> access$0
    java.lang.String access$1(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService) -> access$1
    boolean access$2() -> access$2
    void access$3(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService) -> access$3
    void access$4(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService,boolean) -> access$4
    void access$5(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService,boolean) -> access$5
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ExecuteDelayHandler access$6(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService) -> access$6
    void access$7(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService) -> access$7
    java.util.ArrayList access$8(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService) -> access$8
    void access$9(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService) -> access$9
    void access$10(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService,java.lang.String,int) -> access$10
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ExecuteSmsHandler access$11(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService) -> access$11
    java.util.ArrayList access$12() -> access$12
    java.lang.String access$13(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService) -> access$13
    void access$14(boolean) -> access$14
    void access$15(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService,java.util.ArrayList) -> access$15
    void access$16(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService,java.util.ArrayList) -> access$16
    void access$17(cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService,java.util.ArrayList) -> access$17
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$1 -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$1:
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ExecuteDelayHandler -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ExecuteDelayHandler:
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ExecuteSmsHandler -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ExecuteSmsHandler:
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ResponseHandler -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$ResponseHandler:
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$SmsChangeObserver -> cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService$SmsChangeObserver:
    cn.ingenic.indroidsync.contactsms.sms2.SmsSyncService this$0 -> this$0
    void onChange(boolean) -> onChange
cn.ingenic.indroidsync.data.AddressSendCmd -> cn.ingenic.indroidsync.data.AddressSendCmd:
    long serialVersionUID -> serialVersionUID
cn.ingenic.indroidsync.data.AddressSendCmd$AddressSendColumn -> cn.ingenic.indroidsync.data.AddressSendCmd$AddressSendColumn:
    cn.ingenic.indroidsync.data.AddressSendCmd$AddressSendColumn address -> address
    java.lang.Class mType -> mType
    cn.ingenic.indroidsync.data.AddressSendCmd$AddressSendColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.data.AddressSendCmd$AddressSendColumn[] values() -> values
    cn.ingenic.indroidsync.data.AddressSendCmd$AddressSendColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.data.CmdProjo -> cn.ingenic.indroidsync.data.CmdProjo:
    long serialVersionUID -> serialVersionUID
    byte mCode -> mCode
    byte getCode() -> getCode
cn.ingenic.indroidsync.data.ControlProjo -> cn.ingenic.indroidsync.data.ControlProjo:
    long serialVersionUID -> serialVersionUID
    android.os.Message mCallback -> mCallback
    android.os.Message getCallbackMsg() -> getCallbackMsg
    void reset() -> reset
    java.lang.String getModule() -> getModule
cn.ingenic.indroidsync.data.ControlProjo$ControlColumn -> cn.ingenic.indroidsync.data.ControlProjo$ControlColumn:
    cn.ingenic.indroidsync.data.ControlProjo$ControlColumn module -> module
    cn.ingenic.indroidsync.data.ControlProjo$ControlColumn feature -> feature
    cn.ingenic.indroidsync.data.ControlProjo$ControlColumn service -> service
    cn.ingenic.indroidsync.data.ControlProjo$ControlColumn reply -> reply
    cn.ingenic.indroidsync.data.ControlProjo$ControlColumn mid -> mid
    java.lang.Class mType -> mType
    cn.ingenic.indroidsync.data.ControlProjo$ControlColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.data.ControlProjo$ControlColumn[] values() -> values
    cn.ingenic.indroidsync.data.ControlProjo$ControlColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.data.DefaultProjo -> cn.ingenic.indroidsync.data.DefaultProjo:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap mValues -> mValues
    java.util.EnumSet mColumn -> mColumn
    cn.ingenic.indroidsync.data.ProjoType mType -> mType
    void put(cn.ingenic.indroidsync.Column,java.lang.Object) -> put
    java.lang.Object get(cn.ingenic.indroidsync.Column) -> get
    java.util.EnumSet getColumn() -> getColumn
    cn.ingenic.indroidsync.data.ProjoType getType() -> getType
    java.lang.Object get(java.lang.String) -> get
    void put(java.lang.String,java.lang.Object) -> put
    java.util.Set keySet() -> keySet
cn.ingenic.indroidsync.data.FeatureConfigCmd -> cn.ingenic.indroidsync.data.FeatureConfigCmd:
    long serialVersionUID -> serialVersionUID
cn.ingenic.indroidsync.data.FeatureConfigCmd$FeatureConfigColumn -> cn.ingenic.indroidsync.data.FeatureConfigCmd$FeatureConfigColumn:
    cn.ingenic.indroidsync.data.FeatureConfigCmd$FeatureConfigColumn feature_map -> feature_map
    java.lang.Class mType -> mType
    cn.ingenic.indroidsync.data.FeatureConfigCmd$FeatureConfigColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.data.FeatureConfigCmd$FeatureConfigColumn[] values() -> values
    cn.ingenic.indroidsync.data.FeatureConfigCmd$FeatureConfigColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.data.FileSendCmd -> cn.ingenic.indroidsync.data.FileSendCmd:
    long serialVersionUID -> serialVersionUID
cn.ingenic.indroidsync.data.FileSendCmd$FileSendCmdColumn -> cn.ingenic.indroidsync.data.FileSendCmd$FileSendCmdColumn:
    cn.ingenic.indroidsync.data.FileSendCmd$FileSendCmdColumn module -> module
    cn.ingenic.indroidsync.data.FileSendCmd$FileSendCmdColumn name -> name
    cn.ingenic.indroidsync.data.FileSendCmd$FileSendCmdColumn length -> length
    cn.ingenic.indroidsync.data.FileSendCmd$FileSendCmdColumn address -> address
    java.lang.Class mType -> mType
    cn.ingenic.indroidsync.data.FileSendCmd$FileSendCmdColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.data.FileSendCmd$FileSendCmdColumn[] values() -> values
    cn.ingenic.indroidsync.data.FileSendCmd$FileSendCmdColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.data.ModeSendCmd -> cn.ingenic.indroidsync.data.ModeSendCmd:
    long serialVersionUID -> serialVersionUID
cn.ingenic.indroidsync.data.ModeSendCmd$ModeSendColumn -> cn.ingenic.indroidsync.data.ModeSendCmd$ModeSendColumn:
    cn.ingenic.indroidsync.data.ModeSendCmd$ModeSendColumn mode -> mode
    java.lang.Class mType -> mType
    cn.ingenic.indroidsync.data.ModeSendCmd$ModeSendColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.data.ModeSendCmd$ModeSendColumn[] values() -> values
    cn.ingenic.indroidsync.data.ModeSendCmd$ModeSendColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.data.Projo -> cn.ingenic.indroidsync.data.Projo:
    void put(cn.ingenic.indroidsync.Column,java.lang.Object) -> put
    java.lang.Object get(cn.ingenic.indroidsync.Column) -> get
    java.util.EnumSet getColumn() -> getColumn
    cn.ingenic.indroidsync.data.ProjoType getType() -> getType
    java.lang.Object get(java.lang.String) -> get
    void put(java.lang.String,java.lang.Object) -> put
    java.util.Set keySet() -> keySet
cn.ingenic.indroidsync.data.ProjoList -> cn.ingenic.indroidsync.data.ProjoList:
    long serialVersionUID -> serialVersionUID
    java.lang.String getModule() -> getModule
    android.os.Message getCallbackMsg() -> getCallbackMsg
    void reset() -> reset
    cn.ingenic.indroidsync.Config getConfig() -> getConfig
    java.util.ArrayList getDatas() -> getDatas
cn.ingenic.indroidsync.data.ProjoList$ProjoListColumn -> cn.ingenic.indroidsync.data.ProjoList$ProjoListColumn:
    cn.ingenic.indroidsync.data.ProjoList$ProjoListColumn control -> control
    cn.ingenic.indroidsync.data.ProjoList$ProjoListColumn datas -> datas
    java.lang.Class mType -> mType
    cn.ingenic.indroidsync.data.ProjoList$ProjoListColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.data.ProjoList$ProjoListColumn[] values() -> values
    cn.ingenic.indroidsync.data.ProjoList$ProjoListColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.data.ProjoType -> cn.ingenic.indroidsync.data.ProjoType:
    cn.ingenic.indroidsync.data.ProjoType NON -> NON
    cn.ingenic.indroidsync.data.ProjoType CONTROL -> CONTROL
    cn.ingenic.indroidsync.data.ProjoType DATA -> DATA
    cn.ingenic.indroidsync.data.ProjoType LIST -> LIST
    cn.ingenic.indroidsync.data.ProjoType SERVICE -> SERVICE
    cn.ingenic.indroidsync.data.ProjoType CMD -> CMD
    cn.ingenic.indroidsync.data.ProjoType[] ENUM$VALUES -> ENUM$VALUES
    cn.ingenic.indroidsync.data.ProjoType[] values() -> values
    cn.ingenic.indroidsync.data.ProjoType valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.data.RemoteParcel -> cn.ingenic.indroidsync.data.RemoteParcel:
    long serialVersionUID -> serialVersionUID
    java.util.List mDatas -> mDatas
    int mPtr -> mPtr
    void writeInt(int) -> writeInt
    void writeString(java.lang.String) -> writeString
    void writeBoolean(boolean) -> writeBoolean
    void wtrieObject(java.io.Serializable) -> wtrieObject
    int readInt() -> readInt
    java.lang.String readString() -> readString
    boolean readBoolean() -> readBoolean
    java.io.Serializable readObject() -> readObject
cn.ingenic.indroidsync.data.ServiceProjo -> cn.ingenic.indroidsync.data.ServiceProjo:
    long serialVersionUID -> serialVersionUID
cn.ingenic.indroidsync.data.ServiceProjo$ServiceColumn -> cn.ingenic.indroidsync.data.ServiceProjo$ServiceColumn:
    cn.ingenic.indroidsync.data.ServiceProjo$ServiceColumn descriptor -> descriptor
    cn.ingenic.indroidsync.data.ServiceProjo$ServiceColumn code -> code
    cn.ingenic.indroidsync.data.ServiceProjo$ServiceColumn parcel -> parcel
    java.lang.Class mType -> mType
    cn.ingenic.indroidsync.data.ServiceProjo$ServiceColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.Class type() -> type
    java.lang.String key() -> key
    cn.ingenic.indroidsync.data.ServiceProjo$ServiceColumn[] values() -> values
    cn.ingenic.indroidsync.data.ServiceProjo$ServiceColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.data.SystemCmds -> cn.ingenic.indroidsync.data.SystemCmds:
    byte FILE_SEND -> FILE_SEND
    byte FEATURE_CONFIG -> FEATURE_CONFIG
    byte ADDRESS_SEND -> ADDRESS_SEND
    byte MODE_SEND -> MODE_SEND
    byte FILE_CHANNEL_CLOSE -> FILE_CHANNEL_CLOSE
    java.lang.String COL_ADDRESS -> COL_ADDRESS
    byte ADDRESS_REQUEST -> ADDRESS_REQUEST
    java.lang.String COL_PASS -> COL_PASS
    byte ADDRESS_RESPONSE -> ADDRESS_RESPONSE
cn.ingenic.indroidsync.devicemanager.AddDeviceAdminActivity -> cn.ingenic.indroidsync.devicemanager.AddDeviceAdminActivity:
    void onCreate(android.os.Bundle) -> onCreate
cn.ingenic.indroidsync.devicemanager.AppsReceiver -> cn.ingenic.indroidsync.devicemanager.AppsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.devicemanager.BatteryInfoManager -> cn.ingenic.indroidsync.devicemanager.BatteryInfoManager:
    int[] BatteryLevel -> BatteryLevel
    cn.ingenic.indroidsync.devicemanager.BatteryInfoManager sInstance -> sInstance
    org.json.JSONObject mStoreStatus -> mStoreStatus
    boolean mBatterySync -> mBatterySync
    cn.ingenic.indroidsync.devicemanager.BatteryInfoManager init(android.content.Context) -> init
    cn.ingenic.indroidsync.devicemanager.BatteryInfoManager getInstance() -> getInstance
    void setFeature(android.content.Context,boolean) -> setFeature
    int LevelToIndex(int) -> LevelToIndex
    int sendBatteryInfo() -> sendBatteryInfo
    boolean access$0() -> access$0
    org.json.JSONObject access$1(cn.ingenic.indroidsync.devicemanager.BatteryInfoManager) -> access$1
    void access$2(cn.ingenic.indroidsync.devicemanager.BatteryInfoManager,org.json.JSONObject) -> access$2
    int access$3(cn.ingenic.indroidsync.devicemanager.BatteryInfoManager,int) -> access$3
cn.ingenic.indroidsync.devicemanager.BatteryInfoManager$BatteryReceiver -> cn.ingenic.indroidsync.devicemanager.BatteryInfoManager$BatteryReceiver:
    int lastSendLevel -> lastSendLevel
    int lastSendPlugged -> lastSendPlugged
    cn.ingenic.indroidsync.devicemanager.BatteryInfoManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.devicemanager.Commands -> cn.ingenic.indroidsync.devicemanager.Commands:
    java.lang.String ACTION_SYNC -> ACTION_SYNC
    java.lang.String ACTION_WEATHER -> ACTION_WEATHER
    int CMD_INTERNET_REQUEST -> CMD_INTERNET_REQUEST
    java.lang.String ACTION_DEVICE_MANAGER -> ACTION_DEVICE_MANAGER
    int CMD_LOCK_SCREEN -> CMD_LOCK_SCREEN
    java.lang.String ACTION_CALL_LOG -> ACTION_CALL_LOG
    int CMD_CLEAR_CALL_LOG -> CMD_CLEAR_CALL_LOG
    int CMD_SYNC_MISS_CALL_NOTIFY -> CMD_SYNC_MISS_CALL_NOTIFY
    int CMD_SYNC_CALL_LOG -> CMD_SYNC_CALL_LOG
    int CMD_SYNC_HAS_NEW_SYNC -> CMD_SYNC_HAS_NEW_SYNC
    int CMD_SYNC_CALL_LOG_FROM_WATCH -> CMD_SYNC_CALL_LOG_FROM_WATCH
    int CMD_SYNC_CALL_LOG_REQUEST -> CMD_SYNC_CALL_LOG_REQUEST
    int CMD_SYNC_WATCH_ON_CLEAR -> CMD_SYNC_WATCH_ON_CLEAR
    java.lang.String ACTION_TIME -> ACTION_TIME
    int CMD_GET_TIME -> CMD_GET_TIME
    java.lang.String ACTION_BATTERY -> ACTION_BATTERY
    int CMD_GET_BATTERY -> CMD_GET_BATTERY
    int CMD_REQUEST_BATTERY -> CMD_REQUEST_BATTERY
    int CMD_RING_AND_VIBRAT -> CMD_RING_AND_VIBRAT
    java.lang.String ACTION_BLUETOOTH_STATUS -> ACTION_BLUETOOTH_STATUS
    int CMD_GETBLUETOOTH_STATUS -> CMD_GETBLUETOOTH_STATUS
    java.lang.String ERROR_NOT_CONNECT -> ERROR_NOT_CONNECT
    java.lang.String getCmdAction(int) -> getCmdAction
    java.lang.String getCmdFeature(int) -> getCmdFeature
cn.ingenic.indroidsync.devicemanager.ConnectionManager -> cn.ingenic.indroidsync.devicemanager.ConnectionManager:
    cn.ingenic.indroidsync.devicemanager.ConnectionManager sInstance -> sInstance
    android.content.Context mContext -> mContext
    android.os.Handler mHandleCallback -> mHandleCallback
    cn.ingenic.indroidsync.devicemanager.ConnectionManager getInstance(android.content.Context) -> getInstance
    cn.ingenic.indroidsync.devicemanager.ConnectionManager getInstance() -> getInstance
    void device2Device(int,java.lang.String) -> device2Device
    void apps2Device(int,java.lang.String) -> apps2Device
    void device2Apps(android.content.Context,int,java.lang.String) -> device2Apps
cn.ingenic.indroidsync.devicemanager.ConnectionManager$1 -> cn.ingenic.indroidsync.devicemanager.ConnectionManager$1:
    cn.ingenic.indroidsync.devicemanager.ConnectionManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.devicemanager.DeviceColumn -> cn.ingenic.indroidsync.devicemanager.DeviceColumn:
    cn.ingenic.indroidsync.devicemanager.DeviceColumn command -> command
    cn.ingenic.indroidsync.devicemanager.DeviceColumn data -> data
    java.lang.Class mClass -> mClass
    cn.ingenic.indroidsync.devicemanager.DeviceColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String key() -> key
    java.lang.Class type() -> type
    cn.ingenic.indroidsync.devicemanager.DeviceColumn[] values() -> values
    cn.ingenic.indroidsync.devicemanager.DeviceColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.devicemanager.DeviceModule -> cn.ingenic.indroidsync.devicemanager.DeviceModule:
    java.lang.String TAG -> TAG
    boolean V -> V
    java.lang.String MODULE -> MODULE
    java.lang.String FEATURE_CALLLOG -> FEATURE_CALLLOG
    java.lang.String FEATURE_WEATHER -> FEATURE_WEATHER
    java.lang.String FEATURE_BATTERY -> FEATURE_BATTERY
    java.lang.String FEATURE_TIME -> FEATURE_TIME
    cn.ingenic.indroidsync.devicemanager.DeviceModule sInstance -> sInstance
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.devicemanager.ConnectionManager mConnectionManager -> mConnectionManager
    cn.ingenic.indroidsync.calllog.CallLogManager mCallLogManager -> mCallLogManager
    cn.ingenic.indroidsync.devicemanager.BatteryInfoManager mBatteryManager -> mBatteryManager
    cn.ingenic.indroidsync.devicemanager.DeviceTransaction mTransaction -> mTransaction
    cn.ingenic.indroidsync.devicemanager.ConnectionManager getConnectionManager() -> getConnectionManager
    cn.ingenic.indroidsync.calllog.CallLogManager getCallLogManager() -> getCallLogManager
    cn.ingenic.indroidsync.devicemanager.DeviceModule getInstance() -> getInstance
    void onCreate(android.content.Context) -> onCreate
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
    cn.ingenic.indroidsync.devicemanager.DeviceTransaction getTransation() -> getTransation
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    void onFeatureStateChange(java.lang.String,boolean) -> onFeatureStateChange
    void onClear(java.lang.String) -> onClear
    void onModeChanged(int) -> onModeChanged
cn.ingenic.indroidsync.devicemanager.DeviceReceiver -> cn.ingenic.indroidsync.devicemanager.DeviceReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onEnabled(android.content.Context,android.content.Intent) -> onEnabled
    void onDisabled(android.content.Context,android.content.Intent) -> onDisabled
    void setAdminEnable(android.content.Context,boolean) -> setAdminEnable
cn.ingenic.indroidsync.devicemanager.DeviceRemoteServiceImpl -> cn.ingenic.indroidsync.devicemanager.DeviceRemoteServiceImpl:
    int BASE -> BASE
    int INTERNET_REQUEST -> INTERNET_REQUEST
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.data.RemoteParcel onTransact(int,cn.ingenic.indroidsync.data.RemoteParcel) -> onTransact
    cn.ingenic.indroidsync.devicemanager.IDeviceRemoteService asRemoteInterface(cn.ingenic.indroidsync.IRemoteBinder) -> asRemoteInterface
    java.lang.String request(int,java.lang.String) -> request
    java.lang.String lockScreen() -> lockScreen
    java.lang.String requestInternet(java.lang.String) -> requestInternet
cn.ingenic.indroidsync.devicemanager.DeviceRemoteServiceImpl$DeviceRemoteServiceProxy -> cn.ingenic.indroidsync.devicemanager.DeviceRemoteServiceImpl$DeviceRemoteServiceProxy:
    cn.ingenic.indroidsync.IRemoteBinder mRemoteBinder -> mRemoteBinder
    java.lang.String request(int,java.lang.String) -> request
cn.ingenic.indroidsync.devicemanager.DeviceTransaction -> cn.ingenic.indroidsync.devicemanager.DeviceTransaction:
    android.os.Vibrator mVibrator -> mVibrator
    boolean mShouldVibrat -> mShouldVibrat
    android.media.Ringtone mRingtone -> mRingtone
    android.app.AlertDialog mDialog -> mDialog
    int mVolume -> mVolume
    int mModel -> mModel
    void onStart(java.util.ArrayList) -> onStart
    void handleCommandOnPhone(cn.ingenic.indroidsync.data.Projo) -> handleCommandOnPhone
    void handleCommandOnPhone(int,java.lang.String) -> handleCommandOnPhone
    void RingAndVibrat() -> RingAndVibrat
    void stopRingAndVibrat() -> stopRingAndVibrat
    java.lang.String lockScreen() -> lockScreen
    void requestInternet(int,java.lang.String) -> requestInternet
    boolean access$0(cn.ingenic.indroidsync.devicemanager.DeviceTransaction) -> access$0
    android.os.Vibrator access$1(cn.ingenic.indroidsync.devicemanager.DeviceTransaction) -> access$1
    android.media.Ringtone access$2(cn.ingenic.indroidsync.devicemanager.DeviceTransaction) -> access$2
    void access$3(cn.ingenic.indroidsync.devicemanager.DeviceTransaction) -> access$3
    android.content.Context access$4(cn.ingenic.indroidsync.devicemanager.DeviceTransaction) -> access$4
cn.ingenic.indroidsync.devicemanager.DeviceTransaction$1 -> cn.ingenic.indroidsync.devicemanager.DeviceTransaction$1:
    cn.ingenic.indroidsync.devicemanager.DeviceTransaction this$0 -> this$0
    void run() -> run
cn.ingenic.indroidsync.devicemanager.DeviceTransaction$2 -> cn.ingenic.indroidsync.devicemanager.DeviceTransaction$2:
    cn.ingenic.indroidsync.devicemanager.DeviceTransaction this$0 -> this$0
    void run() -> run
cn.ingenic.indroidsync.devicemanager.DeviceTransaction$3 -> cn.ingenic.indroidsync.devicemanager.DeviceTransaction$3:
    cn.ingenic.indroidsync.devicemanager.DeviceTransaction this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
cn.ingenic.indroidsync.devicemanager.DeviceTransaction$4 -> cn.ingenic.indroidsync.devicemanager.DeviceTransaction$4:
    cn.ingenic.indroidsync.devicemanager.DeviceTransaction this$0 -> this$0
    java.lang.String val$url -> val$url
    int val$cmd -> val$cmd
    void run() -> run
cn.ingenic.indroidsync.devicemanager.IDeviceRemoteService -> cn.ingenic.indroidsync.devicemanager.IDeviceRemoteService:
    java.lang.String DESPRITOR -> DESPRITOR
    java.lang.String request(int,java.lang.String) -> request
cn.ingenic.indroidsync.devicemanager.TimeChangedReceiver -> cn.ingenic.indroidsync.devicemanager.TimeChangedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.devicemanager.TimeSyncManager -> cn.ingenic.indroidsync.devicemanager.TimeSyncManager:
    cn.ingenic.indroidsync.devicemanager.TimeSyncManager sInstance -> sInstance
    cn.ingenic.indroidsync.devicemanager.TimeSyncManager getInstance() -> getInstance
    void syncTime() -> syncTime
cn.ingenic.indroidsync.devicemanager.klilog -> cn.ingenic.indroidsync.devicemanager.klilog:
    java.lang.String TAG -> TAG
    void i(java.lang.String) -> i
    void e(java.lang.String) -> e
cn.ingenic.indroidsync.phone.ListenPhone -> cn.ingenic.indroidsync.phone.ListenPhone:
    android.content.Context mContext -> mContext
    int mOld -> mOld
    int mNew -> mNew
    java.lang.String mOutCallNumber -> mOutCallNumber
    java.lang.String mOutCallName -> mOutCallName
    cn.ingenic.indroidsync.phone.ListenPhone mInstance -> mInstance
    cn.ingenic.indroidsync.phone.ListenPhone getInstance(android.content.Context) -> getInstance
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
    void setOutCall(java.lang.String,java.lang.String) -> setOutCall
    java.lang.String getNameFormNumber(java.lang.String) -> getNameFormNumber
cn.ingenic.indroidsync.phone.MultiLineTitleEditTextPreference -> cn.ingenic.indroidsync.phone.MultiLineTitleEditTextPreference:
    void onBindView(android.view.View) -> onBindView
cn.ingenic.indroidsync.phone.OutCallReceiver -> cn.ingenic.indroidsync.phone.OutCallReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.lang.String getNameFormNumber(android.content.Context,java.lang.String) -> getNameFormNumber
cn.ingenic.indroidsync.phone.PhoneColumn -> cn.ingenic.indroidsync.phone.PhoneColumn:
    cn.ingenic.indroidsync.phone.PhoneColumn state -> state
    cn.ingenic.indroidsync.phone.PhoneColumn name -> name
    cn.ingenic.indroidsync.phone.PhoneColumn phoneNumber -> phoneNumber
    java.lang.Class mClass -> mClass
    cn.ingenic.indroidsync.phone.PhoneColumn[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String key() -> key
    java.lang.Class type() -> type
    cn.ingenic.indroidsync.phone.PhoneColumn[] values() -> values
    cn.ingenic.indroidsync.phone.PhoneColumn valueOf(java.lang.String) -> valueOf
cn.ingenic.indroidsync.phone.PhoneModule -> cn.ingenic.indroidsync.phone.PhoneModule:
    java.lang.String TAG -> TAG
    boolean V -> V
    java.lang.String PHONE -> PHONE
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
    void onCreate(android.content.Context) -> onCreate
cn.ingenic.indroidsync.phone.PhoneTransaction -> cn.ingenic.indroidsync.phone.PhoneTransaction:
    int mState -> mState
    int mOldState -> mOldState
    java.lang.String mName -> mName
    java.lang.String mIncomingNumber -> mIncomingNumber
    void onStart(java.util.ArrayList) -> onStart
    void sendSms(java.lang.String,java.lang.String) -> sendSms
    void endCall(android.content.Context) -> endCall
    void answerRingingCall(android.content.Context) -> answerRingingCall
cn.ingenic.indroidsync.phone.QuickSmsSettings -> cn.ingenic.indroidsync.phone.QuickSmsSettings:
    java.lang.String SHARED_PREFERENCES_NAME -> SHARED_PREFERENCES_NAME
    java.lang.String KEY_CANNED_RESPONSE_PREF_1 -> KEY_CANNED_RESPONSE_PREF_1
    java.lang.String KEY_CANNED_RESPONSE_PREF_2 -> KEY_CANNED_RESPONSE_PREF_2
    java.lang.String KEY_CANNED_RESPONSE_PREF_3 -> KEY_CANNED_RESPONSE_PREF_3
    java.lang.String KEY_CANNED_RESPONSE_PREF_4 -> KEY_CANNED_RESPONSE_PREF_4
    int SYNC_SMS_CODE -> SYNC_SMS_CODE
    java.lang.String KEY_SYNC_VIA_SMS -> KEY_SYNC_VIA_SMS
    java.lang.String[] keys -> keys
    java.util.ArrayList mPreferences -> mPreferences
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    void onResume() -> onResume
    void onPause() -> onPause
cn.ingenic.indroidsync.services.IModuleCallback -> cn.ingenic.indroidsync.services.IModuleCallback:
    void onInit() -> onInit
    void onCreate() -> onCreate
    void onClear(java.lang.String) -> onClear
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    void onModeChanged(int) -> onModeChanged
    void onRetrive(cn.ingenic.indroidsync.services.SyncData) -> onRetrive
    void onFileSendComplete(java.lang.String,boolean) -> onFileSendComplete
    void onFileRetriveComplete(java.lang.String,boolean) -> onFileRetriveComplete
    void onSendCallback(long,int) -> onSendCallback
    void onChannelCreateComplete(android.os.ParcelUuid,boolean,boolean) -> onChannelCreateComplete
    void onChannelRetrive(android.os.ParcelUuid,cn.ingenic.indroidsync.services.SyncData) -> onChannelRetrive
    void onChannelDestroy(android.os.ParcelUuid) -> onChannelDestroy
cn.ingenic.indroidsync.services.IModuleCallback$Stub -> cn.ingenic.indroidsync.services.IModuleCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onInit -> TRANSACTION_onInit
    int TRANSACTION_onCreate -> TRANSACTION_onCreate
    int TRANSACTION_onClear -> TRANSACTION_onClear
    int TRANSACTION_onConnectivityStateChange -> TRANSACTION_onConnectivityStateChange
    int TRANSACTION_onModeChanged -> TRANSACTION_onModeChanged
    int TRANSACTION_onRetrive -> TRANSACTION_onRetrive
    int TRANSACTION_onFileSendComplete -> TRANSACTION_onFileSendComplete
    int TRANSACTION_onFileRetriveComplete -> TRANSACTION_onFileRetriveComplete
    int TRANSACTION_onSendCallback -> TRANSACTION_onSendCallback
    int TRANSACTION_onChannelCreateComplete -> TRANSACTION_onChannelCreateComplete
    int TRANSACTION_onChannelRetrive -> TRANSACTION_onChannelRetrive
    int TRANSACTION_onChannelDestroy -> TRANSACTION_onChannelDestroy
    cn.ingenic.indroidsync.services.IModuleCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
cn.ingenic.indroidsync.services.IModuleCallback$Stub$Proxy -> cn.ingenic.indroidsync.services.IModuleCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onInit() -> onInit
    void onCreate() -> onCreate
    void onClear(java.lang.String) -> onClear
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    void onModeChanged(int) -> onModeChanged
    void onRetrive(cn.ingenic.indroidsync.services.SyncData) -> onRetrive
    void onFileSendComplete(java.lang.String,boolean) -> onFileSendComplete
    void onFileRetriveComplete(java.lang.String,boolean) -> onFileRetriveComplete
    void onSendCallback(long,int) -> onSendCallback
    void onChannelCreateComplete(android.os.ParcelUuid,boolean,boolean) -> onChannelCreateComplete
    void onChannelRetrive(android.os.ParcelUuid,cn.ingenic.indroidsync.services.SyncData) -> onChannelRetrive
    void onChannelDestroy(android.os.ParcelUuid) -> onChannelDestroy
cn.ingenic.indroidsync.services.ISyncService -> cn.ingenic.indroidsync.services.ISyncService:
    boolean isConnected() -> isConnected
    java.lang.String getLockedAddress() -> getLockedAddress
    boolean registModule(java.lang.String,cn.ingenic.indroidsync.services.IModuleCallback) -> registModule
    boolean send(java.lang.String,cn.ingenic.indroidsync.services.SyncData) -> send
    void sendOnChannel(java.lang.String,cn.ingenic.indroidsync.services.SyncData,android.os.ParcelUuid) -> sendOnChannel
    boolean sendFile(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String,int) -> sendFile
    void createChannel(java.lang.String,android.os.ParcelUuid) -> createChannel
    void destroyChannel(java.lang.String,android.os.ParcelUuid) -> destroyChannel
cn.ingenic.indroidsync.services.ISyncService$Stub -> cn.ingenic.indroidsync.services.ISyncService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_isConnected -> TRANSACTION_isConnected
    int TRANSACTION_getLockedAddress -> TRANSACTION_getLockedAddress
    int TRANSACTION_registModule -> TRANSACTION_registModule
    int TRANSACTION_send -> TRANSACTION_send
    int TRANSACTION_sendOnChannel -> TRANSACTION_sendOnChannel
    int TRANSACTION_sendFile -> TRANSACTION_sendFile
    int TRANSACTION_createChannel -> TRANSACTION_createChannel
    int TRANSACTION_destroyChannel -> TRANSACTION_destroyChannel
    cn.ingenic.indroidsync.services.ISyncService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
cn.ingenic.indroidsync.services.ISyncService$Stub$Proxy -> cn.ingenic.indroidsync.services.ISyncService$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    boolean isConnected() -> isConnected
    java.lang.String getLockedAddress() -> getLockedAddress
    boolean registModule(java.lang.String,cn.ingenic.indroidsync.services.IModuleCallback) -> registModule
    boolean send(java.lang.String,cn.ingenic.indroidsync.services.SyncData) -> send
    void sendOnChannel(java.lang.String,cn.ingenic.indroidsync.services.SyncData,android.os.ParcelUuid) -> sendOnChannel
    boolean sendFile(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String,int) -> sendFile
    void createChannel(java.lang.String,android.os.ParcelUuid) -> createChannel
    void destroyChannel(java.lang.String,android.os.ParcelUuid) -> destroyChannel
cn.ingenic.indroidsync.services.SyncData -> cn.ingenic.indroidsync.services.SyncData:
    java.lang.String TAG -> TAG
    long INIT_SORT -> INIT_SORT
    long INVALID_SORT -> INVALID_SORT
    cn.ingenic.indroidsync.services.SyncData$Config mConfig -> mConfig
    java.util.Map mValues -> mValues
    java.lang.String mExcludeKey -> mExcludeKey
    cn.ingenic.indroidsync.services.SyncData[] mDatas -> mDatas
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getExcludeKey() -> getExcludeKey
    cn.ingenic.indroidsync.services.SyncData$Config readConfigFromParcel(android.os.Parcel) -> readConfigFromParcel
    void writeConfigToParcel(android.os.Parcel,cn.ingenic.indroidsync.services.SyncData$Config) -> writeConfigToParcel
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setConfig(cn.ingenic.indroidsync.services.SyncData$Config) -> setConfig
    cn.ingenic.indroidsync.services.SyncData$Config getConfig() -> getConfig
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putBooleanArray(java.lang.String,boolean[]) -> putBooleanArray
    void putByte(java.lang.String,byte) -> putByte
    void putByteArray(java.lang.String,byte[]) -> putByteArray
    void putChar(java.lang.String,char) -> putChar
    void putCharArray(java.lang.String,char[]) -> putCharArray
    void putDouble(java.lang.String,double) -> putDouble
    void putDoubleArray(java.lang.String,double[]) -> putDoubleArray
    void putFloat(java.lang.String,float) -> putFloat
    void putFloatArray(java.lang.String,float[]) -> putFloatArray
    void putInt(java.lang.String,int) -> putInt
    void putIntArray(java.lang.String,int[]) -> putIntArray
    void putLong(java.lang.String,long) -> putLong
    void putLongArray(java.lang.String,long[]) -> putLongArray
    void putShort(java.lang.String,short) -> putShort
    void putShortArray(java.lang.String,short[]) -> putShortArray
    void putString(java.lang.String,java.lang.String) -> putString
    void putStringArray(java.lang.String,java.lang.String[]) -> putStringArray
    void putDataArray(java.lang.String,cn.ingenic.indroidsync.services.SyncData[]) -> putDataArray
    void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException) -> typeWarning
    void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException) -> typeWarning
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean[] getBooleanArray(java.lang.String) -> getBooleanArray
    byte getByte(java.lang.String) -> getByte
    java.lang.Byte getByte(java.lang.String,byte) -> getByte
    byte[] getByteArray(java.lang.String) -> getByteArray
    char getChar(java.lang.String) -> getChar
    char getChar(java.lang.String,char) -> getChar
    char[] getCharArray(java.lang.String) -> getCharArray
    double getDouble(java.lang.String) -> getDouble
    double getDouble(java.lang.String,double) -> getDouble
    double[] getDoubleArray(java.lang.String) -> getDoubleArray
    float getFloat(java.lang.String) -> getFloat
    float getFloat(java.lang.String,float) -> getFloat
    float[] getFloatArray(java.lang.String) -> getFloatArray
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    int[] getIntArray(java.lang.String) -> getIntArray
    long getLong(java.lang.String) -> getLong
    long getLong(java.lang.String,long) -> getLong
    long[] getLongArray(java.lang.String) -> getLongArray
    java.lang.String[] getStringArray(java.lang.String) -> getStringArray
    short getShort(java.lang.String) -> getShort
    short getShort(java.lang.String,short) -> getShort
    short[] getShortArray(java.lang.String) -> getShortArray
    cn.ingenic.indroidsync.services.SyncData[] getDataArray(java.lang.String) -> getDataArray
    java.lang.String getString(java.lang.String) -> getString
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    java.util.Set keySet() -> keySet
    cn.ingenic.indroidsync.services.SyncData$Config access$002(cn.ingenic.indroidsync.services.SyncData,cn.ingenic.indroidsync.services.SyncData$Config) -> access$002
    cn.ingenic.indroidsync.services.SyncData$Config access$100(cn.ingenic.indroidsync.services.SyncData,android.os.Parcel) -> access$100
    java.util.Map access$200(cn.ingenic.indroidsync.services.SyncData) -> access$200
    java.lang.String access$302(cn.ingenic.indroidsync.services.SyncData,java.lang.String) -> access$302
    cn.ingenic.indroidsync.services.SyncData[] access$402(cn.ingenic.indroidsync.services.SyncData,cn.ingenic.indroidsync.services.SyncData[]) -> access$402
    cn.ingenic.indroidsync.services.SyncData[] access$400(cn.ingenic.indroidsync.services.SyncData) -> access$400
cn.ingenic.indroidsync.services.SyncData$1 -> cn.ingenic.indroidsync.services.SyncData$1:
    cn.ingenic.indroidsync.services.SyncData createFromParcel(android.os.Parcel) -> createFromParcel
    cn.ingenic.indroidsync.services.SyncData[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
cn.ingenic.indroidsync.services.SyncData$Config -> cn.ingenic.indroidsync.services.SyncData$Config:
    long mmSort -> mmSort
    boolean mmIsMid -> mmIsMid
    android.os.Message mmCallback -> mmCallback
    long getSort() -> getSort
cn.ingenic.indroidsync.services.SyncException -> cn.ingenic.indroidsync.services.SyncException:
    long serialVersionUID -> serialVersionUID
cn.ingenic.indroidsync.services.SyncModule -> cn.ingenic.indroidsync.services.SyncModule:
    java.lang.String TAG -> TAG
    boolean V -> V
    java.lang.String SERVICE -> SERVICE
    int SAVING_POWER_MODE -> SAVING_POWER_MODE
    int RIGHT_NOW_MODE -> RIGHT_NOW_MODE
    int SUCCESS -> SUCCESS
    int NO_CONNECTIVITY -> NO_CONNECTIVITY
    int FEATURE_DISABLED -> FEATURE_DISABLED
    int NO_LOCKED_ADDRESS -> NO_LOCKED_ADDRESS
    android.content.Context mContext -> mContext
    java.lang.String mName -> mName
    cn.ingenic.indroidsync.services.ISyncService mService -> mService
    java.util.concurrent.atomic.AtomicLong mSort -> mSort
    java.util.Map mCallbackMap -> mCallbackMap
    cn.ingenic.indroidsync.services.SyncModule$ModuleCallback mCallback -> mCallback
    android.content.ServiceConnection mServiceConnection -> mServiceConnection
    void bind() -> bind
    java.lang.String getName() -> getName
    boolean isConnected() -> isConnected
    boolean hasLockedAddress() -> hasLockedAddress
    java.lang.String getLockedAddress() -> getLockedAddress
    cn.ingenic.indroidsync.services.ISyncService getISyncService() -> getISyncService
    void regist() -> regist
    void onInit() -> onInit
    void onCreate() -> onCreate
    void onClear(java.lang.String) -> onClear
    void onConnectionStateChanged(boolean) -> onConnectionStateChanged
    void onModeChanged(int) -> onModeChanged
    boolean sendFile(java.io.File,java.lang.String,int) -> sendFile
    int modeToMode(android.net.Uri,java.lang.String) -> modeToMode
    void processConfig(cn.ingenic.indroidsync.services.SyncData$Config) -> processConfig
    boolean send(cn.ingenic.indroidsync.services.SyncData) -> send
    void sendOnChannel(cn.ingenic.indroidsync.services.SyncData,android.os.ParcelUuid) -> sendOnChannel
    void createChannel(android.os.ParcelUuid) -> createChannel
    void destroyChannel(android.os.ParcelUuid) -> destroyChannel
    cn.ingenic.indroidsync.services.mid.MidTableManager getMidTableManager() -> getMidTableManager
    void onRetrive(cn.ingenic.indroidsync.services.SyncData) -> onRetrive
    void onFileSendComplete(java.lang.String,boolean) -> onFileSendComplete
    void onFileRetriveComplete(java.lang.String,boolean) -> onFileRetriveComplete
    void onChannelCreateComplete(android.os.ParcelUuid,boolean,boolean) -> onChannelCreateComplete
    void onChannelRetrive(android.os.ParcelUuid,cn.ingenic.indroidsync.services.SyncData) -> onChannelRetrive
    void onChannelDestroy(android.os.ParcelUuid) -> onChannelDestroy
    java.lang.String access$000(cn.ingenic.indroidsync.services.SyncModule) -> access$000
    java.util.Map access$100(cn.ingenic.indroidsync.services.SyncModule) -> access$100
    cn.ingenic.indroidsync.services.ISyncService access$302(cn.ingenic.indroidsync.services.SyncModule,cn.ingenic.indroidsync.services.ISyncService) -> access$302
    cn.ingenic.indroidsync.services.ISyncService access$300(cn.ingenic.indroidsync.services.SyncModule) -> access$300
    void access$400(cn.ingenic.indroidsync.services.SyncModule) -> access$400
cn.ingenic.indroidsync.services.SyncModule$1 -> cn.ingenic.indroidsync.services.SyncModule$1:
    cn.ingenic.indroidsync.services.SyncModule this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
cn.ingenic.indroidsync.services.SyncModule$ModuleCallback -> cn.ingenic.indroidsync.services.SyncModule$ModuleCallback:
    cn.ingenic.indroidsync.services.SyncModule this$0 -> this$0
    void onClear(java.lang.String) -> onClear
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    void onModeChanged(int) -> onModeChanged
    void onCreate() -> onCreate
    void onRetrive(cn.ingenic.indroidsync.services.SyncData) -> onRetrive
    void onFileSendComplete(java.lang.String,boolean) -> onFileSendComplete
    void onFileRetriveComplete(java.lang.String,boolean) -> onFileRetriveComplete
    void onSendCallback(long,int) -> onSendCallback
    void onInit() -> onInit
    void onChannelCreateComplete(android.os.ParcelUuid,boolean,boolean) -> onChannelCreateComplete
    void onChannelRetrive(android.os.ParcelUuid,cn.ingenic.indroidsync.services.SyncData) -> onChannelRetrive
    void onChannelDestroy(android.os.ParcelUuid) -> onChannelDestroy
cn.ingenic.indroidsync.services.SyncProjo -> cn.ingenic.indroidsync.services.SyncProjo:
    long serialVersionUID -> serialVersionUID
    java.lang.String mExcludeKey -> mExcludeKey
    cn.ingenic.indroidsync.services.SyncProjo[] mSyncDatas -> mSyncDatas
    cn.ingenic.indroidsync.services.SyncData getData() -> getData
cn.ingenic.indroidsync.services.SyncService -> cn.ingenic.indroidsync.services.SyncService:
    java.lang.String TAG -> TAG
    android.os.IBinder onBind(android.content.Intent) -> onBind
cn.ingenic.indroidsync.services.SyncService$SyncServiceImpl -> cn.ingenic.indroidsync.services.SyncService$SyncServiceImpl:
    cn.ingenic.indroidsync.DefaultSyncManager mmManager -> mmManager
    android.os.Handler mmHandler -> mmHandler
    int MSG_CALLBACK -> MSG_CALLBACK
    boolean registModule(java.lang.String,cn.ingenic.indroidsync.services.IModuleCallback) -> registModule
    boolean isConnected() -> isConnected
    boolean send(java.lang.String,cn.ingenic.indroidsync.services.SyncData) -> send
    cn.ingenic.indroidsync.Config parseConfig(java.lang.String,cn.ingenic.indroidsync.services.SyncData) -> parseConfig
    boolean sendFile(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String,int) -> sendFile
    void createChannel(java.lang.String,android.os.ParcelUuid) -> createChannel
    java.lang.String getLockedAddress() -> getLockedAddress
    void sendOnChannel(java.lang.String,cn.ingenic.indroidsync.services.SyncData,android.os.ParcelUuid) -> sendOnChannel
    void destroyChannel(java.lang.String,android.os.ParcelUuid) -> destroyChannel
    cn.ingenic.indroidsync.DefaultSyncManager access$0(cn.ingenic.indroidsync.services.SyncService$SyncServiceImpl) -> access$0
cn.ingenic.indroidsync.services.SyncService$SyncServiceImpl$1 -> cn.ingenic.indroidsync.services.SyncService$SyncServiceImpl$1:
    cn.ingenic.indroidsync.services.SyncService$SyncServiceImpl this$1 -> this$1
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.services.SyncService$SyncServiceImpl$Arg -> cn.ingenic.indroidsync.services.SyncService$SyncServiceImpl$Arg:
    java.lang.String module -> module
    long sort -> sort
cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule -> cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule:
    cn.ingenic.indroidsync.services.IModuleCallback mCallback -> mCallback
    java.util.Map mmChannelCallbackMap -> mmChannelCallbackMap
    cn.ingenic.indroidsync.DefaultSyncManager$OnFileChannelCallBack mFileCallback -> mFileCallback
    void onInit() -> onInit
    void onCreate(android.content.Context) -> onCreate
    void onClear(java.lang.String) -> onClear
    void onModeChanged(int) -> onModeChanged
    void onConnectivityStateChange(boolean) -> onConnectivityStateChange
    cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack getChannelCallBack(java.util.UUID) -> getChannelCallBack
    cn.ingenic.indroidsync.Transaction createTransaction() -> createTransaction
    cn.ingenic.indroidsync.DefaultSyncManager$OnFileChannelCallBack getFileChannelCallBack() -> getFileChannelCallBack
    cn.ingenic.indroidsync.services.IModuleCallback access$0(cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule) -> access$0
    java.util.Map access$1(cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule) -> access$1
cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule$1 -> cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule$1:
    cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule this$1 -> this$1
    void onSendComplete(java.lang.String,boolean) -> onSendComplete
    void onRetriveComplete(java.lang.String,boolean) -> onRetriveComplete
cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule$MyOnChannelCallback -> cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule$MyOnChannelCallback:
    android.os.ParcelUuid mmmUuid -> mmmUuid
    cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule this$1 -> this$1
    void onCreateComplete(boolean,boolean) -> onCreateComplete
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void onDestory() -> onDestory
cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule$ThirdPartyTransaction -> cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule$ThirdPartyTransaction:
    cn.ingenic.indroidsync.services.SyncService$ThirdPartyModule this$1 -> this$1
    void onStart(java.util.ArrayList) -> onStart
cn.ingenic.indroidsync.services.mid.Column -> cn.ingenic.indroidsync.services.mid.Column:
    java.lang.String DB_TYPE_INTEGER -> DB_TYPE_INTEGER
    java.lang.String DB_TYPE_TEXT -> DB_TYPE_TEXT
    int INTEGER -> INTEGER
    int LONG -> LONG
    int STRING -> STRING
    java.lang.String getName() -> getName
    java.lang.String getDbType() -> getDbType
    int getType() -> getType
cn.ingenic.indroidsync.services.mid.CustomDatabaseHelperCallback -> cn.ingenic.indroidsync.services.mid.CustomDatabaseHelperCallback:
    void onCreateCustomTables(android.database.sqlite.SQLiteDatabase) -> onCreateCustomTables
    void onCustomUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onCustomUpgrade
    int getCustomVersion() -> getCustomVersion
cn.ingenic.indroidsync.services.mid.DataDestination -> cn.ingenic.indroidsync.services.mid.DataDestination:
    cn.ingenic.indroidsync.services.mid.KeyColumn getDestKeyColumn() -> getDestKeyColumn
    java.util.List getDestColumnList() -> getDestColumnList
    java.util.ArrayList applySyncDatas(cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[]) -> applySyncDatas
    java.lang.String getDestAuthorityName() -> getDestAuthorityName
    android.net.Uri getDestMidUri() -> getDestMidUri
    void onDatasClear() -> onDatasClear
    cn.ingenic.indroidsync.services.mid.DataDestination$DestTransactionManager getTransactionManager() -> getTransactionManager
cn.ingenic.indroidsync.services.mid.DataDestination$DestTransactionManager -> cn.ingenic.indroidsync.services.mid.DataDestination$DestTransactionManager:
    void processRequest(cn.ingenic.indroidsync.services.SyncData) -> processRequest
    void sendReflect() -> sendReflect
    void processRespSent(boolean,java.lang.Object) -> processRespSent
cn.ingenic.indroidsync.services.mid.DataSource -> cn.ingenic.indroidsync.services.mid.DataSource:
    android.net.Uri[] getSrcObservedUris() -> getSrcObservedUris
    cn.ingenic.indroidsync.services.mid.KeyColumn getSrcKeyColumn() -> getSrcKeyColumn
    java.lang.String getSrcAuthorityName() -> getSrcAuthorityName
    android.net.Uri getSrcMidUri() -> getSrcMidUri
    java.util.List getSrcColumnList() -> getSrcColumnList
    android.database.Cursor getSrcDataCursor(java.util.Set) -> getSrcDataCursor
    boolean isSrcMatch(android.database.Cursor,android.database.Cursor) -> isSrcMatch
    void fillSrcSyncData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor) -> fillSrcSyncData
    cn.ingenic.indroidsync.services.SyncData[] appendSrcSyncData(java.util.Set,android.database.Cursor) -> appendSrcSyncData
    cn.ingenic.indroidsync.services.mid.DataSource$SrcTransactionManager getTransactionManager() -> getTransactionManager
cn.ingenic.indroidsync.services.mid.DataSource$SrcTransactionManager -> cn.ingenic.indroidsync.services.mid.DataSource$SrcTransactionManager:
    void sendDiffSyncRequest() -> sendDiffSyncRequest
    void processRequestSent(boolean,java.lang.Object) -> processRequestSent
    void processResponse(cn.ingenic.indroidsync.services.SyncData) -> processResponse
    void processReflect(cn.ingenic.indroidsync.services.SyncData) -> processReflect
cn.ingenic.indroidsync.services.mid.DefaultColumn -> cn.ingenic.indroidsync.services.mid.DefaultColumn:
    java.lang.String TAG -> TAG
    java.lang.String mName -> mName
    java.lang.String mDbType -> mDbType
    int mType -> mType
    java.lang.String convertStrType(int) -> convertStrType
    void checkArgs(java.lang.String,java.lang.String,int) -> checkArgs
    java.lang.String getName() -> getName
    java.lang.String getDbType() -> getDbType
    int getType() -> getType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager -> cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager:
    boolean V -> V
    android.os.Handler mAsyncHandler -> mAsyncHandler
    cn.ingenic.indroidsync.services.mid.MidTableManager mMidMgr -> mMidMgr
    cn.ingenic.indroidsync.services.mid.DataDestination mDest -> mDest
    cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$SyncStatePool mPool -> mPool
    android.os.Handler mHandler -> mHandler
    java.lang.String PRE -> PRE
    void sendReflect() -> sendReflect
    void processRequest(cn.ingenic.indroidsync.services.SyncData) -> processRequest
    void processRespSent(boolean,java.lang.Object) -> processRespSent
    void logv(java.lang.String) -> logv
    void logd(java.lang.String) -> logd
    void logi(java.lang.String) -> logi
    void logw(java.lang.String) -> logw
    void loge(java.lang.String) -> loge
    void loge(java.lang.String,java.lang.Throwable) -> loge
    void access$100(java.lang.String) -> access$100
    void access$200(java.lang.String) -> access$200
    void access$300(java.lang.String) -> access$300
    cn.ingenic.indroidsync.services.mid.MidTableManager access$400(cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager) -> access$400
    void access$500(java.lang.String) -> access$500
    cn.ingenic.indroidsync.services.mid.DataDestination access$600(cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager) -> access$600
    android.os.Handler access$700(cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager) -> access$700
    void access$800(java.lang.String,java.lang.Throwable) -> access$800
cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$1 -> cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$1:
    cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$2 -> cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$2:
    boolean val$isMidSync -> val$isMidSync
    cn.ingenic.indroidsync.services.SyncData[] val$is -> val$is
    cn.ingenic.indroidsync.services.SyncData[] val$us -> val$us
    cn.ingenic.indroidsync.services.SyncData[] val$ds -> val$ds
    cn.ingenic.indroidsync.services.SyncData[] val$as -> val$as
    java.util.Map val$syncMap -> val$syncMap
    cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager this$0 -> this$0
    void run() -> run
cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$HandlerArg -> cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$HandlerArg:
    boolean isREF -> isREF
    java.util.Map syncMap -> syncMap
cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$SyncState -> cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$SyncState:
    int PROCESSING -> PROCESSING
    int COMPLETE -> COMPLETE
    int sync -> sync
    int status -> status
cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$SyncStatePool -> cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager$SyncStatePool:
    java.util.Map mmSyncStatePool -> mmSyncStatePool
    boolean isEmpty() -> isEmpty
    void fillCompleteMapAndProcessingSet(java.util.Map,java.util.Set) -> fillCompleteMapAndProcessingSet
    void putAll(java.util.Map) -> putAll
    void remove(java.util.Map) -> remove
    void signComplete(java.util.Map) -> signComplete
cn.ingenic.indroidsync.services.mid.DefaultDataDestinationImpl -> cn.ingenic.indroidsync.services.mid.DefaultDataDestinationImpl:
    cn.ingenic.indroidsync.services.mid.MidTableManager mMidMgr -> mMidMgr
    cn.ingenic.indroidsync.services.mid.DefaultDataDestTransactionManager mTranMgr -> mTranMgr
    java.lang.String PRE -> PRE
    cn.ingenic.indroidsync.services.mid.KeyColumn getDestKeyColumn() -> getDestKeyColumn
    void onDatasClear() -> onDatasClear
    cn.ingenic.indroidsync.services.mid.DataDestination$DestTransactionManager getTransactionManager() -> getTransactionManager
    android.content.ContentProviderOperation createDeleteOperation(cn.ingenic.indroidsync.services.SyncData) -> createDeleteOperation
    android.content.ContentProviderOperation createUpdateOperation(cn.ingenic.indroidsync.services.SyncData) -> createUpdateOperation
    android.content.ContentProviderOperation createInsertOperation(cn.ingenic.indroidsync.services.SyncData) -> createInsertOperation
    java.util.ArrayList applySyncDatas(cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[]) -> applySyncDatas
    android.net.Uri getDestMidUri() -> getDestMidUri
    void logw(java.lang.String) -> logw
    void loge(java.lang.String) -> loge
cn.ingenic.indroidsync.services.mid.DefaultDataSourceImpl -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceImpl:
    cn.ingenic.indroidsync.services.mid.MidTableManager mMidMgr -> mMidMgr
    cn.ingenic.indroidsync.services.mid.DataSource$SrcTransactionManager mTranMgr -> mTranMgr
    java.lang.String PRE -> PRE
    java.lang.String getSrcAuthorityName() -> getSrcAuthorityName
    android.net.Uri getSrcMidUri() -> getSrcMidUri
    cn.ingenic.indroidsync.services.mid.KeyColumn getSrcKeyColumn() -> getSrcKeyColumn
    boolean isSrcMatch(android.database.Cursor,android.database.Cursor) -> isSrcMatch
    void fillSrcSyncData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor) -> fillSrcSyncData
    cn.ingenic.indroidsync.services.SyncData[] appendSrcSyncData(java.util.Set,android.database.Cursor) -> appendSrcSyncData
    cn.ingenic.indroidsync.services.mid.DataSource$SrcTransactionManager getTransactionManager() -> getTransactionManager
    void loge(java.lang.String) -> loge
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager:
    cn.ingenic.indroidsync.services.mid.MidTableManager mMidMgr -> mMidMgr
    cn.ingenic.indroidsync.services.mid.DataSource mSource -> mSource
    android.os.Handler mAsyncHandler -> mAsyncHandler
    android.os.Handler mHandler -> mHandler
    java.lang.String PRE -> PRE
    void processResponse(cn.ingenic.indroidsync.services.SyncData) -> processResponse
    void doCommitAsync(java.util.Map,java.util.Set) -> doCommitAsync
    void processRequestSent(boolean,java.lang.Object) -> processRequestSent
    void fillSyncMapAndExclude(cn.ingenic.indroidsync.services.SyncData,java.util.Map,java.util.Set) -> fillSyncMapAndExclude
    void processReflect(cn.ingenic.indroidsync.services.SyncData) -> processReflect
    void doMidSyncAsync(java.util.Map,java.util.Set) -> doMidSyncAsync
    java.lang.String getSelection(java.util.Set) -> getSelection
    void sendDiffSyncRequest() -> sendDiffSyncRequest
    android.database.Cursor getMidDataCursor() -> getMidDataCursor
    void doDiffSyncAsync() -> doDiffSyncAsync
    void logv(java.lang.String) -> logv
    void logd(java.lang.String) -> logd
    void logi(java.lang.String) -> logi
    void logw(java.lang.String) -> logw
    void loge(java.lang.String) -> loge
    void loge(java.lang.String,java.lang.Throwable) -> loge
    void access$000(cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager,java.util.Map,java.util.Set) -> access$000
    void access$100(cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager,java.util.Map,java.util.Set) -> access$100
    void access$200(cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager) -> access$200
    cn.ingenic.indroidsync.services.mid.DataSource access$300(cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager) -> access$300
    cn.ingenic.indroidsync.services.mid.MidTableManager access$400(cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager) -> access$400
    android.os.Handler access$500(cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager) -> access$500
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$1 -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$1:
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$2 -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$2:
    java.util.Map val$syncs -> val$syncs
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    void run() -> run
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$3 -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$3:
    java.util.Map val$syncs -> val$syncs
    java.util.Set val$excludes -> val$excludes
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    void run() -> run
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$4 -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$4:
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    void run() -> run
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$DiffDataForInteger -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$DiffDataForInteger:
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    java.lang.Integer getKey(android.database.Cursor) -> getKey
    java.lang.Integer getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Integer) -> appendKey
    void putData(android.database.Cursor,java.util.Map) -> putData
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Object) -> appendKey
    java.lang.Object getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    java.lang.Object getKey(android.database.Cursor) -> getKey
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$DiffDataForLong -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$DiffDataForLong:
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    void putData(android.database.Cursor,java.util.Map) -> putData
    java.lang.Long getKey(android.database.Cursor) -> getKey
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Long) -> appendKey
    java.lang.Long getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Object) -> appendKey
    java.lang.Object getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    java.lang.Object getKey(android.database.Cursor) -> getKey
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$DiffDataForString -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$DiffDataForString:
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    void putData(android.database.Cursor,java.util.Map) -> putData
    java.lang.String getKey(android.database.Cursor) -> getKey
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.String) -> appendKey
    java.lang.String getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Object) -> appendKey
    java.lang.Object getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    java.lang.Object getKey(android.database.Cursor) -> getKey
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$MyHandler -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$MyHandler:
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$UnCommitedDiffDataForInteger -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$UnCommitedDiffDataForInteger:
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    java.lang.Integer getKey(android.database.Cursor) -> getKey
    java.lang.Integer getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Integer) -> appendKey
    void putData(android.database.Cursor,java.util.Map) -> putData
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Object) -> appendKey
    java.lang.Object getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    java.lang.Object getKey(android.database.Cursor) -> getKey
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$UnCommitedDiffDataForLong -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$UnCommitedDiffDataForLong:
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    void putData(android.database.Cursor,java.util.Map) -> putData
    java.lang.Long getKey(android.database.Cursor) -> getKey
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Long) -> appendKey
    java.lang.Long getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Object) -> appendKey
    java.lang.Object getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    java.lang.Object getKey(android.database.Cursor) -> getKey
cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$UnCommitedDiffDataForString -> cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager$UnCommitedDiffDataForString:
    cn.ingenic.indroidsync.services.mid.DefaultDataSourceTransactionManager this$0 -> this$0
    void putData(android.database.Cursor,java.util.Map) -> putData
    java.lang.String getKey(android.database.Cursor) -> getKey
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.String) -> appendKey
    java.lang.String getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Object) -> appendKey
    java.lang.Object getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    java.lang.Object getKey(android.database.Cursor) -> getKey
cn.ingenic.indroidsync.services.mid.DiffDatasProcesser -> cn.ingenic.indroidsync.services.mid.DiffDatasProcesser:
    android.database.Cursor mSourceCursor -> mSourceCursor
    int mKeySourceIndex -> mKeySourceIndex
    android.database.Cursor mMidCursor -> mMidCursor
    int mKeyMidIndex -> mKeyMidIndex
    cn.ingenic.indroidsync.services.mid.DataSource mSource -> mSource
    cn.ingenic.indroidsync.services.mid.MidTableManager mMidMgr -> mMidMgr
    android.os.Handler mHandler -> mHandler
    java.util.Set mInsertedRecords -> mInsertedRecords
    java.util.Set mUpdatedRecords -> mUpdatedRecords
    java.util.Set mDeletedRecords -> mDeletedRecords
    java.lang.String PRE -> PRE
    java.lang.Object getKey(android.database.Cursor) -> getKey
    java.lang.Object getKeyFromMid(android.database.Cursor) -> getKeyFromMid
    void appendKey(cn.ingenic.indroidsync.services.SyncData,java.lang.Object) -> appendKey
    void putData(android.database.Cursor,java.util.Map) -> putData
    void dump() -> dump
    boolean fillDiffDatasPosition() -> fillDiffDatasPosition
    cn.ingenic.indroidsync.services.SyncData createSendDatas() -> createSendDatas
    void sendDiffDatas() -> sendDiffDatas
    void applyChanges() -> applyChanges
    void logd(java.lang.String) -> logd
    void logi(java.lang.String) -> logi
cn.ingenic.indroidsync.services.mid.KeyColumn -> cn.ingenic.indroidsync.services.mid.KeyColumn:
    java.lang.String mMappedName -> mMappedName
    java.lang.String mMappedType -> mMappedType
    int mType -> mType
    void checkArgs(java.lang.String,java.lang.String,int) -> checkArgs
    java.lang.String getName() -> getName
    java.lang.String getDbType() -> getDbType
    java.lang.String getMappedName() -> getMappedName
    java.lang.String toString() -> toString
    int getType() -> getType
cn.ingenic.indroidsync.services.mid.MappedArg -> cn.ingenic.indroidsync.services.mid.MappedArg:
    int sourcePos -> sourcePos
    java.lang.Object key -> key
    int sync -> sync
cn.ingenic.indroidsync.services.mid.Mid -> cn.ingenic.indroidsync.services.mid.Mid:
    java.lang.String SRC -> SRC
    java.lang.String DEST -> DEST
    java.lang.String COLUMN_ID -> COLUMN_ID
    java.lang.String COLUMN_KEY -> COLUMN_KEY
    java.lang.String COLUMN_SYNC -> COLUMN_SYNC
    int VALUE_SYNC_DELETED -> VALUE_SYNC_DELETED
    int VALUE_SYNC_INSERTED -> VALUE_SYNC_INSERTED
    int VALUE_SYNC_UPDATED -> VALUE_SYNC_UPDATED
    int VALUE_SYNC_SUCCESS -> VALUE_SYNC_SUCCESS
cn.ingenic.indroidsync.services.mid.MidDestContentProvider -> cn.ingenic.indroidsync.services.mid.MidDestContentProvider:
    boolean TIME_CAL -> TIME_CAL
    boolean V -> V
    android.content.UriMatcher mUriMatcher -> mUriMatcher
    int URI_BASE -> URI_BASE
    android.database.sqlite.SQLiteOpenHelper mOpenHelper -> mOpenHelper
    cn.ingenic.indroidsync.services.mid.MidTableManager mManager -> mManager
    boolean mIsApplyBatch -> mIsApplyBatch
    java.lang.String PRE -> PRE
    cn.ingenic.indroidsync.services.mid.MidDestContentProvider$SQLiteDatabaseProxy getReadableDatabase() -> getReadableDatabase
    cn.ingenic.indroidsync.services.mid.MidDestContentProvider$SQLiteDatabaseProxy getWritableDatabase() -> getWritableDatabase
    boolean onCreate() -> onCreate
    cn.ingenic.indroidsync.services.mid.CustomDatabaseHelperCallback getCustomDatabaseHelperCallback() -> getCustomDatabaseHelperCallback
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.database.Cursor queryWithCustomUri(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> queryWithCustomUri
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    android.net.Uri insertWithCustomUri(android.net.Uri,android.content.ContentValues) -> insertWithCustomUri
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int deleteWithCustomUri(android.net.Uri,java.lang.String,java.lang.String[]) -> deleteWithCustomUri
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int updateWithCustomUri(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> updateWithCustomUri
    android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    android.net.Uri getNotifyUri() -> getNotifyUri
    boolean isApplyBatch() -> isApplyBatch
    void logv(java.lang.String) -> logv
    void logw(java.lang.String) -> logw
cn.ingenic.indroidsync.services.mid.MidDestContentProvider$SQLiteDatabaseProxy -> cn.ingenic.indroidsync.services.mid.MidDestContentProvider$SQLiteDatabaseProxy:
    android.database.sqlite.SQLiteDatabase mmDB -> mmDB
    android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> query
    long insert(java.lang.String,java.lang.String,android.content.ContentValues) -> insert
    int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
cn.ingenic.indroidsync.services.mid.MidException -> cn.ingenic.indroidsync.services.mid.MidException:
    long serialVersionUID -> serialVersionUID
cn.ingenic.indroidsync.services.mid.MidSrcContentProvider -> cn.ingenic.indroidsync.services.mid.MidSrcContentProvider:
    boolean TIME_CAL -> TIME_CAL
    boolean V -> V
    android.content.UriMatcher URI_MATCHER -> URI_MATCHER
    int URI_BASE -> URI_BASE
    android.database.sqlite.SQLiteOpenHelper mOpenHelper -> mOpenHelper
    cn.ingenic.indroidsync.services.mid.MidTableManager mManager -> mManager
    java.lang.String PRE -> PRE
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    void logv(java.lang.String) -> logv
    void logd(java.lang.String) -> logd
    void loge(java.lang.String) -> loge
cn.ingenic.indroidsync.services.mid.MidTableDatabaseHelper -> cn.ingenic.indroidsync.services.mid.MidTableDatabaseHelper:
    java.lang.String TAG -> TAG
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int MID_DATABASE_VERSION -> MID_DATABASE_VERSION
    int RESERVED_SHIFT -> RESERVED_SHIFT
    int RESERVED_DATABASE_VERSION -> RESERVED_DATABASE_VERSION
    java.lang.String TABLE_MID_SRC -> TABLE_MID_SRC
    java.lang.String TABLE_MID_DEST -> TABLE_MID_DEST
    cn.ingenic.indroidsync.services.mid.MidTableManager mManager -> mManager
    cn.ingenic.indroidsync.services.mid.CustomDatabaseHelperCallback mCallback -> mCallback
    java.util.HashMap sMap -> sMap
    cn.ingenic.indroidsync.services.mid.MidTableDatabaseHelper getInstance(android.content.Context,java.lang.String,cn.ingenic.indroidsync.services.mid.MidTableManager,cn.ingenic.indroidsync.services.mid.CustomDatabaseHelperCallback) -> getInstance
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void createMidDestTable(android.database.sqlite.SQLiteDatabase) -> createMidDestTable
    void createMidSrcTable(android.database.sqlite.SQLiteDatabase) -> createMidSrcTable
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.ingenic.indroidsync.services.mid.MidTableManager -> cn.ingenic.indroidsync.services.mid.MidTableManager:
    java.lang.String TAG -> TAG
    java.lang.String DATA_KEY_MID_SYNC_FLAG -> DATA_KEY_MID_SYNC_FLAG
    java.lang.String DATA_KEY_KESYS -> DATA_KEY_KESYS
    java.lang.String DATA_KEY_SYNCS -> DATA_KEY_SYNCS
    java.lang.String DATA_KEY_EXCLUDES -> DATA_KEY_EXCLUDES
    java.lang.String DATA_KEY_SYNC -> DATA_KEY_SYNC
    java.lang.String DATA_KEY_INSERTS_P -> DATA_KEY_INSERTS_P
    java.lang.String DATA_KEY_UPDATES_P -> DATA_KEY_UPDATES_P
    java.lang.String DATA_KEY_DELETES_P -> DATA_KEY_DELETES_P
    java.lang.String DATA_KEY_APPENDS_P -> DATA_KEY_APPENDS_P
    java.lang.String DATA_KEY_DATAS -> DATA_KEY_DATAS
    java.lang.String DATA_KEY_TRANSACTION -> DATA_KEY_TRANSACTION
    int DATA_VALUE_TRANSACTION_INVALID -> DATA_VALUE_TRANSACTION_INVALID
    int DATA_VALUE_TRANSACTION_REF -> DATA_VALUE_TRANSACTION_REF
    int DATA_VALUE_TRANSACTION_REQ -> DATA_VALUE_TRANSACTION_REQ
    int DATA_VALUE_TRANSACTION_RESP -> DATA_VALUE_TRANSACTION_RESP
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.services.mid.MidTableManager$MidContentObserver mContentObserver -> mContentObserver
    cn.ingenic.indroidsync.services.mid.KeyColumn mSrcKey -> mSrcKey
    cn.ingenic.indroidsync.services.mid.KeyColumn mDestKey -> mDestKey
    java.util.List mSrcTableList -> mSrcTableList
    java.util.List mDestTableList -> mDestTableList
    cn.ingenic.indroidsync.services.mid.DataSource mSource -> mSource
    cn.ingenic.indroidsync.services.mid.DataDestination mDestination -> mDestination
    cn.ingenic.indroidsync.services.SyncModule mModule -> mModule
    int MSG_BASE -> MSG_BASE
    int MSG_PROCESS_REF_ASYNC -> MSG_PROCESS_REF_ASYNC
    java.util.Set sReservedNames -> sReservedNames
    java.util.Map sTypesMap -> sTypesMap
    void onModuleInit() -> onModuleInit
    void onModuleClear(java.lang.String) -> onModuleClear
    void onModuleConnectivityChange(boolean) -> onModuleConnectivityChange
    void executeSync() -> executeSync
    void init(cn.ingenic.indroidsync.services.mid.DataSource,cn.ingenic.indroidsync.services.mid.DataDestination) -> init
    boolean hasSource() -> hasSource
    boolean hasDest() -> hasDest
    java.util.List getSrcTableList() -> getSrcTableList
    java.util.List getDestTableList() -> getDestTableList
    cn.ingenic.indroidsync.services.mid.KeyColumn getSrcKey() -> getSrcKey
    cn.ingenic.indroidsync.services.mid.KeyColumn getDestKey() -> getDestKey
    java.lang.String getSrcAuthorityName() -> getSrcAuthorityName
    java.lang.String getDestAuthorityName() -> getDestAuthorityName
    android.net.Uri getSrcUri() -> getSrcUri
    android.net.Uri getDestUri() -> getDestUri
    void onRetriveMidSyncData(cn.ingenic.indroidsync.services.SyncData) -> onRetriveMidSyncData
    void startObserve() -> startObserve
    cn.ingenic.indroidsync.services.mid.DataSource access$000(cn.ingenic.indroidsync.services.mid.MidTableManager) -> access$000
cn.ingenic.indroidsync.services.mid.MidTableManager$MidContentObserver -> cn.ingenic.indroidsync.services.mid.MidTableManager$MidContentObserver:
    cn.ingenic.indroidsync.services.mid.MidTableManager this$0 -> this$0
    void onChange(boolean) -> onChange
    void onChange(boolean,android.net.Uri) -> onChange
cn.ingenic.indroidsync.services.mid.MidTableManager$ProcessREFArg -> cn.ingenic.indroidsync.services.mid.MidTableManager$ProcessREFArg:
    java.util.Set deletedKeysToCommit -> deletedKeysToCommit
    java.util.Set otherKeysToCommit -> otherKeysToCommit
    java.util.Set exculdeKeys -> exculdeKeys
cn.ingenic.indroidsync.services.mid.MidTools -> cn.ingenic.indroidsync.services.mid.MidTools:
    java.lang.String TAG -> TAG
    java.lang.Object getValue(cn.ingenic.indroidsync.services.SyncData,cn.ingenic.indroidsync.services.mid.Column) -> getValue
    java.lang.Object getValueInternal(cn.ingenic.indroidsync.services.SyncData,java.lang.String,int) -> getValueInternal
    java.lang.Object getKeyValue(cn.ingenic.indroidsync.services.SyncData,cn.ingenic.indroidsync.services.mid.KeyColumn,boolean) -> getKeyValue
    java.lang.Object getValue(android.database.Cursor,cn.ingenic.indroidsync.services.mid.Column) -> getValue
    java.lang.Object getValueInternal(android.database.Cursor,int,int) -> getValueInternal
    java.lang.Object getKeyValue(android.database.Cursor,cn.ingenic.indroidsync.services.mid.KeyColumn,boolean) -> getKeyValue
    android.content.ContentValues getValues(android.database.Cursor,java.util.List) -> getValues
    android.content.ContentValues getValues(cn.ingenic.indroidsync.services.SyncData,java.util.List) -> getValues
    void fillSyncData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor,java.util.List) -> fillSyncData
    void fillSyncData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor,cn.ingenic.indroidsync.services.mid.Column) -> fillSyncData
cn.ingenic.indroidsync.services.mid.ObtainSyncModule -> cn.ingenic.indroidsync.services.mid.ObtainSyncModule:
    cn.ingenic.indroidsync.services.SyncModule getSyncModule() -> getSyncModule
cn.ingenic.indroidsync.services.mid.SimpleMidDestManager -> cn.ingenic.indroidsync.services.mid.SimpleMidDestManager:
    cn.ingenic.indroidsync.services.mid.SimpleMidDestManager$MyDataDestinationImpl mDest -> mDest
    java.util.List getDestColumnList() -> getDestColumnList
    cn.ingenic.indroidsync.services.mid.KeyColumn getDestKeyColumn() -> getDestKeyColumn
    java.util.ArrayList applySyncDatas(cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[]) -> applySyncDatas
    android.content.ContentProviderOperation createDeleteOperation(cn.ingenic.indroidsync.services.SyncData) -> createDeleteOperation
    android.content.ContentProviderOperation createUpdateOperation(cn.ingenic.indroidsync.services.SyncData) -> createUpdateOperation
    android.content.ContentProviderOperation createInsertOperation(cn.ingenic.indroidsync.services.SyncData) -> createInsertOperation
    java.lang.String getMidAuthorityName() -> getMidAuthorityName
    void onDatasClear() -> onDatasClear
cn.ingenic.indroidsync.services.mid.SimpleMidDestManager$MyDataDestinationImpl -> cn.ingenic.indroidsync.services.mid.SimpleMidDestManager$MyDataDestinationImpl:
    cn.ingenic.indroidsync.services.mid.SimpleMidDestManager this$0 -> this$0
    java.util.List getDestColumnList() -> getDestColumnList
    java.util.ArrayList applySyncDatas(cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[]) -> applySyncDatas
    java.util.ArrayList superApplySyncDatas(cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[],cn.ingenic.indroidsync.services.SyncData[]) -> superApplySyncDatas
    java.lang.String getDestAuthorityName() -> getDestAuthorityName
    cn.ingenic.indroidsync.services.mid.KeyColumn getDestKeyColumn() -> getDestKeyColumn
    void onDatasClear() -> onDatasClear
cn.ingenic.indroidsync.services.mid.SimpleMidSrcManager -> cn.ingenic.indroidsync.services.mid.SimpleMidSrcManager:
    cn.ingenic.indroidsync.services.mid.SimpleMidSrcManager$MyDataSourceImpl mMySource -> mMySource
    cn.ingenic.indroidsync.services.mid.KeyColumn getSrcKeyColumn() -> getSrcKeyColumn
    android.net.Uri[] getSrcObservedUris() -> getSrcObservedUris
    java.util.List getSrcColumnList() -> getSrcColumnList
    android.database.Cursor getSrcDataCursor(java.util.Set) -> getSrcDataCursor
    boolean isSrcMatch(android.database.Cursor,android.database.Cursor) -> isSrcMatch
    void fillSrcSyncData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor) -> fillSrcSyncData
    cn.ingenic.indroidsync.services.SyncData[] appendSrcSyncData(java.util.Set,android.database.Cursor) -> appendSrcSyncData
    java.lang.String getMidAuthorityName() -> getMidAuthorityName
cn.ingenic.indroidsync.services.mid.SimpleMidSrcManager$MyDataSourceImpl -> cn.ingenic.indroidsync.services.mid.SimpleMidSrcManager$MyDataSourceImpl:
    cn.ingenic.indroidsync.services.mid.SimpleMidSrcManager this$0 -> this$0
    android.net.Uri[] getSrcObservedUris() -> getSrcObservedUris
    java.util.List getSrcColumnList() -> getSrcColumnList
    android.database.Cursor getSrcDataCursor(java.util.Set) -> getSrcDataCursor
    cn.ingenic.indroidsync.services.mid.KeyColumn getSrcKeyColumn() -> getSrcKeyColumn
    boolean isSrcMatch(android.database.Cursor,android.database.Cursor) -> isSrcMatch
    boolean superIsSrcMatch(android.database.Cursor,android.database.Cursor) -> superIsSrcMatch
    void fillSrcSyncData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor) -> fillSrcSyncData
    void superFillSrcSyncData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor) -> superFillSrcSyncData
    cn.ingenic.indroidsync.services.SyncData[] appendSrcSyncData(java.util.Set,android.database.Cursor) -> appendSrcSyncData
    cn.ingenic.indroidsync.services.SyncData[] superAppendSrcSyncData(java.util.Set,android.database.Cursor) -> superAppendSrcSyncData
    java.lang.String getSrcAuthorityName() -> getSrcAuthorityName
    android.net.Uri getSrcMidUri() -> getSrcMidUri
cn.ingenic.indroidsync.services.mid.SyncColumn -> cn.ingenic.indroidsync.services.mid.SyncColumn:
    java.lang.String getName() -> getName
    java.lang.String getDbType() -> getDbType
    int getType() -> getType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
cn.ingenic.indroidsync.services.mid.Transaction -> cn.ingenic.indroidsync.services.mid.Transaction:
    long mId -> mId
    java.util.Map mDatas -> mDatas
    cn.ingenic.indroidsync.services.mid.Transaction$OnRemoveListener mRemoveListener -> mRemoveListener
    long getId() -> getId
    java.util.Map getDatas() -> getDatas
    cn.ingenic.indroidsync.services.mid.Transaction$OnRemoveListener getOnRemoveListener() -> getOnRemoveListener
cn.ingenic.indroidsync.services.mid.Transaction$OnRemoveListener -> cn.ingenic.indroidsync.services.mid.Transaction$OnRemoveListener:
    void onRemove(cn.ingenic.indroidsync.services.mid.Transaction,boolean) -> onRemove
cn.ingenic.indroidsync.services.mid.TransactionPool -> cn.ingenic.indroidsync.services.mid.TransactionPool:
    java.lang.String TAG -> TAG
    int NOT_FOUND -> NOT_FOUND
    long mMaxTranId -> mMaxTranId
    java.util.HashMap mTotalTransMap -> mTotalTransMap
    java.util.HashMap mTotalDatasMaxStMap -> mTotalDatasMaxStMap
    java.util.HashMap mTotalDatasTranIdsMap -> mTotalDatasTranIdsMap
    java.util.Set getDatasAfter(long) -> getDatasAfter
    void push(cn.ingenic.indroidsync.services.mid.Transaction) -> push
    cn.ingenic.indroidsync.services.mid.Transaction removeTran(long,boolean) -> removeTran
    void removeEntryFromOlderTrans(java.lang.Object) -> removeEntryFromOlderTrans
    void removeTranIdsMapValue(long) -> removeTranIdsMapValue
    void removeMaxStMapValue(cn.ingenic.indroidsync.services.mid.Transaction) -> removeMaxStMapValue
    cn.ingenic.indroidsync.services.mid.Transaction pop(long) -> pop
cn.ingenic.indroidsync.services.mid.UnCommitedDatasProcesser -> cn.ingenic.indroidsync.services.mid.UnCommitedDatasProcesser:
    java.util.Map mExclude -> mExclude
    java.lang.String PRE -> PRE
    boolean fillDiffDatasPosition() -> fillDiffDatasPosition
    void applyChanges() -> applyChanges
    cn.ingenic.indroidsync.services.SyncData createSendDatas() -> createSendDatas
    void logv(java.lang.String) -> logv
    void logw(java.lang.String) -> logw
    void loge(java.lang.String) -> loge
cn.ingenic.indroidsync.sms.Sms -> cn.ingenic.indroidsync.sms.Sms:
    android.net.Uri MMSSMS_CONTENT_URI -> MMSSMS_CONTENT_URI
    android.net.Uri THREAD_CONTENT_URI -> THREAD_CONTENT_URI
    java.lang.String ID -> ID
    java.lang.String THREAD_KEY -> THREAD_KEY
    android.net.Uri access$0() -> access$0
cn.ingenic.indroidsync.sms.Sms$Canonical -> cn.ingenic.indroidsync.sms.Sms$Canonical:
    android.net.Uri sAllCanonical -> sAllCanonical
    java.lang.String ID -> ID
    java.lang.String ADDRESS -> ADDRESS
cn.ingenic.indroidsync.sms.Sms$MidColumns -> cn.ingenic.indroidsync.sms.Sms$MidColumns:
    java.lang.String READ -> READ
    java.lang.String TYPE -> TYPE
    java.lang.String BODY -> BODY
    java.lang.String ERROR_CODE -> ERROR_CODE
cn.ingenic.indroidsync.sms.Sms$SendColumns -> cn.ingenic.indroidsync.sms.Sms$SendColumns:
    java.lang.String ADDRESS -> ADDRESS
    java.lang.String DATE -> DATE
    java.lang.String READ -> READ
    java.lang.String TYPE -> TYPE
    java.lang.String BODY -> BODY
    java.lang.String ERROR_CODE -> ERROR_CODE
    java.lang.String SEEN -> SEEN
    java.lang.String THREAD_ID -> THREAD_ID
cn.ingenic.indroidsync.sms.Sms$Thread -> cn.ingenic.indroidsync.sms.Sms$Thread:
    android.net.Uri sAllThreadsUri -> sAllThreadsUri
    java.lang.String ID -> ID
    java.lang.String DATE -> DATE
    java.lang.String MESSAGE_COUNT -> MESSAGE_COUNT
    java.lang.String SNIPPET -> SNIPPET
    java.lang.String RECIPIENT_IDS -> RECIPIENT_IDS
    java.lang.String READ -> READ
    java.lang.String TYPE -> TYPE
    java.lang.String ERROR -> ERROR
    java.lang.String RECIPIENT_ADS_KEY -> RECIPIENT_ADS_KEY
cn.ingenic.indroidsync.sms.SmsMidManager -> cn.ingenic.indroidsync.sms.SmsMidManager:
    java.util.Map canonicalMap -> canonicalMap
    java.util.List columnList -> columnList
    java.util.List getSrcColumnList() -> getSrcColumnList
    android.net.Uri[] getSrcObservedUris() -> getSrcObservedUris
    android.database.Cursor getSrcDataCursor(java.util.Set) -> getSrcDataCursor
    java.util.Map getCanonicalMap() -> getCanonicalMap
    cn.ingenic.indroidsync.services.SyncData[] appendSrcSyncData(java.util.Set,android.database.Cursor) -> appendSrcSyncData
    java.lang.String compareStringArray(java.lang.String[]) -> compareStringArray
    cn.ingenic.indroidsync.services.SyncData[] getThreadDataArray(java.lang.String,java.lang.String[]) -> getThreadDataArray
    cn.ingenic.indroidsync.services.SyncData getThreadSyncData(android.database.Cursor) -> getThreadSyncData
    void executeSmsSendData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor) -> executeSmsSendData
    void fillSrcSyncData(cn.ingenic.indroidsync.services.SyncData,android.database.Cursor) -> fillSrcSyncData
    cn.ingenic.indroidsync.services.mid.KeyColumn getSrcKeyColumn() -> getSrcKeyColumn
    java.lang.String getMidAuthorityName() -> getMidAuthorityName
cn.ingenic.indroidsync.sms.SmsMidProvider -> cn.ingenic.indroidsync.sms.SmsMidProvider:
    cn.ingenic.indroidsync.services.SyncModule getSyncModule() -> getSyncModule
cn.ingenic.indroidsync.sms.SmsModule -> cn.ingenic.indroidsync.sms.SmsModule:
    cn.ingenic.indroidsync.sms.SmsModule mInstance -> mInstance
    java.lang.String SMS_NAME -> SMS_NAME
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.sms.SmsMidManager mSmsMidManager -> mSmsMidManager
    cn.ingenic.indroidsync.sms.SmsModule getInstance(android.content.Context) -> getInstance
    void onCreate() -> onCreate
    cn.ingenic.indroidsync.services.mid.MidTableManager getMidTableManager() -> getMidTableManager
cn.ingenic.indroidsync.sms.SmsReceiver -> cn.ingenic.indroidsync.sms.SmsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void send(android.content.Context,java.lang.String,java.lang.String) -> send
    android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent) -> getMessagesFromIntent
cn.ingenic.indroidsync.syncdemo.MusicModule -> cn.ingenic.indroidsync.syncdemo.MusicModule:
    java.lang.String TAG -> TAG
    boolean mCreated -> mCreated
    java.lang.String CMD -> CMD
    int START -> START
    int PAUSE -> PAUSE
    void onCreate() -> onCreate
    boolean isCreated() -> isCreated
    void onRetrive(cn.ingenic.indroidsync.services.SyncData) -> onRetrive
cn.ingenic.indroidsync.transport.BluetoothChannel -> cn.ingenic.indroidsync.transport.BluetoothChannel:
    int CUSTOM -> CUSTOM
    int SERVICE -> SERVICE
    java.lang.String CUSTOM_NAME -> CUSTOM_NAME
    java.lang.String SERVICE_NAME -> SERVICE_NAME
    java.util.UUID CUSTOM_UUID -> CUSTOM_UUID
    java.util.UUID SERVICE_UUID -> SERVICE_UUID
    java.util.UUID W_CUSTOM_UUID -> W_CUSTOM_UUID
    java.util.UUID W_SERVICE_UUID -> W_SERVICE_UUID
    java.util.UUID getUUID() -> getUUID
    boolean isAvailiable() -> isAvailiable
    void send(cn.ingenic.indroidsync.data.ProjoList) -> send
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void close() -> close
cn.ingenic.indroidsync.transport.BluetoothChannelManager -> cn.ingenic.indroidsync.transport.BluetoothChannelManager:
    int BASE -> BASE
    int SETUP_MSG -> SETUP_MSG
    int CLIENT_CLOSE_MSG -> CLIENT_CLOSE_MSG
    int RETRIVE_MSG -> RETRIVE_MSG
    int CLEAR_MSG -> CLEAR_MSG
    int CREATE_CHANNLE_MSG -> CREATE_CHANNLE_MSG
    int DESTORY_CHANNEL_MSG -> DESTORY_CHANNEL_MSG
    int NEW_CLIENT_MSG -> NEW_CLIENT_MSG
    void prepare(java.lang.String) -> prepare
    void send(cn.ingenic.indroidsync.data.ProjoList,boolean) -> send
    cn.ingenic.indroidsync.transport.BluetoothChannel getChannel(java.util.UUID) -> getChannel
    boolean listenChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> listenChannel
    void createChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> createChannel
    void destoryChannle(java.util.UUID) -> destoryChannle
cn.ingenic.indroidsync.transport.BluetoothClient -> cn.ingenic.indroidsync.transport.BluetoothClient:
    android.bluetooth.BluetoothSocket mSocket -> mSocket
    android.os.Handler mHandler -> mHandler
    java.lang.Thread mReadThread -> mReadThread
    java.util.UUID mUUID -> mUUID
    boolean mClosed -> mClosed
    boolean mAvailiable -> mAvailiable
    java.io.OutputStream mOutput -> mOutput
    java.io.InputStream mInput -> mInput
    java.lang.Runnable mReadRunnable -> mReadRunnable
    void sendClientCloseMsg() -> sendClientCloseMsg
    void write(java.lang.Object,java.io.OutputStream) -> write
    void send(cn.ingenic.indroidsync.data.ProjoList) -> send
    void close() -> close
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void reply(java.lang.String,cn.ingenic.indroidsync.data.ServiceProjo) -> reply
    java.util.UUID getUUID() -> getUUID
    boolean isAvailiable() -> isAvailiable
    java.io.InputStream access$0(cn.ingenic.indroidsync.transport.BluetoothClient) -> access$0
    android.bluetooth.BluetoothSocket access$1(cn.ingenic.indroidsync.transport.BluetoothClient) -> access$1
    void access$2(cn.ingenic.indroidsync.transport.BluetoothClient,java.io.InputStream) -> access$2
    void access$3(cn.ingenic.indroidsync.transport.BluetoothClient) -> access$3
    java.lang.Thread access$4(cn.ingenic.indroidsync.transport.BluetoothClient) -> access$4
cn.ingenic.indroidsync.transport.BluetoothClient$1 -> cn.ingenic.indroidsync.transport.BluetoothClient$1:
    cn.ingenic.indroidsync.transport.BluetoothClient this$0 -> this$0
    void run() -> run
cn.ingenic.indroidsync.transport.BluetoothServer -> cn.ingenic.indroidsync.transport.BluetoothServer:
    android.os.Handler mHandler -> mHandler
    android.bluetooth.BluetoothSocket mClient -> mClient
    boolean mClosed -> mClosed
    boolean mAvailiable -> mAvailiable
    java.lang.Thread mCurThread -> mCurThread
    java.util.UUID mUUID -> mUUID
    java.lang.String mName -> mName
    android.bluetooth.BluetoothServerSocket mServerSocket -> mServerSocket
    java.io.InputStream mInput -> mInput
    java.io.OutputStream mOutput -> mOutput
    java.lang.Object sReadLock -> sReadLock
    void send(cn.ingenic.indroidsync.data.ProjoList) -> send
    void sendClientCloseMsg() -> sendClientCloseMsg
    void run() -> run
    java.lang.Object read(java.io.InputStream) -> read
    byte[] read(int,java.io.InputStream) -> read
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void reply(java.lang.String,cn.ingenic.indroidsync.data.ServiceProjo) -> reply
    void close() -> close
    java.util.UUID getUUID() -> getUUID
    boolean isAvailiable() -> isAvailiable
cn.ingenic.indroidsync.transport.BluetoothServiceClient -> cn.ingenic.indroidsync.transport.BluetoothServiceClient:
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void reply(java.lang.String,cn.ingenic.indroidsync.data.ServiceProjo) -> reply
cn.ingenic.indroidsync.transport.BluetoothServiceServer -> cn.ingenic.indroidsync.transport.BluetoothServiceServer:
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void reply(java.lang.String,cn.ingenic.indroidsync.data.ServiceProjo) -> reply
cn.ingenic.indroidsync.transport.ClientBTChannelManager -> cn.ingenic.indroidsync.transport.ClientBTChannelManager:
    java.lang.String TAG -> TAG
    android.os.Handler mTransportHandler -> mTransportHandler
    cn.ingenic.indroidsync.transport.ClientBTChannelManager$MyHandler mHandler -> mHandler
    java.util.Map mChannelMap -> mChannelMap
    android.bluetooth.BluetoothAdapter mAdapter -> mAdapter
    java.util.UUID mCustomUUID -> mCustomUUID
    java.util.UUID mServiceUUID -> mServiceUUID
    void prepare(java.lang.String) -> prepare
    cn.ingenic.indroidsync.transport.BluetoothChannel getChannel(java.util.UUID) -> getChannel
    void createChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> createChannel
    void destoryChannle(java.util.UUID) -> destoryChannle
    boolean listenChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> listenChannel
    void send(cn.ingenic.indroidsync.data.ProjoList,boolean) -> send
    void logv(java.lang.String) -> logv
    void log(java.lang.String) -> log
    void logw(java.lang.String) -> logw
    void logi(java.lang.String) -> logi
    void loge(java.lang.String) -> loge
    android.os.Handler access$0(cn.ingenic.indroidsync.transport.ClientBTChannelManager) -> access$0
    java.util.Map access$1(cn.ingenic.indroidsync.transport.ClientBTChannelManager) -> access$1
    void access$2(java.lang.String) -> access$2
    android.bluetooth.BluetoothAdapter access$3(cn.ingenic.indroidsync.transport.ClientBTChannelManager) -> access$3
    java.util.UUID access$4(cn.ingenic.indroidsync.transport.ClientBTChannelManager) -> access$4
    cn.ingenic.indroidsync.transport.ClientBTChannelManager$MyHandler access$5(cn.ingenic.indroidsync.transport.ClientBTChannelManager) -> access$5
    void access$6(java.lang.String) -> access$6
    java.util.UUID access$7(cn.ingenic.indroidsync.transport.ClientBTChannelManager) -> access$7
    void access$8(java.lang.String) -> access$8
    void access$9(java.lang.String) -> access$9
    void access$10(java.lang.String) -> access$10
cn.ingenic.indroidsync.transport.ClientBTChannelManager$ChannelCreateData -> cn.ingenic.indroidsync.transport.ClientBTChannelManager$ChannelCreateData:
    java.util.UUID uuid -> uuid
    cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack callback -> callback
cn.ingenic.indroidsync.transport.ClientBTChannelManager$MyHandler -> cn.ingenic.indroidsync.transport.ClientBTChannelManager$MyHandler:
    cn.ingenic.indroidsync.transport.ClientBTChannelManager this$0 -> this$0
    void notifyStateChange(int) -> notifyStateChange
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.transport.ClientBTPrivateChannel -> cn.ingenic.indroidsync.transport.ClientBTPrivateChannel:
    cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack mCallback -> mCallback
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void close() -> close
cn.ingenic.indroidsync.transport.FileChannel -> cn.ingenic.indroidsync.transport.FileChannel:
    void send(cn.ingenic.indroidsync.transport.FileChannelManager$Request) -> send
    void retrive(cn.ingenic.indroidsync.transport.FileChannelManager$Retrive) -> retrive
    void close() -> close
cn.ingenic.indroidsync.transport.FileChannelManager -> cn.ingenic.indroidsync.transport.FileChannelManager:
    java.lang.String TAG -> TAG
    java.util.UUID FILE_UUID -> FILE_UUID
    java.lang.String FILE_NAME -> FILE_NAME
    cn.ingenic.indroidsync.transport.FileChannel mChannel -> mChannel
    java.util.Queue mSendingQueue -> mSendingQueue
    java.util.Queue mReceivingQueue -> mReceivingQueue
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.transport.FileChannelManager$MyHandler mHandler -> mHandler
    android.os.Handler mTransportHandler -> mTransportHandler
    cn.ingenic.indroidsync.transport.FileChannelManager$SendHandler mSendHandler -> mSendHandler
    cn.ingenic.indroidsync.transport.FileChannelManager$RetriveHandler mRetriveHandler -> mRetriveHandler
    int IDLE -> IDLE
    int PREPARING -> PREPARING
    int CONNECTED -> CONNECTED
    int DISCONNECTING -> DISCONNECTING
    int mState -> mState
    java.io.File getUniqueDestination(java.lang.String,java.lang.String,java.lang.String) -> getUniqueDestination
    void clean() -> clean
    void close() -> close
    void close(boolean) -> close
    void sendFile(java.lang.String,java.lang.String,int,java.io.InputStream) -> sendFile
    boolean checkExternalStorageState() -> checkExternalStorageState
    void notifyComplete(java.lang.String,java.lang.String,boolean,boolean) -> notifyComplete
    void sendFileChannelCloseCmd() -> sendFileChannelCloseCmd
    void retriveFile(java.lang.String,java.lang.String,int,java.lang.String) -> retriveFile
    void continueWork() -> continueWork
    cn.ingenic.indroidsync.transport.FileChannel access$0(cn.ingenic.indroidsync.transport.FileChannelManager) -> access$0
    void access$1(cn.ingenic.indroidsync.transport.FileChannelManager,int) -> access$1
    cn.ingenic.indroidsync.transport.FileChannelManager$MyHandler access$2(cn.ingenic.indroidsync.transport.FileChannelManager) -> access$2
    java.util.Queue access$3(cn.ingenic.indroidsync.transport.FileChannelManager) -> access$3
    java.util.Queue access$4(cn.ingenic.indroidsync.transport.FileChannelManager) -> access$4
    cn.ingenic.indroidsync.transport.FileChannelManager$SendHandler access$5(cn.ingenic.indroidsync.transport.FileChannelManager) -> access$5
    cn.ingenic.indroidsync.transport.FileChannelManager$RetriveHandler access$6(cn.ingenic.indroidsync.transport.FileChannelManager) -> access$6
    void access$7(cn.ingenic.indroidsync.transport.FileChannelManager,java.lang.String,java.lang.String,boolean,boolean) -> access$7
cn.ingenic.indroidsync.transport.FileChannelManager$MyHandler -> cn.ingenic.indroidsync.transport.FileChannelManager$MyHandler:
    int BASE -> BASE
    int CONNECTED_MSG -> CONNECTED_MSG
    int SEND_OVER_MSG -> SEND_OVER_MSG
    int RETRIVE_OVER_MSG -> RETRIVE_OVER_MSG
    int EXCEPTION_MSG -> EXCEPTION_MSG
    int DELAYED_CLOSE_MSG -> DELAYED_CLOSE_MSG
    long TIMEOUT -> TIMEOUT
    cn.ingenic.indroidsync.transport.FileChannelManager this$0 -> this$0
    void closeDelayed() -> closeDelayed
    void removeCloseMsg() -> removeCloseMsg
    void work() -> work
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.transport.FileChannelManager$Request -> cn.ingenic.indroidsync.transport.FileChannelManager$Request:
    java.lang.String module -> module
    java.lang.String name -> name
    int length -> length
    java.io.InputStream in -> in
cn.ingenic.indroidsync.transport.FileChannelManager$Retrive -> cn.ingenic.indroidsync.transport.FileChannelManager$Retrive:
    java.lang.String module -> module
    java.lang.String name -> name
    int length -> length
cn.ingenic.indroidsync.transport.FileChannelManager$RetriveHandler -> cn.ingenic.indroidsync.transport.FileChannelManager$RetriveHandler:
    int BASE -> BASE
    int RETRIVE_MSG -> RETRIVE_MSG
    cn.ingenic.indroidsync.transport.FileChannelManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.transport.FileChannelManager$SendHandler -> cn.ingenic.indroidsync.transport.FileChannelManager$SendHandler:
    int BASE -> BASE
    int SEND_MSG -> SEND_MSG
    cn.ingenic.indroidsync.transport.FileChannelManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.transport.FileClientChannel -> cn.ingenic.indroidsync.transport.FileClientChannel:
    java.lang.String TAG -> TAG
    android.os.Handler mHandler -> mHandler
    android.bluetooth.BluetoothSocket mClient -> mClient
    android.content.Context mContext -> mContext
    void send(cn.ingenic.indroidsync.transport.FileChannelManager$Request) -> send
    void retrive(cn.ingenic.indroidsync.transport.FileChannelManager$Retrive) -> retrive
    void close() -> close
cn.ingenic.indroidsync.transport.FileServerChannel -> cn.ingenic.indroidsync.transport.FileServerChannel:
    java.lang.String TAG -> TAG
    android.bluetooth.BluetoothServerSocket mServerSocket -> mServerSocket
    android.bluetooth.BluetoothSocket mClient -> mClient
    java.lang.Thread mServerThread -> mServerThread
    boolean mClosed -> mClosed
    android.os.Handler mHandler -> mHandler
    android.content.Context mContext -> mContext
    void send(cn.ingenic.indroidsync.transport.FileChannelManager$Request) -> send
    void retrive(cn.ingenic.indroidsync.transport.FileChannelManager$Retrive) -> retrive
    void run() -> run
    void close() -> close
cn.ingenic.indroidsync.transport.ServerBTChannelManager -> cn.ingenic.indroidsync.transport.ServerBTChannelManager:
    java.lang.String TAG -> TAG
    java.lang.String SETUP -> SETUP
    android.os.Handler mTransportHandler -> mTransportHandler
    cn.ingenic.indroidsync.transport.ServerBTChannelManager$MyHandler mHandler -> mHandler
    java.util.concurrent.Executor mExecutor -> mExecutor
    java.util.UUID mCustomUUID -> mCustomUUID
    java.util.UUID mServiceUUID -> mServiceUUID
    java.util.Map mChannelMap -> mChannelMap
    void prepare(java.lang.String) -> prepare
    cn.ingenic.indroidsync.transport.BluetoothChannel getChannel(java.util.UUID) -> getChannel
    void createChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> createChannel
    void destoryChannle(java.util.UUID) -> destoryChannle
    boolean listenChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> listenChannel
    void send(cn.ingenic.indroidsync.data.ProjoList,boolean) -> send
    void logv(java.lang.String) -> logv
    void log(java.lang.String) -> log
    void logw(java.lang.String) -> logw
    void logi(java.lang.String) -> logi
    void loge(java.lang.String) -> loge
    void access$0(java.lang.String) -> access$0
    java.util.Map access$1(cn.ingenic.indroidsync.transport.ServerBTChannelManager) -> access$1
    cn.ingenic.indroidsync.transport.ServerBTChannelManager$MyHandler access$2(cn.ingenic.indroidsync.transport.ServerBTChannelManager) -> access$2
    java.util.UUID access$3(cn.ingenic.indroidsync.transport.ServerBTChannelManager) -> access$3
    void access$4(java.lang.String) -> access$4
    java.util.UUID access$5(cn.ingenic.indroidsync.transport.ServerBTChannelManager) -> access$5
    java.util.concurrent.Executor access$6(cn.ingenic.indroidsync.transport.ServerBTChannelManager) -> access$6
    void access$7(java.lang.String) -> access$7
    void access$8(java.lang.String) -> access$8
    void access$9(java.lang.String) -> access$9
    android.os.Handler access$10(cn.ingenic.indroidsync.transport.ServerBTChannelManager) -> access$10
cn.ingenic.indroidsync.transport.ServerBTChannelManager$MyHandler -> cn.ingenic.indroidsync.transport.ServerBTChannelManager$MyHandler:
    java.lang.Runnable mmRunnable -> mmRunnable
    cn.ingenic.indroidsync.transport.ServerBTChannelManager this$0 -> this$0
    java.lang.String convertMessage(int) -> convertMessage
    void listenUp() -> listenUp
    void clearChannel() -> clearChannel
    void handleMessage(android.os.Message) -> handleMessage
    void notifyStateChanged(int) -> notifyStateChanged
    void access$0(cn.ingenic.indroidsync.transport.ServerBTChannelManager$MyHandler) -> access$0
cn.ingenic.indroidsync.transport.ServerBTChannelManager$MyHandler$1 -> cn.ingenic.indroidsync.transport.ServerBTChannelManager$MyHandler$1:
    cn.ingenic.indroidsync.transport.ServerBTChannelManager$MyHandler this$1 -> this$1
    void run() -> run
cn.ingenic.indroidsync.transport.ServerBTPrivateChannel -> cn.ingenic.indroidsync.transport.ServerBTPrivateChannel:
    cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack mCallback -> mCallback
    void onRetrive(cn.ingenic.indroidsync.data.ProjoList) -> onRetrive
    void close() -> close
    void run() -> run
    java.util.UUID getUUID() -> getUUID
    boolean isAvailiable() -> isAvailiable
    void send(cn.ingenic.indroidsync.data.ProjoList) -> send
cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient -> cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient:
    java.lang.String TAG -> TAG
    android.os.Handler mTransportHandler -> mTransportHandler
    cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient$MyHandler mHandler -> mHandler
    java.util.Map mChannelMap -> mChannelMap
    android.bluetooth.BluetoothAdapter mAdapter -> mAdapter
    java.util.UUID mCustomUUID -> mCustomUUID
    long mLastCloseTime -> mLastCloseTime
    long MIN_INTERVAL_MILLIS -> MIN_INTERVAL_MILLIS
    void updateLastCloseTime() -> updateLastCloseTime
    void waitBeforeConnect() -> waitBeforeConnect
    void prepare(java.lang.String) -> prepare
    cn.ingenic.indroidsync.transport.BluetoothChannel getChannel(java.util.UUID) -> getChannel
    void createChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> createChannel
    void destoryChannle(java.util.UUID) -> destoryChannle
    boolean listenChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> listenChannel
    void send(cn.ingenic.indroidsync.data.ProjoList,boolean) -> send
    void logv(java.lang.String) -> logv
    void log(java.lang.String) -> log
    void logw(java.lang.String) -> logw
    void logi(java.lang.String) -> logi
    void loge(java.lang.String) -> loge
    android.os.Handler access$0(cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient) -> access$0
    java.util.Map access$1(cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient) -> access$1
    void access$2(java.lang.String) -> access$2
    void access$3(cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient) -> access$3
    void access$4(cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient) -> access$4
    android.bluetooth.BluetoothAdapter access$5(cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient) -> access$5
    java.util.UUID access$6(cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient) -> access$6
    cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient$MyHandler access$7(cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient) -> access$7
    void access$8(java.lang.String) -> access$8
    void access$9(java.lang.String) -> access$9
    void access$10(java.lang.String) -> access$10
cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient$ChannelCreateData -> cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient$ChannelCreateData:
    java.util.UUID uuid -> uuid
    cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack callback -> callback
cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient$MyHandler -> cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient$MyHandler:
    cn.ingenic.indroidsync.transport.SingleBTChannelManagerClient this$0 -> this$0
    void notifyStateChange(int) -> notifyStateChange
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer -> cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer:
    java.lang.String TAG -> TAG
    java.lang.String SETUP -> SETUP
    android.os.Handler mTransportHandler -> mTransportHandler
    cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer$MyHandler mHandler -> mHandler
    java.util.concurrent.Executor mExecutor -> mExecutor
    java.util.UUID mCustomUUID -> mCustomUUID
    java.util.Map mChannelMap -> mChannelMap
    void prepare(java.lang.String) -> prepare
    cn.ingenic.indroidsync.transport.BluetoothChannel getChannel(java.util.UUID) -> getChannel
    void createChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> createChannel
    void destoryChannle(java.util.UUID) -> destoryChannle
    boolean listenChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> listenChannel
    void send(cn.ingenic.indroidsync.data.ProjoList,boolean) -> send
    void logv(java.lang.String) -> logv
    void log(java.lang.String) -> log
    void logw(java.lang.String) -> logw
    void logi(java.lang.String) -> logi
    void loge(java.lang.String) -> loge
    void access$0(java.lang.String) -> access$0
    java.util.Map access$1(cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer) -> access$1
    cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer$MyHandler access$2(cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer) -> access$2
    java.util.UUID access$3(cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer) -> access$3
    void access$4(java.lang.String) -> access$4
    java.util.concurrent.Executor access$5(cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer) -> access$5
    void access$6(java.lang.String) -> access$6
    void access$7(java.lang.String) -> access$7
    void access$8(java.lang.String) -> access$8
    android.os.Handler access$9(cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer) -> access$9
cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer$MyHandler -> cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer$MyHandler:
    java.lang.Runnable mmRunnable -> mmRunnable
    cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer this$0 -> this$0
    java.lang.String convertMessage(int) -> convertMessage
    void listenUp() -> listenUp
    void clearChannel() -> clearChannel
    void handleMessage(android.os.Message) -> handleMessage
    void notifyStateChanged(int) -> notifyStateChanged
    void access$0(cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer$MyHandler) -> access$0
cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer$MyHandler$1 -> cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer$MyHandler$1:
    cn.ingenic.indroidsync.transport.SingleBTChannelManagerServer$MyHandler this$1 -> this$1
    void run() -> run
cn.ingenic.indroidsync.transport.TransportManager -> cn.ingenic.indroidsync.transport.TransportManager:
    cn.ingenic.indroidsync.transport.TransportManager$MyHandler mHandler -> mHandler
    cn.ingenic.indroidsync.transport.FileChannelManager mFileChannelManager -> mFileChannelManager
    cn.ingenic.indroidsync.transport.TransportManager sManager -> sManager
    java.lang.String mSystemModuleName -> mSystemModuleName
    boolean mTimeoutMsgLock -> mTimeoutMsgLock
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MSG_BASE -> MSG_BASE
    int MSG_TIME_OUT -> MSG_TIME_OUT
    int MSG_FILE_CHANNEL_CLOSE -> MSG_FILE_CHANNEL_CLOSE
    android.os.Handler mMgrHandler -> mMgrHandler
    cn.ingenic.indroidsync.transport.TransportStateMachine mStateMachine -> mStateMachine
    cn.ingenic.indroidsync.transport.TransportManager init(android.content.Context,java.lang.String,android.os.Handler) -> init
    java.lang.String getSystemMoudleName() -> getSystemMoudleName
    cn.ingenic.indroidsync.transport.TransportManager getDefault() -> getDefault
    void sendTimeoutMsg() -> sendTimeoutMsg
    void releaseWakeLock() -> releaseWakeLock
    void prepare(java.lang.String) -> prepare
    void sendClearLockedAddressMsg() -> sendClearLockedAddressMsg
    void notifyMgrState(boolean) -> notifyMgrState
    void notifyMgrState(boolean,int) -> notifyMgrState
    void retrive(cn.ingenic.indroidsync.data.ProjoList) -> retrive
    void sendBondResponse(boolean) -> sendBondResponse
    void request(cn.ingenic.indroidsync.data.ProjoList) -> request
    void requestSync(cn.ingenic.indroidsync.data.ProjoList) -> requestSync
    void requestUUID(java.util.UUID,cn.ingenic.indroidsync.data.ProjoList) -> requestUUID
    void sendFile(java.lang.String,java.lang.String,int,java.io.InputStream) -> sendFile
    void retriveFile(java.lang.String,java.lang.String,int,java.lang.String) -> retriveFile
    void createChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> createChannel
    boolean listenChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> listenChannel
    void destoryChannel(java.util.UUID) -> destoryChannel
    void closeFileChannel() -> closeFileChannel
    boolean access$0(cn.ingenic.indroidsync.transport.TransportManager) -> access$0
    void access$1(cn.ingenic.indroidsync.transport.TransportManager) -> access$1
    void access$2(cn.ingenic.indroidsync.transport.TransportManager,boolean) -> access$2
cn.ingenic.indroidsync.transport.TransportManager$1 -> cn.ingenic.indroidsync.transport.TransportManager$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
cn.ingenic.indroidsync.transport.TransportManager$2 -> cn.ingenic.indroidsync.transport.TransportManager$2:
    cn.ingenic.indroidsync.transport.TransportManager this$0 -> this$0
    cn.ingenic.indroidsync.data.ProjoList val$projoList -> val$projoList
    void run() -> run
cn.ingenic.indroidsync.transport.TransportManager$MyHandler -> cn.ingenic.indroidsync.transport.TransportManager$MyHandler:
    cn.ingenic.indroidsync.transport.TransportManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.transport.TransportStateMachine -> cn.ingenic.indroidsync.transport.TransportStateMachine:
    int MSG_BASE -> MSG_BASE
    int MSG_CONNECT -> MSG_CONNECT
    int MSG_DISCONNECT -> MSG_DISCONNECT
    int MSG_STATE_CHANGE -> MSG_STATE_CHANGE
    int MSG_C_RETRIVE -> MSG_C_RETRIVE
    int MSG_S_RETRIVE -> MSG_S_RETRIVE
    int MSG_BT_ON -> MSG_BT_ON
    int MSG_BT_OFF -> MSG_BT_OFF
    int MSG_SEND_BOND_RESP -> MSG_SEND_BOND_RESP
    int STATE_BASE -> STATE_BASE
    int C_IDLE -> C_IDLE
    int C_CONNECTED -> C_CONNECTED
    int S_IDLE -> S_IDLE
    int S_CONNECTED -> S_CONNECTED
    cn.ingenic.indroidsync.transport.BluetoothChannelManager mClientChannelManager -> mClientChannelManager
    cn.ingenic.indroidsync.transport.BluetoothChannelManager mServerChannelManager -> mServerChannelManager
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.transport.TransportManager mTransportManager -> mTransportManager
    android.content.BroadcastReceiver mBluetoothReceiver -> mBluetoothReceiver
    cn.ingenic.indroidsync.transport.TransportStateMachine$DefaultState mDefaultState -> mDefaultState
    boolean mIsClient -> mIsClient
    cn.ingenic.indroidsync.transport.TransportStateMachine$ClientState mClientState -> mClientState
    cn.ingenic.indroidsync.transport.TransportStateMachine$ServerState mServerState -> mServerState
    cn.ingenic.indroidsync.transport.TransportStateMachine$ClientRequestingState mClientReqState -> mClientReqState
    cn.ingenic.indroidsync.transport.TransportStateMachine$ClientIdleState mClientIdleState -> mClientIdleState
    cn.ingenic.indroidsync.transport.TransportStateMachine$ClientConnectedState mClientConnectedState -> mClientConnectedState
    cn.ingenic.indroidsync.transport.TransportStateMachine$ServerResponseState mServerRespState -> mServerRespState
    cn.ingenic.indroidsync.transport.TransportStateMachine$ServerIdleState mServerIdleState -> mServerIdleState
    cn.ingenic.indroidsync.transport.TransportStateMachine$ServerConnectedState mServerConnectedState -> mServerConnectedState
    java.lang.String TAG -> TAG
    java.lang.String convert(android.os.Message) -> convert
    java.lang.String getState(int) -> getState
    void sendBondResponse(boolean) -> sendBondResponse
    void sendBondRespInternal(boolean,boolean) -> sendBondRespInternal
    void sendRequest(cn.ingenic.indroidsync.data.ProjoList) -> sendRequest
    cn.ingenic.indroidsync.transport.BluetoothChannelManager getAvaliableChannelManager() -> getAvaliableChannelManager
    void sendRequestInternal(cn.ingenic.indroidsync.data.ProjoList) -> sendRequestInternal
    void sendRequestSync(cn.ingenic.indroidsync.data.ProjoList) -> sendRequestSync
    void sendRequestByUUID(java.util.UUID,cn.ingenic.indroidsync.data.ProjoList) -> sendRequestByUUID
    void createChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> createChannel
    boolean listenChannel(java.util.UUID,cn.ingenic.indroidsync.DefaultSyncManager$OnChannelCallBack) -> listenChannel
    void destoryChannel(java.util.UUID) -> destoryChannel
    void enterLog(cn.ingenic.indroidsync.utils.internal.State) -> enterLog
    void exitLog(cn.ingenic.indroidsync.utils.internal.State) -> exitLog
    void dumpMsg(android.os.Message,cn.ingenic.indroidsync.utils.internal.State) -> dumpMsg
    void dumpIngore(android.os.Message,cn.ingenic.indroidsync.utils.internal.State) -> dumpIngore
    void i(java.lang.String) -> i
    void d(java.lang.String) -> d
    void v(java.lang.String) -> v
    void w(java.lang.String) -> w
    void e(java.lang.String) -> e
    void access$0(java.lang.String) -> access$0
    void access$1(android.os.Message,cn.ingenic.indroidsync.utils.internal.State) -> access$1
    void access$2(java.lang.String) -> access$2
    cn.ingenic.indroidsync.transport.TransportManager access$3(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$3
    void access$4(cn.ingenic.indroidsync.utils.internal.State) -> access$4
    void access$5(cn.ingenic.indroidsync.transport.TransportStateMachine,boolean) -> access$5
    void access$6(cn.ingenic.indroidsync.utils.internal.State) -> access$6
    cn.ingenic.indroidsync.transport.TransportStateMachine$ClientIdleState access$7(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$7
    void access$8(cn.ingenic.indroidsync.transport.TransportStateMachine,cn.ingenic.indroidsync.utils.internal.IState) -> access$8
    cn.ingenic.indroidsync.transport.TransportStateMachine$ServerState access$9(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$9
    cn.ingenic.indroidsync.transport.BluetoothChannelManager access$10(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$10
    cn.ingenic.indroidsync.transport.BluetoothChannelManager access$11(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$11
    void access$12(android.os.Message,cn.ingenic.indroidsync.utils.internal.State) -> access$12
    cn.ingenic.indroidsync.transport.TransportStateMachine$ServerIdleState access$13(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$13
    void access$14(java.lang.String) -> access$14
    cn.ingenic.indroidsync.transport.TransportStateMachine$ClientConnectedState access$15(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$15
    void access$16(cn.ingenic.indroidsync.transport.TransportStateMachine,boolean,boolean) -> access$16
    void access$17(java.lang.String) -> access$17
    cn.ingenic.indroidsync.transport.TransportStateMachine$ClientRequestingState access$18(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$18
    cn.ingenic.indroidsync.transport.TransportStateMachine$ClientState access$19(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$19
    void access$20(cn.ingenic.indroidsync.transport.TransportStateMachine,android.os.Message) -> access$20
    cn.ingenic.indroidsync.transport.TransportStateMachine$ServerResponseState access$21(cn.ingenic.indroidsync.transport.TransportStateMachine) -> access$21
    void access$22(cn.ingenic.indroidsync.transport.TransportStateMachine,cn.ingenic.indroidsync.data.ProjoList) -> access$22
cn.ingenic.indroidsync.transport.TransportStateMachine$1 -> cn.ingenic.indroidsync.transport.TransportStateMachine$1:
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.ingenic.indroidsync.transport.TransportStateMachine$2 -> cn.ingenic.indroidsync.transport.TransportStateMachine$2:
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    cn.ingenic.indroidsync.data.ProjoList val$projoList -> val$projoList
    void run() -> run
cn.ingenic.indroidsync.transport.TransportStateMachine$ClientConnectedState -> cn.ingenic.indroidsync.transport.TransportStateMachine$ClientConnectedState:
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    void enter() -> enter
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.transport.TransportStateMachine$ClientIdleState -> cn.ingenic.indroidsync.transport.TransportStateMachine$ClientIdleState:
    java.lang.String mmConnectingAddress -> mmConnectingAddress
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    void setConnectingAddress(java.lang.String) -> setConnectingAddress
    void enter() -> enter
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.transport.TransportStateMachine$ClientRequestingState -> cn.ingenic.indroidsync.transport.TransportStateMachine$ClientRequestingState:
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    void enter() -> enter
    void sendBondRequest() -> sendBondRequest
    void processResponse(cn.ingenic.indroidsync.data.ProjoList) -> processResponse
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.transport.TransportStateMachine$ClientState -> cn.ingenic.indroidsync.transport.TransportStateMachine$ClientState:
    int mmIdleReason -> mmIdleReason
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    void enter() -> enter
    void exit() -> exit
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.transport.TransportStateMachine$DefaultState -> cn.ingenic.indroidsync.transport.TransportStateMachine$DefaultState:
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.transport.TransportStateMachine$ServerConnectedState -> cn.ingenic.indroidsync.transport.TransportStateMachine$ServerConnectedState:
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    void enter() -> enter
    void exit() -> exit
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.transport.TransportStateMachine$ServerIdleState -> cn.ingenic.indroidsync.transport.TransportStateMachine$ServerIdleState:
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    void enter() -> enter
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.transport.TransportStateMachine$ServerResponseState -> cn.ingenic.indroidsync.transport.TransportStateMachine$ServerResponseState:
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    void enter() -> enter
    void processRequest(cn.ingenic.indroidsync.data.ProjoList,boolean) -> processRequest
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.transport.TransportStateMachine$ServerState -> cn.ingenic.indroidsync.transport.TransportStateMachine$ServerState:
    cn.ingenic.indroidsync.transport.TransportStateMachine this$0 -> this$0
    void enter() -> enter
    void exit() -> exit
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.updater.CheckUpdateActivity -> cn.ingenic.indroidsync.updater.CheckUpdateActivity:
    int MSG_SYNC_START -> MSG_SYNC_START
    int MSG_SYNC_FINISHED -> MSG_SYNC_FINISHED
    int MSG_GET_VERSION_LIST -> MSG_GET_VERSION_LIST
    int MSG_GET_WATCH_INFO -> MSG_GET_WATCH_INFO
    int DELAY_TIME -> DELAY_TIME
    android.app.ProgressDialog mWaitingDialog -> mWaitingDialog
    cn.ingenic.indroidsync.updater.UpdateManager mManager -> mManager
    boolean mUpdate -> mUpdate
    java.lang.String mSelectedVersion -> mSelectedVersion
    android.widget.Button mCheckButton -> mCheckButton
    android.widget.Button mSelectButton -> mSelectButton
    android.os.Handler mHandler -> mHandler
    void showCheckingDialog() -> showCheckingDialog
    void hideCheckingDialog() -> hideCheckingDialog
    void onDestroy() -> onDestroy
    void showVersionList(java.util.List) -> showVersionList
    void onCreate(android.os.Bundle) -> onCreate
    void setupDeviceInfomation(java.lang.String,java.lang.String) -> setupDeviceInfomation
    void onSyncFinished(android.os.Message) -> onSyncFinished
    void translateToDownload(int,cn.ingenic.indroidsync.updater.UpdateInfo) -> translateToDownload
    void onClick(android.view.View) -> onClick
    void flipit(android.view.ViewGroup,android.view.ViewGroup) -> flipit
    void OnVersionChanged(java.lang.String,boolean) -> OnVersionChanged
    void access$0(cn.ingenic.indroidsync.updater.CheckUpdateActivity) -> access$0
    android.os.Handler access$1(cn.ingenic.indroidsync.updater.CheckUpdateActivity) -> access$1
    cn.ingenic.indroidsync.updater.UpdateManager access$2(cn.ingenic.indroidsync.updater.CheckUpdateActivity) -> access$2
    void access$3(cn.ingenic.indroidsync.updater.CheckUpdateActivity) -> access$3
    void access$4(cn.ingenic.indroidsync.updater.CheckUpdateActivity,android.os.Message) -> access$4
    void access$5(cn.ingenic.indroidsync.updater.CheckUpdateActivity,java.util.List) -> access$5
    android.widget.Button access$6(cn.ingenic.indroidsync.updater.CheckUpdateActivity) -> access$6
    void access$7(cn.ingenic.indroidsync.updater.CheckUpdateActivity,java.lang.String,java.lang.String) -> access$7
cn.ingenic.indroidsync.updater.CheckUpdateActivity$1 -> cn.ingenic.indroidsync.updater.CheckUpdateActivity$1:
    cn.ingenic.indroidsync.updater.CheckUpdateActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
cn.ingenic.indroidsync.updater.CheckUpdateActivity$2 -> cn.ingenic.indroidsync.updater.CheckUpdateActivity$2:
    cn.ingenic.indroidsync.updater.CheckUpdateActivity this$0 -> this$0
    android.view.ViewGroup val$from -> val$from
    android.animation.ObjectAnimator val$invisToVis -> val$invisToVis
    android.view.ViewGroup val$to -> val$to
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
cn.ingenic.indroidsync.updater.CheckUpdateActivity$AsyncTaskGetInfo -> cn.ingenic.indroidsync.updater.CheckUpdateActivity$AsyncTaskGetInfo:
    cn.ingenic.indroidsync.updater.CheckUpdateActivity this$0 -> this$0
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.ingenic.indroidsync.updater.IUpdaterRemoteService -> cn.ingenic.indroidsync.updater.IUpdaterRemoteService:
    java.lang.String DESPRITOR -> DESPRITOR
    java.lang.String get(java.lang.String) -> get
cn.ingenic.indroidsync.updater.MyLog -> cn.ingenic.indroidsync.updater.MyLog:
    java.lang.String APP_NAME -> APP_NAME
    java.lang.Class mCls -> mCls
    void i(java.lang.String) -> i
    void w(java.lang.String) -> w
    void e(java.lang.String) -> e
cn.ingenic.indroidsync.updater.NoticesActivity -> cn.ingenic.indroidsync.updater.NoticesActivity:
    java.lang.String update -> update
    java.io.File file -> file
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
cn.ingenic.indroidsync.updater.ProductInfo -> cn.ingenic.indroidsync.updater.ProductInfo:
    java.lang.String model -> model
    java.lang.String url -> url
    cn.ingenic.indroidsync.updater.MyLog klilog -> klilog
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void dump() -> dump
cn.ingenic.indroidsync.updater.ProductInfo$1 -> cn.ingenic.indroidsync.updater.ProductInfo$1:
    cn.ingenic.indroidsync.updater.ProductInfo createFromParcel(android.os.Parcel) -> createFromParcel
    cn.ingenic.indroidsync.updater.ProductInfo[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cn.ingenic.indroidsync.updater.ProductInfoHelper -> cn.ingenic.indroidsync.updater.ProductInfoHelper:
    java.lang.String PRODUCT_ELEMENT -> PRODUCT_ELEMENT
    java.lang.String VALUE_MODEL -> VALUE_MODEL
    java.lang.String VALUE_URL -> VALUE_URL
    cn.ingenic.indroidsync.updater.ProductInfoHelper sHelper -> sHelper
    cn.ingenic.indroidsync.updater.MyLog klilog -> klilog
    cn.ingenic.indroidsync.updater.ProductInfoHelper getInstance() -> getInstance
    java.util.List getProductList(java.lang.String) -> getProductList
    java.util.List getProductList(java.io.InputStream) -> getProductList
cn.ingenic.indroidsync.updater.ProductInfoHelper$XmlHandler -> cn.ingenic.indroidsync.updater.ProductInfoHelper$XmlHandler:
    java.util.List list -> list
    cn.ingenic.indroidsync.updater.ProductInfo info -> info
    java.lang.String tmp -> tmp
    cn.ingenic.indroidsync.updater.ProductInfoHelper this$0 -> this$0
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    java.util.List getUpdateList() -> getUpdateList
cn.ingenic.indroidsync.updater.UpdateDownloadActivity -> cn.ingenic.indroidsync.updater.UpdateDownloadActivity:
    int MODE_UPDATE -> MODE_UPDATE
    int MODE_ROLLBACK -> MODE_ROLLBACK
    java.lang.String EXTRAS_MODE -> EXTRAS_MODE
    java.lang.String EXTRAS_VERSION -> EXTRAS_VERSION
    cn.ingenic.indroidsync.updater.UpdateManager mManager -> mManager
    cn.ingenic.indroidsync.updater.UpdateInfo mInfo -> mInfo
    cn.ingenic.indroidsync.updater.MyLog klilog -> klilog
    boolean mIsDownloading -> mIsDownloading
    void onCreate(android.os.Bundle) -> onCreate
    void setupMode(int) -> setupMode
    void onClick(android.view.View) -> onClick
    boolean networkEnable() -> networkEnable
    void download(java.lang.String) -> download
cn.ingenic.indroidsync.updater.UpdateInfo -> cn.ingenic.indroidsync.updater.UpdateInfo:
    java.lang.String index -> index
    java.lang.String version_from -> version_from
    java.lang.String version_to -> version_to
    java.lang.String description -> description
    java.lang.String url -> url
    java.lang.String size -> size
    java.lang.String md5 -> md5
    cn.ingenic.indroidsync.updater.MyLog klilog -> klilog
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    cn.ingenic.indroidsync.updater.UpdateInfo createFromString(java.lang.String) -> createFromString
    void dump() -> dump
cn.ingenic.indroidsync.updater.UpdateInfo$1 -> cn.ingenic.indroidsync.updater.UpdateInfo$1:
    cn.ingenic.indroidsync.updater.UpdateInfo createFromParcel(android.os.Parcel) -> createFromParcel
    cn.ingenic.indroidsync.updater.UpdateInfo[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cn.ingenic.indroidsync.updater.UpdateInfoHelper -> cn.ingenic.indroidsync.updater.UpdateInfoHelper:
    java.lang.String LIST_VERSION -> LIST_VERSION
    java.lang.String VERSION_LIST_ELEMENT -> VERSION_LIST_ELEMENT
    java.lang.String VALUE_VERSION -> VALUE_VERSION
    java.lang.String UPDATE_ELEMENT -> UPDATE_ELEMENT
    java.lang.String VALUE_INDEX -> VALUE_INDEX
    java.lang.String VALUE_VERSION_FROM -> VALUE_VERSION_FROM
    java.lang.String VALUE_VERSION_TO -> VALUE_VERSION_TO
    java.lang.String VALUE_DESCRIPTION -> VALUE_DESCRIPTION
    java.lang.String VALUE_URL -> VALUE_URL
    java.lang.String VALUE_SIZE -> VALUE_SIZE
    java.lang.String VALUE_MD5 -> VALUE_MD5
    cn.ingenic.indroidsync.updater.MyLog klilog -> klilog
    java.util.List mUpdateList -> mUpdateList
    java.util.List mVersionList -> mVersionList
    java.util.List getUpdateList() -> getUpdateList
    java.util.List getVersionList() -> getVersionList
    boolean parse(java.lang.String) -> parse
    boolean parse(java.io.InputStream) -> parse
cn.ingenic.indroidsync.updater.UpdateInfoHelper$XmlHandler -> cn.ingenic.indroidsync.updater.UpdateInfoHelper$XmlHandler:
    java.util.List update_list -> update_list
    java.util.List version_list -> version_list
    cn.ingenic.indroidsync.updater.UpdateInfo info -> info
    java.lang.String version -> version
    java.lang.String tmp -> tmp
    cn.ingenic.indroidsync.updater.UpdateInfoHelper this$0 -> this$0
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    java.util.List access$1(cn.ingenic.indroidsync.updater.UpdateInfoHelper$XmlHandler) -> access$1
    java.util.List access$2(cn.ingenic.indroidsync.updater.UpdateInfoHelper$XmlHandler) -> access$2
cn.ingenic.indroidsync.updater.UpdateInstallActivity -> cn.ingenic.indroidsync.updater.UpdateInstallActivity:
    java.io.File mUpdateFile -> mUpdateFile
    cn.ingenic.indroidsync.updater.UpdateInfo mUpdateInfo -> mUpdateInfo
    android.widget.TextView mText -> mText
    java.lang.String mUpdateDescription -> mUpdateDescription
    boolean mSaveFile -> mSaveFile
    int mClicked -> mClicked
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.String NOTIFICATION_TAG -> NOTIFICATION_TAG
    int NOTIFICATION_ID -> NOTIFICATION_ID
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onClick(android.view.View) -> onClick
    void onStop() -> onStop
    void updateLater() -> updateLater
    java.lang.String getMD5(java.io.File) -> getMD5
cn.ingenic.indroidsync.updater.UpdateManager -> cn.ingenic.indroidsync.updater.UpdateManager:
    cn.ingenic.indroidsync.updater.MyLog klilog -> klilog
    int SYNC_SUCCESS -> SYNC_SUCCESS
    int SYNC_FAIL -> SYNC_FAIL
    int CHECK_FAILED -> CHECK_FAILED
    int CHECK_NO_UPDATE -> CHECK_NO_UPDATE
    int CHECK_HAS_UPDATE -> CHECK_HAS_UPDATE
    int CHECK_NO_ROLLBACK -> CHECK_NO_ROLLBACK
    int CHECK_HAS_ROLLBACK -> CHECK_HAS_ROLLBACK
    cn.ingenic.indroidsync.updater.UpdateManager sInstance -> sInstance
    android.content.Context mContext -> mContext
    java.util.List mUpdateList -> mUpdateList
    java.util.List mVersionList -> mVersionList
    java.lang.String mCurrentVersion -> mCurrentVersion
    java.lang.String mDeviceName -> mDeviceName
    java.util.Comparator mComparator -> mComparator
    cn.ingenic.indroidsync.updater.UpdateManager getInstance(android.content.Context) -> getInstance
    void sync(android.os.Message) -> sync
    java.util.List getVersionListBaseCurrent() -> getVersionListBaseCurrent
    cn.ingenic.indroidsync.updater.UpdateInfo getUpdateInfoTo(java.lang.String) -> getUpdateInfoTo
    java.lang.String getCurrentVersion() -> getCurrentVersion
    java.lang.String getModel() -> getModel
    java.lang.String getFromeBluetooth(java.lang.String) -> getFromeBluetooth
    java.util.List access$0(cn.ingenic.indroidsync.updater.UpdateManager) -> access$0
    void access$1(cn.ingenic.indroidsync.updater.UpdateManager,java.util.List) -> access$1
    cn.ingenic.indroidsync.updater.MyLog access$2(cn.ingenic.indroidsync.updater.UpdateManager) -> access$2
    void access$3(cn.ingenic.indroidsync.updater.UpdateManager,java.util.List) -> access$3
cn.ingenic.indroidsync.updater.UpdateManager$1 -> cn.ingenic.indroidsync.updater.UpdateManager$1:
    cn.ingenic.indroidsync.updater.UpdateManager this$0 -> this$0
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.ingenic.indroidsync.updater.UpdateManager$SyncDataTask -> cn.ingenic.indroidsync.updater.UpdateManager$SyncDataTask:
    android.os.Message callback -> callback
    cn.ingenic.indroidsync.updater.UpdateManager this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.String getUpdateUrl() -> getUpdateUrl
    int SyncData(java.lang.String) -> SyncData
cn.ingenic.indroidsync.updater.UpdateReceiver -> cn.ingenic.indroidsync.updater.UpdateReceiver:
    cn.ingenic.indroidsync.updater.MyLog klilog -> klilog
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void showUpdateInstall(android.content.Context,java.lang.String,cn.ingenic.indroidsync.updater.UpdateInfo) -> showUpdateInstall
    java.lang.String cpFile() -> cpFile
cn.ingenic.indroidsync.updater.UpdateUtils -> cn.ingenic.indroidsync.updater.UpdateUtils:
    java.lang.String FILENAME_SAVED -> FILENAME_SAVED
    java.lang.String ENCODE -> ENCODE
    int FLAG_CHECK_UPDATE -> FLAG_CHECK_UPDATE
    int FLAG_DOWNLOAD_UPDATE -> FLAG_DOWNLOAD_UPDATE
    java.lang.String URL_PRODUCTS_UPDATE -> URL_PRODUCTS_UPDATE
    java.lang.String PREFERENCE_NAME -> PREFERENCE_NAME
    java.lang.String CONFIG_DOWNLOAD_ID -> CONFIG_DOWNLOAD_ID
    java.lang.String CONFIG_UPDATE_INFO -> CONFIG_UPDATE_INFO
    void putDownloadInfo(android.content.Context,long,cn.ingenic.indroidsync.updater.UpdateInfo) -> putDownloadInfo
    long getDownloadId(android.content.Context) -> getDownloadId
    cn.ingenic.indroidsync.updater.UpdateInfo getUpdateInfoCache(android.content.Context) -> getUpdateInfoCache
    void setUpdateInfoCacheNull(android.content.Context) -> setUpdateInfoCacheNull
    void putStringToSP(android.content.Context,java.lang.String,java.lang.String) -> putStringToSP
    java.lang.String getStringFromSP(android.content.Context,java.lang.String) -> getStringFromSP
    boolean isNeedUpdate(java.lang.String,java.lang.String) -> isNeedUpdate
cn.ingenic.indroidsync.updater.UpdaterModule -> cn.ingenic.indroidsync.updater.UpdaterModule:
    java.lang.String TAG -> TAG
    boolean V -> V
    java.lang.String UPDATER -> UPDATER
    android.content.Context mContext -> mContext
    cn.ingenic.indroidsync.DefaultSyncManager$OnFileChannelCallBack mFileChannelCallBack -> mFileChannelCallBack
    void onCreate(android.content.Context) -> onCreate
    cn.ingenic.indroidsync.DefaultSyncManager$OnFileChannelCallBack getFileChannelCallBack() -> getFileChannelCallBack
    android.content.Context access$0(cn.ingenic.indroidsync.updater.UpdaterModule) -> access$0
cn.ingenic.indroidsync.updater.UpdaterModule$1 -> cn.ingenic.indroidsync.updater.UpdaterModule$1:
    cn.ingenic.indroidsync.updater.UpdaterModule this$0 -> this$0
    void onRetriveComplete(java.lang.String,boolean) -> onRetriveComplete
    void onSendComplete(java.lang.String,boolean) -> onSendComplete
cn.ingenic.indroidsync.updater.UpdaterRemoteServiceImpl -> cn.ingenic.indroidsync.updater.UpdaterRemoteServiceImpl:
    int BASE -> BASE
    int UpdaterRemoteServiceImpl_get -> UpdaterRemoteServiceImpl_get
    android.content.Context mContext -> mContext
    java.lang.String get(java.lang.String) -> get
    cn.ingenic.indroidsync.data.RemoteParcel onTransact(int,cn.ingenic.indroidsync.data.RemoteParcel) -> onTransact
    cn.ingenic.indroidsync.updater.IUpdaterRemoteService asRemoteInterface(cn.ingenic.indroidsync.IRemoteBinder) -> asRemoteInterface
cn.ingenic.indroidsync.updater.UpdaterRemoteServiceImpl$UpdaterRemoteServiceProxy -> cn.ingenic.indroidsync.updater.UpdaterRemoteServiceImpl$UpdaterRemoteServiceProxy:
    cn.ingenic.indroidsync.IRemoteBinder mRemoteBinder -> mRemoteBinder
    java.lang.String get(java.lang.String) -> get
cn.ingenic.indroidsync.updater.VersionListView -> cn.ingenic.indroidsync.updater.VersionListView:
    android.content.Context mContext -> mContext
    android.widget.RadioGroup mVersionListView -> mVersionListView
    cn.ingenic.indroidsync.updater.VersionListView$OnVersionCheckedListener mListener -> mListener
    java.util.List mVersionList -> mVersionList
    void initViews() -> initViews
    boolean isUpdateVersion(java.lang.String) -> isUpdateVersion
    void setOnVersionCheckedListener(cn.ingenic.indroidsync.updater.VersionListView$OnVersionCheckedListener) -> setOnVersionCheckedListener
    void setVersionList(java.util.List) -> setVersionList
    cn.ingenic.indroidsync.updater.VersionListView$OnVersionCheckedListener access$0(cn.ingenic.indroidsync.updater.VersionListView) -> access$0
    boolean access$1(cn.ingenic.indroidsync.updater.VersionListView,java.lang.String) -> access$1
cn.ingenic.indroidsync.updater.VersionListView$1 -> cn.ingenic.indroidsync.updater.VersionListView$1:
    cn.ingenic.indroidsync.updater.VersionListView this$0 -> this$0
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
cn.ingenic.indroidsync.updater.VersionListView$OnVersionCheckedListener -> cn.ingenic.indroidsync.updater.VersionListView$OnVersionCheckedListener:
    void OnVersionChanged(java.lang.String,boolean) -> OnVersionChanged
cn.ingenic.indroidsync.utils.CompatibilityTools -> cn.ingenic.indroidsync.utils.CompatibilityTools:
    java.lang.Object invokeWithReflect(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeWithReflect
cn.ingenic.indroidsync.utils.CompatibilityTools$CompatibilityException -> cn.ingenic.indroidsync.utils.CompatibilityTools$CompatibilityException:
    long serialVersionUID -> serialVersionUID
cn.ingenic.indroidsync.utils.DeviceUuidFactory -> cn.ingenic.indroidsync.utils.DeviceUuidFactory:
    java.lang.String PREFS_FILE -> PREFS_FILE
    java.lang.String PREFS_DEVICE_ID -> PREFS_DEVICE_ID
    java.util.UUID uuid -> uuid
    void initialize(android.content.Context) -> initialize
    java.util.UUID getDeviceUuid() -> getDeviceUuid
    java.lang.String getDeviceSerial() -> getDeviceSerial
cn.ingenic.indroidsync.utils.internal.FastXmlSerializer -> cn.ingenic.indroidsync.utils.internal.FastXmlSerializer:
    java.lang.String[] ESCAPE_TABLE -> ESCAPE_TABLE
    int BUFFER_LEN -> BUFFER_LEN
    char[] mText -> mText
    int mPos -> mPos
    java.io.Writer mWriter -> mWriter
    java.io.OutputStream mOutputStream -> mOutputStream
    java.nio.charset.CharsetEncoder mCharset -> mCharset
    java.nio.ByteBuffer mBytes -> mBytes
    boolean mInTag -> mInTag
    void append(char) -> append
    void append(java.lang.String,int,int) -> append
    void append(char[],int,int) -> append
    void append(java.lang.String) -> append
    void escapeAndAppendString(java.lang.String) -> escapeAndAppendString
    void escapeAndAppendString(char[],int,int) -> escapeAndAppendString
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void endDocument() -> endDocument
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    void entityRef(java.lang.String) -> entityRef
    void flushBytes() -> flushBytes
    void flush() -> flush
    int getDepth() -> getDepth
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void processingInstruction(java.lang.String) -> processingInstruction
    void setFeature(java.lang.String,boolean) -> setFeature
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
cn.ingenic.indroidsync.utils.internal.IState -> cn.ingenic.indroidsync.utils.internal.IState:
    boolean HANDLED -> HANDLED
    boolean NOT_HANDLED -> NOT_HANDLED
    void enter() -> enter
    void exit() -> exit
    boolean processMessage(android.os.Message) -> processMessage
    java.lang.String getName() -> getName
cn.ingenic.indroidsync.utils.internal.Memory -> cn.ingenic.indroidsync.utils.internal.Memory:
    int peekInt(byte[],int,java.nio.ByteOrder) -> peekInt
    long peekLong(byte[],int,java.nio.ByteOrder) -> peekLong
    short peekShort(byte[],int,java.nio.ByteOrder) -> peekShort
    void pokeInt(byte[],int,int,java.nio.ByteOrder) -> pokeInt
    void pokeLong(byte[],int,long,java.nio.ByteOrder) -> pokeLong
    void pokeShort(byte[],int,short,java.nio.ByteOrder) -> pokeShort
cn.ingenic.indroidsync.utils.internal.Singleton -> cn.ingenic.indroidsync.utils.internal.Singleton:
    java.lang.Object mInstance -> mInstance
    java.lang.Object create() -> create
    java.lang.Object get() -> get
cn.ingenic.indroidsync.utils.internal.State -> cn.ingenic.indroidsync.utils.internal.State:
    void enter() -> enter
    void exit() -> exit
    boolean processMessage(android.os.Message) -> processMessage
    java.lang.String getName() -> getName
cn.ingenic.indroidsync.utils.internal.StateMachine -> cn.ingenic.indroidsync.utils.internal.StateMachine:
    java.lang.String TAG -> TAG
    java.lang.String mName -> mName
    int SM_QUIT_CMD -> SM_QUIT_CMD
    int SM_INIT_CMD -> SM_INIT_CMD
    boolean HANDLED -> HANDLED
    boolean NOT_HANDLED -> NOT_HANDLED
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler mSmHandler -> mSmHandler
    android.os.HandlerThread mSmThread -> mSmThread
    void initStateMachine(java.lang.String,android.os.Looper) -> initStateMachine
    void addState(cn.ingenic.indroidsync.utils.internal.State,cn.ingenic.indroidsync.utils.internal.State) -> addState
    android.os.Message getCurrentMessage() -> getCurrentMessage
    cn.ingenic.indroidsync.utils.internal.IState getCurrentState() -> getCurrentState
    void addState(cn.ingenic.indroidsync.utils.internal.State) -> addState
    void setInitialState(cn.ingenic.indroidsync.utils.internal.State) -> setInitialState
    void transitionTo(cn.ingenic.indroidsync.utils.internal.IState) -> transitionTo
    void transitionToHaltingState() -> transitionToHaltingState
    void deferMessage(android.os.Message) -> deferMessage
    void unhandledMessage(android.os.Message) -> unhandledMessage
    void haltedProcessMessage(android.os.Message) -> haltedProcessMessage
    void halting() -> halting
    void quitting() -> quitting
    java.lang.String getName() -> getName
    void setProcessedMessagesSize(int) -> setProcessedMessagesSize
    int getProcessedMessagesSize() -> getProcessedMessagesSize
    int getProcessedMessagesCount() -> getProcessedMessagesCount
    cn.ingenic.indroidsync.utils.internal.StateMachine$ProcessedMessageInfo getProcessedMessageInfo(int) -> getProcessedMessageInfo
    android.os.Handler getHandler() -> getHandler
    android.os.Message obtainMessage() -> obtainMessage
    android.os.Message obtainMessage(int) -> obtainMessage
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    android.os.Message obtainMessage(int,int,int) -> obtainMessage
    android.os.Message obtainMessage(int,int,int,java.lang.Object) -> obtainMessage
    void sendMessage(int) -> sendMessage
    void sendMessage(int,java.lang.Object) -> sendMessage
    void sendMessage(android.os.Message) -> sendMessage
    void sendMessageDelayed(int,long) -> sendMessageDelayed
    void sendMessageDelayed(int,java.lang.Object,long) -> sendMessageDelayed
    void sendMessageDelayed(android.os.Message,long) -> sendMessageDelayed
    void sendMessageAtFrontOfQueue(int,java.lang.Object) -> sendMessageAtFrontOfQueue
    void sendMessageAtFrontOfQueue(int) -> sendMessageAtFrontOfQueue
    void sendMessageAtFrontOfQueue(android.os.Message) -> sendMessageAtFrontOfQueue
    void removeMessages(int) -> removeMessages
    void quit() -> quit
    boolean isQuit(android.os.Message) -> isQuit
    boolean recordProcessedMessage(android.os.Message) -> recordProcessedMessage
    java.lang.String getMessageInfo(android.os.Message) -> getMessageInfo
    boolean isDbg() -> isDbg
    void setDbg(boolean) -> setDbg
    void start() -> start
    void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.os.HandlerThread access$0(cn.ingenic.indroidsync.utils.internal.StateMachine) -> access$0
    void access$1(cn.ingenic.indroidsync.utils.internal.StateMachine,android.os.HandlerThread) -> access$1
    void access$2(cn.ingenic.indroidsync.utils.internal.StateMachine,cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$2
cn.ingenic.indroidsync.utils.internal.StateMachine$ProcessedMessageInfo -> cn.ingenic.indroidsync.utils.internal.StateMachine$ProcessedMessageInfo:
    long mTime -> mTime
    int mWhat -> mWhat
    java.lang.String mInfo -> mInfo
    cn.ingenic.indroidsync.utils.internal.State mState -> mState
    cn.ingenic.indroidsync.utils.internal.State mOrgState -> mOrgState
    void update(android.os.Message,java.lang.String,cn.ingenic.indroidsync.utils.internal.State,cn.ingenic.indroidsync.utils.internal.State) -> update
    long getTime() -> getTime
    long getWhat() -> getWhat
    java.lang.String getInfo() -> getInfo
    cn.ingenic.indroidsync.utils.internal.State getState() -> getState
    cn.ingenic.indroidsync.utils.internal.State getOriginalState() -> getOriginalState
    java.lang.String toString() -> toString
cn.ingenic.indroidsync.utils.internal.StateMachine$ProcessedMessages -> cn.ingenic.indroidsync.utils.internal.StateMachine$ProcessedMessages:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    java.util.Vector mMessages -> mMessages
    int mMaxSize -> mMaxSize
    int mOldestIndex -> mOldestIndex
    int mCount -> mCount
    void setSize(int) -> setSize
    int size() -> size
    int count() -> count
    void cleanup() -> cleanup
    cn.ingenic.indroidsync.utils.internal.StateMachine$ProcessedMessageInfo get(int) -> get
    void add(android.os.Message,java.lang.String,cn.ingenic.indroidsync.utils.internal.State,cn.ingenic.indroidsync.utils.internal.State) -> add
cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler -> cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler:
    boolean mDbg -> mDbg
    java.lang.Object mSmHandlerObj -> mSmHandlerObj
    android.os.Message mMsg -> mMsg
    cn.ingenic.indroidsync.utils.internal.StateMachine$ProcessedMessages mProcessedMessages -> mProcessedMessages
    boolean mIsConstructionCompleted -> mIsConstructionCompleted
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$StateInfo[] mStateStack -> mStateStack
    int mStateStackTopIndex -> mStateStackTopIndex
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$StateInfo[] mTempStateStack -> mTempStateStack
    int mTempStateStackCount -> mTempStateStackCount
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$HaltingState mHaltingState -> mHaltingState
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$QuittingState mQuittingState -> mQuittingState
    cn.ingenic.indroidsync.utils.internal.StateMachine mSm -> mSm
    java.util.HashMap mStateInfo -> mStateInfo
    cn.ingenic.indroidsync.utils.internal.State mInitialState -> mInitialState
    cn.ingenic.indroidsync.utils.internal.State mDestState -> mDestState
    java.util.ArrayList mDeferredMessages -> mDeferredMessages
    void handleMessage(android.os.Message) -> handleMessage
    void performTransitions() -> performTransitions
    void cleanupAfterQuitting() -> cleanupAfterQuitting
    void completeConstruction() -> completeConstruction
    void processMsg(android.os.Message) -> processMsg
    void invokeExitMethods(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$StateInfo) -> invokeExitMethods
    void invokeEnterMethods(int) -> invokeEnterMethods
    void moveDeferredMessageAtFrontOfQueue() -> moveDeferredMessageAtFrontOfQueue
    int moveTempStateStackToStateStack() -> moveTempStateStackToStateStack
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$StateInfo setupTempStateStackWithStatesToEnter(cn.ingenic.indroidsync.utils.internal.State) -> setupTempStateStackWithStatesToEnter
    void setupInitialStateStack() -> setupInitialStateStack
    android.os.Message getCurrentMessage() -> getCurrentMessage
    cn.ingenic.indroidsync.utils.internal.IState getCurrentState() -> getCurrentState
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$StateInfo addState(cn.ingenic.indroidsync.utils.internal.State,cn.ingenic.indroidsync.utils.internal.State) -> addState
    void setInitialState(cn.ingenic.indroidsync.utils.internal.State) -> setInitialState
    void transitionTo(cn.ingenic.indroidsync.utils.internal.IState) -> transitionTo
    void deferMessage(android.os.Message) -> deferMessage
    void quit() -> quit
    boolean isQuit(android.os.Message) -> isQuit
    boolean isDbg() -> isDbg
    void setDbg(boolean) -> setDbg
    void setProcessedMessagesSize(int) -> setProcessedMessagesSize
    int getProcessedMessagesSize() -> getProcessedMessagesSize
    int getProcessedMessagesCount() -> getProcessedMessagesCount
    cn.ingenic.indroidsync.utils.internal.StateMachine$ProcessedMessageInfo getProcessedMessageInfo(int) -> getProcessedMessageInfo
    cn.ingenic.indroidsync.utils.internal.StateMachine access$0(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$0
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$StateInfo access$2(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler,cn.ingenic.indroidsync.utils.internal.State,cn.ingenic.indroidsync.utils.internal.State) -> access$2
    android.os.Message access$3(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$3
    cn.ingenic.indroidsync.utils.internal.IState access$4(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$4
    void access$5(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler,cn.ingenic.indroidsync.utils.internal.State) -> access$5
    void access$6(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler,cn.ingenic.indroidsync.utils.internal.IState) -> access$6
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$HaltingState access$7(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$7
    void access$8(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler,android.os.Message) -> access$8
    boolean access$9(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$9
    void access$10(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler,int) -> access$10
    int access$11(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$11
    int access$12(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$12
    cn.ingenic.indroidsync.utils.internal.StateMachine$ProcessedMessageInfo access$13(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler,int) -> access$13
    void access$14(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$14
    boolean access$15(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler,android.os.Message) -> access$15
    boolean access$16(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$16
    void access$17(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler,boolean) -> access$17
    void access$18(cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler) -> access$18
cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$HaltingState -> cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$HaltingState:
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler this$1 -> this$1
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$QuittingState -> cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$QuittingState:
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler this$1 -> this$1
    boolean processMessage(android.os.Message) -> processMessage
cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$StateInfo -> cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$StateInfo:
    cn.ingenic.indroidsync.utils.internal.State state -> state
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler$StateInfo parentStateInfo -> parentStateInfo
    boolean active -> active
    cn.ingenic.indroidsync.utils.internal.StateMachine$SmHandler this$1 -> this$1
    java.lang.String toString() -> toString
cn.ingenic.indroidsync.utils.internal.XmlUtils -> cn.ingenic.indroidsync.utils.internal.XmlUtils:
    void skipCurrentTag(org.xmlpull.v1.XmlPullParser) -> skipCurrentTag
    int convertValueToList(java.lang.CharSequence,java.lang.String[],int) -> convertValueToList
    boolean convertValueToBoolean(java.lang.CharSequence,boolean) -> convertValueToBoolean
    int convertValueToInt(java.lang.CharSequence,int) -> convertValueToInt
    int convertValueToUnsignedInt(java.lang.String,int) -> convertValueToUnsignedInt
    int parseUnsignedIntAttribute(java.lang.CharSequence) -> parseUnsignedIntAttribute
    void writeMapXml(java.util.Map,java.io.OutputStream) -> writeMapXml
    void writeListXml(java.util.List,java.io.OutputStream) -> writeListXml
    void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer) -> writeMapXml
    void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer) -> writeListXml
    void writeSetXml(java.util.Set,java.lang.String,org.xmlpull.v1.XmlSerializer) -> writeSetXml
    void writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> writeByteArrayXml
    void writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> writeIntArrayXml
    void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer) -> writeValueXml
    java.util.HashMap readMapXml(java.io.InputStream) -> readMapXml
    java.util.ArrayList readListXml(java.io.InputStream) -> readListXml
    java.util.HashSet readSetXml(java.io.InputStream) -> readSetXml
    java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> readThisMapXml
    java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> readThisListXml
    java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> readThisSetXml
    int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> readThisIntArrayXml
    java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> readValueXml
    java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> readThisValueXml
    void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String) -> beginDocument
    void nextElement(org.xmlpull.v1.XmlPullParser) -> nextElement
    boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int) -> nextElementWithin
cn.ingenic.indroidsync.utils.internal.YesNoPreference -> cn.ingenic.indroidsync.utils.internal.YesNoPreference:
    boolean mWasPositiveResult -> mWasPositiveResult
    void onDialogClosed(boolean) -> onDialogClosed
    void setValue(boolean) -> setValue
    boolean getValue() -> getValue
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    boolean shouldDisableDependents() -> shouldDisableDependents
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
cn.ingenic.indroidsync.utils.internal.YesNoPreference$SavedState -> cn.ingenic.indroidsync.utils.internal.YesNoPreference$SavedState:
    boolean wasPositiveResult -> wasPositiveResult
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
cn.ingenic.indroidsync.utils.internal.YesNoPreference$SavedState$1 -> cn.ingenic.indroidsync.utils.internal.YesNoPreference$SavedState$1:
    cn.ingenic.indroidsync.utils.internal.YesNoPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    cn.ingenic.indroidsync.utils.internal.YesNoPreference$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
cn.ingenic.indroidsync.vcalendar.VCalendarBuilder -> cn.ingenic.indroidsync.vcalendar.VCalendarBuilder:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String VCALENDER_PROPERTY_BEGIN -> VCALENDER_PROPERTY_BEGIN
    java.lang.String VCALENDER_PROPERTY_VEVENT -> VCALENDER_PROPERTY_VEVENT
    java.lang.String VCALENDER_PROPERTY_PRODID -> VCALENDER_PROPERTY_PRODID
    java.lang.String VCALENDER_PROPERTY_VERSION -> VCALENDER_PROPERTY_VERSION
    java.lang.String PROPERTY_VERSION -> PROPERTY_VERSION
    java.lang.String VCALENDAR_DATA_VCALENDAR -> VCALENDAR_DATA_VCALENDAR
    java.lang.String VCALENDER_PARAM_SEPARATOR -> VCALENDER_PARAM_SEPARATOR
    java.lang.String VCALENDER_END_OF_LINE -> VCALENDER_END_OF_LINE
    java.lang.String VCALENDER_DATA_SEPARATOR -> VCALENDER_DATA_SEPARATOR
    java.lang.String VCALENDER_ITEM_SEPARATOR -> VCALENDER_ITEM_SEPARATOR
    java.lang.String VCALENDER_ITEM_EQUET -> VCALENDER_ITEM_EQUET
    java.lang.String VCALENDER_PARAM_ENCODING_QP -> VCALENDER_PARAM_ENCODING_QP
    java.lang.String UTF_8 -> UTF_8
    java.lang.String mCharsetString -> mCharsetString
    java.lang.String mVCalendarCharsetParameter -> mVCalendarCharsetParameter
    java.lang.String mValendarEncoding -> mValendarEncoding
    java.lang.String[] EVENT_PROJECTION -> EVENT_PROJECTION
    int EVENT_INDEX_EVENT_ID -> EVENT_INDEX_EVENT_ID
    int EVENT_INDEX_DESCRIPPTION -> EVENT_INDEX_DESCRIPPTION
    int EVENT_INDEX_LOCATION -> EVENT_INDEX_LOCATION
    int EVENT_INDEX_SUMMARY -> EVENT_INDEX_SUMMARY
    int EVENT_INDEX_STATUS -> EVENT_INDEX_STATUS
    int EVENT_INDEX_DTSTART -> EVENT_INDEX_DTSTART
    int EVENT_INDEX_DTEND -> EVENT_INDEX_DTEND
    int EVENT_INDEX_TIMEZONE -> EVENT_INDEX_TIMEZONE
    int EVENT_INDEX_ALLDAY -> EVENT_INDEX_ALLDAY
    int EVENT_INDEX_AVAILABILITY -> EVENT_INDEX_AVAILABILITY
    int EVENT_INDEX_ACCESS_LEVEL -> EVENT_INDEX_ACCESS_LEVEL
    int EVENT_INDEX_RRULE -> EVENT_INDEX_RRULE
    int EVENT_INDEX_DURATION -> EVENT_INDEX_DURATION
    java.lang.String REMINDERS_WHERE -> REMINDERS_WHERE
    java.lang.String ATTENDEE_WHERE -> ATTENDEE_WHERE
    java.lang.String ALERTS_WHERE -> ALERTS_WHERE
    java.lang.String ALERTS_SORT -> ALERTS_SORT
    java.lang.String REMINDERS_SORT -> REMINDERS_SORT
    java.lang.String[] REMINDER_PROJECTION -> REMINDER_PROJECTION
    int REMINDERS_MINUTES -> REMINDERS_MINUTES
    int REMINDERS_METHOD -> REMINDERS_METHOD
    java.lang.String[] ATTENDEE_PROJECTION -> ATTENDEE_PROJECTION
    java.lang.String[] ALERT_PROJECTION -> ALERT_PROJECTION
    int ALERT_BEGIN -> ALERT_BEGIN
    int ALERT_END -> ALERT_END
    int ALARM_TIME -> ALARM_TIME
    int ALERT_STATE -> ALERT_STATE
    int ALERT_MINUTES -> ALERT_MINUTES
    int ATTENDEE_NAME -> ATTENDEE_NAME
    int ATTENDEE_EMAIL -> ATTENDEE_EMAIL
    java.lang.StringBuilder mBuilder -> mBuilder
    boolean mEndAppended -> mEndAppended
    java.lang.String startTime -> startTime
    void clear() -> clear
    cn.ingenic.indroidsync.vcalendar.VCalendarBuilder appendEvent(long,android.content.ContentResolver) -> appendEvent
    cn.ingenic.indroidsync.vcalendar.VCalendarBuilder appendAttendee(long,android.content.ContentResolver) -> appendAttendee
    cn.ingenic.indroidsync.vcalendar.VCalendarBuilder appendReminders(long,android.content.ContentResolver) -> appendReminders
    cn.ingenic.indroidsync.vcalendar.VCalendarBuilder appendAlerts(long,android.content.ContentResolver) -> appendAlerts
    java.lang.Long alartMinutes(int) -> alartMinutes
    void appendLine(java.lang.String,java.lang.String) -> appendLine
    void appendLine(java.lang.String,java.util.List) -> appendLine
    void appendLine(java.lang.String,java.lang.String,boolean,boolean) -> appendLine
    void appendLine(java.lang.String,java.util.List,java.lang.String) -> appendLine
    void appendLine(java.lang.String,java.util.List,java.lang.String,boolean,boolean) -> appendLine
    void appendLine(java.lang.String,java.util.List,boolean,boolean) -> appendLine
    void appendLine(java.lang.String,java.util.List,java.util.List,boolean,boolean) -> appendLine
    java.lang.String encodeQuotedPrintable(java.lang.String) -> encodeQuotedPrintable
    java.lang.String escapeCharacters(java.lang.String) -> escapeCharacters
    void appendComment() -> appendComment
    java.lang.String toString() -> toString
cn.ingenic.indroidsync.vcalendar.VCalendarConstants -> cn.ingenic.indroidsync.vcalendar.VCalendarConstants:
    java.lang.String PROPERTY_BEGIN -> PROPERTY_BEGIN
    java.lang.String PROPERTY_PRODID -> PROPERTY_PRODID
    java.lang.String PROPERTY_VERSION -> PROPERTY_VERSION
    java.lang.String PROPERTY_BEGIN_VEVENT -> PROPERTY_BEGIN_VEVENT
    java.lang.String PROPERTY_EVENT_ID -> PROPERTY_EVENT_ID
    java.lang.String PROPERTY_DESCRIPTION -> PROPERTY_DESCRIPTION
    java.lang.String PROPERTY_LOCATION -> PROPERTY_LOCATION
    java.lang.String PROPERTY_SUMMARY -> PROPERTY_SUMMARY
    java.lang.String PROPERTY_CATEGOR -> PROPERTY_CATEGOR
    java.lang.String PROPERTY_PRIORITY -> PROPERTY_PRIORITY
    java.lang.String PROPERTY_STATUS -> PROPERTY_STATUS
    java.lang.String PROPERTY_DTSTART -> PROPERTY_DTSTART
    java.lang.String PROPERTY_DTEND -> PROPERTY_DTEND
    java.lang.String PROPERTY_TRANSP -> PROPERTY_TRANSP
    java.lang.String PROPERTY_AALARM -> PROPERTY_AALARM
    java.lang.String PROPERTY_DALARM -> PROPERTY_DALARM
    java.lang.String PROPERTY_REMINDER_METHOD -> PROPERTY_REMINDER_METHOD
    java.lang.String PROPERTY_TIMEZONE -> PROPERTY_TIMEZONE
    java.lang.String PROPERTY_ALLDAY -> PROPERTY_ALLDAY
    java.lang.String PROPERTY_RRULE -> PROPERTY_RRULE
    java.lang.String PROPERTY_DURATION -> PROPERTY_DURATION
    java.lang.String PROPERTY_AVAILABILITY -> PROPERTY_AVAILABILITY
    java.lang.String PROPERTY_ACCESSLEVEL -> PROPERTY_ACCESSLEVEL
    java.lang.String PROPERTY_ATTENDEES -> PROPERTY_ATTENDEES
    java.lang.String PROPERTY_ATTENDEES_NAME -> PROPERTY_ATTENDEES_NAME
    java.lang.String PROPERTY_ATTENDEES_EMAIL -> PROPERTY_ATTENDEES_EMAIL
    java.lang.String PROPERTY_END_VEVENT -> PROPERTY_END_VEVENT
    java.lang.String PROPERTY_END -> PROPERTY_END
    java.lang.String PROPERTY_ALERT_BEGIN -> PROPERTY_ALERT_BEGIN
    java.lang.String PROPERTY_ALERT_END -> PROPERTY_ALERT_END
    java.lang.String PROPERTY_ALARM_TIME -> PROPERTY_ALARM_TIME
    java.lang.String PROPERTY_STATE -> PROPERTY_STATE
    java.lang.String PROPERTY_MINUTES -> PROPERTY_MINUTES
cn.ingenic.indroidsync.vcalendar.VCalendarEntry -> cn.ingenic.indroidsync.vcalendar.VCalendarEntry:
    java.lang.String LOG_TAG -> LOG_TAG
    cn.ingenic.indroidsync.vcalendar.VCalendarEntry$EventData mEventData -> mEventData
    cn.ingenic.indroidsync.vcalendar.VCalendarEntry$ReminderData mReminderData -> mReminderData
    cn.ingenic.indroidsync.vcalendar.VCalendarEntry$CalendarAlertsData mAlertsData -> mAlertsData
    boolean hasAlarm -> hasAlarm
    boolean hasAttendees -> hasAttendees
    boolean hadIndroidSync -> hadIndroidSync
    boolean hasAlert -> hasAlert
    cn.ingenic.indroidsync.vcalendar.VCalendarEntry$EventData getmEventData() -> getmEventData
    void setmEventData(cn.ingenic.indroidsync.vcalendar.VCalendarEntry$EventData) -> setmEventData
    void addProperty(cn.ingenic.indroidsync.vcalendar.VCalendarEntry$Property) -> addProperty
    java.lang.Long alartMinutes() -> alartMinutes
    android.net.Uri pushIntoContentResolver(android.content.ContentResolver,long) -> pushIntoContentResolver
    void AddAttendees(android.content.ContentResolver,int) -> AddAttendees
    void AddReminder(android.content.ContentResolver,int) -> AddReminder
    void AddIndroidSync(android.content.ContentResolver,int) -> AddIndroidSync
    void AddCalendarAlerts(android.content.ContentResolver,int) -> AddCalendarAlerts
cn.ingenic.indroidsync.vcalendar.VCalendarEntry$CalendarAlertsData -> cn.ingenic.indroidsync.vcalendar.VCalendarEntry$CalendarAlertsData:
    java.lang.String event_id -> event_id
    java.lang.String begin -> begin
    java.lang.String end -> end
    java.lang.String alarmTime -> alarmTime
    java.lang.String state -> state
    java.lang.String minutes -> minutes
    cn.ingenic.indroidsync.vcalendar.VCalendarEntry this$0 -> this$0
cn.ingenic.indroidsync.vcalendar.VCalendarEntry$EventData -> cn.ingenic.indroidsync.vcalendar.VCalendarEntry$EventData:
    java.lang.String description -> description
    java.lang.String eventLocation -> eventLocation
    java.lang.String title -> title
    java.lang.String status -> status
    java.lang.String dtStart -> dtStart
    java.lang.String dtEnd -> dtEnd
    java.lang.String aAlarm -> aAlarm
    java.lang.String dAlarm -> dAlarm
    java.lang.String timeZone -> timeZone
    java.lang.String allday -> allday
    java.lang.String rrule -> rrule
    java.lang.String duration -> duration
    java.lang.String availability -> availability
    java.lang.String accessLevel -> accessLevel
    java.lang.String attendeeEmail -> attendeeEmail
    boolean hasAlarm -> hasAlarm
    cn.ingenic.indroidsync.vcalendar.VCalendarEntry this$0 -> this$0
cn.ingenic.indroidsync.vcalendar.VCalendarEntry$Property -> cn.ingenic.indroidsync.vcalendar.VCalendarEntry$Property:
    java.lang.String mPropertyName -> mPropertyName
    java.util.Map mParameterMap -> mParameterMap
    java.lang.String mPropertyValue -> mPropertyValue
    byte[] mPropertyBytes -> mPropertyBytes
    void setPropertyName(java.lang.String) -> setPropertyName
    void setPropertyValue(java.lang.String) -> setPropertyValue
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    void setPropertyBytes(byte[]) -> setPropertyBytes
    java.util.Collection getParameters(java.lang.String) -> getParameters
    void clear() -> clear
    java.lang.String access$0(cn.ingenic.indroidsync.vcalendar.VCalendarEntry$Property) -> access$0
    java.lang.String access$1(cn.ingenic.indroidsync.vcalendar.VCalendarEntry$Property) -> access$1
cn.ingenic.indroidsync.vcalendar.VCalendarEntry$ReminderData -> cn.ingenic.indroidsync.vcalendar.VCalendarEntry$ReminderData:
    java.lang.String event_id -> event_id
    java.lang.String minutes -> minutes
    java.lang.String method -> method
    cn.ingenic.indroidsync.vcalendar.VCalendarEntry this$0 -> this$0
cn.ingenic.indroidsync.vcalendar.VCalendarEntryConstructor -> cn.ingenic.indroidsync.vcalendar.VCalendarEntryConstructor:
    java.lang.String LOG_TAG -> LOG_TAG
    cn.ingenic.indroidsync.vcalendar.VCalendarEntry$Property mCurrentProperty -> mCurrentProperty
    cn.ingenic.indroidsync.vcalendar.VCalendarEntry mCurrentContactStruct -> mCurrentContactStruct
    java.lang.String mParamType -> mParamType
    java.lang.String mCharsetForDecodeBytes -> mCharsetForDecodeBytes
    boolean mStrictLineBreakParsing -> mStrictLineBreakParsing
    java.lang.String mInputCharset -> mInputCharset
    java.util.ArrayList mCreateUris -> mCreateUris
    android.content.ContentResolver mContentResolver -> mContentResolver
    long calendar_id -> calendar_id
    void end() -> end
    void endEntry() -> endEntry
    void onEntryCreaded(cn.ingenic.indroidsync.vcalendar.VCalendarEntry,long) -> onEntryCreaded
    void endProperty() -> endProperty
    void propertyGroup(java.lang.String) -> propertyGroup
    void propertyName(java.lang.String) -> propertyName
    void propertyParamType(java.lang.String) -> propertyParamType
    void propertyParamValue(java.lang.String) -> propertyParamValue
    void propertyValue(java.lang.String) -> propertyValue
    java.lang.String handleValue(java.lang.String,java.lang.String,java.lang.String) -> handleValue
    java.lang.String encodeString(java.lang.String,java.lang.String) -> encodeString
    void start() -> start
    void startEntry() -> startEntry
    void startProperty() -> startProperty
    java.util.ArrayList getCreatedUris() -> getCreatedUris
cn.ingenic.indroidsync.vcalendar.VCalendarEntryConstructor$DecoderException -> cn.ingenic.indroidsync.vcalendar.VCalendarEntryConstructor$DecoderException:
cn.ingenic.indroidsync.vcalendar.VCalendarEntryConstructor$QuotedPrintableCodecPort -> cn.ingenic.indroidsync.vcalendar.VCalendarEntryConstructor$QuotedPrintableCodecPort:
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
cn.ingenic.indroidsync.vcalendar.VCalendarException -> cn.ingenic.indroidsync.vcalendar.VCalendarException:
cn.ingenic.indroidsync.vcalendar.VCalendarInterpreter -> cn.ingenic.indroidsync.vcalendar.VCalendarInterpreter:
    void start() -> start
    void end() -> end
    void startEntry() -> startEntry
    void endEntry() -> endEntry
    void startProperty() -> startProperty
    void endProperty() -> endProperty
    void propertyGroup(java.lang.String) -> propertyGroup
    void propertyName(java.lang.String) -> propertyName
    void propertyParamType(java.lang.String) -> propertyParamType
    void propertyParamValue(java.lang.String) -> propertyParamValue
    void propertyValue(java.lang.String) -> propertyValue
cn.ingenic.indroidsync.vcalendar.VCalendarParser -> cn.ingenic.indroidsync.vcalendar.VCalendarParser:
    java.lang.String LOG_TAG -> LOG_TAG
    java.io.BufferedReader mReader -> mReader
    cn.ingenic.indroidsync.vcalendar.VCalendarInterpreter mBuilder -> mBuilder
    java.lang.String mEncoding -> mEncoding
    java.lang.String mPreviousLine -> mPreviousLine
    boolean mCanceled -> mCanceled
    int STATE_GROUP_OR_PROPNAME -> STATE_GROUP_OR_PROPNAME
    int STATE_PARAMS -> STATE_PARAMS
    boolean parseOneVCalendar(boolean) -> parseOneVCalendar
    boolean readBeginVCalendar(boolean) -> readBeginVCalendar
    void readEndVCalendar(boolean,boolean) -> readEndVCalendar
    java.lang.String getLine() -> getLine
    java.lang.String getNonEmptyLine() -> getNonEmptyLine
    void parseItems() -> parseItems
    boolean parseItem() -> parseItem
    java.lang.String[] separateLine(java.lang.String) -> separateLine
    void handleParams(java.lang.String) -> handleParams
    void handleLanguage(java.lang.String) -> handleLanguage
    boolean isLetter(char) -> isLetter
    void handleCharset(java.lang.String) -> handleCharset
    void handleEncoding(java.lang.String) -> handleEncoding
    void parse(java.io.InputStream,java.lang.String,cn.ingenic.indroidsync.vcalendar.VCalendarInterpreter) -> parse
    void parseVCalendarFile() -> parseVCalendarFile
    void cancel() -> cancel
com.amap.api.location.AMapLocalDayWeatherForecast -> com.amap.api.location.AMapLocalDayWeatherForecast:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getDate() -> getDate
    void a(java.lang.String) -> a
    java.lang.String getWeek() -> getWeek
    void b(java.lang.String) -> b
    java.lang.String getDayWeather() -> getDayWeather
    void c(java.lang.String) -> c
    java.lang.String getNightWeather() -> getNightWeather
    void d(java.lang.String) -> d
    java.lang.String getDayTemp() -> getDayTemp
    void e(java.lang.String) -> e
    java.lang.String getNightTemp() -> getNightTemp
    void f(java.lang.String) -> f
    java.lang.String getDayWindDir() -> getDayWindDir
    void g(java.lang.String) -> g
    java.lang.String getNightWindDir() -> getNightWindDir
    void h(java.lang.String) -> h
    java.lang.String getDayWindPower() -> getDayWindPower
    void i(java.lang.String) -> i
    java.lang.String getNightWindPower() -> getNightWindPower
    void j(java.lang.String) -> j
com.amap.api.location.AMapLocalWeatherForecast -> com.amap.api.location.AMapLocalWeatherForecast:
    java.lang.String a -> a
    java.util.List b -> b
    com.amap.api.location.core.AMapLocException c -> c
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String getReportTime() -> getReportTime
    void a(java.lang.String) -> a
    java.util.List getWeatherForecast() -> getWeatherForecast
    void a(java.util.List) -> a
com.amap.api.location.AMapLocalWeatherListener -> com.amap.api.location.AMapLocalWeatherListener:
    void onWeatherLiveSearched(com.amap.api.location.AMapLocalWeatherLive) -> onWeatherLiveSearched
    void onWeatherForecaseSearched(com.amap.api.location.AMapLocalWeatherForecast) -> onWeatherForecaseSearched
com.amap.api.location.AMapLocalWeatherLive -> com.amap.api.location.AMapLocalWeatherLive:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.amap.api.location.core.AMapLocException g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String getWeather() -> getWeather
    void a(java.lang.String) -> a
    java.lang.String getTemperature() -> getTemperature
    void b(java.lang.String) -> b
    java.lang.String getWindDir() -> getWindDir
    void c(java.lang.String) -> c
    java.lang.String getWindPower() -> getWindPower
    void d(java.lang.String) -> d
    java.lang.String getHumidity() -> getHumidity
    void e(java.lang.String) -> e
    java.lang.String getReportTime() -> getReportTime
    void f(java.lang.String) -> f
com.amap.api.location.AMapLocation -> com.amap.api.location.AMapLocation:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    com.amap.api.location.core.AMapLocException j -> j
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void setAMapException(com.amap.api.location.core.AMapLocException) -> setAMapException
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String getPoiId() -> getPoiId
    void setPoiId(java.lang.String) -> setPoiId
    java.lang.String getFloor() -> getFloor
    void setFloor(java.lang.String) -> setFloor
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.lang.String getAddress() -> getAddress
    java.lang.String getStreet() -> getStreet
com.amap.api.location.AMapLocationListener -> com.amap.api.location.AMapLocationListener:
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationManagerProxy -> com.amap.api.location.LocationManagerProxy:
    java.lang.String GPS_PROVIDER -> GPS_PROVIDER
    java.lang.String NETWORK_PROVIDER -> NETWORK_PROVIDER
    java.lang.String KEY_LOCATION_CHANGED -> KEY_LOCATION_CHANGED
    java.lang.String KEY_PROVIDER_ENABLED -> KEY_PROVIDER_ENABLED
    java.lang.String KEY_PROXIMITY_ENTERING -> KEY_PROXIMITY_ENTERING
    java.lang.String KEY_STATUS_CHANGED -> KEY_STATUS_CHANGED
    int WEATHER_TYPE_LIVE -> WEATHER_TYPE_LIVE
    int WEATHER_TYPE_FORECAST -> WEATHER_TYPE_FORECAST
    android.location.LocationManager a -> a
    com.amap.api.location.LocationManagerProxy b -> b
    com.amap.api.location.a c -> c
    android.content.Context d -> d
    com.amap.api.location.f e -> e
    com.amap.api.location.LocationManagerProxy$b f -> f
    java.util.ArrayList g -> g
    java.util.Hashtable h -> h
    java.util.Vector i -> i
    java.util.Vector j -> j
    com.amap.api.location.LocationManagerProxy$a k -> k
    void a() -> a
    com.amap.api.location.LocationManagerProxy getInstance(android.app.Activity) -> getInstance
    com.amap.api.location.LocationManagerProxy getInstance(android.content.Context) -> getInstance
    void a(android.content.Context) -> a
    void addProximityAlert(double,double,float,long,android.app.PendingIntent) -> addProximityAlert
    void addGeoFenceAlert(double,double,float,long,android.app.PendingIntent) -> addGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent) -> removeGeoFenceAlert
    void removeProximityAlert(android.app.PendingIntent) -> removeProximityAlert
    com.amap.api.location.AMapLocation getLastKnownLocation(java.lang.String) -> getLastKnownLocation
    void setGpsEnable(boolean) -> setGpsEnable
    void a(java.lang.String,long,float,com.amap.api.location.AMapLocationListener,boolean) -> a
    void requestLocationUpdates(java.lang.String,long,float,com.amap.api.location.AMapLocationListener) -> requestLocationUpdates
    void requestLocationData(java.lang.String,long,float,com.amap.api.location.AMapLocationListener) -> requestLocationData
    void removeUpdates(com.amap.api.location.AMapLocationListener) -> removeUpdates
    void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent) -> requestLocationUpdates
    void removeUpdates(android.app.PendingIntent) -> removeUpdates
    java.util.List getAllProviders() -> getAllProviders
    java.util.List getProviders(boolean) -> getProviders
    java.util.List getProviders(android.location.Criteria,boolean) -> getProviders
    java.lang.String getBestProvider(android.location.Criteria,boolean) -> getBestProvider
    boolean isProviderEnabled(java.lang.String) -> isProviderEnabled
    com.amap.api.location.LocationProviderProxy getProvider(java.lang.String) -> getProvider
    android.location.GpsStatus getGpsStatus(android.location.GpsStatus) -> getGpsStatus
    void removeGpsStatusListener(android.location.GpsStatus$Listener) -> removeGpsStatusListener
    boolean addGpsStatusListener(android.location.GpsStatus$Listener) -> addGpsStatusListener
    void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int) -> addTestProvider
    void setTestProviderEnabled(java.lang.String,boolean) -> setTestProviderEnabled
    void setTestProviderLocation(java.lang.String,android.location.Location) -> setTestProviderLocation
    void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long) -> setTestProviderStatus
    void clearTestProviderEnabled(java.lang.String) -> clearTestProviderEnabled
    void clearTestProviderLocation(java.lang.String) -> clearTestProviderLocation
    void clearTestProviderStatus(java.lang.String) -> clearTestProviderStatus
    void requestWeatherUpdates(int,com.amap.api.location.AMapLocalWeatherListener) -> requestWeatherUpdates
    void destory() -> destory
    void destroy() -> destroy
    java.lang.String getVersion() -> getVersion
    java.util.ArrayList a(com.amap.api.location.LocationManagerProxy) -> a
    android.content.Context b(com.amap.api.location.LocationManagerProxy) -> b
    java.util.Vector c(com.amap.api.location.LocationManagerProxy) -> c
    java.util.Vector d(com.amap.api.location.LocationManagerProxy) -> d
    android.location.LocationManager e(com.amap.api.location.LocationManagerProxy) -> e
    com.amap.api.location.LocationManagerProxy$a f(com.amap.api.location.LocationManagerProxy) -> f
com.amap.api.location.LocationManagerProxy$a -> com.amap.api.location.LocationManagerProxy$a:
    com.amap.api.location.LocationManagerProxy a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationManagerProxy$b -> com.amap.api.location.LocationManagerProxy$b:
    com.amap.api.location.LocationManagerProxy a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationProviderProxy -> com.amap.api.location.LocationProviderProxy:
    int AVAILABLE -> AVAILABLE
    int OUT_OF_SERVICE -> OUT_OF_SERVICE
    int TEMPORARILY_UNAVAILABLE -> TEMPORARILY_UNAVAILABLE
    java.lang.String AMapNetwork -> AMapNetwork
    android.location.LocationManager a -> a
    java.lang.String b -> b
    com.amap.api.location.LocationProviderProxy a(android.location.LocationManager,java.lang.String) -> a
    android.location.LocationProvider a() -> a
    int getAccuracy() -> getAccuracy
    java.lang.String getName() -> getName
    int getPowerRequirement() -> getPowerRequirement
    boolean hasMonetaryCost() -> hasMonetaryCost
    boolean meetsCriteria(android.location.Criteria) -> meetsCriteria
    boolean requiresCell() -> requiresCell
    boolean requiresNetwork() -> requiresNetwork
    boolean requiresSatellite() -> requiresSatellite
    boolean supportsAltitude() -> supportsAltitude
    boolean supportsBearing() -> supportsBearing
    boolean supportsSpeed() -> supportsSpeed
com.amap.api.location.a -> com.amap.api.location.a:
    android.content.Context h -> h
    java.util.Vector i -> i
    com.amap.api.location.a$a j -> j
    java.util.Vector k -> k
    com.amap.api.location.d a -> a
    com.amap.api.location.c b -> b
    com.amap.api.location.AMapLocation l -> l
    com.amap.api.location.AMapLocation m -> m
    java.lang.Thread n -> n
    boolean c -> c
    long d -> d
    boolean e -> e
    boolean f -> f
    com.amap.api.location.b g -> g
    long o -> o
    float p -> p
    void c() -> c
    void a(double,double,float,long,android.app.PendingIntent) -> a
    void b(double,double,float,long,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    com.amap.api.location.AMapLocation a() -> a
    void a(long,float,com.amap.api.location.AMapLocationListener,java.lang.String,boolean) -> a
    void c(boolean) -> c
    void a(com.amap.api.location.AMapLocationListener) -> a
    void a(boolean) -> a
    void d(boolean) -> d
    void b() -> b
    void b(boolean) -> b
    void a(int,com.amap.api.location.AMapLocalWeatherListener) -> a
    java.util.Vector a(com.amap.api.location.a) -> a
    com.amap.api.location.AMapLocation a(com.amap.api.location.a,com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocation b(com.amap.api.location.a) -> b
    com.amap.api.location.AMapLocation b(com.amap.api.location.a,com.amap.api.location.AMapLocation) -> b
    java.util.Vector c(com.amap.api.location.a) -> c
    android.content.Context d(com.amap.api.location.a) -> d
    com.amap.api.location.AMapLocation e(com.amap.api.location.a) -> e
com.amap.api.location.a$1 -> com.amap.api.location.a$1:
    int a -> a
    com.amap.api.location.AMapLocalWeatherListener b -> b
    com.amap.api.location.a c -> c
    void run() -> run
com.amap.api.location.a$a -> com.amap.api.location.a$a:
    com.amap.api.location.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.b -> com.amap.api.location.b:
    android.content.Context d -> d
    com.amap.api.location.b$a a -> a
    com.amap.api.location.AMapLocalWeatherListener b -> b
    com.amap.api.location.a c -> c
    int e -> e
    com.amap.api.location.AMapLocalWeatherListener f -> f
    void a(int,com.amap.api.location.AMapLocalWeatherListener,com.amap.api.location.AMapLocation) -> a
    void a(com.amap.api.location.AMapLocation,java.lang.String,com.amap.api.location.AMapLocalWeatherListener) -> a
    byte[] a(com.amap.api.location.AMapLocation,java.lang.String) -> a
    java.lang.String a() -> a
    com.amap.api.location.AMapLocalWeatherLive a(java.lang.String,com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocalWeatherForecast b(java.lang.String,com.amap.api.location.AMapLocation) -> b
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    int a(com.amap.api.location.b) -> a
    com.amap.api.location.AMapLocalWeatherListener b(com.amap.api.location.b) -> b
com.amap.api.location.b$a -> com.amap.api.location.b$a:
    java.lang.ref.WeakReference a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.b$a$1 -> com.amap.api.location.b$a$1:
    com.amap.api.location.b a -> a
    com.amap.api.location.AMapLocation b -> b
    com.amap.api.location.b$a c -> c
    void run() -> run
com.amap.api.location.c -> com.amap.api.location.c:
    com.aps.k a -> a
    boolean c -> c
    java.lang.Thread d -> d
    android.content.Context e -> e
    long f -> f
    com.amap.api.location.a$a g -> g
    com.amap.api.location.a h -> h
    boolean b -> b
    void a() -> a
    void run() -> run
    void a(long) -> a
    com.aps.c b() -> b
    com.aps.c c() -> c
    boolean d() -> d
    com.amap.api.location.AMapLocation a(com.aps.c) -> a
    void a(com.amap.api.location.AMapLocation,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    void a(com.aps.j,android.app.PendingIntent) -> a
    void b(com.aps.j,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
com.amap.api.location.core.AMapLocException -> com.amap.api.location.core.AMapLocException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    int ERROR_CODE_IO -> ERROR_CODE_IO
    int ERROR_CODE_SOCKET -> ERROR_CODE_SOCKET
    int ERROR_CODE_SOCKE_TIME_OUT -> ERROR_CODE_SOCKE_TIME_OUT
    int ERROR_CODE_INVALID_PARAMETER -> ERROR_CODE_INVALID_PARAMETER
    int ERROR_CODE_NULL_PARAMETER -> ERROR_CODE_NULL_PARAMETER
    int ERROR_CODE_URL -> ERROR_CODE_URL
    int ERROR_CODE_UNKNOW_HOST -> ERROR_CODE_UNKNOW_HOST
    int ERROR_CODE_UNKNOW_SERVICE -> ERROR_CODE_UNKNOW_SERVICE
    int ERROR_CODE_PROTOCOL -> ERROR_CODE_PROTOCOL
    int ERROR_CODE_CONNECTION -> ERROR_CODE_CONNECTION
    int ERROR_CODE_UNKNOWN -> ERROR_CODE_UNKNOWN
    int ERROR_CODE_FAILURE_AUTH -> ERROR_CODE_FAILURE_AUTH
    java.lang.String a -> a
    int b -> b
    java.lang.String getErrorMessage() -> getErrorMessage
    int getErrorCode() -> getErrorCode
    void a(java.lang.String) -> a
com.amap.api.location.core.CoordinateConvert -> com.amap.api.location.core.CoordinateConvert:
    com.amap.api.location.core.GeoPoint fromGpsToAMap(double,double) -> fromGpsToAMap
    double[] fromSeveralGpsToAMap(java.lang.String) -> fromSeveralGpsToAMap
    double[] fromSeveralGpsToAMap(double[]) -> fromSeveralGpsToAMap
com.amap.api.location.core.GeoPoint -> com.amap.api.location.core.GeoPoint:
    long a -> a
    long b -> b
    double c -> c
    double d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getLongitudeE6() -> getLongitudeE6
    int getLatitudeE6() -> getLatitudeE6
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.location.core.a -> com.amap.api.location.core.a:
    int b -> b
    java.lang.String a -> a
    int a() -> a
    boolean a(android.content.Context) -> a
    java.lang.String b() -> b
    boolean c(java.lang.String) -> c
    byte[] c() -> c
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.amap.api.location.core.b -> com.amap.api.location.core.b:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(byte[]) -> a
com.amap.api.location.core.c -> com.amap.api.location.core.c:
    com.amap.api.location.core.c c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.content.Context f -> f
    android.telephony.TelephonyManager g -> g
    android.net.ConnectivityManager h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a -> a
    java.lang.String n -> n
    java.util.HashMap b -> b
    java.lang.String a() -> a
    com.amap.api.location.core.c a(android.content.Context) -> a
    java.lang.String b() -> b
    java.lang.String k() -> k
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String b(android.content.Context) -> b
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String c(android.content.Context) -> c
    void l() -> l
    void c(java.lang.String) -> c
    boolean a(double,double) -> a
    java.lang.String j() -> j
com.amap.api.location.core.d -> com.amap.api.location.core.d:
    int a -> a
    android.content.SharedPreferences c -> c
    android.content.SharedPreferences$Editor d -> d
    java.lang.reflect.Method e -> e
    java.lang.String b -> b
    boolean a(android.content.Context) -> a
    com.amap.api.location.AMapLocation b(android.content.Context) -> b
    void a(android.content.Context,com.amap.api.location.AMapLocation) -> a
    void a(android.content.SharedPreferences$Editor) -> a
    java.lang.String a() -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
com.amap.api.location.core.e -> com.amap.api.location.core.e:
    char[] a -> a
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[],java.security.Key) -> a
    java.security.PublicKey a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    byte[] a(byte[],java.lang.String) -> a
    javax.crypto.spec.SecretKeySpec c(java.lang.String) -> c
com.amap.api.location.core.f -> com.amap.api.location.core.f:
    com.amap.api.location.core.GeoPoint a(android.os.Parcel) -> a
    com.amap.api.location.core.GeoPoint[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.location.core.g -> com.amap.api.location.core.g:
    java.lang.String[] a -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
com.amap.api.location.d -> com.amap.api.location.d:
    android.location.LocationManager a -> a
    com.amap.api.location.a$a c -> c
    com.amap.api.location.a d -> d
    android.content.Context e -> e
    android.location.LocationListener b -> b
    void a(long,float) -> a
    void a() -> a
    void b() -> b
    com.amap.api.location.a a(com.amap.api.location.d) -> a
    com.amap.api.location.a$a b(com.amap.api.location.d) -> b
com.amap.api.location.e -> com.amap.api.location.e:
    com.amap.api.location.d a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.amap.api.location.f -> com.amap.api.location.f:
    com.amap.api.location.LocationManagerProxy a -> a
    com.amap.api.location.AMapLocationListener b -> b
    boolean a(com.amap.api.location.AMapLocationListener,long,float,java.lang.String) -> a
    void a() -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.g -> com.amap.api.location.g:
    long a -> a
    com.amap.api.location.AMapLocationListener b -> b
    java.lang.Boolean c -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.amap.api.mapcore.AMapDelegateImp -> com.amap.api.mapcore.AMapDelegateImp:
    int n -> n
    int o -> o
    android.graphics.Bitmap p -> p
    android.graphics.Bitmap q -> q
    int r -> r
    int s -> s
    float a -> a
    float b -> b
    float c -> c
    int[] t -> t
    java.util.concurrent.CopyOnWriteArrayList u -> u
    java.util.concurrent.CopyOnWriteArrayList v -> v
    com.amap.api.mapcore.av d -> d
    com.amap.api.mapcore.au e -> e
    com.amap.api.mapcore.br f -> f
    com.amap.api.mapcore.bn g -> g
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime w -> w
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode x -> x
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState y -> y
    int z -> z
    com.autonavi.amap.mapcore.MapCore A -> A
    android.content.Context B -> B
    com.amap.api.mapcore.a C -> C
    com.autonavi.amap.mapcore.MapProjection D -> D
    android.view.GestureDetector E -> E
    android.view.ScaleGestureDetector F -> F
    com.amap.api.mapcore.util.d G -> G
    android.view.SurfaceHolder H -> H
    com.amap.api.mapcore.ay I -> I
    com.amap.api.mapcore.bq J -> J
    com.amap.api.mapcore.ar K -> K
    com.amap.api.mapcore.q L -> L
    com.amap.api.mapcore.bi M -> M
    com.amap.api.mapcore.aq N -> N
    com.amap.api.maps.AMap$OnMyLocationChangeListener O -> O
    com.amap.api.maps.AMap$OnMarkerClickListener P -> P
    com.amap.api.maps.AMap$OnPolylineClickListener Q -> Q
    com.amap.api.maps.AMap$OnMarkerDragListener R -> R
    com.amap.api.maps.AMap$OnMapLoadedListener S -> S
    com.amap.api.maps.AMap$OnCameraChangeListener T -> T
    com.amap.api.maps.AMap$OnMapClickListener U -> U
    com.amap.api.maps.AMap$OnMapTouchListener V -> V
    com.amap.api.maps.AMap$OnPOIClickListener W -> W
    com.amap.api.maps.AMap$OnMapLongClickListener X -> X
    com.amap.api.maps.AMap$OnInfoWindowClickListener Y -> Y
    com.amap.api.maps.AMap$InfoWindowAdapter Z -> Z
    com.amap.api.maps.AMap$InfoWindowAdapter aa -> aa
    android.view.View ab -> ab
    com.amap.api.mapcore.ag ac -> ac
    com.amap.api.mapcore.bg ad -> ad
    com.amap.api.mapcore.al ae -> ae
    com.amap.api.mapcore.ap af -> af
    com.amap.api.maps.LocationSource ag -> ag
    android.graphics.Rect ah -> ah
    com.amap.api.mapcore.l ai -> ai
    com.amap.api.mapcore.util.c aj -> aj
    com.amap.api.mapcore.ba ak -> ak
    com.amap.api.mapcore.n al -> al
    int am -> am
    int an -> an
    com.amap.api.maps.AMap$CancelableCallback ao -> ao
    int ap -> ap
    android.graphics.drawable.Drawable aq -> aq
    android.location.Location ar -> ar
    com.amap.api.maps.AMap$onMapPrintScreenListener as -> as
    com.amap.api.maps.AMap$OnMapScreenShotListener at -> at
    android.os.Handler au -> au
    com.amap.api.mapcore.util.f av -> av
    com.amap.api.mapcore.o aw -> aw
    java.util.Timer ax -> ax
    com.amap.api.mapcore.AMapDelegateImp$TimeChangedReceiver ay -> ay
    double az -> az
    boolean aA -> aA
    boolean aB -> aB
    boolean aC -> aC
    boolean aD -> aD
    boolean aE -> aE
    boolean aF -> aF
    boolean aG -> aG
    boolean aH -> aH
    java.lang.Boolean aI -> aI
    boolean aJ -> aJ
    boolean aK -> aK
    boolean aL -> aL
    android.os.Handler aM -> aM
    com.amap.api.mapcore.v h -> h
    com.autonavi.amap.mapcore.GLMapResManager i -> i
    com.amap.api.mapcore.ad j -> j
    com.amap.api.mapcore.s aN -> aN
    boolean aO -> aO
    boolean aP -> aP
    boolean aQ -> aQ
    android.os.Handler aR -> aR
    java.lang.Runnable aS -> aS
    java.lang.Runnable k -> k
    boolean aT -> aT
    boolean aU -> aU
    boolean aV -> aV
    boolean aW -> aW
    boolean aX -> aX
    com.amap.api.maps.model.Marker aY -> aY
    com.amap.api.mapcore.ag aZ -> aZ
    boolean ba -> ba
    boolean bb -> bb
    boolean bc -> bc
    int bd -> bd
    boolean be -> be
    java.lang.Thread bf -> bf
    com.amap.api.maps.model.LatLngBounds bg -> bg
    android.os.Handler l -> l
    boolean bh -> bh
    boolean bi -> bi
    boolean bj -> bj
    int bk -> bk
    int bl -> bl
    android.os.Handler bm -> bm
    java.lang.Runnable bn -> bn
    java.lang.Runnable bo -> bo
    com.amap.api.maps.CustomRenderer m -> m
    boolean bp -> bp
    com.amap.api.mapcore.AMapDelegateImp$a bq -> bq
    com.autonavi.amap.mapcore.MapCore a() -> a
    int b() -> b
    com.autonavi.amap.mapcore.MapProjection c() -> c
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.mapcore.u) -> a
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void d() -> d
    void e() -> e
    void ab() -> ab
    void ac() -> ac
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    void a(float) -> a
    void a(android.location.Location) -> a
    void a(boolean) -> a
    void f() -> f
    void b(boolean) -> b
    void c(boolean) -> c
    void g() -> g
    void d(boolean) -> d
    void h() -> h
    void i() -> i
    boolean a(java.lang.String) -> a
    void e(boolean) -> e
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    android.graphics.Rect j() -> j
    int k() -> k
    int l() -> l
    int m() -> m
    int n() -> n
    void a(int,int,int,int) -> a
    void ad() -> ad
    void ae() -> ae
    void af() -> af
    int o() -> o
    void p() -> p
    void f(boolean) -> f
    com.amap.api.maps.model.CameraPosition q() -> q
    float r() -> r
    float s() -> s
    void a(com.amap.api.mapcore.o) -> a
    void b(com.amap.api.mapcore.o) -> b
    void a(com.amap.api.mapcore.o,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.o,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void t() -> t
    com.amap.api.mapcore.ak a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.ah a(com.amap.api.maps.model.NavigateArrowOptions) -> a
    com.amap.api.mapcore.aj a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.ac a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.ab a(com.amap.api.maps.model.ArcOptions) -> a
    com.amap.api.mapcore.ae a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    com.amap.api.maps.model.Text a(com.amap.api.maps.model.TextOptions) -> a
    java.util.ArrayList a(java.util.ArrayList,boolean) -> a
    com.amap.api.maps.model.TileOverlay a(com.amap.api.maps.model.TileOverlayOptions) -> a
    void u() -> u
    void g(boolean) -> g
    int v() -> v
    void b(int) -> b
    void a(com.autonavi.amap.mapcore.GLMapResManager$MapViewMode,com.autonavi.amap.mapcore.GLMapResManager$MapViewTime) -> a
    void a(com.autonavi.amap.mapcore.GLMapResManager$MapViewMode,com.autonavi.amap.mapcore.GLMapResManager$MapViewTime,com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState) -> a
    boolean w() -> w
    void h(boolean) -> h
    void i(boolean) -> i
    void j(boolean) -> j
    boolean x() -> x
    void k(boolean) -> k
    android.location.Location y() -> y
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.ap z() -> z
    com.amap.api.mapcore.al A() -> A
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.maps.AMap$OnCameraChangeListener B() -> B
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapTouchListener) -> a
    void a(com.amap.api.maps.AMap$OnPOIClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnPolylineClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    android.view.View C() -> C
    float b(float) -> b
    float c(int) -> c
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.IPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.IPoint) -> b
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void a(float,float,com.autonavi.amap.mapcore.IPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    com.amap.api.maps.model.LatLng ag() -> ag
    com.amap.api.maps.model.CameraPosition l(boolean) -> l
    void ah() -> ah
    void b(android.view.MotionEvent) -> b
    boolean a(android.view.MotionEvent) -> a
    void a(com.amap.api.mapcore.ag) -> a
    void D() -> D
    float E() -> E
    void F() -> F
    com.amap.api.maps.model.LatLngBounds G() -> G
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.maps.model.LatLng,float) -> a
    void H() -> H
    android.graphics.Point I() -> I
    android.graphics.Bitmap a(int,int,int,int,javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void d(int) -> d
    void e(int) -> e
    float J() -> J
    void m(boolean) -> m
    void a(boolean,com.amap.api.maps.model.CameraPosition) -> a
    void f(int) -> f
    int K() -> K
    java.util.List L() -> L
    void M() -> M
    void N() -> N
    boolean O() -> O
    void P() -> P
    void a(int,int) -> a
    void g(int) -> g
    int Q() -> Q
    boolean R() -> R
    com.amap.api.mapcore.n S() -> S
    void n(boolean) -> n
    void T() -> T
    void a(com.amap.api.maps.AMap$OnCacheRemoveListener) -> a
    boolean a(java.io.File) -> a
    void U() -> U
    void h(int) -> h
    void a(com.amap.api.mapcore.util.f) -> a
    com.amap.api.maps.model.Poi a(int,int,int) -> a
    void a(com.amap.api.maps.CustomRenderer) -> a
    android.content.Context V() -> V
    void a(java.lang.Runnable) -> a
    void b(javax.microedition.khronos.opengles.GL10) -> b
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void a(javax.microedition.khronos.opengles.GL10,int,int) -> a
    void c(javax.microedition.khronos.opengles.GL10) -> c
    void W() -> W
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime X() -> X
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode Y() -> Y
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState Z() -> Z
    void ai() -> ai
    java.lang.Runnable a(com.amap.api.mapcore.AMapDelegateImp) -> a
    android.os.Handler b(com.amap.api.mapcore.AMapDelegateImp) -> b
    java.lang.Runnable c(com.amap.api.mapcore.AMapDelegateImp) -> c
    com.autonavi.amap.mapcore.MapCore d(com.amap.api.mapcore.AMapDelegateImp) -> d
    com.autonavi.amap.mapcore.MapCore a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.MapCore) -> a
    boolean e(com.amap.api.mapcore.AMapDelegateImp) -> e
    boolean a(com.amap.api.mapcore.AMapDelegateImp,boolean) -> a
    boolean b(com.amap.api.mapcore.AMapDelegateImp,boolean) -> b
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.GLMapResManager$MapViewTime) -> a
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.GLMapResManager$MapViewMode) -> a
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState) -> a
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode f(com.amap.api.mapcore.AMapDelegateImp) -> f
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime g(com.amap.api.mapcore.AMapDelegateImp) -> g
    void h(com.amap.api.mapcore.AMapDelegateImp) -> h
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState i(com.amap.api.mapcore.AMapDelegateImp) -> i
    com.amap.api.mapcore.aq j(com.amap.api.mapcore.AMapDelegateImp) -> j
    boolean k(com.amap.api.mapcore.AMapDelegateImp) -> k
    boolean l(com.amap.api.mapcore.AMapDelegateImp) -> l
    boolean c(com.amap.api.mapcore.AMapDelegateImp,boolean) -> c
    double aa() -> aa
    com.amap.api.mapcore.ap m(com.amap.api.mapcore.AMapDelegateImp) -> m
    int n(com.amap.api.mapcore.AMapDelegateImp) -> n
    int a(com.amap.api.mapcore.AMapDelegateImp,int) -> a
    boolean o(com.amap.api.mapcore.AMapDelegateImp) -> o
    int p(com.amap.api.mapcore.AMapDelegateImp) -> p
    int q(com.amap.api.mapcore.AMapDelegateImp) -> q
    com.autonavi.amap.mapcore.MapProjection r(com.amap.api.mapcore.AMapDelegateImp) -> r
    void s(com.amap.api.mapcore.AMapDelegateImp) -> s
    boolean d(com.amap.api.mapcore.AMapDelegateImp,boolean) -> d
    boolean t(com.amap.api.mapcore.AMapDelegateImp) -> t
    boolean e(com.amap.api.mapcore.AMapDelegateImp,boolean) -> e
    com.amap.api.mapcore.util.c u(com.amap.api.mapcore.AMapDelegateImp) -> u
    int b(com.amap.api.mapcore.AMapDelegateImp,int) -> b
    int c(com.amap.api.mapcore.AMapDelegateImp,int) -> c
    com.amap.api.maps.AMap$CancelableCallback a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.AMap$CancelableCallback) -> a
    android.view.View v(com.amap.api.mapcore.AMapDelegateImp) -> v
    com.amap.api.mapcore.ag w(com.amap.api.mapcore.AMapDelegateImp) -> w
    boolean f(com.amap.api.mapcore.AMapDelegateImp,boolean) -> f
    com.amap.api.mapcore.bg x(com.amap.api.mapcore.AMapDelegateImp) -> x
    int y(com.amap.api.mapcore.AMapDelegateImp) -> y
    int z(com.amap.api.mapcore.AMapDelegateImp) -> z
    com.amap.api.mapcore.n A(com.amap.api.mapcore.AMapDelegateImp) -> A
    com.amap.api.mapcore.ag a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.mapcore.ag) -> a
    com.amap.api.maps.AMap$OnMarkerDragListener B(com.amap.api.mapcore.AMapDelegateImp) -> B
    com.amap.api.mapcore.ag C(com.amap.api.mapcore.AMapDelegateImp) -> C
    com.amap.api.maps.model.Marker a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.model.Marker) -> a
    com.amap.api.maps.model.Marker D(com.amap.api.mapcore.AMapDelegateImp) -> D
    boolean g(com.amap.api.mapcore.AMapDelegateImp,boolean) -> g
    com.amap.api.maps.AMap$OnMapLongClickListener E(com.amap.api.mapcore.AMapDelegateImp) -> E
    boolean h(com.amap.api.mapcore.AMapDelegateImp,boolean) -> h
    boolean F(com.amap.api.mapcore.AMapDelegateImp) -> F
    com.amap.api.maps.AMap$OnInfoWindowClickListener G(com.amap.api.mapcore.AMapDelegateImp) -> G
    com.amap.api.maps.AMap$OnMarkerClickListener H(com.amap.api.mapcore.AMapDelegateImp) -> H
    com.amap.api.maps.AMap$OnMapClickListener I(com.amap.api.mapcore.AMapDelegateImp) -> I
    com.amap.api.maps.AMap$OnPolylineClickListener J(com.amap.api.mapcore.AMapDelegateImp) -> J
    com.amap.api.maps.model.Poi a(com.amap.api.mapcore.AMapDelegateImp,int,int,int) -> a
    com.amap.api.maps.AMap$OnPOIClickListener K(com.amap.api.mapcore.AMapDelegateImp) -> K
    boolean L(com.amap.api.mapcore.AMapDelegateImp) -> L
    boolean i(com.amap.api.mapcore.AMapDelegateImp,boolean) -> i
    boolean j(com.amap.api.mapcore.AMapDelegateImp,boolean) -> j
    android.content.Context M(com.amap.api.mapcore.AMapDelegateImp) -> M
    java.lang.Boolean N(com.amap.api.mapcore.AMapDelegateImp) -> N
    com.amap.api.maps.AMap$OnCameraChangeListener O(com.amap.api.mapcore.AMapDelegateImp) -> O
    com.amap.api.mapcore.o P(com.amap.api.mapcore.AMapDelegateImp) -> P
    com.amap.api.maps.AMap$OnMapLoadedListener Q(com.amap.api.mapcore.AMapDelegateImp) -> Q
    com.amap.api.mapcore.q R(com.amap.api.mapcore.AMapDelegateImp) -> R
    com.amap.api.mapcore.bq S(com.amap.api.mapcore.AMapDelegateImp) -> S
    com.amap.api.maps.AMap$onMapPrintScreenListener T(com.amap.api.mapcore.AMapDelegateImp) -> T
    com.amap.api.maps.AMap$OnMapScreenShotListener U(com.amap.api.mapcore.AMapDelegateImp) -> U
    com.amap.api.maps.AMap$onMapPrintScreenListener a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    com.amap.api.maps.AMap$OnMapScreenShotListener a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    com.amap.api.maps.AMap$CancelableCallback V(com.amap.api.mapcore.AMapDelegateImp) -> V
    boolean W(com.amap.api.mapcore.AMapDelegateImp) -> W
    boolean k(com.amap.api.mapcore.AMapDelegateImp,boolean) -> k
    boolean X(com.amap.api.mapcore.AMapDelegateImp) -> X
    boolean l(com.amap.api.mapcore.AMapDelegateImp,boolean) -> l
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.mapcore.AMapDelegateImp,com.amap.api.maps.model.LatLngBounds) -> a
    void a(com.amap.api.mapcore.AMapDelegateImp,com.autonavi.amap.mapcore.MapProjection,int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void Y(com.amap.api.mapcore.AMapDelegateImp) -> Y
    boolean a(com.amap.api.mapcore.AMapDelegateImp,java.io.File) -> a
    com.amap.api.mapcore.util.f Z(com.amap.api.mapcore.AMapDelegateImp) -> Z
    com.amap.api.maps.AMap$OnMapTouchListener aa(com.amap.api.mapcore.AMapDelegateImp) -> aa
    boolean ab(com.amap.api.mapcore.AMapDelegateImp) -> ab
com.amap.api.mapcore.AMapDelegateImp$1 -> com.amap.api.mapcore.AMapDelegateImp$1:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void a() -> a
com.amap.api.mapcore.AMapDelegateImp$10 -> com.amap.api.mapcore.AMapDelegateImp$10:
    com.amap.api.maps.model.LatLngBounds a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    com.amap.api.maps.AMap$CancelableCallback f -> f
    com.amap.api.mapcore.AMapDelegateImp g -> g
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.mapcore.AMapDelegateImp$11 -> com.amap.api.mapcore.AMapDelegateImp$11:
    com.amap.api.maps.model.LatLngBounds$Builder a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$12 -> com.amap.api.mapcore.AMapDelegateImp$12:
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime a -> a
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode b -> b
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState c -> c
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime d -> d
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode e -> e
    com.amap.api.mapcore.AMapDelegateImp f -> f
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$12$1 -> com.amap.api.mapcore.AMapDelegateImp$12$1:
    com.amap.api.mapcore.AMapDelegateImp$12 a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$13 -> com.amap.api.mapcore.AMapDelegateImp$13:
    boolean a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$14 -> com.amap.api.mapcore.AMapDelegateImp$14:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$2 -> com.amap.api.mapcore.AMapDelegateImp$2:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$3 -> com.amap.api.mapcore.AMapDelegateImp$3:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void a() -> a
com.amap.api.mapcore.AMapDelegateImp$4 -> com.amap.api.mapcore.AMapDelegateImp$4:
    boolean a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$5 -> com.amap.api.mapcore.AMapDelegateImp$5:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$6 -> com.amap.api.mapcore.AMapDelegateImp$6:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$7 -> com.amap.api.mapcore.AMapDelegateImp$7:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
com.amap.api.mapcore.AMapDelegateImp$8 -> com.amap.api.mapcore.AMapDelegateImp$8:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$9 -> com.amap.api.mapcore.AMapDelegateImp$9:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$TimeChangedReceiver -> com.amap.api.mapcore.AMapDelegateImp$TimeChangedReceiver:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.amap.api.mapcore.AMapDelegateImp$a -> com.amap.api.mapcore.AMapDelegateImp$a:
    boolean b -> b
    boolean c -> c
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode d -> d
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime e -> e
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState f -> f
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$b -> com.amap.api.mapcore.AMapDelegateImp$b:
    float g -> g
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    java.lang.Float a -> a
    java.lang.Float b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    float d -> d
    com.amap.api.mapcore.o e -> e
    com.amap.api.mapcore.AMapDelegateImp f -> f
    void a(float,float,float,float,float) -> a
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
    void a() -> a
com.amap.api.mapcore.AMapDelegateImp$c -> com.amap.api.mapcore.AMapDelegateImp$c:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.amap.api.mapcore.AMapDelegateImp$c$1 -> com.amap.api.mapcore.AMapDelegateImp$c$1:
    com.amap.api.mapcore.ag a -> a
    com.amap.api.mapcore.AMapDelegateImp$c b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$c$2 -> com.amap.api.mapcore.AMapDelegateImp$c$2:
    android.view.MotionEvent a -> a
    com.amap.api.mapcore.AMapDelegateImp$c b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$c$2$1 -> com.amap.api.mapcore.AMapDelegateImp$c$2$1:
    com.amap.api.maps.model.Poi a -> a
    com.amap.api.mapcore.AMapDelegateImp$c$2 b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$d -> com.amap.api.mapcore.AMapDelegateImp$d:
    com.autonavi.amap.mapcore.FPoint a -> a
    com.autonavi.amap.mapcore.IPoint b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.o d -> d
    com.amap.api.mapcore.AMapDelegateImp e -> e
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.amap.api.mapcore.AMapDelegateImp$e -> com.amap.api.mapcore.AMapDelegateImp$e:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void a(int) -> a
com.amap.api.mapcore.AMapDelegateImp$e$1 -> com.amap.api.mapcore.AMapDelegateImp$e$1:
    com.amap.api.mapcore.AMapDelegateImp$e a -> a
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$f -> com.amap.api.mapcore.AMapDelegateImp$f:
    float a -> a
    float b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.o d -> d
    com.amap.api.mapcore.AMapDelegateImp e -> e
    boolean a(com.amap.api.mapcore.util.d) -> a
    boolean b(com.amap.api.mapcore.util.d) -> b
    void c(com.amap.api.mapcore.util.d) -> c
com.amap.api.mapcore.AMapDelegateImp$g -> com.amap.api.mapcore.AMapDelegateImp$g:
    float c -> c
    com.autonavi.amap.mapcore.IPoint d -> d
    com.amap.api.mapcore.o a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.amap.api.mapcore.AMapDelegateImp$h -> com.amap.api.mapcore.AMapDelegateImp$h:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    com.amap.api.mapcore.AMapDelegateImp b -> b
    void run() -> run
com.amap.api.mapcore.AMapDelegateImp$i -> com.amap.api.mapcore.AMapDelegateImp$i:
    android.content.Context b -> b
    com.amap.api.maps.AMap$OnCacheRemoveListener c -> c
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
    boolean equals(java.lang.Object) -> equals
com.amap.api.mapcore.AutoTestConfig -> com.amap.api.mapcore.AutoTestConfig:
    int a -> a
    int ZoomControllerViewId -> ZoomControllerViewId
    int ScaleControlsViewId -> ScaleControlsViewId
    int MyLocationViewId -> MyLocationViewId
    int CompassViewId -> CompassViewId
com.amap.api.mapcore.a -> com.amap.api.mapcore.a:
    com.amap.api.mapcore.AMapDelegateImp f -> f
    float g -> g
    com.autonavi.amap.mapcore.IPoint a -> a
    float b -> b
    float c -> c
    float d -> d
    com.autonavi.amap.mapcore.IPoint e -> e
    int h -> h
    int i -> i
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void a(com.autonavi.amap.mapcore.MapCore) -> a
    void b(com.amap.api.mapcore.o) -> b
    float a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,int,int) -> a
    void a(com.amap.api.mapcore.o) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.o) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,float) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,float,int,int) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint,float,float,float) -> a
    void b(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.o) -> b
    void c(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.o) -> c
    void d(com.autonavi.amap.mapcore.MapProjection,com.amap.api.mapcore.o) -> d
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint) -> a
    void a(com.autonavi.amap.mapcore.MapProjection,com.autonavi.amap.mapcore.IPoint,int,int) -> a
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.MapProjection) -> a
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.MapProjection,int,int) -> a
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    void a(int,int) -> a
    void requestRender() -> requestRender
    void onIndoorBuildingActivity(com.autonavi.amap.mapcore.MapCore,byte[]) -> onIndoorBuildingActivity
    void onIndoorDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[],int[],int[]) -> onIndoorDataRequired
com.amap.api.mapcore.aa -> com.amap.api.mapcore.aa:
    void a(com.amap.api.maps.CustomRenderer) -> a
    void a(com.amap.api.mapcore.u) -> a
    com.autonavi.amap.mapcore.MapProjection c() -> c
    int k() -> k
    int l() -> l
    int b() -> b
    int o() -> o
    android.view.View C() -> C
    android.graphics.Rect j() -> j
    void f(boolean) -> f
    void a(android.location.Location) -> a
    boolean a(java.lang.String) -> a
    void M() -> M
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    float E() -> E
    int K() -> K
    void f(int) -> f
    com.amap.api.maps.model.CameraPosition q() -> q
    float r() -> r
    float s() -> s
    void a(com.amap.api.mapcore.o) -> a
    void b(com.amap.api.mapcore.o) -> b
    void a(com.amap.api.mapcore.o,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.o,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void t() -> t
    com.amap.api.mapcore.ak a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.ac a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.aj a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.ae a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    com.amap.api.maps.model.Text a(com.amap.api.maps.model.TextOptions) -> a
    com.amap.api.maps.model.TileOverlay a(com.amap.api.maps.model.TileOverlayOptions) -> a
    void u() -> u
    void g(boolean) -> g
    int v() -> v
    void b(int) -> b
    boolean w() -> w
    void h(boolean) -> h
    void j(boolean) -> j
    boolean x() -> x
    void k(boolean) -> k
    void n(boolean) -> n
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    android.location.Location y() -> y
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.ap z() -> z
    com.amap.api.mapcore.al A() -> A
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapTouchListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnPolylineClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    void a(com.amap.api.mapcore.ag) -> a
    void D() -> D
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    void a(int,int,com.autonavi.amap.mapcore.IPoint) -> a
    void p() -> p
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void f() -> f
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void d(int) -> d
    void e(int) -> e
    float J() -> J
    com.amap.api.maps.model.LatLngBounds G() -> G
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.maps.model.LatLng,float) -> a
    void d() -> d
    void e() -> e
    boolean a(android.view.MotionEvent) -> a
    void e(boolean) -> e
    void a(int,int,int,int) -> a
    void a(float) -> a
    java.util.List L() -> L
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    void a(float,float,com.autonavi.amap.mapcore.IPoint) -> a
    float c(int) -> c
    void N() -> N
    void a(int,int) -> a
    com.amap.api.maps.model.CameraPosition l(boolean) -> l
    void g(int) -> g
    int Q() -> Q
    boolean R() -> R
    com.amap.api.mapcore.ab a(com.amap.api.maps.model.ArcOptions) -> a
    com.amap.api.mapcore.n S() -> S
    com.amap.api.mapcore.ah a(com.amap.api.maps.model.NavigateArrowOptions) -> a
    java.util.ArrayList a(java.util.ArrayList,boolean) -> a
    void T() -> T
    void a(com.amap.api.maps.AMap$OnCacheRemoveListener) -> a
    void i(boolean) -> i
    void h(int) -> h
    void a(com.amap.api.maps.AMap$OnPOIClickListener) -> a
    android.graphics.Point I() -> I
    void W() -> W
com.amap.api.mapcore.ab -> com.amap.api.mapcore.ab:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
com.amap.api.mapcore.ac -> com.amap.api.mapcore.ac:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> i
    void a(double) -> a
    double l() -> l
    void b(float) -> b
    float m() -> m
    void a(int) -> a
    int n() -> n
    void b(int) -> b
    int o() -> o
    boolean b(com.amap.api.maps.model.LatLng) -> b
com.amap.api.mapcore.ad -> com.amap.api.mapcore.ad:
    void setBackgroundColor(int) -> setBackgroundColor
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void setRenderMode(int) -> setRenderMode
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    void queueEvent(java.lang.Runnable) -> queueEvent
    boolean isEnabled() -> isEnabled
    void setVisibility(int) -> setVisibility
    void requestRender() -> requestRender
com.amap.api.mapcore.ae -> com.amap.api.mapcore.ae:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> h
    void b(float) -> b
    void a(float,float) -> a
    float i() -> i
    float l() -> l
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds m() -> m
    void c(float) -> c
    float n() -> n
    void d(float) -> d
    float o() -> o
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
com.amap.api.mapcore.af -> com.amap.api.mapcore.af:
    com.amap.api.mapcore.aa a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
    void a(int) -> a
com.amap.api.mapcore.ag -> com.amap.api.mapcore.ag:
    boolean b() -> b
    boolean c() -> c
    android.graphics.Rect d() -> d
    com.amap.api.maps.model.LatLng e() -> e
    com.autonavi.amap.mapcore.FPoint f() -> f
    com.amap.api.maps.model.LatLng g() -> g
    java.lang.String h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> i
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void a(float,float) -> a
    void b(java.lang.String) -> b
    java.lang.String j() -> j
    void a(boolean) -> a
    boolean k() -> k
    void l() -> l
    void m() -> m
    boolean n() -> n
    void b(boolean) -> b
    void c(boolean) -> c
    boolean o() -> o
    void p() -> p
    boolean a(com.amap.api.mapcore.ag) -> a
    int q() -> q
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.aa) -> a
    boolean r() -> r
    void a(java.lang.Object) -> a
    java.lang.Object s() -> s
    void d(boolean) -> d
    boolean t() -> t
    void a(float) -> a
    float u() -> u
    void a(int) -> a
    int v() -> v
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> w
    boolean x() -> x
    void y() -> y
    void z() -> z
    void e(boolean) -> e
    boolean A() -> A
    int B() -> B
    int C() -> C
    int D() -> D
    int E() -> E
    void a(int,int) -> a
    boolean F() -> F
    void b(float) -> b
    float G() -> G
    boolean H() -> H
    void a(com.autonavi.amap.mapcore.IPoint) -> a
    com.autonavi.amap.mapcore.IPoint I() -> I
com.amap.api.mapcore.ah -> com.amap.api.mapcore.ah:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    void b(int) -> b
    int i() -> i
    int l() -> l
    void a(java.util.List) -> a
    java.util.List m() -> m
com.amap.api.mapcore.ai -> com.amap.api.mapcore.ai:
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ai) -> a
    int f() -> f
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void j() -> j
    boolean a() -> a
    boolean k() -> k
com.amap.api.mapcore.aj -> com.amap.api.mapcore.aj:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    void a(java.util.List) -> a
    java.util.List l() -> l
    int m() -> m
    boolean a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.ak -> com.amap.api.mapcore.ak:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void a(java.util.List) -> a
    java.util.List l() -> l
    boolean m() -> m
    void b(boolean) -> b
    void c(boolean) -> c
    boolean n() -> n
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
    boolean b(com.amap.api.maps.model.LatLng) -> b
    void c(float) -> c
com.amap.api.mapcore.al -> com.amap.api.mapcore.al:
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    com.amap.api.maps.model.VisibleRegion a() -> a
    float a(int) -> a
    com.amap.api.maps.model.TileProjection a(com.amap.api.maps.model.LatLngBounds,int,int) -> a
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.maps.model.LatLng,float) -> a
com.amap.api.mapcore.am -> com.amap.api.mapcore.am:
com.amap.api.mapcore.am$a -> com.amap.api.mapcore.am$a:
    com.amap.api.mapcore.am$a a -> a
    com.amap.api.mapcore.am$a b -> b
    com.amap.api.mapcore.am$a c -> c
    com.amap.api.mapcore.am$a[] d -> d
    com.amap.api.mapcore.am$a[] values() -> values
    com.amap.api.mapcore.am$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.an -> com.amap.api.mapcore.an:
    void c(java.lang.String) -> c
    java.lang.String a() -> a
    void b(int) -> b
    int J() -> J
    void c(int) -> c
    int K() -> K
    void d(int) -> d
    int L() -> L
    void a(android.graphics.Typeface) -> a
    android.graphics.Typeface M() -> M
    void b(int,int) -> b
    int N() -> N
    int O() -> O
com.amap.api.mapcore.ao -> com.amap.api.mapcore.ao:
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ao) -> a
    int f() -> f
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(boolean) -> b
    void g() -> g
    void h() -> h
    void c(boolean) -> c
com.amap.api.mapcore.ap -> com.amap.api.mapcore.ap:
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
    int j() -> j
com.amap.api.mapcore.aq -> com.amap.api.mapcore.aq:
    java.lang.String a -> a
    android.content.Context c -> c
    android.widget.LinearLayout d -> d
    int e -> e
    java.util.List f -> f
    int g -> g
    int h -> h
    android.graphics.Bitmap i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int b -> b
    int o -> o
    java.lang.Runnable p -> p
    int q -> q
    com.amap.api.mapcore.aq$a r -> r
    void a(android.content.Context) -> a
    void a() -> a
    void d() -> d
    android.widget.TextView b(java.lang.String) -> b
    void a(int) -> a
    void a(java.lang.String[]) -> a
    void setBackgroundColor(int) -> setBackgroundColor
    void b() -> b
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    int[] e() -> e
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void f() -> f
    void a(java.lang.String) -> a
    int c() -> c
    void fling(int) -> fling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void a(com.amap.api.mapcore.aq$a) -> a
    int a(android.content.Context,float) -> a
    int a(android.view.View) -> a
    void b(android.view.View) -> b
    int a(com.amap.api.mapcore.aq) -> a
    int b(com.amap.api.mapcore.aq) -> b
    int c(com.amap.api.mapcore.aq) -> c
    void d(com.amap.api.mapcore.aq) -> d
    int a(com.amap.api.mapcore.aq,int) -> a
    java.lang.Runnable e(com.amap.api.mapcore.aq) -> e
    int f(com.amap.api.mapcore.aq) -> f
    int g(com.amap.api.mapcore.aq) -> g
    android.graphics.Bitmap h(com.amap.api.mapcore.aq) -> h
    int[] i(com.amap.api.mapcore.aq) -> i
    int j(com.amap.api.mapcore.aq) -> j
    int k(com.amap.api.mapcore.aq) -> k
    int l(com.amap.api.mapcore.aq) -> l
com.amap.api.mapcore.aq$1 -> com.amap.api.mapcore.aq$1:
    com.amap.api.mapcore.aq a -> a
    void run() -> run
com.amap.api.mapcore.aq$1$1 -> com.amap.api.mapcore.aq$1$1:
    int a -> a
    int b -> b
    com.amap.api.mapcore.aq$1 c -> c
    void run() -> run
com.amap.api.mapcore.aq$1$2 -> com.amap.api.mapcore.aq$1$2:
    int a -> a
    int b -> b
    com.amap.api.mapcore.aq$1 c -> c
    void run() -> run
com.amap.api.mapcore.aq$2 -> com.amap.api.mapcore.aq$2:
    com.amap.api.mapcore.aq a -> a
    void draw(android.graphics.Canvas) -> draw
    void a(android.graphics.Canvas) -> a
    void b(android.graphics.Canvas) -> b
    void c(android.graphics.Canvas) -> c
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.amap.api.mapcore.aq$3 -> com.amap.api.mapcore.aq$3:
    int a -> a
    com.amap.api.mapcore.aq b -> b
    void run() -> run
com.amap.api.mapcore.aq$a -> com.amap.api.mapcore.aq$a:
    void a(int) -> a
com.amap.api.mapcore.ar -> com.amap.api.mapcore.ar:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.widget.ImageView g -> g
    com.amap.api.mapcore.aa h -> h
    boolean i -> i
    void a() -> a
    void a(boolean) -> a
com.amap.api.mapcore.ar$1 -> com.amap.api.mapcore.ar$1:
    com.amap.api.mapcore.ar a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.as -> com.amap.api.mapcore.as:
    com.amap.api.mapcore.aa e -> e
    android.content.Context a -> a
    int b -> b
    int f -> f
    int c -> c
    int d -> d
    com.amap.api.maps.AMapOptions g -> g
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    com.amap.api.mapcore.aa a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b(com.amap.api.maps.AMapOptions) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
    void a(int) -> a
com.amap.api.mapcore.at -> com.amap.api.mapcore.at:
    int a -> a
    boolean b -> b
    boolean a() -> a
    com.amap.api.mapcore.at a(boolean) -> a
com.amap.api.mapcore.au -> com.amap.api.mapcore.au:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    void a() -> a
    void a(com.amap.api.mapcore.at) -> a
    com.amap.api.mapcore.at b() -> b
    int c() -> c
    void a(com.amap.api.mapcore.o) -> a
    com.amap.api.mapcore.o d() -> d
    int e() -> e
    void f() -> f
com.amap.api.mapcore.av -> com.amap.api.mapcore.av:
    com.amap.api.mapcore.aa a -> a
    java.util.concurrent.CopyOnWriteArrayList c -> c
    java.util.concurrent.CopyOnWriteArrayList d -> d
    java.util.concurrent.CopyOnWriteArrayList e -> e
    com.amap.api.mapcore.av$a b -> b
    com.autonavi.amap.mapcore.IPoint f -> f
    com.amap.api.mapcore.ag g -> g
    android.os.Handler h -> h
    java.lang.Runnable i -> i
    android.os.Handler j -> j
    java.lang.Runnable k -> k
    int a() -> a
    void a(java.lang.String) -> a
    void a(com.amap.api.mapcore.ag) -> a
    boolean b(com.amap.api.mapcore.ag) -> b
    void c(com.amap.api.mapcore.ag) -> c
    void d(com.amap.api.mapcore.ag) -> d
    void e(com.amap.api.mapcore.ag) -> e
    void b() -> b
    void j() -> j
    void a(javax.microedition.khronos.opengles.GL10) -> a
    boolean c() -> c
    com.amap.api.mapcore.ag d() -> d
    com.amap.api.mapcore.ag a(android.view.MotionEvent) -> a
    void a(com.amap.api.mapcore.bd) -> a
    void a(int) -> a
    void a(java.lang.Integer) -> a
    int a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void e() -> e
    boolean b(android.view.MotionEvent) -> b
    boolean a(android.graphics.Rect,int,int) -> a
    java.util.List f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void a(com.amap.api.mapcore.av) -> a
com.amap.api.mapcore.av$a -> com.amap.api.mapcore.av$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.aw -> com.amap.api.mapcore.aw:
    com.amap.api.mapcore.av a -> a
    void run() -> run
com.amap.api.mapcore.ax -> com.amap.api.mapcore.ax:
    com.amap.api.mapcore.av a -> a
    void run() -> run
com.amap.api.mapcore.ay -> com.amap.api.mapcore.ay:
    com.amap.api.mapcore.aa a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void a(android.view.View,com.amap.api.mapcore.ay$a) -> a
    void a() -> a
    void a(android.view.View,int,int,int[]) -> a
    void a(android.view.View,int,int,int,int,int) -> a
com.amap.api.mapcore.ay$a -> com.amap.api.mapcore.ay$a:
    com.autonavi.amap.mapcore.FPoint a -> a
    int b -> b
    int c -> c
    int d -> d
com.amap.api.mapcore.az -> com.amap.api.mapcore.az:
    int a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    float e -> e
    float f -> f
    boolean g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    com.autonavi.amap.mapcore.FPoint n -> n
    float[] o -> o
    int[] p -> p
    float q -> q
    boolean r -> r
    java.nio.FloatBuffer s -> s
    java.lang.String t -> t
    com.amap.api.maps.model.LatLng u -> u
    com.amap.api.maps.model.LatLng v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    float y -> y
    float z -> z
    boolean A -> A
    boolean B -> B
    com.amap.api.mapcore.av C -> C
    java.nio.FloatBuffer D -> D
    java.lang.Object E -> E
    boolean F -> F
    java.util.concurrent.CopyOnWriteArrayList G -> G
    boolean H -> H
    boolean I -> I
    boolean J -> J
    int K -> K
    int L -> L
    boolean M -> M
    int N -> N
    int O -> O
    long P -> P
    java.lang.String c(java.lang.String) -> c
    void a(float) -> a
    boolean x() -> x
    void y() -> y
    void p() -> p
    void a() -> a
    void b(java.util.ArrayList) -> b
    int J() -> J
    int K() -> K
    android.graphics.Rect d() -> d
    boolean b() -> b
    void M() -> M
    com.amap.api.maps.model.LatLng e() -> e
    java.lang.String h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> i
    void b(java.lang.String) -> b
    java.lang.String j() -> j
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> w
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    com.amap.api.maps.model.BitmapDescriptor L() -> L
    boolean k() -> k
    void l() -> l
    void m() -> m
    void b(boolean) -> b
    boolean n() -> n
    void c(boolean) -> c
    boolean o() -> o
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.ag) -> a
    int q() -> q
    boolean r() -> r
    void a(com.amap.api.mapcore.aa) -> a
    void a(float,float,com.autonavi.amap.mapcore.IPoint) -> a
    void a(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.aa) -> a
    int a(javax.microedition.khronos.opengles.GL10) -> a
    boolean c() -> c
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object s() -> s
    void d(boolean) -> d
    boolean t() -> t
    int v() -> v
    com.amap.api.maps.model.LatLng g() -> g
    void z() -> z
    void e(boolean) -> e
    boolean A() -> A
    float u() -> u
    int B() -> B
    int C() -> C
    void a(int,int) -> a
    int D() -> D
    int E() -> E
    com.autonavi.amap.mapcore.FPoint f() -> f
    boolean F() -> F
    void b(float) -> b
    float G() -> G
    boolean H() -> H
    void a(com.autonavi.amap.mapcore.IPoint) -> a
    com.autonavi.amap.mapcore.IPoint I() -> I
com.amap.api.mapcore.b -> com.amap.api.mapcore.b:
    int[] a -> a
com.amap.api.mapcore.ba -> com.amap.api.mapcore.ba:
    com.amap.api.mapcore.aa a -> a
    com.amap.api.maps.model.Marker b -> b
    com.amap.api.mapcore.ac c -> c
    com.amap.api.maps.model.MyLocationStyle d -> d
    com.amap.api.maps.model.LatLng e -> e
    double f -> f
    android.content.Context g -> g
    com.amap.api.mapcore.bj h -> h
    int i -> i
    boolean j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    boolean m -> m
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(int) -> a
    void a() -> a
    void b() -> b
    void g() -> g
    void h() -> h
    void i() -> i
    void b(float) -> b
    void c(float) -> c
    void a(android.location.Location) -> a
    void b(android.location.Location) -> b
    void j() -> j
    void k() -> k
    void c() -> c
    void l() -> l
    void m() -> m
    void a(float) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    void f() -> f
com.amap.api.mapcore.bb -> com.amap.api.mapcore.bb:
    com.amap.api.mapcore.aa j -> j
    float k -> k
    int l -> l
    int m -> m
    float n -> n
    boolean o -> o
    java.lang.String p -> p
    java.util.concurrent.CopyOnWriteArrayList q -> q
    int r -> r
    boolean s -> s
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    float h -> h
    com.amap.api.maps.model.LatLngBounds t -> t
    float[] i -> i
    void b(java.util.List) -> b
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List m() -> m
    java.util.List n() -> n
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    int l() -> l
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ai) -> a
    int f() -> f
    boolean a() -> a
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void j() -> j
    boolean k() -> k
com.amap.api.mapcore.bc -> com.amap.api.mapcore.bc:
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap a(java.io.InputStream) -> a
    android.graphics.Bitmap b(android.content.Context,java.lang.String) -> b
    void a(byte[],android.graphics.Rect) -> a
    byte[] a(android.graphics.Bitmap) -> a
    void a(android.graphics.Bitmap,byte[]) -> a
    void a(java.io.OutputStream,int) -> a
    void a(byte[],int,int) -> a
    int a(byte[],int) -> a
com.amap.api.mapcore.bd -> com.amap.api.mapcore.bd:
    com.amap.api.maps.model.BitmapDescriptor a -> a
    int b -> b
    com.amap.api.maps.model.BitmapDescriptor a() -> a
    int b() -> b
com.amap.api.mapcore.be -> com.amap.api.mapcore.be:
    com.amap.api.mapcore.aa a -> a
    float b -> b
    boolean c -> c
    java.lang.String d -> d
    float e -> e
    int f -> f
    int g -> g
    java.util.List h -> h
    java.util.concurrent.CopyOnWriteArrayList i -> i
    java.nio.FloatBuffer j -> j
    java.nio.FloatBuffer k -> k
    int l -> l
    int m -> m
    com.amap.api.maps.model.LatLngBounds n -> n
    boolean o -> o
    float p -> p
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List l() -> l
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ai) -> a
    void b(java.util.List) -> b
    void g() -> g
    int f() -> f
    boolean a() -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    int m() -> m
    com.autonavi.amap.mapcore.FPoint[] a(com.autonavi.amap.mapcore.FPoint[]) -> a
    void j() -> j
    boolean a(com.amap.api.maps.model.LatLng) -> a
    boolean k() -> k
com.amap.api.mapcore.bf -> com.amap.api.mapcore.bf:
    com.amap.api.mapcore.v a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.nio.FloatBuffer i -> i
    com.amap.api.maps.model.BitmapDescriptor j -> j
    com.amap.api.maps.model.LatLngBounds k -> k
    java.lang.Object l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    boolean t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    float y -> y
    float z -> z
    float A -> A
    float B -> B
    float C -> C
    float D -> D
    float E -> E
    float F -> F
    float G -> G
    float[] H -> H
    int[] I -> I
    int[] J -> J
    double K -> K
    void d(boolean) -> d
    void b(boolean) -> b
    boolean m() -> m
    void c(boolean) -> c
    boolean n() -> n
    void b(java.util.List) -> b
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,double,int) -> a
    void a(java.util.List,java.util.List,double) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,java.util.List,com.amap.api.maps.model.LatLngBounds$Builder) -> a
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List l() -> l
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ai) -> a
    int f() -> f
    boolean a() -> a
    void g() -> g
    void o() -> o
    void f(java.util.List) -> f
    boolean a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(javax.microedition.khronos.opengles.GL10) -> b
    void a(javax.microedition.khronos.opengles.GL10,float) -> a
    void b(javax.microedition.khronos.opengles.GL10,float) -> b
    void c(javax.microedition.khronos.opengles.GL10,float) -> c
    void d(javax.microedition.khronos.opengles.GL10,float) -> d
    void e(javax.microedition.khronos.opengles.GL10,float) -> e
    void f(javax.microedition.khronos.opengles.GL10,float) -> f
    boolean p() -> p
    void j() -> j
    boolean k() -> k
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
    boolean b(com.amap.api.maps.model.LatLng) -> b
    java.util.ArrayList q() -> q
    double a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    com.autonavi.amap.mapcore.FPoint c(com.amap.api.maps.model.LatLng) -> c
    double a(double,double,double,double,double,double) -> a
    void c(float) -> c
    void c(java.util.List) -> c
    void d(java.util.List) -> d
    void e(java.util.List) -> e
    void e(boolean) -> e
    java.util.List g(java.util.List) -> g
com.amap.api.mapcore.bg -> com.amap.api.mapcore.bg:
    boolean a -> a
    int b -> b
    int c -> c
    java.nio.FloatBuffer d -> d
    java.lang.String e -> e
    com.autonavi.amap.mapcore.FPoint f -> f
    com.amap.api.maps.model.BitmapDescriptor g -> g
    boolean h -> h
    java.nio.FloatBuffer i -> i
    java.lang.Object j -> j
    int k -> k
    com.amap.api.mapcore.aa l -> l
    com.autonavi.amap.mapcore.MapProjection m -> m
    float n -> n
    float o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    int s -> s
    boolean x() -> x
    void y() -> y
    void b(com.amap.api.maps.model.BitmapDescriptor) -> b
    int J() -> J
    int K() -> K
    android.graphics.Rect d() -> d
    boolean b() -> b
    void M() -> M
    com.amap.api.maps.model.LatLng e() -> e
    java.lang.String h() -> h
    void a(com.autonavi.amap.mapcore.FPoint) -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> i
    void b(java.lang.String) -> b
    java.lang.String j() -> j
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> w
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    com.amap.api.maps.model.BitmapDescriptor L() -> L
    boolean k() -> k
    void l() -> l
    void m() -> m
    boolean n() -> n
    void c(boolean) -> c
    boolean o() -> o
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.ag) -> a
    int q() -> q
    boolean r() -> r
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a() -> a
    int b(javax.microedition.khronos.opengles.GL10) -> b
    boolean c() -> c
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object s() -> s
    void d(boolean) -> d
    boolean t() -> t
    int v() -> v
    com.amap.api.maps.model.LatLng g() -> g
    void z() -> z
    void e(boolean) -> e
    boolean A() -> A
    void a(float) -> a
    void p() -> p
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.aa) -> a
    float u() -> u
    void b(int,int) -> b
    int B() -> B
    int C() -> C
    void a(int,int) -> a
    int D() -> D
    int E() -> E
    com.autonavi.amap.mapcore.FPoint f() -> f
    boolean F() -> F
    void b(float) -> b
    float G() -> G
    boolean H() -> H
    void b(boolean) -> b
    void a(com.autonavi.amap.mapcore.IPoint) -> a
    com.autonavi.amap.mapcore.IPoint I() -> I
com.amap.api.mapcore.bh -> com.amap.api.mapcore.bh:
    com.amap.api.mapcore.aa a -> a
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.VisibleRegion a() -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    float a(int) -> a
    com.amap.api.maps.model.TileProjection a(com.amap.api.maps.model.LatLngBounds,int,int) -> a
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.maps.model.LatLng,float) -> a
com.amap.api.mapcore.bi -> com.amap.api.mapcore.bi:
    java.lang.String a -> a
    int b -> b
    com.amap.api.mapcore.AMapDelegateImp c -> c
    android.graphics.Paint d -> d
    android.graphics.Paint e -> e
    android.graphics.Rect f -> f
    void a() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void a(java.lang.String) -> a
    void a(int) -> a
com.amap.api.mapcore.bj -> com.amap.api.mapcore.bj:
    android.hardware.SensorManager a -> a
    android.hardware.Sensor b -> b
    long c -> c
    int d -> d
    float e -> e
    android.content.Context f -> f
    com.amap.api.mapcore.aa g -> g
    com.amap.api.maps.model.Marker h -> h
    void a() -> a
    void b() -> b
    void a(com.amap.api.maps.model.Marker) -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    int a(android.content.Context) -> a
com.amap.api.mapcore.bk -> com.amap.api.mapcore.bk:
    int a -> a
    float b -> b
    float c -> c
    int d -> d
    int e -> e
    com.autonavi.amap.mapcore.FPoint f -> f
    int g -> g
    android.graphics.Bitmap h -> h
    java.nio.FloatBuffer i -> i
    java.lang.String j -> j
    com.amap.api.maps.model.LatLng k -> k
    float l -> l
    float m -> m
    boolean n -> n
    com.amap.api.mapcore.av o -> o
    java.nio.FloatBuffer p -> p
    java.lang.Object q -> q
    java.lang.String r -> r
    int s -> s
    int t -> t
    int u -> u
    android.graphics.Typeface v -> v
    float w -> w
    android.graphics.Rect x -> x
    android.graphics.Paint y -> y
    android.os.Handler z -> z
    java.lang.Runnable A -> A
    boolean B -> B
    boolean C -> C
    java.lang.String d(java.lang.String) -> d
    void a(float) -> a
    boolean x() -> x
    void y() -> y
    void p() -> p
    void P() -> P
    boolean b() -> b
    void Q() -> Q
    com.amap.api.maps.model.LatLng e() -> e
    java.lang.String h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String i() -> i
    void b(java.lang.String) -> b
    java.lang.String j() -> j
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList w() -> w
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    boolean k() -> k
    void l() -> l
    void m() -> m
    boolean n() -> n
    void c(boolean) -> c
    boolean o() -> o
    void b(float) -> b
    float G() -> G
    void a(float,float) -> a
    boolean a(com.amap.api.mapcore.ag) -> a
    int q() -> q
    boolean r() -> r
    void a(com.amap.api.mapcore.aa) -> a
    void a(int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.aa) -> a
    int a(javax.microedition.khronos.opengles.GL10) -> a
    boolean c() -> c
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object s() -> s
    void d(boolean) -> d
    boolean t() -> t
    int v() -> v
    com.amap.api.maps.model.LatLng g() -> g
    void z() -> z
    void e(boolean) -> e
    boolean A() -> A
    float u() -> u
    int B() -> B
    int C() -> C
    void a(int,int) -> a
    int D() -> D
    int E() -> E
    com.autonavi.amap.mapcore.FPoint f() -> f
    boolean F() -> F
    android.graphics.Rect d() -> d
    void c(java.lang.String) -> c
    java.lang.String a() -> a
    void b(int) -> b
    int J() -> J
    void c(int) -> c
    int K() -> K
    void d(int) -> d
    int L() -> L
    void a(android.graphics.Typeface) -> a
    android.graphics.Typeface M() -> M
    void b(int,int) -> b
    int N() -> N
    int O() -> O
    void R() -> R
    boolean H() -> H
    void b(boolean) -> b
    void a(com.autonavi.amap.mapcore.IPoint) -> a
    com.autonavi.amap.mapcore.IPoint I() -> I
    void a(com.amap.api.mapcore.bk) -> a
    boolean a(com.amap.api.mapcore.bk,boolean) -> a
    void b(com.amap.api.mapcore.bk) -> b
com.amap.api.mapcore.bl -> com.amap.api.mapcore.bl:
    com.amap.api.mapcore.bk a -> a
    void run() -> run
com.amap.api.mapcore.bm -> com.amap.api.mapcore.bm:
    com.amap.api.mapcore.bn a -> a
    com.amap.api.maps.model.TileProvider b -> b
    java.lang.Float c -> c
    boolean d -> d
    boolean e -> e
    com.amap.api.mapcore.aa f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    com.amap.api.mapcore.util.bb k -> k
    java.util.concurrent.CopyOnWriteArrayList l -> l
    boolean m -> m
    com.amap.api.mapcore.bm$b n -> n
    java.lang.String o -> o
    java.nio.FloatBuffer p -> p
    java.lang.String a(java.lang.String) -> a
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ao) -> a
    int f() -> f
    boolean a(com.amap.api.mapcore.bm$a) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    java.util.ArrayList a(int,int,int) -> a
    boolean a(java.util.List,int,boolean) -> a
    void b(boolean) -> b
    void g() -> g
    void h() -> h
    void c(boolean) -> c
    java.util.ArrayList a(com.amap.api.mapcore.bm,int,int,int) -> a
    boolean a(com.amap.api.mapcore.bm,java.util.List,int,boolean) -> a
    com.amap.api.mapcore.aa a(com.amap.api.mapcore.bm) -> a
    com.amap.api.mapcore.util.bb b(com.amap.api.mapcore.bm) -> b
    com.amap.api.mapcore.bn c(com.amap.api.mapcore.bm) -> c
com.amap.api.mapcore.bm$a -> com.amap.api.mapcore.bm$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.autonavi.amap.mapcore.IPoint e -> e
    int f -> f
    boolean g -> g
    java.nio.FloatBuffer h -> h
    android.graphics.Bitmap i -> i
    com.amap.api.mapcore.util.bd$a j -> j
    int k -> k
    com.amap.api.mapcore.bm l -> l
    com.amap.api.mapcore.bm$a a() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void a(android.graphics.Bitmap) -> a
    void b() -> b
    java.lang.Object clone() -> clone
com.amap.api.mapcore.bm$b -> com.amap.api.mapcore.bm$b:
    int e -> e
    boolean f -> f
    com.amap.api.mapcore.bm a -> a
    java.util.List a(com.amap.api.mapcore.aa[]) -> a
    void a(java.util.List) -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.bn -> com.amap.api.mapcore.bn:
    com.amap.api.mapcore.aa e -> e
    java.util.concurrent.CopyOnWriteArrayList a -> a
    com.amap.api.mapcore.bn$a b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    com.amap.api.mapcore.bm d -> d
    com.amap.api.mapcore.aa a() -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b() -> b
    void c() -> c
    void a(com.amap.api.mapcore.ao) -> a
    boolean b(com.amap.api.mapcore.ao) -> b
    void a(boolean) -> a
    void d() -> d
    void e() -> e
    void b(boolean) -> b
    void f() -> f
com.amap.api.mapcore.bn$1 -> com.amap.api.mapcore.bn$1:
    com.amap.api.mapcore.bn a -> a
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
com.amap.api.mapcore.bn$a -> com.amap.api.mapcore.bn$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.bo -> com.amap.api.mapcore.bo:
    com.amap.api.mapcore.aa b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    int l -> l
    android.os.Handler a -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
    int j() -> j
    boolean a(com.amap.api.mapcore.bo) -> a
    com.amap.api.mapcore.aa b(com.amap.api.mapcore.bo) -> b
    boolean c(com.amap.api.mapcore.bo) -> c
    boolean d(com.amap.api.mapcore.bo) -> d
    boolean e(com.amap.api.mapcore.bo) -> e
com.amap.api.mapcore.bp -> com.amap.api.mapcore.bp:
    com.amap.api.mapcore.bo a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.bq -> com.amap.api.mapcore.bq:
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Paint f -> f
    boolean g -> g
    int h -> h
    com.amap.api.mapcore.AMapDelegateImp i -> i
    int j -> j
    int a -> a
    void a() -> a
    android.graphics.Bitmap b() -> b
    void a(boolean) -> a
    android.graphics.Point c() -> c
    void a(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.amap.api.mapcore.br -> com.amap.api.mapcore.br:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Bitmap g -> g
    android.graphics.Bitmap h -> h
    android.graphics.Bitmap i -> i
    android.graphics.Bitmap j -> j
    android.graphics.Bitmap k -> k
    android.graphics.Bitmap l -> l
    android.widget.ImageView m -> m
    android.widget.ImageView n -> n
    com.amap.api.mapcore.aa o -> o
    void a() -> a
    void a(float) -> a
    com.amap.api.mapcore.aa a(com.amap.api.mapcore.br) -> a
    android.graphics.Bitmap b(com.amap.api.mapcore.br) -> b
    android.widget.ImageView c(com.amap.api.mapcore.br) -> c
    android.graphics.Bitmap d(com.amap.api.mapcore.br) -> d
    android.graphics.Bitmap e(com.amap.api.mapcore.br) -> e
    android.widget.ImageView f(com.amap.api.mapcore.br) -> f
    android.graphics.Bitmap g(com.amap.api.mapcore.br) -> g
com.amap.api.mapcore.br$1 -> com.amap.api.mapcore.br$1:
    com.amap.api.mapcore.br a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.br$2 -> com.amap.api.mapcore.br$2:
    com.amap.api.mapcore.br a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.c -> com.amap.api.mapcore.c:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.d -> com.amap.api.mapcore.d:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.e -> com.amap.api.mapcore.e:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.f -> com.amap.api.mapcore.f:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.g -> com.amap.api.mapcore.g:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.h -> com.amap.api.mapcore.h:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.i -> com.amap.api.mapcore.i:
    com.amap.api.mapcore.AMapDelegateImp a -> a
    void run() -> run
com.amap.api.mapcore.j -> com.amap.api.mapcore.j:
    com.amap.api.mapcore.aa a -> a
    com.amap.api.mapcore.aa a() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.amap.api.mapcore.k -> com.amap.api.mapcore.k:
    com.amap.api.mapcore.aa a -> a
    com.amap.api.mapcore.aa a() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setZOrderOnTop(boolean) -> setZOrderOnTop
com.amap.api.mapcore.l -> com.amap.api.mapcore.l:
    com.amap.api.mapcore.aa b -> b
    android.location.Location a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.mapcore.m -> com.amap.api.mapcore.m:
    com.amap.api.maps.model.LatLng e -> e
    com.amap.api.maps.model.LatLng f -> f
    com.amap.api.maps.model.LatLng g -> g
    float h -> h
    int i -> i
    float j -> j
    boolean k -> k
    java.lang.String l -> l
    com.amap.api.mapcore.aa m -> m
    float[] n -> n
    int o -> o
    boolean p -> p
    double q -> q
    double r -> r
    double s -> s
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ai) -> a
    int f() -> f
    void g() -> g
    com.autonavi.amap.mapcore.FPoint a(com.autonavi.amap.mapcore.MapProjection,double,double,double) -> a
    boolean l() -> l
    com.autonavi.amap.mapcore.DPoint m() -> m
    double a(double,double,double,double) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void j() -> j
    boolean k() -> k
    void a(com.amap.api.maps.model.LatLng) -> a
    void b(com.amap.api.maps.model.LatLng) -> b
    void c(com.amap.api.maps.model.LatLng) -> c
com.amap.api.mapcore.n -> com.amap.api.mapcore.n:
    int a -> a
    int b -> b
    int c -> c
    float d -> d
    float e -> e
    float f -> f
    int g -> g
    int h -> h
    float i -> i
    float j -> j
    float k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    float r -> r
    float s -> s
    float t -> t
    long u -> u
    long v -> v
    float w -> w
    float x -> x
    float y -> y
    float z -> z
    float A -> A
    float B -> B
    boolean C -> C
    android.view.animation.Interpolator D -> D
    boolean E -> E
    float F -> F
    float G -> G
    int H -> H
    float I -> I
    float J -> J
    float[] K -> K
    float[] L -> L
    float M -> M
    float N -> N
    float O -> O
    boolean P -> P
    float Q -> Q
    float R -> R
    void a(android.view.animation.Interpolator) -> a
    float b(float) -> b
    boolean a() -> a
    void a(boolean) -> a
    int b() -> b
    int c() -> c
    float d() -> d
    float e() -> e
    float f() -> f
    float g() -> g
    boolean h() -> h
    void a(int,int,float,float,float,int,int,float,float,float,long) -> a
    void a(int,int,int,int,int,int,int,int) -> a
    double c(float) -> c
    int d(float) -> d
    double e(float) -> e
    float a(float) -> a
    int i() -> i
    int j() -> j
    void b(boolean) -> b
    boolean k() -> k
com.amap.api.mapcore.o -> com.amap.api.mapcore.o:
    com.amap.api.mapcore.o$a a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    com.amap.api.maps.model.LatLngBounds i -> i
    int j -> j
    int k -> k
    int l -> l
    android.graphics.Point m -> m
    boolean n -> n
    com.autonavi.amap.mapcore.IPoint o -> o
    boolean p -> p
    com.amap.api.mapcore.o a() -> a
    com.amap.api.mapcore.o b() -> b
    com.amap.api.mapcore.o c() -> c
    com.amap.api.mapcore.o a(float,float) -> a
    com.amap.api.mapcore.o a(float) -> a
    com.amap.api.mapcore.o b(float) -> b
    com.amap.api.mapcore.o a(float,android.graphics.Point) -> a
    com.amap.api.mapcore.o a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.mapcore.o a(com.autonavi.amap.mapcore.IPoint) -> a
    com.amap.api.mapcore.o c(float) -> c
    com.amap.api.mapcore.o d(float) -> d
    com.amap.api.mapcore.o a(float,com.autonavi.amap.mapcore.IPoint) -> a
    com.amap.api.mapcore.o a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.mapcore.o a(com.amap.api.maps.model.LatLng,float) -> a
    com.amap.api.mapcore.o a(com.amap.api.maps.model.LatLng,float,float,float) -> a
    com.amap.api.mapcore.o a(com.autonavi.amap.mapcore.IPoint,float,float,float) -> a
    com.amap.api.mapcore.o a(com.amap.api.maps.model.LatLngBounds,int) -> a
    com.amap.api.mapcore.o a(com.amap.api.maps.model.LatLngBounds,int,int,int) -> a
com.amap.api.mapcore.o$a -> com.amap.api.mapcore.o$a:
    com.amap.api.mapcore.o$a a -> a
    com.amap.api.mapcore.o$a b -> b
    com.amap.api.mapcore.o$a c -> c
    com.amap.api.mapcore.o$a d -> d
    com.amap.api.mapcore.o$a e -> e
    com.amap.api.mapcore.o$a f -> f
    com.amap.api.mapcore.o$a g -> g
    com.amap.api.mapcore.o$a h -> h
    com.amap.api.mapcore.o$a i -> i
    com.amap.api.mapcore.o$a j -> j
    com.amap.api.mapcore.o$a k -> k
    com.amap.api.mapcore.o$a l -> l
    com.amap.api.mapcore.o$a m -> m
    com.amap.api.mapcore.o$a n -> n
    com.amap.api.mapcore.o$a o -> o
    com.amap.api.mapcore.o$a[] p -> p
    com.amap.api.mapcore.o$a[] values() -> values
    com.amap.api.mapcore.o$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.p -> com.amap.api.mapcore.p:
    com.amap.api.maps.model.LatLng a -> a
    double b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String h -> h
    com.amap.api.mapcore.aa i -> i
    java.nio.FloatBuffer j -> j
    int k -> k
    boolean l -> l
    float m -> m
    int n -> n
    int o -> o
    boolean a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ai) -> a
    int f() -> f
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> i
    void a(double) -> a
    double l() -> l
    void b(float) -> b
    float m() -> m
    void a(int) -> a
    int n() -> n
    void b(int) -> b
    int o() -> o
    float b(double) -> b
    double c(double) -> c
    void j() -> j
    boolean b(com.amap.api.maps.model.LatLng) -> b
    boolean k() -> k
com.amap.api.mapcore.q -> com.amap.api.mapcore.q:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.widget.ImageView d -> d
    com.amap.api.mapcore.aa e -> e
    void a() -> a
    void b() -> b
com.amap.api.mapcore.q$1 -> com.amap.api.mapcore.q$1:
    com.amap.api.mapcore.q a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.r -> com.amap.api.mapcore.r:
    float a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.amap.api.mapcore.r$a e -> e
    com.amap.api.mapcore.util.bv f -> f
com.amap.api.mapcore.r$a -> com.amap.api.mapcore.r$a:
    com.amap.api.mapcore.r$a a -> a
    com.amap.api.mapcore.r$a b -> b
    com.amap.api.mapcore.r$a c -> c
    com.amap.api.mapcore.r$a d -> d
    com.amap.api.mapcore.r$a[] e -> e
    com.amap.api.mapcore.r$a[] values() -> values
    com.amap.api.mapcore.r$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.s -> com.amap.api.mapcore.s:
    java.util.concurrent.CopyOnWriteArrayList b -> b
    com.amap.api.mapcore.s$a a -> a
    boolean a(com.amap.api.mapcore.u) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.amap.api.mapcore.s$a -> com.amap.api.mapcore.s$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.t -> com.amap.api.mapcore.t:
    void c(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> c
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,java.nio.FloatBuffer,int,int) -> a
    void b(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> b
com.amap.api.mapcore.u -> com.amap.api.mapcore.u:
    com.amap.api.mapcore.aa a -> a
    int getZIndex() -> getZIndex
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.amap.api.mapcore.util.a -> com.amap.api.mapcore.util.a:
    boolean b -> b
    double a -> a
    com.amap.api.maps.model.LatLng a(android.content.Context,com.amap.api.maps.model.LatLng) -> a
    com.autonavi.amap.mapcore.DPoint a(com.autonavi.amap.mapcore.DPoint,boolean) -> a
    com.amap.api.maps.model.LatLng b(android.content.Context,com.amap.api.maps.model.LatLng) -> b
    double a(double,double) -> a
    double b(double,double) -> b
    com.autonavi.amap.mapcore.DPoint c(double,double) -> c
    com.amap.api.maps.model.LatLng a(com.amap.api.maps.model.LatLng) -> a
    double a(double) -> a
    double b(double) -> b
    com.autonavi.amap.mapcore.DPoint d(double,double) -> d
    double a(double,int) -> a
    com.autonavi.amap.mapcore.DPoint a(com.autonavi.amap.mapcore.DPoint,int) -> a
    com.autonavi.amap.mapcore.DPoint a(double,double,double,double) -> a
com.amap.api.mapcore.util.aa -> com.amap.api.mapcore.util.aa:
    java.io.RandomAccessFile a -> a
    int a(byte[]) -> a
    void a() -> a
com.amap.api.mapcore.util.ab -> com.amap.api.mapcore.util.ab:
    long a(java.io.File,java.io.File,long,long,com.amap.api.mapcore.util.ab$a) -> a
    float a(long,long) -> a
com.amap.api.mapcore.util.ab$a -> com.amap.api.mapcore.util.ab$a:
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,float) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,int) -> a
com.amap.api.mapcore.util.ac -> com.amap.api.mapcore.util.ac:
    void o() -> o
    void p() -> p
    void a(long) -> a
    void a(java.lang.String) -> a
    void q() -> q
com.amap.api.mapcore.util.ad -> com.amap.api.mapcore.util.ad:
    com.amap.api.mapcore.util.ae a -> a
    long b -> b
    long c -> c
    long d -> d
    boolean e -> e
    android.content.Context i -> i
    com.amap.api.mapcore.util.z f -> f
    com.amap.api.mapcore.util.ah j -> j
    java.lang.String k -> k
    com.amap.api.mapcore.util.dl l -> l
    com.amap.api.mapcore.util.aa m -> m
    long g -> g
    com.amap.api.mapcore.util.ad$a h -> h
    void f() -> f
    void g() -> g
    void a() -> a
    boolean h() -> h
    void i() -> i
    long b() -> b
    void j() -> j
    void k() -> k
    void a(long) -> a
    boolean l() -> l
    void a(int) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void m() -> m
    void a(java.lang.Throwable) -> a
    void a(byte[],long) -> a
    void a(com.amap.api.mapcore.util.ad$a) -> a
com.amap.api.mapcore.util.ad$a -> com.amap.api.mapcore.util.ad$a:
    void d() -> d
com.amap.api.mapcore.util.ae -> com.amap.api.mapcore.util.ae:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    java.lang.String e() -> e
com.amap.api.mapcore.util.af -> com.amap.api.mapcore.util.af:
    com.amap.api.mapcore.util.af$b a -> a
    void a() -> a
    void b() -> b
    void a(com.amap.api.mapcore.util.af$b) -> a
    void a(java.io.File,java.io.File,com.amap.api.mapcore.util.af$c,com.amap.api.mapcore.util.af$b) -> a
    void a(java.io.File,java.util.zip.ZipInputStream,long,com.amap.api.mapcore.util.af$c,com.amap.api.mapcore.util.af$a) -> a
    boolean a(java.lang.String) -> a
    int a(java.io.File,java.util.zip.ZipInputStream,long,long,com.amap.api.mapcore.util.af$c,com.amap.api.mapcore.util.af$a) -> a
    void a(java.io.File) -> a
com.amap.api.mapcore.util.af$1 -> com.amap.api.mapcore.util.af$1:
    com.amap.api.mapcore.util.ac a -> a
    void a(long) -> a
    void a() -> a
com.amap.api.mapcore.util.af$a -> com.amap.api.mapcore.util.af$a:
    boolean a -> a
com.amap.api.mapcore.util.af$b -> com.amap.api.mapcore.util.af$b:
    java.lang.String b -> b
    java.lang.String c -> c
    com.amap.api.mapcore.util.ac d -> d
    com.amap.api.mapcore.util.af$a e -> e
    java.lang.String f -> f
    com.amap.api.mapcore.util.af a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.amap.api.mapcore.util.ac d() -> d
    com.amap.api.mapcore.util.af$a e() -> e
    void f() -> f
com.amap.api.mapcore.util.af$c -> com.amap.api.mapcore.util.af$c:
    void a(long) -> a
    void a() -> a
com.amap.api.mapcore.util.ag -> com.amap.api.mapcore.util.ag:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    long a() -> a
    java.util.List c(java.lang.String) -> c
    com.amap.api.maps.offlinemap.OfflineMapProvince a(org.json.JSONObject) -> a
    java.util.ArrayList b(org.json.JSONObject) -> b
    com.amap.api.maps.offlinemap.OfflineMapCity c(org.json.JSONObject) -> c
    long a(java.io.File) -> a
    boolean b(java.io.File) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String c(java.io.File) -> c
    void a(java.lang.String,android.content.Context) -> a
    void d(java.lang.String) -> d
com.amap.api.mapcore.util.ah -> com.amap.api.mapcore.util.ah:
    void l() -> l
    void a(long,long) -> a
    void m() -> m
    void a(com.amap.api.mapcore.util.ah$a) -> a
    void n() -> n
com.amap.api.mapcore.util.ah$a -> com.amap.api.mapcore.util.ah$a:
    com.amap.api.mapcore.util.ah$a a -> a
    com.amap.api.mapcore.util.ah$a b -> b
    com.amap.api.mapcore.util.ah$a c -> c
    com.amap.api.mapcore.util.ah$a d -> d
    com.amap.api.mapcore.util.ah$a e -> e
    int f -> f
    com.amap.api.mapcore.util.ah$a[] g -> g
    com.amap.api.mapcore.util.ah$a[] values() -> values
    com.amap.api.mapcore.util.ah$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.util.ai -> com.amap.api.mapcore.util.ai:
    java.lang.String a -> a
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
com.amap.api.mapcore.util.aj -> com.amap.api.mapcore.util.aj:
    java.lang.Object a -> a
    int b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    int j -> j
    int e -> e
    int f -> f
    void a(android.content.Context,java.lang.Object) -> a
    java.lang.Object b(java.lang.String) -> b
    java.lang.Object d() -> d
    java.lang.Object h() -> h
    java.lang.Object b(byte[]) -> b
    java.util.Map c() -> c
    java.lang.Object a(byte[]) -> a
    java.lang.Object e() -> e
com.amap.api.mapcore.util.ak -> com.amap.api.mapcore.util.ak:
    void a() -> a
com.amap.api.mapcore.util.al -> com.amap.api.mapcore.util.al:
    int a -> a
    com.amap.api.mapcore.util.g b -> b
    int b() -> b
    boolean a(com.amap.api.mapcore.util.al) -> a
    void b(com.amap.api.mapcore.util.al) -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a() -> a
    void g() -> g
    void h() -> h
    void i() -> i
com.amap.api.mapcore.util.am -> com.amap.api.mapcore.util.am:
    void c() -> c
    void h() -> h
com.amap.api.mapcore.util.an -> com.amap.api.mapcore.util.an:
    void c() -> c
com.amap.api.mapcore.util.ao -> com.amap.api.mapcore.util.ao:
    void c() -> c
    void d() -> d
com.amap.api.mapcore.util.ap -> com.amap.api.mapcore.util.ap:
    void c() -> c
    void f() -> f
    void i() -> i
    void g() -> g
com.amap.api.mapcore.util.aq -> com.amap.api.mapcore.util.aq:
    void c() -> c
    void d() -> d
com.amap.api.mapcore.util.ar -> com.amap.api.mapcore.util.ar:
    void c() -> c
    void e() -> e
com.amap.api.mapcore.util.as -> com.amap.api.mapcore.util.as:
    void c() -> c
    void d() -> d
    void i() -> i
    void g() -> g
com.amap.api.mapcore.util.at -> com.amap.api.mapcore.util.at:
    void c() -> c
    void d() -> d
    void f() -> f
    void g() -> g
com.amap.api.mapcore.util.au -> com.amap.api.mapcore.util.au:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object) -> a
    void b(boolean,java.lang.Object) -> b
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
com.amap.api.mapcore.util.av -> com.amap.api.mapcore.util.av:
    java.util.concurrent.ThreadFactory a -> a
    java.util.concurrent.BlockingQueue e -> e
    java.util.concurrent.Executor b -> b
    java.util.concurrent.Executor c -> c
    java.util.concurrent.Executor d -> d
    com.amap.api.mapcore.util.av$b f -> f
    java.util.concurrent.Executor g -> g
    com.amap.api.mapcore.util.av$e h -> h
    java.util.concurrent.FutureTask i -> i
    com.amap.api.mapcore.util.av$d j -> j
    java.util.concurrent.atomic.AtomicBoolean k -> k
    java.util.concurrent.atomic.AtomicBoolean l -> l
    void c(java.lang.Object) -> c
    java.lang.Object d(java.lang.Object) -> d
    com.amap.api.mapcore.util.av$d a() -> a
    java.lang.Object a(java.lang.Object[]) -> a
    void b() -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object[]) -> b
    void b(java.lang.Object) -> b
    void c() -> c
    boolean d() -> d
    boolean a(boolean) -> a
    com.amap.api.mapcore.util.av c(java.lang.Object[]) -> c
    com.amap.api.mapcore.util.av a(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void e(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean a(com.amap.api.mapcore.util.av) -> a
    java.lang.Object a(com.amap.api.mapcore.util.av,java.lang.Object) -> a
    java.util.concurrent.FutureTask b(com.amap.api.mapcore.util.av) -> b
    void b(com.amap.api.mapcore.util.av,java.lang.Object) -> b
    void c(com.amap.api.mapcore.util.av,java.lang.Object) -> c
com.amap.api.mapcore.util.av$1 -> com.amap.api.mapcore.util.av$1:
    com.amap.api.mapcore.util.av a -> a
    java.lang.Object call() -> call
com.amap.api.mapcore.util.av$2 -> com.amap.api.mapcore.util.av$2:
    com.amap.api.mapcore.util.av a -> a
    void done() -> done
com.amap.api.mapcore.util.av$a -> com.amap.api.mapcore.util.av$a:
    com.amap.api.mapcore.util.av a -> a
    java.lang.Object[] b -> b
com.amap.api.mapcore.util.av$b -> com.amap.api.mapcore.util.av$b:
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.util.av$c -> com.amap.api.mapcore.util.av$c:
    java.util.ArrayDeque a -> a
    java.lang.Runnable b -> b
    void execute(java.lang.Runnable) -> execute
    void a() -> a
com.amap.api.mapcore.util.av$c$1 -> com.amap.api.mapcore.util.av$c$1:
    java.lang.Runnable a -> a
    com.amap.api.mapcore.util.av$c b -> b
    void run() -> run
com.amap.api.mapcore.util.av$d -> com.amap.api.mapcore.util.av$d:
    com.amap.api.mapcore.util.av$d a -> a
    com.amap.api.mapcore.util.av$d b -> b
    com.amap.api.mapcore.util.av$d c -> c
    com.amap.api.mapcore.util.av$d[] d -> d
    com.amap.api.mapcore.util.av$d[] values() -> values
    com.amap.api.mapcore.util.av$d valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.util.av$e -> com.amap.api.mapcore.util.av$e:
    java.lang.Object[] b -> b
com.amap.api.mapcore.util.aw -> com.amap.api.mapcore.util.aw:
    java.util.concurrent.atomic.AtomicInteger a -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.amap.api.mapcore.util.ax -> com.amap.api.mapcore.util.ax:
    int[] a -> a
com.amap.api.mapcore.util.ay -> com.amap.api.mapcore.util.ay:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean a(double,double) -> a
    boolean a(com.autonavi.amap.mapcore.DPoint) -> a
    boolean a(double,double,double,double) -> a
    boolean a(com.amap.api.mapcore.util.ay) -> a
    boolean b(com.amap.api.mapcore.util.ay) -> b
com.amap.api.mapcore.util.az -> com.amap.api.mapcore.util.az:
    com.amap.api.mapcore.util.bj a -> a
    short[] b -> b
    float[] c -> c
    int d -> d
    com.amap.api.mapcore.util.be e -> e
    com.amap.api.mapcore.util.bj f -> f
    com.amap.api.mapcore.util.bj a(float[]) -> a
    com.amap.api.mapcore.util.bj a(float[],int,int) -> a
    void a() -> a
    int a(int) -> a
    int b() -> b
    boolean b(int) -> b
    void c(int) -> c
    int d(int) -> d
    int e(int) -> e
    boolean b(float[],int,int) -> b
    int a(float,float,float,float,float,float) -> a
com.amap.api.mapcore.util.b -> com.amap.api.mapcore.util.b:
    android.content.Context a -> a
    boolean b -> b
    android.view.MotionEvent c -> c
    android.view.MotionEvent d -> d
    float e -> e
    float f -> f
    long g -> g
    boolean a(android.view.MotionEvent) -> a
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void b(android.view.MotionEvent) -> b
    int c(android.view.MotionEvent) -> c
    void a() -> a
com.amap.api.mapcore.util.ba -> com.amap.api.mapcore.util.ba:
    android.graphics.Bitmap$CompressFormat a -> a
    com.amap.api.mapcore.util.de b -> b
    com.amap.api.mapcore.util.bg c -> c
    com.amap.api.mapcore.util.ba$a d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.util.HashMap g -> g
    com.amap.api.mapcore.util.ba a(com.amap.api.mapcore.util.ba$a) -> a
    void b(com.amap.api.mapcore.util.ba$a) -> b
    void a() -> a
    void b(java.io.File) -> b
    void a(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.Bitmap b(java.lang.String) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    java.io.File a(android.content.Context,java.lang.String) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(byte[]) -> a
    int a(android.graphics.Bitmap) -> a
    boolean e() -> e
    java.io.File a(android.content.Context) -> a
    long a(java.io.File) -> a
    java.util.HashMap a(com.amap.api.mapcore.util.ba) -> a
    android.graphics.Bitmap$CompressFormat f() -> f
com.amap.api.mapcore.util.ba$1 -> com.amap.api.mapcore.util.ba$1:
    com.amap.api.mapcore.util.ba a -> a
    void a(boolean,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    int a(java.lang.String,android.graphics.Bitmap) -> a
    int a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.amap.api.mapcore.util.ba$a -> com.amap.api.mapcore.util.ba$a:
    int a -> a
    int b -> b
    java.io.File c -> c
    android.graphics.Bitmap$CompressFormat d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    void a(int) -> a
    void b(int) -> b
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void b(boolean) -> b
com.amap.api.mapcore.util.bb -> com.amap.api.mapcore.util.bb:
    com.amap.api.maps.model.TileProvider e -> e
    void a(android.content.Context) -> a
    void a(com.amap.api.maps.model.TileProvider) -> a
    void b(android.content.Context) -> b
    android.graphics.Bitmap c(com.amap.api.mapcore.bm$a) -> c
    android.graphics.Bitmap a(java.lang.Object) -> a
com.amap.api.mapcore.util.bc -> com.amap.api.mapcore.util.bc:
    int a -> a
    int b -> b
    void a(int,int) -> a
    android.graphics.Bitmap a(int) -> a
    android.graphics.Bitmap a(java.lang.Object) -> a
    android.graphics.Bitmap a(android.content.res.Resources,int,int,int,com.amap.api.mapcore.util.ba) -> a
    android.graphics.Bitmap a(java.io.FileDescriptor,int,int,com.amap.api.mapcore.util.ba) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
com.amap.api.mapcore.util.bd -> com.amap.api.mapcore.util.bd:
    com.amap.api.mapcore.util.ba a -> a
    com.amap.api.mapcore.util.ba$a b -> b
    boolean e -> e
    boolean c -> c
    java.lang.Object f -> f
    android.content.res.Resources d -> d
    void a(boolean,com.amap.api.mapcore.bm$a) -> a
    void a(com.amap.api.mapcore.util.ba$a) -> a
    void a(boolean) -> a
    android.graphics.Bitmap a(java.lang.Object) -> a
    com.amap.api.mapcore.util.ba a() -> a
    void a(com.amap.api.mapcore.bm$a) -> a
    com.amap.api.mapcore.util.bd$a c(com.amap.api.mapcore.bm$a) -> c
    void b(boolean) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    java.lang.Object a(com.amap.api.mapcore.util.bd) -> a
    com.amap.api.mapcore.util.ba b(com.amap.api.mapcore.util.bd) -> b
    boolean c(com.amap.api.mapcore.util.bd) -> c
    com.amap.api.mapcore.util.bd$a b(com.amap.api.mapcore.bm$a) -> b
com.amap.api.mapcore.util.bd$a -> com.amap.api.mapcore.util.bd$a:
    java.lang.ref.WeakReference e -> e
    com.amap.api.mapcore.util.bd a -> a
    android.graphics.Bitmap a(java.lang.Boolean[]) -> a
    void a(android.graphics.Bitmap) -> a
    void b(android.graphics.Bitmap) -> b
    com.amap.api.mapcore.bm$a e() -> e
    void b(java.lang.Object) -> b
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.util.bd$b -> com.amap.api.mapcore.util.bd$b:
    com.amap.api.mapcore.util.bd a -> a
    java.lang.Void d(java.lang.Object[]) -> d
    java.lang.Object a(java.lang.Object[]) -> a
com.amap.api.mapcore.util.be -> com.amap.api.mapcore.util.be:
    int[] a -> a
    int b -> b
    boolean c -> c
    void a(int) -> a
    int b(int) -> b
    void a() -> a
    int[] c(int) -> c
    int[] d(int) -> d
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.bf -> com.amap.api.mapcore.util.bf:
    java.lang.String a -> a
    void a(java.lang.String,java.lang.String,int) -> a
com.amap.api.mapcore.util.bg -> com.amap.api.mapcore.util.bg:
    java.util.LinkedHashMap a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object b(java.lang.Object,java.lang.Object) -> b
    void a(int) -> a
    void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object b(java.lang.Object) -> b
    int c(java.lang.Object,java.lang.Object) -> c
    int a(java.lang.Object,java.lang.Object) -> a
    void a() -> a
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.bh -> com.amap.api.mapcore.util.bh:
    boolean a(double,double) -> a
    boolean a(int,int,int) -> a
com.amap.api.mapcore.util.bi -> com.amap.api.mapcore.util.bi:
    boolean a -> a
    android.content.res.AssetManager a(android.content.Context) -> a
com.amap.api.mapcore.util.bj -> com.amap.api.mapcore.util.bj:
    short[] a -> a
    int b -> b
    boolean c -> c
    void a(short) -> a
    short a(int) -> a
    short b(int) -> b
    void a() -> a
    short[] c(int) -> c
    short[] d(int) -> d
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.bk -> com.amap.api.mapcore.util.bk:
    int[] a -> a
    double[] b -> b
    android.os.Handler c -> c
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
    void a(android.graphics.drawable.Drawable) -> a
    java.lang.String a(java.lang.String,java.lang.Object) -> a
    float a(float,float) -> a
    float a(float) -> a
    java.nio.FloatBuffer a(float[]) -> a
    java.nio.FloatBuffer a(float[],java.nio.FloatBuffer) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap,boolean) -> a
    int a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap) -> a
    int a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap,boolean) -> a
    int b(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap,boolean) -> b
    int a(int) -> a
    java.lang.String a(java.lang.String[]) -> a
    int a(java.lang.Object[]) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,float) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String b(int) -> b
    boolean c(android.content.Context) -> c
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    void a(javax.microedition.khronos.opengles.GL10,int) -> a
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    java.lang.String a(java.io.File) -> a
    void a(java.lang.String) -> a
    boolean a(com.amap.api.maps.model.LatLng,java.util.List) -> a
    double a(double,double,double,double,double,double) -> a
    boolean b(double,double,double,double,double,double) -> b
    boolean a(double,double,double,double,double,double,double,double) -> a
    java.util.List a(com.amap.api.mapcore.aa,java.util.List) -> a
    com.autonavi.amap.mapcore.FPoint[] a(com.amap.api.mapcore.aa) -> a
    com.autonavi.amap.mapcore.FPoint a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    float a(double,double,double,double) -> a
    double a(double,double) -> a
    com.amap.api.mapcore.util.bv e() -> e
    void b(android.view.View) -> b
    android.graphics.Bitmap a(android.view.View) -> a
    com.autonavi.amap.mapcore.DPoint a(com.amap.api.maps.model.LatLng) -> a
    float[] a(com.amap.api.mapcore.aa,int,com.autonavi.amap.mapcore.FPoint,float,int,int,float,float) -> a
com.amap.api.mapcore.util.bl -> com.amap.api.mapcore.util.bl:
    java.lang.String a -> a
    int b -> b
    java.lang.String a() -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.bm -> com.amap.api.mapcore.util.bm:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a(java.lang.String) -> a
    java.lang.String g(android.content.Context) -> g
    java.lang.String f(android.content.Context) -> f
com.amap.api.mapcore.util.bn -> com.amap.api.mapcore.util.bn:
    int a -> a
    java.lang.String b -> b
    com.amap.api.mapcore.util.bv c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean a(android.content.Context,com.amap.api.mapcore.util.bv,boolean) -> a
    boolean a(android.content.Context,com.amap.api.mapcore.util.bv) -> a
    boolean b(android.content.Context,com.amap.api.mapcore.util.bv) -> b
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    boolean a(byte[]) -> a
    java.util.Map a(android.content.Context) -> a
com.amap.api.mapcore.util.bo -> com.amap.api.mapcore.util.bo:
    java.lang.String a(android.content.Context,com.amap.api.mapcore.util.bv,java.util.Map,boolean) -> a
    java.lang.String a(android.content.Context,byte[]) -> a
    java.lang.String b(android.content.Context,byte[]) -> b
    java.lang.String a(android.content.Context,com.amap.api.mapcore.util.bv) -> a
    void a(java.io.ByteArrayOutputStream,java.lang.String) -> a
    void a(java.io.ByteArrayOutputStream,byte,byte[]) -> a
    java.lang.String a() -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
com.amap.api.mapcore.util.bp -> com.amap.api.mapcore.util.bp:
    com.amap.api.mapcore.util.bp$a a(byte[]) -> a
    com.amap.api.mapcore.util.bp$a a(android.content.Context,com.amap.api.mapcore.util.bv,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    void a(org.json.JSONObject,com.amap.api.mapcore.util.bp$a$b) -> a
    void a(org.json.JSONObject,com.amap.api.mapcore.util.bp$a$c) -> a
    boolean a(org.json.JSONObject) -> a
    boolean b(org.json.JSONObject) -> b
com.amap.api.mapcore.util.bp$a -> com.amap.api.mapcore.util.bp$a:
    org.json.JSONObject a -> a
    org.json.JSONObject b -> b
    org.json.JSONObject c -> c
    com.amap.api.mapcore.util.bp$a$a d -> d
    com.amap.api.mapcore.util.bp$a$c e -> e
    com.amap.api.mapcore.util.bp$a$b f -> f
com.amap.api.mapcore.util.bp$a$a -> com.amap.api.mapcore.util.bp$a$a:
    boolean a -> a
    boolean b -> b
com.amap.api.mapcore.util.bp$a$b -> com.amap.api.mapcore.util.bp$a$b:
    java.lang.String a -> a
    java.lang.String b -> b
com.amap.api.mapcore.util.bp$a$c -> com.amap.api.mapcore.util.bp$a$c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.amap.api.mapcore.util.bp$b -> com.amap.api.mapcore.util.bp$b:
    android.content.Context a -> a
    com.amap.api.mapcore.util.bv b -> b
    java.lang.String c -> c
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
com.amap.api.mapcore.util.bq -> com.amap.api.mapcore.util.bq:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a() -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String[] j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    android.net.NetworkInfo n(android.content.Context) -> n
    java.lang.String o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    java.lang.String t(android.content.Context) -> t
    java.lang.String u(android.content.Context) -> u
    int v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    int x(android.content.Context) -> x
    java.util.List a(java.util.List) -> a
    boolean a(boolean) -> a
    boolean b() -> b
    java.lang.String a(java.lang.String) -> a
com.amap.api.mapcore.util.bq$a -> com.amap.api.mapcore.util.bq$a:
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.amap.api.mapcore.util.br -> com.amap.api.mapcore.util.br:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
    byte[] a(byte[],java.security.Key) -> a
    byte[] b(java.lang.String) -> b
    java.lang.String c(byte[]) -> c
    java.lang.String b(byte[]) -> b
com.amap.api.mapcore.util.bs -> com.amap.api.mapcore.util.bs:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    java.lang.String c(java.lang.String) -> c
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[]) -> b
    byte[] d(java.lang.String) -> d
    byte[] e(java.lang.String) -> e
    byte[] f(java.lang.String) -> f
com.amap.api.mapcore.util.bt -> com.amap.api.mapcore.util.bt:
    java.net.Proxy a(android.content.Context) -> a
    java.net.Proxy b(android.content.Context) -> b
    boolean a(java.lang.String,int) -> a
    java.lang.String a() -> a
    java.net.Proxy a(android.content.Context,java.net.URI) -> a
    int b() -> b
com.amap.api.mapcore.util.bu -> com.amap.api.mapcore.util.bu:
    com.amap.api.mapcore.util.dl a -> a
    com.amap.api.mapcore.util.bu$a b -> b
    java.io.RandomAccessFile c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.content.Context g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    void a() -> a
    void run() -> run
    void a(byte[],long) -> a
    void d() -> d
    void e() -> e
    void a(java.lang.Throwable) -> a
    void b() -> b
com.amap.api.mapcore.util.bu$a -> com.amap.api.mapcore.util.bu$a:
    java.lang.String a -> a
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
com.amap.api.mapcore.util.bv -> com.amap.api.mapcore.util.bv:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    void a(boolean) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    java.lang.String[] f() -> f
com.amap.api.mapcore.util.bv$1 -> com.amap.api.mapcore.util.bv$1:
com.amap.api.mapcore.util.bv$a -> com.amap.api.mapcore.util.bv$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    com.amap.api.mapcore.util.bv$a a(boolean) -> a
    com.amap.api.mapcore.util.bv$a a(java.lang.String) -> a
    com.amap.api.mapcore.util.bv$a a(java.lang.String[]) -> a
    com.amap.api.mapcore.util.bv a() -> a
    java.lang.String a(com.amap.api.mapcore.util.bv$a) -> a
    java.lang.String b(com.amap.api.mapcore.util.bv$a) -> b
    java.lang.String c(com.amap.api.mapcore.util.bv$a) -> c
    boolean d(com.amap.api.mapcore.util.bv$a) -> d
    java.lang.String e(com.amap.api.mapcore.util.bv$a) -> e
    java.lang.String[] f(com.amap.api.mapcore.util.bv$a) -> f
com.amap.api.mapcore.util.bw -> com.amap.api.mapcore.util.bw:
    boolean a(org.json.JSONObject,java.lang.String) -> a
    byte[] a() -> a
    java.lang.String a(java.util.Map) -> a
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String b(java.util.Map) -> b
    java.lang.String a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    java.security.PublicKey a(android.content.Context) -> a
    java.lang.String c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    java.lang.String e(byte[]) -> e
    byte[] f(byte[]) -> f
com.amap.api.mapcore.util.bx -> com.amap.api.mapcore.util.bx:
    java.util.Map a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    void a(java.util.Map) -> a
    void a(java.lang.String) -> a
    void b(java.util.Map) -> b
    java.lang.String a() -> a
    java.util.Map c() -> c
    java.util.Map b() -> b
com.amap.api.mapcore.util.by -> com.amap.api.mapcore.util.by:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,byte[]) -> a
com.amap.api.mapcore.util.bz -> com.amap.api.mapcore.util.bz:
    java.lang.String a -> a
    java.lang.String b -> b
com.amap.api.mapcore.util.c -> com.amap.api.mapcore.util.c:
    boolean d -> d
    com.amap.api.mapcore.util.c$a e -> e
    java.lang.reflect.Method a -> a
    java.lang.reflect.Method b -> b
    java.lang.reflect.Method c -> c
    long f -> f
    boolean g -> g
    boolean a() -> a
    long b() -> b
    void c() -> c
    boolean a(android.view.MotionEvent) -> a
com.amap.api.mapcore.util.c$a -> com.amap.api.mapcore.util.c$a:
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
    void a(float,float,float,float,float) -> a
    void a() -> a
com.amap.api.mapcore.util.ca -> com.amap.api.mapcore.util.ca:
    android.content.Context d -> d
    java.util.concurrent.ExecutorService e -> e
    java.util.concurrent.ExecutorService a() -> a
    com.amap.api.mapcore.util.ca a(android.content.Context,com.amap.api.mapcore.util.bv) -> a
    com.amap.api.mapcore.util.ca b() -> b
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void c() -> c
    void d() -> d
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void b(java.lang.Throwable,java.lang.String,java.lang.String) -> b
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.amap.api.mapcore.util.bv,boolean) -> a
    android.content.Context a(com.amap.api.mapcore.util.ca) -> a
com.amap.api.mapcore.util.ca$1 -> com.amap.api.mapcore.util.ca$1:
    android.content.Context a -> a
    com.amap.api.mapcore.util.bv b -> b
    boolean c -> c
    com.amap.api.mapcore.util.ca d -> d
    void run() -> run
com.amap.api.mapcore.util.ca$a -> com.amap.api.mapcore.util.ca$a:
    android.content.Context a -> a
    void a() -> a
com.amap.api.mapcore.util.cb -> com.amap.api.mapcore.util.cb:
    boolean a -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
com.amap.api.mapcore.util.cc -> com.amap.api.mapcore.util.cc:
    java.lang.String[] a -> a
    int b -> b
    boolean c -> c
    int d -> d
    com.amap.api.mapcore.util.cc$a e -> e
    int a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    com.amap.api.mapcore.util.dh a(com.amap.api.mapcore.util.cv) -> a
    java.lang.String a(java.util.List) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
com.amap.api.mapcore.util.cc$1 -> com.amap.api.mapcore.util.cc$1:
com.amap.api.mapcore.util.cc$a -> com.amap.api.mapcore.util.cc$a:
    com.amap.api.mapcore.util.cv b -> b
    com.amap.api.mapcore.util.cc a -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.cd -> com.amap.api.mapcore.util.cd:
    com.amap.api.mapcore.util.cd a -> a
    java.lang.Thread$UncaughtExceptionHandler b -> b
    boolean c -> c
    void a(java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void a(java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.amap.api.mapcore.util.bv,boolean) -> a
com.amap.api.mapcore.util.ce -> com.amap.api.mapcore.util.ce:
    boolean a -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
com.amap.api.mapcore.util.cf -> com.amap.api.mapcore.util.cf:
    com.amap.api.mapcore.util.cf$a a -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b() -> b
    com.amap.api.mapcore.util.dh a(com.amap.api.mapcore.util.cv) -> a
    java.lang.String a(java.util.List) -> a
com.amap.api.mapcore.util.cf$a -> com.amap.api.mapcore.util.cf$a:
    com.amap.api.mapcore.util.cv b -> b
    com.amap.api.mapcore.util.cf a -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.cg -> com.amap.api.mapcore.util.cg:
    boolean a -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
com.amap.api.mapcore.util.ch -> com.amap.api.mapcore.util.ch:
    com.amap.api.mapcore.util.ch$a a -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b() -> b
    com.amap.api.mapcore.util.dh a(com.amap.api.mapcore.util.cv) -> a
    java.lang.String a(java.util.List) -> a
com.amap.api.mapcore.util.ch$a -> com.amap.api.mapcore.util.ch$a:
    com.amap.api.mapcore.util.cv b -> b
    com.amap.api.mapcore.util.ch a -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.ci -> com.amap.api.mapcore.util.ci:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(android.content.Context,java.lang.Throwable,int,java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.amap.api.mapcore.util.ci$1 -> com.amap.api.mapcore.util.ci$1:
    int a -> a
    android.content.Context b -> b
    java.lang.Throwable c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.amap.api.mapcore.util.ci$2 -> com.amap.api.mapcore.util.ci$2:
    android.content.Context a -> a
    void run() -> run
com.amap.api.mapcore.util.cj -> com.amap.api.mapcore.util.cj:
    com.amap.api.mapcore.util.de a -> a
    com.amap.api.mapcore.util.cj a(android.content.Context,int) -> a
    void b(android.content.Context) -> b
    boolean a(java.lang.String) -> a
    java.lang.String a() -> a
    int b() -> b
    boolean a(android.content.Context) -> a
    void a(com.amap.api.mapcore.util.cv,int) -> a
    int b(java.lang.String) -> b
    void a(java.util.List,com.amap.api.mapcore.util.cv,int) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String a(java.util.List,android.content.Context) -> a
    java.lang.String c(java.lang.String) -> c
    void c() -> c
    com.amap.api.mapcore.util.de a(android.content.Context,java.lang.String) -> a
com.amap.api.mapcore.util.ck -> com.amap.api.mapcore.util.ck:
    byte[] a -> a
    java.lang.String e() -> e
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
    byte[] a_() -> a_
com.amap.api.mapcore.util.cl -> com.amap.api.mapcore.util.cl:
    com.amap.api.mapcore.util.bv a -> a
    com.amap.api.mapcore.util.cl a(int) -> a
    void a(android.content.Context,java.lang.Throwable,java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    java.lang.String a(java.util.List) -> a
    void a(com.amap.api.mapcore.util.bv) -> a
    java.util.List b(android.content.Context) -> b
    void a(com.amap.api.mapcore.util.cv,java.lang.String,java.lang.String,int,boolean) -> a
    int a() -> a
    java.lang.String a(java.lang.String) -> a
    com.amap.api.mapcore.util.dh a(com.amap.api.mapcore.util.cv) -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String b(java.lang.Throwable) -> b
    java.lang.String a(android.content.Context,com.amap.api.mapcore.util.bv) -> a
    java.lang.String c(android.content.Context) -> c
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.amap.api.mapcore.util.cv) -> a
    boolean a(java.lang.String[],java.lang.String) -> a
com.amap.api.mapcore.util.cm -> com.amap.api.mapcore.util.cm:
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String a(long) -> a
com.amap.api.mapcore.util.cn -> com.amap.api.mapcore.util.cn:
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String b() -> b
    int c() -> c
com.amap.api.mapcore.util.co -> com.amap.api.mapcore.util.co:
    com.amap.api.mapcore.util.cs a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.amap.api.mapcore.util.cn c -> c
    android.database.sqlite.SQLiteDatabase a(boolean) -> a
    android.database.sqlite.SQLiteDatabase b(boolean) -> b
    java.lang.String a(java.util.Map) -> a
    void a(java.lang.String,com.amap.api.mapcore.util.cp) -> a
    void b(java.lang.String,com.amap.api.mapcore.util.cp) -> b
    void a(java.lang.String,com.amap.api.mapcore.util.cp,boolean) -> a
    void a(com.amap.api.mapcore.util.cp,java.lang.String) -> a
    void a(com.amap.api.mapcore.util.cp) -> a
    void a(com.amap.api.mapcore.util.cp,boolean) -> a
    void a(android.database.sqlite.SQLiteDatabase,com.amap.api.mapcore.util.cp) -> a
    void a(java.util.List) -> a
    java.util.List b(java.lang.String,com.amap.api.mapcore.util.cp,boolean) -> b
    java.util.List c(java.lang.String,com.amap.api.mapcore.util.cp) -> c
com.amap.api.mapcore.util.cp -> com.amap.api.mapcore.util.cp:
    android.content.ContentValues a() -> a
    java.lang.Object b(android.database.Cursor) -> b
    void a(java.lang.Object) -> a
    java.lang.String b() -> b
com.amap.api.mapcore.util.cq -> com.amap.api.mapcore.util.cq:
    java.lang.String b() -> b
com.amap.api.mapcore.util.cr -> com.amap.api.mapcore.util.cr:
    java.lang.String b() -> b
com.amap.api.mapcore.util.cs -> com.amap.api.mapcore.util.cs:
    com.amap.api.mapcore.util.cn a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.amap.api.mapcore.util.ct -> com.amap.api.mapcore.util.ct:
    java.lang.String b() -> b
com.amap.api.mapcore.util.cu -> com.amap.api.mapcore.util.cu:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    com.amap.api.mapcore.util.cu u -> u
    com.amap.api.mapcore.util.cu a() -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
    java.lang.String b() -> b
    int c() -> c
com.amap.api.mapcore.util.cv -> com.amap.api.mapcore.util.cv:
    com.amap.api.mapcore.util.co a -> a
    com.amap.api.mapcore.util.cw a(int) -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    void c(java.lang.String,int) -> c
    void a(com.amap.api.mapcore.util.cx,int) -> a
    java.util.List a(int,int) -> a
    void b(com.amap.api.mapcore.util.cx,int) -> b
    void a(com.amap.api.mapcore.util.cx,com.amap.api.mapcore.util.cw) -> a
    void b(com.amap.api.mapcore.util.cx,com.amap.api.mapcore.util.cw) -> b
com.amap.api.mapcore.util.cw -> com.amap.api.mapcore.util.cw:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.amap.api.mapcore.util.cx e -> e
    android.content.ContentValues a() -> a
    com.amap.api.mapcore.util.cx a(android.database.Cursor) -> a
    void a(com.amap.api.mapcore.util.cx) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.cx -> com.amap.api.mapcore.util.cx:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void b(int) -> b
com.amap.api.mapcore.util.cy -> com.amap.api.mapcore.util.cy:
    com.amap.api.mapcore.util.co a -> a
    android.content.Context b -> b
    com.amap.api.mapcore.util.co a(android.content.Context,boolean) -> a
    void a(com.amap.api.mapcore.util.bv) -> a
    java.util.List a() -> a
com.amap.api.mapcore.util.cz -> com.amap.api.mapcore.util.cz:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.amap.api.mapcore.util.bv g -> g
    android.content.ContentValues a() -> a
    com.amap.api.mapcore.util.bv a(android.database.Cursor) -> a
    void a(com.amap.api.mapcore.util.bv) -> a
    java.lang.String b() -> b
    java.lang.String[] b(java.lang.String) -> b
    java.lang.String a(java.lang.String[]) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String c() -> c
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.d -> com.amap.api.mapcore.util.d:
    com.amap.api.mapcore.util.d$a l -> l
    boolean m -> m
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void a() -> a
    float b() -> b
com.amap.api.mapcore.util.d$a -> com.amap.api.mapcore.util.d$a:
    boolean a(com.amap.api.mapcore.util.d) -> a
    boolean b(com.amap.api.mapcore.util.d) -> b
    void c(com.amap.api.mapcore.util.d) -> c
com.amap.api.mapcore.util.da -> com.amap.api.mapcore.util.da:
    com.amap.api.mapcore.util.co a -> a
    android.content.Context b -> b
    com.amap.api.mapcore.util.co a(android.content.Context) -> a
    com.amap.api.mapcore.util.dc a() -> a
    void a(com.amap.api.mapcore.util.dc) -> a
com.amap.api.mapcore.util.db -> com.amap.api.mapcore.util.db:
    com.amap.api.mapcore.util.dc a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.content.ContentValues a() -> a
    com.amap.api.mapcore.util.dc a(android.database.Cursor) -> a
    void a(com.amap.api.mapcore.util.dc) -> a
    java.lang.String b() -> b
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.dc -> com.amap.api.mapcore.util.dc:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    void a(boolean) -> a
    boolean a() -> a
    void b(boolean) -> b
    boolean b() -> b
    void c(boolean) -> c
    boolean c() -> c
com.amap.api.mapcore.util.dd -> com.amap.api.mapcore.util.dd:
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.amap.api.mapcore.util.de -> com.amap.api.mapcore.util.de:
    java.util.regex.Pattern a -> a
    java.io.File c -> c
    java.io.File d -> d
    java.io.File e -> e
    java.io.File f -> f
    int g -> g
    long h -> h
    int i -> i
    long j -> j
    java.io.Writer k -> k
    java.util.LinkedHashMap l -> l
    int m -> m
    com.amap.api.mapcore.util.dh n -> n
    long o -> o
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable p -> p
    java.io.OutputStream q -> q
    void a(com.amap.api.mapcore.util.dh) -> a
    com.amap.api.mapcore.util.de a(java.io.File,int,int,long) -> a
    void e() -> e
    void d(java.lang.String) -> d
    void f() -> f
    void g() -> g
    void a(java.io.File) -> a
    void a(java.io.File,java.io.File,boolean) -> a
    com.amap.api.mapcore.util.de$b a(java.lang.String) -> a
    com.amap.api.mapcore.util.de$a b(java.lang.String) -> b
    com.amap.api.mapcore.util.de$a a(java.lang.String,long) -> a
    void a(com.amap.api.mapcore.util.de$a,boolean) -> a
    boolean h() -> h
    boolean c(java.lang.String) -> c
    boolean a() -> a
    void i() -> i
    void b() -> b
    void close() -> close
    void j() -> j
    void c() -> c
    void e(java.lang.String) -> e
    java.io.Writer a(com.amap.api.mapcore.util.de) -> a
    void b(com.amap.api.mapcore.util.de) -> b
    boolean c(com.amap.api.mapcore.util.de) -> c
    void d(com.amap.api.mapcore.util.de) -> d
    int a(com.amap.api.mapcore.util.de,int) -> a
    int e(com.amap.api.mapcore.util.de) -> e
    java.io.File f(com.amap.api.mapcore.util.de) -> f
    java.io.OutputStream d() -> d
    void a(com.amap.api.mapcore.util.de,com.amap.api.mapcore.util.de$a,boolean) -> a
com.amap.api.mapcore.util.de$a -> com.amap.api.mapcore.util.de$a:
    com.amap.api.mapcore.util.de$c b -> b
    boolean[] c -> c
    boolean d -> d
    boolean e -> e
    com.amap.api.mapcore.util.de a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.amap.api.mapcore.util.de$c a(com.amap.api.mapcore.util.de$a) -> a
    boolean[] b(com.amap.api.mapcore.util.de$a) -> b
    boolean a(com.amap.api.mapcore.util.de$a,boolean) -> a
com.amap.api.mapcore.util.de$a$a -> com.amap.api.mapcore.util.de$a$a:
    com.amap.api.mapcore.util.de$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.amap.api.mapcore.util.de$b -> com.amap.api.mapcore.util.de$b:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    long[] e -> e
    com.amap.api.mapcore.util.de a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.amap.api.mapcore.util.de$c -> com.amap.api.mapcore.util.de$c:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.amap.api.mapcore.util.de$a e -> e
    long f -> f
    com.amap.api.mapcore.util.de a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.amap.api.mapcore.util.de$c,boolean) -> a
    com.amap.api.mapcore.util.de$a a(com.amap.api.mapcore.util.de$c,com.amap.api.mapcore.util.de$a) -> a
    void a(com.amap.api.mapcore.util.de$c,java.lang.String[]) -> a
    com.amap.api.mapcore.util.de$a a(com.amap.api.mapcore.util.de$c) -> a
    long[] b(com.amap.api.mapcore.util.de$c) -> b
    java.lang.String c(com.amap.api.mapcore.util.de$c) -> c
    boolean d(com.amap.api.mapcore.util.de$c) -> d
    long e(com.amap.api.mapcore.util.de$c) -> e
    long a(com.amap.api.mapcore.util.de$c,long) -> a
com.amap.api.mapcore.util.df -> com.amap.api.mapcore.util.df:
    com.amap.api.mapcore.util.de a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.amap.api.mapcore.util.dg -> com.amap.api.mapcore.util.dg:
    void write(int) -> write
com.amap.api.mapcore.util.dh -> com.amap.api.mapcore.util.dh:
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.di -> com.amap.api.mapcore.util.di:
    java.io.InputStream a -> a
    java.nio.charset.Charset b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    void close() -> close
    java.lang.String a() -> a
    void b() -> b
    java.nio.charset.Charset a(com.amap.api.mapcore.util.di) -> a
com.amap.api.mapcore.util.di$1 -> com.amap.api.mapcore.util.di$1:
    com.amap.api.mapcore.util.di a -> a
    java.lang.String toString() -> toString
com.amap.api.mapcore.util.dj -> com.amap.api.mapcore.util.dj:
    java.nio.charset.Charset a -> a
    java.nio.charset.Charset b -> b
    void a(java.io.File) -> a
    void a(java.io.Closeable) -> a
com.amap.api.mapcore.util.dk -> com.amap.api.mapcore.util.dk:
    com.amap.api.mapcore.util.dk a -> a
    com.amap.api.mapcore.util.dk a() -> a
    byte[] a(com.amap.api.mapcore.util.dp) -> a
    byte[] b(com.amap.api.mapcore.util.dp) -> b
    void c(com.amap.api.mapcore.util.dp) -> c
    com.amap.api.mapcore.util.dr a(com.amap.api.mapcore.util.dp,boolean) -> a
com.amap.api.mapcore.util.dl -> com.amap.api.mapcore.util.dl:
    com.amap.api.mapcore.util.dm a -> a
    com.amap.api.mapcore.util.dp b -> b
    void a(com.amap.api.mapcore.util.dl$a) -> a
    void a() -> a
com.amap.api.mapcore.util.dl$a -> com.amap.api.mapcore.util.dl$a:
    void a(byte[],long) -> a
    void d() -> d
    void e() -> e
    void a(java.lang.Throwable) -> a
com.amap.api.mapcore.util.dm -> com.amap.api.mapcore.util.dm:
    com.amap.api.mapcore.util.dn a -> a
    int b -> b
    int c -> c
    boolean d -> d
    javax.net.ssl.SSLContext e -> e
    java.net.Proxy f -> f
    boolean g -> g
    long h -> h
    long i -> i
    javax.net.ssl.HostnameVerifier j -> j
    void a(com.amap.api.mapcore.util.dn) -> a
    void a() -> a
    void a(long) -> a
    void b(long) -> b
    void a(java.lang.String,java.util.Map,java.util.Map,com.amap.api.mapcore.util.dl$a) -> a
    com.amap.api.mapcore.util.dr a(java.lang.String,java.util.Map,java.util.Map) -> a
    com.amap.api.mapcore.util.dr a(java.lang.String,java.util.Map,byte[]) -> a
    java.net.HttpURLConnection a(java.lang.String,java.util.Map,boolean) -> a
    com.amap.api.mapcore.util.dr a(java.net.HttpURLConnection) -> a
    void a(java.util.Map,java.net.HttpURLConnection) -> a
    java.lang.String a(java.util.Map) -> a
com.amap.api.mapcore.util.dn -> com.amap.api.mapcore.util.dn:
    void a() -> a
com.amap.api.mapcore.util.do -> com.amap.api.mapcore.util.do:
    com.amap.api.mapcore.util.do a -> a
    com.amap.api.mapcore.util.du b -> b
    android.os.Handler c -> c
    com.amap.api.mapcore.util.do a(boolean) -> a
    com.amap.api.mapcore.util.do a(boolean,int) -> a
    byte[] b(com.amap.api.mapcore.util.dp) -> b
    byte[] d(com.amap.api.mapcore.util.dp) -> d
    com.amap.api.mapcore.util.dr b(com.amap.api.mapcore.util.dp,boolean) -> b
    void a(com.amap.api.mapcore.util.bl,com.amap.api.mapcore.util.dq) -> a
    void a(com.amap.api.mapcore.util.dr,com.amap.api.mapcore.util.dq) -> a
    void a(com.amap.api.mapcore.util.do,com.amap.api.mapcore.util.dr,com.amap.api.mapcore.util.dq) -> a
    void a(com.amap.api.mapcore.util.do,com.amap.api.mapcore.util.bl,com.amap.api.mapcore.util.dq) -> a
com.amap.api.mapcore.util.do$1 -> com.amap.api.mapcore.util.do$1:
    com.amap.api.mapcore.util.dp a -> a
    com.amap.api.mapcore.util.dq b -> b
    com.amap.api.mapcore.util.do c -> c
    void a() -> a
com.amap.api.mapcore.util.do$a -> com.amap.api.mapcore.util.do$a:
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.util.dp -> com.amap.api.mapcore.util.dp:
    int g -> g
    int h -> h
    java.net.Proxy i -> i
    java.lang.String f() -> f
    byte[] g() -> g
    java.util.Map c() -> c
    java.util.Map b() -> b
    java.lang.String a() -> a
    void a(int) -> a
    void b(int) -> b
    byte[] a_() -> a_
    void a(java.net.Proxy) -> a
com.amap.api.mapcore.util.dq -> com.amap.api.mapcore.util.dq:
    void a() -> a
    void a(java.util.Map,byte[]) -> a
    void a(com.amap.api.mapcore.util.bl) -> a
com.amap.api.mapcore.util.dr -> com.amap.api.mapcore.util.dr:
    byte[] a -> a
    java.util.Map b -> b
com.amap.api.mapcore.util.ds -> com.amap.api.mapcore.util.ds:
    com.amap.api.mapcore.util.dm a -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.amap.api.mapcore.util.dt -> com.amap.api.mapcore.util.dt:
    com.amap.api.mapcore.util.bl a -> a
    com.amap.api.mapcore.util.dq b -> b
com.amap.api.mapcore.util.du -> com.amap.api.mapcore.util.du:
    com.amap.api.mapcore.util.du a -> a
    java.util.concurrent.ExecutorService b -> b
    java.util.concurrent.ConcurrentHashMap c -> c
    com.amap.api.mapcore.util.dv$a d -> d
    com.amap.api.mapcore.util.du a(int) -> a
    void a(com.amap.api.mapcore.util.dv) -> a
    void a() -> a
    void b() -> b
    boolean b(com.amap.api.mapcore.util.dv) -> b
    void a(com.amap.api.mapcore.util.dv,java.util.concurrent.Future) -> a
    void a(com.amap.api.mapcore.util.dv,boolean) -> a
    void a(com.amap.api.mapcore.util.du,com.amap.api.mapcore.util.dv,boolean) -> a
com.amap.api.mapcore.util.dv -> com.amap.api.mapcore.util.dv:
    com.amap.api.mapcore.util.dv$a d -> d
    void run() -> run
    void a() -> a
    void e() -> e
com.amap.api.mapcore.util.dv$a -> com.amap.api.mapcore.util.dv$a:
    void a(com.amap.api.mapcore.util.dv) -> a
    void b(com.amap.api.mapcore.util.dv) -> b
    void c(com.amap.api.mapcore.util.dv) -> c
com.amap.api.mapcore.util.dw -> com.amap.api.mapcore.util.dw:
    com.amap.api.mapcore.util.du a -> a
    void a(com.amap.api.mapcore.util.dv) -> a
    void b(com.amap.api.mapcore.util.dv) -> b
    void c(com.amap.api.mapcore.util.dv) -> c
com.amap.api.mapcore.util.dx -> com.amap.api.mapcore.util.dx:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.amap.api.mapcore.util.e -> com.amap.api.mapcore.util.e:
    float l -> l
    float m -> m
    float n -> n
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    float o -> o
    float p -> p
    void b(android.view.MotionEvent) -> b
    float c() -> c
    float a(android.view.MotionEvent,int) -> a
    float b(android.view.MotionEvent,int) -> b
    boolean d(android.view.MotionEvent) -> d
com.amap.api.mapcore.util.f -> com.amap.api.mapcore.util.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    int f -> f
    int[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    int j -> j
    int[] k -> k
    com.autonavi.amap.mapcore.IPoint l -> l
com.amap.api.mapcore.util.g -> com.amap.api.mapcore.util.g:
    com.amap.api.mapcore.util.al a -> a
    com.amap.api.mapcore.util.al b -> b
    com.amap.api.mapcore.util.al c -> c
    com.amap.api.mapcore.util.al d -> d
    com.amap.api.mapcore.util.al e -> e
    com.amap.api.mapcore.util.al f -> f
    com.amap.api.mapcore.util.al g -> g
    com.amap.api.mapcore.util.al h -> h
    com.amap.api.mapcore.util.al i -> i
    android.content.Context j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    long m -> m
    java.lang.String a() -> a
    java.lang.String b() -> b
    void a(int) -> a
    void a(com.amap.api.mapcore.util.al) -> a
    com.amap.api.mapcore.util.al c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    void a(long,long) -> a
    void m() -> m
    void a(com.amap.api.mapcore.util.ah$a) -> a
    void n() -> n
    void o() -> o
    void p() -> p
    void a(long) -> a
    void a(java.lang.String) -> a
    void q() -> q
    void r() -> r
    java.lang.String s() -> s
    java.lang.String t() -> t
    void a(java.io.File,java.io.File,java.lang.String) -> a
    boolean u() -> u
    com.amap.api.mapcore.util.r v() -> v
    void a(com.amap.api.mapcore.util.r) -> a
    long a(com.amap.api.mapcore.util.g) -> a
    long a(com.amap.api.mapcore.util.g,long) -> a
com.amap.api.mapcore.util.g$1 -> com.amap.api.mapcore.util.g$1:
    java.lang.String a -> a
    java.io.File b -> b
    com.amap.api.mapcore.util.g c -> c
    void a(java.lang.String,java.lang.String,float) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,int) -> a
com.amap.api.mapcore.util.h -> com.amap.api.mapcore.util.h:
    android.content.Context g -> g
    java.util.concurrent.CopyOnWriteArrayList a -> a
    com.amap.api.mapcore.util.h h -> h
    com.amap.api.mapcore.util.h$a i -> i
    com.amap.api.mapcore.util.q j -> j
    java.lang.String b -> b
    com.amap.api.mapcore.util.z k -> k
    java.util.concurrent.ExecutorService l -> l
    java.util.concurrent.ExecutorService m -> m
    com.amap.api.mapcore.util.h$b c -> c
    com.amap.api.mapcore.util.l d -> d
    com.amap.api.mapcore.util.n e -> e
    com.amap.api.mapcore.util.k f -> f
    com.amap.api.mapcore.util.h a(android.content.Context) -> a
    void f() -> f
    void g() -> g
    void f(java.lang.String) -> f
    void h() -> h
    void a(java.util.ArrayList) -> a
    void a(java.lang.String) -> a
    void i() -> i
    void a() -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(com.amap.api.mapcore.util.g) -> a
    void b(com.amap.api.mapcore.util.g) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    com.amap.api.mapcore.util.g g(java.lang.String) -> g
    com.amap.api.mapcore.util.g h(java.lang.String) -> h
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void c(com.amap.api.mapcore.util.g) -> c
    void d(com.amap.api.mapcore.util.g) -> d
    void a(com.amap.api.mapcore.util.h$a) -> a
    void e() -> e
    com.amap.api.mapcore.util.g a(com.amap.api.mapcore.util.h,java.lang.String) -> a
    com.amap.api.mapcore.util.z a(com.amap.api.mapcore.util.h) -> a
    void b(com.amap.api.mapcore.util.h) -> b
    android.content.Context c(com.amap.api.mapcore.util.h) -> c
    com.amap.api.mapcore.util.h$a d(com.amap.api.mapcore.util.h) -> d
com.amap.api.mapcore.util.h$1 -> com.amap.api.mapcore.util.h$1:
    java.lang.String a -> a
    com.amap.api.mapcore.util.h b -> b
    void run() -> run
com.amap.api.mapcore.util.h$2 -> com.amap.api.mapcore.util.h$2:
    com.amap.api.mapcore.util.g a -> a
    com.amap.api.mapcore.util.h b -> b
    void run() -> run
com.amap.api.mapcore.util.h$a -> com.amap.api.mapcore.util.h$a:
    void a(com.amap.api.mapcore.util.g) -> a
    void b(com.amap.api.mapcore.util.g) -> b
    void c(com.amap.api.mapcore.util.g) -> c
com.amap.api.mapcore.util.h$b -> com.amap.api.mapcore.util.h$b:
    com.amap.api.mapcore.util.h a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.util.i -> com.amap.api.mapcore.util.i:
    boolean a -> a
    java.lang.String b -> b
    boolean a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
com.amap.api.mapcore.util.j -> com.amap.api.mapcore.util.j:
    java.lang.String a() -> a
    com.amap.api.mapcore.util.i a(java.lang.String) -> a
    java.util.Map b() -> b
    java.lang.Object b(java.lang.String) -> b
com.amap.api.mapcore.util.k -> com.amap.api.mapcore.util.k:
    android.content.Context a -> a
    com.amap.api.mapcore.util.z b -> b
    void run() -> run
    void a() -> a
    java.util.ArrayList a(android.content.Context) -> a
    com.amap.api.mapcore.util.r a(java.io.File) -> a
    boolean a(java.lang.String) -> a
    void destroy() -> destroy
com.amap.api.mapcore.util.l -> com.amap.api.mapcore.util.l:
    java.util.ArrayList a -> a
    com.amap.api.mapcore.util.z b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    void a(com.amap.api.mapcore.util.r) -> a
    void d(java.lang.String) -> d
    boolean a(int,int) -> a
    boolean b(int) -> b
    boolean a(com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    java.util.ArrayList a() -> a
    com.amap.api.maps.offlinemap.OfflineMapCity a(java.lang.String) -> a
    com.amap.api.maps.offlinemap.OfflineMapCity b(java.lang.String) -> b
    com.amap.api.maps.offlinemap.OfflineMapProvince c(java.lang.String) -> c
    java.util.ArrayList b() -> b
    void a(java.util.List) -> a
    void a(com.amap.api.maps.offlinemap.OfflineMapCity,com.amap.api.maps.offlinemap.OfflineMapCity) -> a
    void a(com.amap.api.maps.offlinemap.OfflineMapProvince,com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    java.util.ArrayList e() -> e
    java.util.ArrayList f() -> f
    boolean a(int) -> a
    void a(com.amap.api.mapcore.util.g) -> a
    void a(com.amap.api.mapcore.util.g,com.amap.api.maps.offlinemap.OfflineMapCity) -> a
    void a(com.amap.api.mapcore.util.g,com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    void g() -> g
    void h() -> h
com.amap.api.mapcore.util.m -> com.amap.api.mapcore.util.m:
    com.amap.api.mapcore.util.ad a -> a
    com.amap.api.mapcore.util.af b -> b
    com.amap.api.mapcore.util.g c -> c
    android.content.Context e -> e
    android.os.Bundle f -> f
    com.amap.api.maps.AMap g -> g
    boolean h -> h
    void a() -> a
    void b() -> b
    java.lang.String f() -> f
    void g() -> g
    void c() -> c
    void d() -> d
com.amap.api.mapcore.util.n -> com.amap.api.mapcore.util.n:
    android.content.Context a -> a
    void a(com.amap.api.mapcore.util.g) -> a
    boolean b(com.amap.api.mapcore.util.g) -> b
    boolean a(java.lang.String,android.content.Context) -> a
com.amap.api.mapcore.util.o -> com.amap.api.mapcore.util.o:
    android.content.Context j -> j
    void a(android.content.Context) -> a
    java.util.List a(byte[]) -> a
    void c(java.lang.String) -> c
    long b_() -> b_
    java.lang.String a() -> a
    java.util.List a(java.lang.String) -> a
    java.util.Map b() -> b
    java.lang.Object b(byte[]) -> b
    java.lang.Object b(java.lang.String) -> b
com.amap.api.mapcore.util.p -> com.amap.api.mapcore.util.p:
    java.lang.String b() -> b
com.amap.api.mapcore.util.q -> com.amap.api.mapcore.util.q:
    com.amap.api.mapcore.util.q a -> a
    com.amap.api.mapcore.util.du b -> b
    java.util.LinkedHashMap c -> c
    boolean d -> d
    com.amap.api.mapcore.util.q a(int) -> a
    com.amap.api.mapcore.util.q a(boolean,int) -> a
    void a() -> a
    void a(com.amap.api.mapcore.util.p) -> a
    void a(com.amap.api.mapcore.util.p,android.content.Context,com.amap.api.maps.AMap) -> a
    void b() -> b
    void b(com.amap.api.mapcore.util.p) -> b
com.amap.api.mapcore.util.r -> com.amap.api.mapcore.util.r:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    long h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int k -> k
    boolean l -> l
    int m -> m
    java.lang.String n -> n
    android.content.Context o -> o
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    void d(java.lang.String) -> d
    java.lang.String g() -> g
    void e(java.lang.String) -> e
    long h() -> h
    void a(long) -> a
    void a(int) -> a
    int i() -> i
    long j() -> j
    void b(long) -> b
    long k() -> k
    void c(long) -> c
    java.lang.String l() -> l
    void f(java.lang.String) -> f
    java.lang.String m() -> m
    void g(java.lang.String) -> g
    boolean n() -> n
    void a(boolean) -> a
    void b(int) -> b
    int o() -> o
    void h(java.lang.String) -> h
    java.lang.String p() -> p
    void i(java.lang.String) -> i
    void q() -> q
com.amap.api.mapcore.util.s -> com.amap.api.mapcore.util.s:
    com.amap.api.mapcore.util.t a -> a
    com.amap.api.mapcore.util.t a(android.database.Cursor) -> a
    android.content.ContentValues a() -> a
    java.lang.String b() -> b
    void a(com.amap.api.mapcore.util.t) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.t -> com.amap.api.mapcore.util.t:
    java.lang.String a -> a
    long b -> b
    int c -> c
    long d -> d
    long e -> e
    long a(int) -> a
    long b(int) -> b
    java.lang.String a() -> a
    long b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
com.amap.api.mapcore.util.u -> com.amap.api.mapcore.util.u:
    com.amap.api.mapcore.util.x a -> a
    com.amap.api.mapcore.util.x a(android.database.Cursor) -> a
    android.content.ContentValues a() -> a
    java.lang.String b() -> b
    void a(com.amap.api.mapcore.util.x) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.v -> com.amap.api.mapcore.util.v:
    com.amap.api.mapcore.util.w a -> a
    com.amap.api.mapcore.util.w a(android.database.Cursor) -> a
    android.content.ContentValues a() -> a
    java.lang.String b() -> b
    void a(com.amap.api.mapcore.util.w) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void a(java.lang.Object) -> a
    java.lang.Object b(android.database.Cursor) -> b
com.amap.api.mapcore.util.w -> com.amap.api.mapcore.util.w:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
com.amap.api.mapcore.util.x -> com.amap.api.mapcore.util.x:
    com.amap.api.mapcore.util.r a -> a
    com.amap.api.mapcore.util.r a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    long g() -> g
    long h() -> h
    java.lang.String i() -> i
    int j() -> j
    boolean k() -> k
    int l() -> l
    java.lang.String m() -> m
    int n() -> n
com.amap.api.mapcore.util.y -> com.amap.api.mapcore.util.y:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    com.amap.api.mapcore.util.y A -> A
    com.amap.api.mapcore.util.y a() -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
    java.lang.String b() -> b
    int c() -> c
    void a(android.database.sqlite.SQLiteDatabase,int,int) -> a
com.amap.api.mapcore.util.z -> com.amap.api.mapcore.util.z:
    com.amap.api.mapcore.util.z a -> a
    com.amap.api.mapcore.util.co b -> b
    android.content.Context c -> c
    com.amap.api.mapcore.util.z a(android.content.Context) -> a
    com.amap.api.mapcore.util.co b(android.content.Context) -> b
    boolean b() -> b
    java.util.ArrayList a() -> a
    void a(com.amap.api.mapcore.util.r) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.util.List a(java.lang.String) -> a
    java.util.List b(java.lang.String) -> b
    java.util.List a(java.util.List) -> a
    void c(java.lang.String) -> c
    void a(java.lang.String,int,long,long,long) -> a
    void a(java.lang.String,int,long,long[],long[]) -> a
    long[] a(java.lang.String,int) -> a
    int d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    boolean f(java.lang.String) -> f
com.amap.api.mapcore.v -> com.amap.api.mapcore.v:
    com.amap.api.mapcore.aa a -> a
    int c -> c
    java.util.concurrent.CopyOnWriteArrayList d -> d
    java.util.concurrent.CopyOnWriteArrayList e -> e
    android.os.Handler f -> f
    java.lang.Runnable g -> g
    com.amap.api.mapcore.v$a b -> b
    java.lang.String a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    com.amap.api.mapcore.ai d(java.lang.String) -> d
    void a(com.amap.api.mapcore.ai) -> a
    boolean c(java.lang.String) -> c
    void b() -> b
    void a(javax.microedition.khronos.opengles.GL10,boolean,int) -> a
    void a(java.lang.Integer) -> a
    void c() -> c
    boolean d() -> d
    com.amap.api.mapcore.ai a(com.amap.api.maps.model.LatLng) -> a
    java.util.concurrent.CopyOnWriteArrayList a(com.amap.api.mapcore.v) -> a
    java.util.concurrent.CopyOnWriteArrayList a(com.amap.api.mapcore.v,java.util.concurrent.CopyOnWriteArrayList) -> a
com.amap.api.mapcore.v$a -> com.amap.api.mapcore.v$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.w -> com.amap.api.mapcore.w:
    com.amap.api.mapcore.v a -> a
    void run() -> run
com.amap.api.mapcore.x -> com.amap.api.mapcore.x:
    com.amap.api.mapcore.x$j a -> a
    java.lang.ref.WeakReference b -> b
    com.amap.api.mapcore.x$i c -> c
    android.opengl.GLSurfaceView$Renderer d -> d
    boolean e -> e
    com.amap.api.mapcore.x$e f -> f
    com.amap.api.mapcore.x$f g -> g
    com.amap.api.mapcore.x$g h -> h
    com.amap.api.mapcore.x$k i -> i
    int j -> j
    int k -> k
    boolean l -> l
    void finalize() -> finalize
    void a() -> a
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setRenderMode(int) -> setRenderMode
    void requestRender() -> requestRender
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void c() -> c
    void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    void onLayout(boolean,int,int,int,int) -> onLayout
    int a(com.amap.api.mapcore.x) -> a
    com.amap.api.mapcore.x$e b(com.amap.api.mapcore.x) -> b
    com.amap.api.mapcore.x$f c(com.amap.api.mapcore.x) -> c
    com.amap.api.mapcore.x$g d(com.amap.api.mapcore.x) -> d
    com.amap.api.mapcore.x$k e(com.amap.api.mapcore.x) -> e
    int f(com.amap.api.mapcore.x) -> f
    com.amap.api.mapcore.x$j b() -> b
    boolean g(com.amap.api.mapcore.x) -> g
    android.opengl.GLSurfaceView$Renderer h(com.amap.api.mapcore.x) -> h
com.amap.api.mapcore.x$a -> com.amap.api.mapcore.x$a:
    int[] a -> a
    com.amap.api.mapcore.x b -> b
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int[] a(int[]) -> a
com.amap.api.mapcore.x$b -> com.amap.api.mapcore.x$b:
    int[] j -> j
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    com.amap.api.mapcore.x i -> i
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> a
com.amap.api.mapcore.x$c -> com.amap.api.mapcore.x$c:
    int b -> b
    com.amap.api.mapcore.x a -> a
    javax.microedition.khronos.egl.EGLContext a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.amap.api.mapcore.x$d -> com.amap.api.mapcore.x$d:
    javax.microedition.khronos.egl.EGLSurface a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.amap.api.mapcore.x$e -> com.amap.api.mapcore.x$e:
    javax.microedition.khronos.egl.EGLConfig a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> a
com.amap.api.mapcore.x$f -> com.amap.api.mapcore.x$f:
    javax.microedition.khronos.egl.EGLContext a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> a
    void a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> a
com.amap.api.mapcore.x$g -> com.amap.api.mapcore.x$g:
    javax.microedition.khronos.egl.EGLSurface a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void a(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
com.amap.api.mapcore.x$h -> com.amap.api.mapcore.x$h:
    java.lang.ref.WeakReference f -> f
    javax.microedition.khronos.egl.EGL10 a -> a
    javax.microedition.khronos.egl.EGLDisplay b -> b
    javax.microedition.khronos.egl.EGLSurface c -> c
    javax.microedition.khronos.egl.EGLConfig d -> d
    javax.microedition.khronos.egl.EGLContext e -> e
    void a() -> a
    boolean b() -> b
    javax.microedition.khronos.opengles.GL c() -> c
    int d() -> d
    void e() -> e
    void g() -> g
    void f() -> f
    void a(java.lang.String) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,int) -> b
com.amap.api.mapcore.x$i -> com.amap.api.mapcore.x$i:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    int l -> l
    int m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    java.util.ArrayList q -> q
    boolean r -> r
    com.amap.api.mapcore.x$h s -> s
    java.lang.ref.WeakReference t -> t
    void run() -> run
    void h() -> h
    void i() -> i
    void j() -> j
    boolean a() -> a
    boolean k() -> k
    void a(int) -> a
    int b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void a(int,int) -> a
    void f() -> f
    void g() -> g
    void a(java.lang.Runnable) -> a
    boolean a(com.amap.api.mapcore.x$i,boolean) -> a
com.amap.api.mapcore.x$j -> com.amap.api.mapcore.x$j:
    java.lang.String a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.amap.api.mapcore.x$i g -> g
    void a(com.amap.api.mapcore.x$i) -> a
    boolean b(com.amap.api.mapcore.x$i) -> b
    void c(com.amap.api.mapcore.x$i) -> c
    boolean a() -> a
    boolean b() -> b
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void c() -> c
com.amap.api.mapcore.x$k -> com.amap.api.mapcore.x$k:
    javax.microedition.khronos.opengles.GL a(javax.microedition.khronos.opengles.GL) -> a
com.amap.api.mapcore.x$l -> com.amap.api.mapcore.x$l:
    java.lang.StringBuilder a -> a
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void a() -> a
com.amap.api.mapcore.x$m -> com.amap.api.mapcore.x$m:
    com.amap.api.mapcore.x j -> j
com.amap.api.mapcore.y -> com.amap.api.mapcore.y:
com.amap.api.mapcore.z -> com.amap.api.mapcore.z:
    com.amap.api.mapcore.aa a -> a
    com.amap.api.maps.model.BitmapDescriptor b -> b
    com.amap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.amap.api.maps.model.LatLngBounds f -> f
    float g -> g
    float h -> h
    boolean i -> i
    float j -> j
    float k -> k
    float l -> l
    java.lang.String m -> m
    java.nio.FloatBuffer n -> n
    java.nio.FloatBuffer o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ai) -> a
    int f() -> f
    void g() -> g
    void p() -> p
    void q() -> q
    void r() -> r
    void a(com.autonavi.amap.mapcore.DPoint,double,double,double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void s() -> s
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void j() -> j
    boolean a() -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> h
    void b(float) -> b
    void a(float,float) -> a
    float i() -> i
    float l() -> l
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds m() -> m
    void c(float) -> c
    float n() -> n
    void d(float) -> d
    float o() -> o
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void b(float,float) -> b
    boolean k() -> k
com.amap.api.maps.AMap -> com.amap.api.maps.AMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    int MAP_TYPE_NIGHT -> MAP_TYPE_NIGHT
    int MAP_TYPE_NAVI -> MAP_TYPE_NAVI
    int LOCATION_TYPE_LOCATE -> LOCATION_TYPE_LOCATE
    int LOCATION_TYPE_MAP_FOLLOW -> LOCATION_TYPE_MAP_FOLLOW
    int LOCATION_TYPE_MAP_ROTATE -> LOCATION_TYPE_MAP_ROTATE
    com.amap.api.mapcore.aa a -> a
    com.amap.api.maps.UiSettings b -> b
    com.amap.api.maps.Projection c -> c
    com.amap.api.maps.model.MyTrafficStyle d -> d
    com.amap.api.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.amap.api.maps.CameraUpdate) -> moveCamera
    void animateCamera(com.amap.api.maps.CameraUpdate) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,long,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void stopAnimation() -> stopAnimation
    com.amap.api.maps.model.NavigateArrow addNavigateArrow(com.amap.api.maps.model.NavigateArrowOptions) -> addNavigateArrow
    com.amap.api.maps.model.Polyline addPolyline(com.amap.api.maps.model.PolylineOptions) -> addPolyline
    com.amap.api.maps.model.Circle addCircle(com.amap.api.maps.model.CircleOptions) -> addCircle
    com.amap.api.maps.model.Arc addArc(com.amap.api.maps.model.ArcOptions) -> addArc
    com.amap.api.maps.model.Polygon addPolygon(com.amap.api.maps.model.PolygonOptions) -> addPolygon
    com.amap.api.maps.model.GroundOverlay addGroundOverlay(com.amap.api.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.amap.api.maps.model.Marker addMarker(com.amap.api.maps.model.MarkerOptions) -> addMarker
    com.amap.api.maps.model.Text addText(com.amap.api.maps.model.TextOptions) -> addText
    java.util.ArrayList addMarkers(java.util.ArrayList,boolean) -> addMarkers
    java.util.List getMapScreenMarkers() -> getMapScreenMarkers
    com.amap.api.maps.model.TileOverlay addTileOverlay(com.amap.api.maps.model.TileOverlayOptions) -> addTileOverlay
    void clear() -> clear
    void clear(boolean) -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    void showMapText(boolean) -> showMapText
    void showIndoorMap(boolean) -> showIndoorMap
    void setMyTrafficStyle(com.amap.api.maps.model.MyTrafficStyle) -> setMyTrafficStyle
    com.amap.api.maps.model.MyTrafficStyle getMyTrafficStyle() -> getMyTrafficStyle
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.amap.api.maps.LocationSource) -> setLocationSource
    void setMyLocationStyle(com.amap.api.maps.model.MyLocationStyle) -> setMyLocationStyle
    void setMyLocationType(int) -> setMyLocationType
    void setMyLocationRotateAngle(float) -> setMyLocationRotateAngle
    com.amap.api.maps.UiSettings getUiSettings() -> getUiSettings
    com.amap.api.maps.Projection getProjection() -> getProjection
    void setOnCameraChangeListener(com.amap.api.maps.AMap$OnCameraChangeListener) -> setOnCameraChangeListener
    void setOnMapClickListener(com.amap.api.maps.AMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapTouchListener(com.amap.api.maps.AMap$OnMapTouchListener) -> setOnMapTouchListener
    void setOnPOIClickListener(com.amap.api.maps.AMap$OnPOIClickListener) -> setOnPOIClickListener
    void setOnMyLocationChangeListener(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> setOnMyLocationChangeListener
    void setOnMapLongClickListener(com.amap.api.maps.AMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.amap.api.maps.AMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnPolylineClickListener(com.amap.api.maps.AMap$OnPolylineClickListener) -> setOnPolylineClickListener
    void setOnMarkerDragListener(com.amap.api.maps.AMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.amap.api.maps.AMap$InfoWindowAdapter) -> setInfoWindowAdapter
    void setOnMapLoadedListener(com.amap.api.maps.AMap$OnMapLoadedListener) -> setOnMapLoadedListener
    void getMapPrintScreen(com.amap.api.maps.AMap$onMapPrintScreenListener) -> getMapPrintScreen
    void getMapScreenShot(com.amap.api.maps.AMap$OnMapScreenShotListener) -> getMapScreenShot
    float getScalePerPixel() -> getScalePerPixel
    void runOnDrawFrame() -> runOnDrawFrame
    void removecache() -> removecache
    void removecache(com.amap.api.maps.AMap$OnCacheRemoveListener) -> removecache
    void setCustomRenderer(com.amap.api.maps.CustomRenderer) -> setCustomRenderer
    void setPointToCenter(int,int) -> setPointToCenter
    void setMapTextZIndex(int) -> setMapTextZIndex
    void setLoadOfflineData(boolean) -> setLoadOfflineData
    int getMapTextZIndex() -> getMapTextZIndex
    java.lang.String getVersion() -> getVersion
    void reloadMap() -> reloadMap
com.amap.api.maps.AMap$CancelableCallback -> com.amap.api.maps.AMap$CancelableCallback:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.maps.AMap$InfoWindowAdapter -> com.amap.api.maps.AMap$InfoWindowAdapter:
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
com.amap.api.maps.AMap$OnCacheRemoveListener -> com.amap.api.maps.AMap$OnCacheRemoveListener:
    void onRemoveCacheFinish(boolean) -> onRemoveCacheFinish
com.amap.api.maps.AMap$OnCameraChangeListener -> com.amap.api.maps.AMap$OnCameraChangeListener:
    void onCameraChange(com.amap.api.maps.model.CameraPosition) -> onCameraChange
    void onCameraChangeFinish(com.amap.api.maps.model.CameraPosition) -> onCameraChangeFinish
com.amap.api.maps.AMap$OnInfoWindowClickListener -> com.amap.api.maps.AMap$OnInfoWindowClickListener:
    void onInfoWindowClick(com.amap.api.maps.model.Marker) -> onInfoWindowClick
com.amap.api.maps.AMap$OnMapClickListener -> com.amap.api.maps.AMap$OnMapClickListener:
    void onMapClick(com.amap.api.maps.model.LatLng) -> onMapClick
com.amap.api.maps.AMap$OnMapLoadedListener -> com.amap.api.maps.AMap$OnMapLoadedListener:
    void onMapLoaded() -> onMapLoaded
com.amap.api.maps.AMap$OnMapLongClickListener -> com.amap.api.maps.AMap$OnMapLongClickListener:
    void onMapLongClick(com.amap.api.maps.model.LatLng) -> onMapLongClick
com.amap.api.maps.AMap$OnMapScreenShotListener -> com.amap.api.maps.AMap$OnMapScreenShotListener:
    void onMapScreenShot(android.graphics.Bitmap) -> onMapScreenShot
com.amap.api.maps.AMap$OnMapTouchListener -> com.amap.api.maps.AMap$OnMapTouchListener:
    void onTouch(android.view.MotionEvent) -> onTouch
com.amap.api.maps.AMap$OnMarkerClickListener -> com.amap.api.maps.AMap$OnMarkerClickListener:
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
com.amap.api.maps.AMap$OnMarkerDragListener -> com.amap.api.maps.AMap$OnMarkerDragListener:
    void onMarkerDragStart(com.amap.api.maps.model.Marker) -> onMarkerDragStart
    void onMarkerDrag(com.amap.api.maps.model.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.amap.api.maps.model.Marker) -> onMarkerDragEnd
com.amap.api.maps.AMap$OnMyLocationChangeListener -> com.amap.api.maps.AMap$OnMyLocationChangeListener:
    void onMyLocationChange(android.location.Location) -> onMyLocationChange
com.amap.api.maps.AMap$OnPOIClickListener -> com.amap.api.maps.AMap$OnPOIClickListener:
    void onPOIClick(com.amap.api.maps.model.Poi) -> onPOIClick
com.amap.api.maps.AMap$OnPolylineClickListener -> com.amap.api.maps.AMap$OnPolylineClickListener:
    void onPolylineClick(com.amap.api.maps.model.Polyline) -> onPolylineClick
com.amap.api.maps.AMap$onMapPrintScreenListener -> com.amap.api.maps.AMap$onMapPrintScreenListener:
    void onMapPrint(android.graphics.drawable.Drawable) -> onMapPrint
com.amap.api.maps.AMapException -> com.amap.api.maps.AMapException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    java.lang.String ERROR_NOT_ENOUGH_SPACE -> ERROR_NOT_ENOUGH_SPACE
    java.lang.String ERROR_NOT_AVAILABLE -> ERROR_NOT_AVAILABLE
    java.lang.String ERROR_ILLEGAL_VALUE -> ERROR_ILLEGAL_VALUE
    java.lang.String AMAP_NOT_SUPPORT -> AMAP_NOT_SUPPORT
    java.lang.String ILLEGAL_AMAP_ARGUMENT -> ILLEGAL_AMAP_ARGUMENT
    java.lang.String a -> a
    java.lang.String getErrorMessage() -> getErrorMessage
com.amap.api.maps.AMapOptions -> com.amap.api.maps.AMapOptions:
    com.amap.api.maps.AMapOptionsCreator CREATOR -> CREATOR
    int a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    int LOGO_POSITION_BOTTOM_LEFT -> LOGO_POSITION_BOTTOM_LEFT
    int LOGO_POSITION_BOTTOM_CENTER -> LOGO_POSITION_BOTTOM_CENTER
    int LOGO_POSITION_BOTTOM_RIGHT -> LOGO_POSITION_BOTTOM_RIGHT
    int ZOOM_POSITION_RIGHT_CENTER -> ZOOM_POSITION_RIGHT_CENTER
    int ZOOM_POSITION_RIGHT_BUTTOM -> ZOOM_POSITION_RIGHT_BUTTOM
    com.amap.api.maps.AMapOptions logoPosition(int) -> logoPosition
    com.amap.api.maps.AMapOptions zOrderOnTop(boolean) -> zOrderOnTop
    com.amap.api.maps.AMapOptions mapType(int) -> mapType
    com.amap.api.maps.AMapOptions camera(com.amap.api.maps.model.CameraPosition) -> camera
    com.amap.api.maps.AMapOptions scaleControlsEnabled(boolean) -> scaleControlsEnabled
    com.amap.api.maps.AMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.amap.api.maps.AMapOptions compassEnabled(boolean) -> compassEnabled
    com.amap.api.maps.AMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.amap.api.maps.AMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.amap.api.maps.AMapOptions tiltGesturesEnabled(boolean) -> tiltGesturesEnabled
    com.amap.api.maps.AMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
    java.lang.Boolean getZOrderOnTop() -> getZOrderOnTop
    int getMapType() -> getMapType
    com.amap.api.maps.model.CameraPosition getCamera() -> getCamera
    java.lang.Boolean getScaleControlsEnabled() -> getScaleControlsEnabled
    java.lang.Boolean getZoomControlsEnabled() -> getZoomControlsEnabled
    java.lang.Boolean getCompassEnabled() -> getCompassEnabled
    java.lang.Boolean getScrollGesturesEnabled() -> getScrollGesturesEnabled
    java.lang.Boolean getZoomGesturesEnabled() -> getZoomGesturesEnabled
    java.lang.Boolean getTiltGesturesEnabled() -> getTiltGesturesEnabled
    java.lang.Boolean getRotateGesturesEnabled() -> getRotateGesturesEnabled
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.AMapOptionsCreator -> com.amap.api.maps.AMapOptionsCreator:
    com.amap.api.maps.AMapOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.AMapOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.AMapUtils -> com.amap.api.maps.AMapUtils:
    int DRIVING_DEFAULT -> DRIVING_DEFAULT
    int DRIVING_SAVE_MONEY -> DRIVING_SAVE_MONEY
    int DRIVING_SHORT_DISTANCE -> DRIVING_SHORT_DISTANCE
    int DRIVING_NO_HIGHWAY -> DRIVING_NO_HIGHWAY
    int DRIVING_AVOID_CONGESTION -> DRIVING_AVOID_CONGESTION
    int DRIVING_NO_HIGHWAY_AVOID_SHORT_MONEY -> DRIVING_NO_HIGHWAY_AVOID_SHORT_MONEY
    int DRIVING_NO_HIGHWAY_AVOID_CONGESTION -> DRIVING_NO_HIGHWAY_AVOID_CONGESTION
    int DRIVING_SAVE_MONEY_AVOID_CONGESTION -> DRIVING_SAVE_MONEY_AVOID_CONGESTION
    int DRIVING_NO_HIGHWAY_SAVE_MONEY_AVOID_CONGESTION -> DRIVING_NO_HIGHWAY_SAVE_MONEY_AVOID_CONGESTION
    int BUS_TIME_FIRST -> BUS_TIME_FIRST
    int BUS_MONEY_LITTLE -> BUS_MONEY_LITTLE
    int BUS_TRANSFER_LITTLE -> BUS_TRANSFER_LITTLE
    int BUS_WALK_LITTLE -> BUS_WALK_LITTLE
    int BUS_COMFORT -> BUS_COMFORT
    int BUS_NO_SUBWAY -> BUS_NO_SUBWAY
    float calculateLineDistance(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateLineDistance
    float calculateArea(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateArea
    void getLatestAMapApp(android.content.Context) -> getLatestAMapApp
    void openAMapNavi(com.amap.api.maps.model.NaviPara,android.content.Context) -> openAMapNavi
    void openAMapPoiNearbySearch(com.amap.api.maps.model.PoiPara,android.content.Context) -> openAMapPoiNearbySearch
    void openAMapDrivingRoute(com.amap.api.maps.model.RoutePara,android.content.Context) -> openAMapDrivingRoute
    void openAMapTransitRoute(com.amap.api.maps.model.RoutePara,android.content.Context) -> openAMapTransitRoute
    void openAMapWalkingRoute(com.amap.api.maps.model.RoutePara,android.content.Context) -> openAMapWalkingRoute
    void a(com.amap.api.maps.model.RoutePara,android.content.Context,int) -> a
    boolean a(com.amap.api.maps.model.RoutePara) -> a
    java.lang.String a(com.amap.api.maps.model.NaviPara,android.content.Context) -> a
    java.lang.String b(com.amap.api.maps.model.RoutePara,android.content.Context,int) -> b
    java.lang.String a(com.amap.api.maps.model.PoiPara,android.content.Context) -> a
    boolean a(android.content.Context) -> a
com.amap.api.maps.AMapUtils$a -> com.amap.api.maps.AMapUtils$a:
    java.lang.String a -> a
    android.content.Context b -> b
    void run() -> run
com.amap.api.maps.CameraUpdate -> com.amap.api.maps.CameraUpdate:
    com.amap.api.mapcore.o a -> a
    com.amap.api.mapcore.o a() -> a
com.amap.api.maps.CameraUpdateFactory -> com.amap.api.maps.CameraUpdateFactory:
    com.amap.api.maps.CameraUpdate zoomIn() -> zoomIn
    com.amap.api.maps.CameraUpdate zoomOut() -> zoomOut
    com.amap.api.maps.CameraUpdate scrollBy(float,float) -> scrollBy
    com.amap.api.maps.CameraUpdate zoomTo(float) -> zoomTo
    com.amap.api.maps.CameraUpdate zoomBy(float) -> zoomBy
    com.amap.api.maps.CameraUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.amap.api.maps.CameraUpdate newCameraPosition(com.amap.api.maps.model.CameraPosition) -> newCameraPosition
    com.amap.api.maps.CameraUpdate newLatLng(com.amap.api.maps.model.LatLng) -> newLatLng
    com.amap.api.maps.CameraUpdate newLatLngZoom(com.amap.api.maps.model.LatLng,float) -> newLatLngZoom
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.amap.api.maps.CameraUpdate changeLatLng(com.amap.api.maps.model.LatLng) -> changeLatLng
    com.amap.api.maps.CameraUpdate changeBearing(float) -> changeBearing
    com.amap.api.maps.CameraUpdate changeBearingGeoCenter(float,com.autonavi.amap.mapcore.IPoint) -> changeBearingGeoCenter
    com.amap.api.maps.CameraUpdate changeTilt(float) -> changeTilt
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int,int,int) -> newLatLngBounds
com.amap.api.maps.CoordinateConverter -> com.amap.api.maps.CoordinateConverter:
    android.content.Context a -> a
    com.amap.api.maps.CoordinateConverter$CoordType b -> b
    com.amap.api.maps.model.LatLng c -> c
    com.amap.api.maps.CoordinateConverter from(com.amap.api.maps.CoordinateConverter$CoordType) -> from
    com.amap.api.maps.CoordinateConverter coord(com.amap.api.maps.model.LatLng) -> coord
    com.amap.api.maps.model.LatLng convert() -> convert
com.amap.api.maps.CoordinateConverter$CoordType -> com.amap.api.maps.CoordinateConverter$CoordType:
    com.amap.api.maps.CoordinateConverter$CoordType BAIDU -> BAIDU
    com.amap.api.maps.CoordinateConverter$CoordType MAPBAR -> MAPBAR
    com.amap.api.maps.CoordinateConverter$CoordType GPS -> GPS
    com.amap.api.maps.CoordinateConverter$CoordType MAPABC -> MAPABC
    com.amap.api.maps.CoordinateConverter$CoordType SOSOMAP -> SOSOMAP
    com.amap.api.maps.CoordinateConverter$CoordType ALIYUN -> ALIYUN
    com.amap.api.maps.CoordinateConverter$CoordType GOOGLE -> GOOGLE
    com.amap.api.maps.CoordinateConverter$CoordType[] a -> a
    com.amap.api.maps.CoordinateConverter$CoordType[] values() -> values
    com.amap.api.maps.CoordinateConverter$CoordType valueOf(java.lang.String) -> valueOf
com.amap.api.maps.CustomRenderer -> com.amap.api.maps.CustomRenderer:
    void OnMapReferencechanged() -> OnMapReferencechanged
com.amap.api.maps.LocationSource -> com.amap.api.maps.LocationSource:
    void activate(com.amap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
com.amap.api.maps.LocationSource$OnLocationChangedListener -> com.amap.api.maps.LocationSource$OnLocationChangedListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.maps.MapFragment -> com.amap.api.maps.MapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.af b -> b
    com.amap.api.maps.MapFragment newInstance() -> newInstance
    com.amap.api.maps.MapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.af getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
    void setUserVisibleHint(boolean) -> setUserVisibleHint
com.amap.api.maps.MapView -> com.amap.api.maps.MapView:
    com.amap.api.mapcore.af a -> a
    com.amap.api.maps.AMap b -> b
    int c -> c
    com.amap.api.mapcore.af getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setLayerType(int,android.graphics.Paint) -> setLayerType
    void setVisibility(int) -> setVisibility
com.amap.api.maps.MapsInitializer -> com.amap.api.maps.MapsInitializer:
    java.lang.String sdcardDir -> sdcardDir
    boolean a -> a
    void initialize(android.content.Context) -> initialize
    void setNetWorkEnable(boolean) -> setNetWorkEnable
    boolean getNetWorkEnable() -> getNetWorkEnable
    void setApiKey(java.lang.String) -> setApiKey
    java.lang.String getVersion() -> getVersion
com.amap.api.maps.Projection -> com.amap.api.maps.Projection:
    com.amap.api.mapcore.al a -> a
    com.amap.api.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.amap.api.maps.model.LatLng) -> toScreenLocation
    android.graphics.PointF toMapLocation(com.amap.api.maps.model.LatLng) -> toMapLocation
    android.graphics.PointF toOpenGLLocation(com.amap.api.maps.model.LatLng) -> toOpenGLLocation
    float toOpenGLWidth(int) -> toOpenGLWidth
    com.amap.api.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
    com.amap.api.maps.model.TileProjection fromBoundsToTile(com.amap.api.maps.model.LatLngBounds,int,int) -> fromBoundsToTile
    com.amap.api.maps.model.LatLngBounds getMapBounds(com.amap.api.maps.model.LatLng,float) -> getMapBounds
com.amap.api.maps.SupportMapFragment -> com.amap.api.maps.SupportMapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.af b -> b
    com.amap.api.maps.SupportMapFragment newInstance() -> newInstance
    com.amap.api.maps.SupportMapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.af getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
    void setUserVisibleHint(boolean) -> setUserVisibleHint
com.amap.api.maps.TextureMapFragment -> com.amap.api.maps.TextureMapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.af b -> b
    com.amap.api.maps.TextureMapFragment newInstance() -> newInstance
    com.amap.api.maps.TextureMapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.af getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
    void setUserVisibleHint(boolean) -> setUserVisibleHint
com.amap.api.maps.TextureMapView -> com.amap.api.maps.TextureMapView:
    com.amap.api.mapcore.af a -> a
    com.amap.api.maps.AMap b -> b
    int c -> c
    com.amap.api.mapcore.af getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setVisibility(int) -> setVisibility
com.amap.api.maps.TextureSupportMapFragment -> com.amap.api.maps.TextureSupportMapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.af b -> b
    com.amap.api.maps.TextureSupportMapFragment newInstance() -> newInstance
    com.amap.api.maps.TextureSupportMapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.af getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
    void setUserVisibleHint(boolean) -> setUserVisibleHint
com.amap.api.maps.UiSettings -> com.amap.api.maps.UiSettings:
    com.amap.api.mapcore.ap a -> a
    void setScaleControlsEnabled(boolean) -> setScaleControlsEnabled
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setLogoPosition(int) -> setLogoPosition
    void setZoomPosition(int) -> setZoomPosition
    int getZoomPosition() -> getZoomPosition
    boolean isScaleControlsEnabled() -> isScaleControlsEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
com.amap.api.maps.a -> com.amap.api.maps.a:
    int[] a -> a
com.amap.api.maps.model.AMapGLOverlay -> com.amap.api.maps.model.AMapGLOverlay:
    void destroy() -> destroy
com.amap.api.maps.model.Arc -> com.amap.api.maps.model.Arc:
    com.amap.api.mapcore.ab a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.ArcOptions -> com.amap.api.maps.model.ArcOptions:
    com.amap.api.maps.model.ArcOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    com.amap.api.maps.model.LatLng c -> c
    com.amap.api.maps.model.LatLng d -> d
    float e -> e
    int f -> f
    float g -> g
    boolean h -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.ArcOptions point(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> point
    com.amap.api.maps.model.ArcOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.ArcOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.ArcOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.ArcOptions visible(boolean) -> visible
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    com.amap.api.maps.model.LatLng getStart() -> getStart
    com.amap.api.maps.model.LatLng getPassed() -> getPassed
    com.amap.api.maps.model.LatLng getEnd() -> getEnd
com.amap.api.maps.model.ArcOptionsCreator -> com.amap.api.maps.model.ArcOptionsCreator:
    com.amap.api.maps.model.ArcOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.ArcOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.BitmapDescriptor -> com.amap.api.maps.model.BitmapDescriptor:
    com.amap.api.maps.model.BitmapDescriptorCreator CREATOR -> CREATOR
    int a -> a
    int b -> b
    android.graphics.Bitmap c -> c
    com.amap.api.maps.model.BitmapDescriptor clone() -> clone
    android.graphics.Bitmap getBitmap() -> getBitmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void recycle() -> recycle
    boolean equals(java.lang.Object) -> equals
    java.lang.Object clone() -> clone
com.amap.api.maps.model.BitmapDescriptorCreator -> com.amap.api.maps.model.BitmapDescriptorCreator:
    com.amap.api.maps.model.BitmapDescriptor createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.BitmapDescriptor[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.BitmapDescriptorFactory -> com.amap.api.maps.model.BitmapDescriptorFactory:
    float HUE_RED -> HUE_RED
    float HUE_ORANGE -> HUE_ORANGE
    float HUE_YELLOW -> HUE_YELLOW
    float HUE_GREEN -> HUE_GREEN
    float HUE_CYAN -> HUE_CYAN
    float HUE_AZURE -> HUE_AZURE
    float HUE_BLUE -> HUE_BLUE
    float HUE_VIOLET -> HUE_VIOLET
    float HUE_MAGENTA -> HUE_MAGENTA
    float HUE_ROSE -> HUE_ROSE
    com.amap.api.maps.model.BitmapDescriptor fromResource(int) -> fromResource
    com.amap.api.maps.model.BitmapDescriptor fromView(android.view.View) -> fromView
    com.amap.api.maps.model.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.amap.api.maps.model.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.amap.api.maps.model.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.amap.api.maps.model.BitmapDescriptor defaultMarker() -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor defaultMarker(float) -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
com.amap.api.maps.model.CameraPosition -> com.amap.api.maps.model.CameraPosition:
    com.amap.api.maps.model.CameraPositionCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng target -> target
    float zoom -> zoom
    float tilt -> tilt
    float bearing -> bearing
    boolean isAbroad -> isAbroad
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    com.amap.api.maps.model.CameraPosition fromLatLngZoom(com.amap.api.maps.model.LatLng,float) -> fromLatLngZoom
    com.amap.api.maps.model.CameraPosition$Builder builder() -> builder
    com.amap.api.maps.model.CameraPosition$Builder builder(com.amap.api.maps.model.CameraPosition) -> builder
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.CameraPosition$Builder -> com.amap.api.maps.model.CameraPosition$Builder:
    com.amap.api.maps.model.LatLng a -> a
    float b -> b
    float c -> c
    float d -> d
    com.amap.api.maps.model.CameraPosition$Builder target(com.amap.api.maps.model.LatLng) -> target
    com.amap.api.maps.model.CameraPosition$Builder zoom(float) -> zoom
    com.amap.api.maps.model.CameraPosition$Builder tilt(float) -> tilt
    com.amap.api.maps.model.CameraPosition$Builder bearing(float) -> bearing
    com.amap.api.maps.model.CameraPosition build() -> build
com.amap.api.maps.model.CameraPositionCreator -> com.amap.api.maps.model.CameraPositionCreator:
    com.amap.api.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CameraPosition[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Circle -> com.amap.api.maps.model.Circle:
    com.amap.api.mapcore.ac a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.amap.api.maps.model.LatLng) -> setCenter
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
com.amap.api.maps.model.CircleOptions -> com.amap.api.maps.model.CircleOptions:
    com.amap.api.maps.model.CircleOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    double c -> c
    float d -> d
    int e -> e
    int f -> f
    float g -> g
    boolean h -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.CircleOptions center(com.amap.api.maps.model.LatLng) -> center
    com.amap.api.maps.model.CircleOptions radius(double) -> radius
    com.amap.api.maps.model.CircleOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.CircleOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.CircleOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.CircleOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.CircleOptions visible(boolean) -> visible
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    double getRadius() -> getRadius
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.CircleOptionsCreator -> com.amap.api.maps.model.CircleOptionsCreator:
    com.amap.api.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CircleOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Gradient -> com.amap.api.maps.model.Gradient:
    int a -> a
    int[] b -> b
    float[] c -> c
    boolean d -> d
    java.util.HashMap a() -> a
    int[] generateColorMap(double) -> generateColorMap
    int a(int,int,float) -> a
    boolean isAvailable() -> isAvailable
com.amap.api.maps.model.Gradient$a -> com.amap.api.maps.model.Gradient$a:
    int b -> b
    int c -> c
    float d -> d
    com.amap.api.maps.model.Gradient a -> a
    float a(com.amap.api.maps.model.Gradient$a) -> a
    int b(com.amap.api.maps.model.Gradient$a) -> b
    int c(com.amap.api.maps.model.Gradient$a) -> c
com.amap.api.maps.model.GroundOverlay -> com.amap.api.maps.model.GroundOverlay:
    com.amap.api.mapcore.ae a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void setImage(com.amap.api.maps.model.BitmapDescriptor) -> setImage
    void setDimensions(float,float) -> setDimensions
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.amap.api.maps.model.LatLngBounds) -> setPositionFromBounds
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.GroundOverlayOptions -> com.amap.api.maps.model.GroundOverlayOptions:
    com.amap.api.maps.model.GroundOverlayOptionsCreator CREATOR -> CREATOR
    float NO_DIMENSION -> NO_DIMENSION
    int a -> a
    com.amap.api.maps.model.BitmapDescriptor b -> b
    com.amap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.amap.api.maps.model.LatLngBounds f -> f
    float g -> g
    float h -> h
    boolean i -> i
    float j -> j
    float k -> k
    float l -> l
    com.amap.api.maps.model.GroundOverlayOptions image(com.amap.api.maps.model.BitmapDescriptor) -> image
    com.amap.api.maps.model.GroundOverlayOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions a(com.amap.api.maps.model.LatLng,float,float) -> a
    com.amap.api.maps.model.GroundOverlayOptions positionFromBounds(com.amap.api.maps.model.LatLngBounds) -> positionFromBounds
    com.amap.api.maps.model.GroundOverlayOptions bearing(float) -> bearing
    com.amap.api.maps.model.GroundOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.GroundOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.GroundOverlayOptions transparency(float) -> transparency
    com.amap.api.maps.model.BitmapDescriptor getImage() -> getImage
    com.amap.api.maps.model.LatLng getLocation() -> getLocation
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    float getBearing() -> getBearing
    float getZIndex() -> getZIndex
    float getTransparency() -> getTransparency
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.GroundOverlayOptionsCreator -> com.amap.api.maps.model.GroundOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.GroundOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.HeatmapTileProvider -> com.amap.api.maps.model.HeatmapTileProvider:
    int DEFAULT_RADIUS -> DEFAULT_RADIUS
    double DEFAULT_OPACITY -> DEFAULT_OPACITY
    int[] a -> a
    float[] b -> b
    com.amap.api.maps.model.Gradient DEFAULT_GRADIENT -> DEFAULT_GRADIENT
    com.amap.api.maps.model.c c -> c
    java.util.Collection d -> d
    com.amap.api.mapcore.util.ay e -> e
    int f -> f
    com.amap.api.maps.model.Gradient g -> g
    int[] h -> h
    double[] i -> i
    double j -> j
    double[] k -> k
    void c(java.util.Collection) -> c
    java.util.Collection d(java.util.Collection) -> d
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    void a(com.amap.api.maps.model.Gradient) -> a
    double[] a(int) -> a
    com.amap.api.maps.model.Tile a(android.graphics.Bitmap) -> a
    com.amap.api.mapcore.util.ay a(java.util.Collection) -> a
    double[] a(int,double) -> a
    double[][] a(double[][],double[]) -> a
    android.graphics.Bitmap a(double[][],int[],double) -> a
    double a(java.util.Collection,com.amap.api.mapcore.util.ay,int,int) -> a
    int getTileHeight() -> getTileHeight
    int getTileWidth() -> getTileWidth
    java.util.Collection b(java.util.Collection) -> b
com.amap.api.maps.model.HeatmapTileProvider$Builder -> com.amap.api.maps.model.HeatmapTileProvider$Builder:
    java.util.Collection a -> a
    int b -> b
    com.amap.api.maps.model.Gradient c -> c
    double d -> d
    com.amap.api.maps.model.HeatmapTileProvider$Builder data(java.util.Collection) -> data
    com.amap.api.maps.model.HeatmapTileProvider$Builder weightedData(java.util.Collection) -> weightedData
    com.amap.api.maps.model.HeatmapTileProvider$Builder radius(int) -> radius
    com.amap.api.maps.model.HeatmapTileProvider$Builder gradient(com.amap.api.maps.model.Gradient) -> gradient
    com.amap.api.maps.model.HeatmapTileProvider$Builder transparency(double) -> transparency
    com.amap.api.maps.model.HeatmapTileProvider build() -> build
    java.util.Collection a(com.amap.api.maps.model.HeatmapTileProvider$Builder) -> a
    int b(com.amap.api.maps.model.HeatmapTileProvider$Builder) -> b
    com.amap.api.maps.model.Gradient c(com.amap.api.maps.model.HeatmapTileProvider$Builder) -> c
    double d(com.amap.api.maps.model.HeatmapTileProvider$Builder) -> d
com.amap.api.maps.model.LatLng -> com.amap.api.maps.model.LatLng:
    com.amap.api.maps.model.LatLngCreator CREATOR -> CREATOR
    double latitude -> latitude
    double longitude -> longitude
    java.text.DecimalFormat a -> a
    double a(double) -> a
    com.amap.api.maps.model.LatLng clone() -> clone
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
com.amap.api.maps.model.LatLngBounds -> com.amap.api.maps.model.LatLngBounds:
    com.amap.api.maps.model.LatLngBoundsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng southwest -> southwest
    com.amap.api.maps.model.LatLng northeast -> northeast
    int a() -> a
    com.amap.api.maps.model.LatLngBounds$Builder builder() -> builder
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean contains(com.amap.api.maps.model.LatLngBounds) -> contains
    boolean intersects(com.amap.api.maps.model.LatLngBounds) -> intersects
    boolean a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds including(com.amap.api.maps.model.LatLng) -> including
    double c(double,double) -> c
    double d(double,double) -> d
    boolean a(double) -> a
    boolean b(double) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    double a(double,double) -> a
    double b(double,double) -> b
com.amap.api.maps.model.LatLngBounds$Builder -> com.amap.api.maps.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    com.amap.api.maps.model.LatLngBounds$Builder include(com.amap.api.maps.model.LatLng) -> include
    boolean a(double) -> a
    com.amap.api.maps.model.LatLngBounds build() -> build
com.amap.api.maps.model.LatLngBoundsCreator -> com.amap.api.maps.model.LatLngBoundsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLngBounds[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.LatLngCreator -> com.amap.api.maps.model.LatLngCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLng createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLng[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Marker -> com.amap.api.maps.model.Marker:
    com.amap.api.mapcore.ag a -> a
    void setPeriod(int) -> setPeriod
    int getPeriod() -> getPeriod
    void setIcons(java.util.ArrayList) -> setIcons
    java.util.ArrayList getIcons() -> getIcons
    void remove() -> remove
    void destroy() -> destroy
    java.lang.String getId() -> getId
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setIcon(com.amap.api.maps.model.BitmapDescriptor) -> setIcon
    void setAnchor(float,float) -> setAnchor
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
    void setRotateAngle(float) -> setRotateAngle
    float getRotateAngle() -> getRotateAngle
    void setToTop() -> setToTop
    void setGeoPoint(com.autonavi.amap.mapcore.IPoint) -> setGeoPoint
    com.autonavi.amap.mapcore.IPoint getGeoPoint() -> getGeoPoint
    void setFlat(boolean) -> setFlat
    boolean isFlat() -> isFlat
    void setPositionByPixels(int,int) -> setPositionByPixels
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
com.amap.api.maps.model.MarkerOptions -> com.amap.api.maps.model.MarkerOptions:
    com.amap.api.maps.model.MarkerOptionsCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    float e -> e
    float f -> f
    float g -> g
    boolean h -> h
    boolean i -> i
    java.lang.String a -> a
    boolean j -> j
    int k -> k
    int l -> l
    java.util.ArrayList m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    com.amap.api.maps.model.MarkerOptions icons(java.util.ArrayList) -> icons
    java.util.ArrayList getIcons() -> getIcons
    com.amap.api.maps.model.MarkerOptions period(int) -> period
    int getPeriod() -> getPeriod
    boolean isPerspective() -> isPerspective
    com.amap.api.maps.model.MarkerOptions perspective(boolean) -> perspective
    com.amap.api.maps.model.MarkerOptions position(com.amap.api.maps.model.LatLng) -> position
    com.amap.api.maps.model.MarkerOptions setFlat(boolean) -> setFlat
    void a() -> a
    com.amap.api.maps.model.MarkerOptions icon(com.amap.api.maps.model.BitmapDescriptor) -> icon
    com.amap.api.maps.model.MarkerOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.MarkerOptions setInfoWindowOffset(int,int) -> setInfoWindowOffset
    com.amap.api.maps.model.MarkerOptions title(java.lang.String) -> title
    com.amap.api.maps.model.MarkerOptions snippet(java.lang.String) -> snippet
    com.amap.api.maps.model.MarkerOptions draggable(boolean) -> draggable
    com.amap.api.maps.model.MarkerOptions visible(boolean) -> visible
    com.amap.api.maps.model.MarkerOptions setGps(boolean) -> setGps
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.amap.api.maps.model.BitmapDescriptor getIcon() -> getIcon
    float getAnchorU() -> getAnchorU
    int getInfoWindowOffsetX() -> getInfoWindowOffsetX
    int getInfoWindowOffsetY() -> getInfoWindowOffsetY
    float getAnchorV() -> getAnchorV
    boolean isDraggable() -> isDraggable
    boolean isVisible() -> isVisible
    boolean isGps() -> isGps
    boolean isFlat() -> isFlat
    com.amap.api.maps.model.MarkerOptions zIndex(float) -> zIndex
    float getZIndex() -> getZIndex
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MarkerOptionsCreator -> com.amap.api.maps.model.MarkerOptionsCreator:
    com.amap.api.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MarkerOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyLocationStyle -> com.amap.api.maps.model.MyLocationStyle:
    com.amap.api.maps.model.BitmapDescriptor a -> a
    float b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    com.amap.api.maps.model.MyLocationStyle myLocationIcon(com.amap.api.maps.model.BitmapDescriptor) -> myLocationIcon
    com.amap.api.maps.model.MyLocationStyle anchor(float,float) -> anchor
    com.amap.api.maps.model.MyLocationStyle radiusFillColor(int) -> radiusFillColor
    com.amap.api.maps.model.MyLocationStyle strokeColor(int) -> strokeColor
    com.amap.api.maps.model.MyLocationStyle strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.BitmapDescriptor getMyLocationIcon() -> getMyLocationIcon
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    int getRadiusFillColor() -> getRadiusFillColor
    int getStrokeColor() -> getStrokeColor
    float getStrokeWidth() -> getStrokeWidth
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MyLocationStyleCreator -> com.amap.api.maps.model.MyLocationStyleCreator:
    com.amap.api.maps.model.MyLocationStyle createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MyLocationStyle[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyTrafficStyle -> com.amap.api.maps.model.MyTrafficStyle:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int getSmoothColor() -> getSmoothColor
    void setSmoothColor(int) -> setSmoothColor
    int getSlowColor() -> getSlowColor
    void setSlowColor(int) -> setSlowColor
    int getCongestedColor() -> getCongestedColor
    void setCongestedColor(int) -> setCongestedColor
    int getSeriousCongestedColor() -> getSeriousCongestedColor
    void setSeriousCongestedColor(int) -> setSeriousCongestedColor
com.amap.api.maps.model.NaviPara -> com.amap.api.maps.model.NaviPara:
    int DRIVING_DEFAULT -> DRIVING_DEFAULT
    int DRIVING_SAVE_MONEY -> DRIVING_SAVE_MONEY
    int DRIVING_SHORT_DISTANCE -> DRIVING_SHORT_DISTANCE
    int DRIVING_NO_HIGHWAY -> DRIVING_NO_HIGHWAY
    int DRIVING_AVOID_CONGESTION -> DRIVING_AVOID_CONGESTION
    int DRIVING_NO_HIGHWAY_AVOID_SHORT_MONEY -> DRIVING_NO_HIGHWAY_AVOID_SHORT_MONEY
    int DRIVING_NO_HIGHWAY_AVOID_CONGESTION -> DRIVING_NO_HIGHWAY_AVOID_CONGESTION
    int DRIVING_SAVE_MONEY_AVOID_CONGESTION -> DRIVING_SAVE_MONEY_AVOID_CONGESTION
    int DRIVING_NO_HIGHWAY_SAVE_MONEY_AVOID_CONGESTION -> DRIVING_NO_HIGHWAY_SAVE_MONEY_AVOID_CONGESTION
    int a -> a
    com.amap.api.maps.model.LatLng b -> b
    void setTargetPoint(com.amap.api.maps.model.LatLng) -> setTargetPoint
    void setNaviStyle(int) -> setNaviStyle
    com.amap.api.maps.model.LatLng getTargetPoint() -> getTargetPoint
    int getNaviStyle() -> getNaviStyle
com.amap.api.maps.model.NavigateArrow -> com.amap.api.maps.model.NavigateArrow:
    com.amap.api.mapcore.ah a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setTopColor(int) -> setTopColor
    int getTopColor() -> getTopColor
    void setSideColor(int) -> setSideColor
    int getSideColor() -> getSideColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.NavigateArrowOptions -> com.amap.api.maps.model.NavigateArrowOptions:
    com.amap.api.maps.model.NavigateArrowOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    com.amap.api.maps.model.NavigateArrowOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.NavigateArrowOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.NavigateArrowOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.NavigateArrowOptions width(float) -> width
    com.amap.api.maps.model.NavigateArrowOptions topColor(int) -> topColor
    com.amap.api.maps.model.NavigateArrowOptions sideColor(int) -> sideColor
    com.amap.api.maps.model.NavigateArrowOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.NavigateArrowOptions visible(boolean) -> visible
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getTopColor() -> getTopColor
    int getSideColor() -> getSideColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.NavigateArrowOptionsCreator -> com.amap.api.maps.model.NavigateArrowOptionsCreator:
    com.amap.api.maps.model.NavigateArrowOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.NavigateArrowOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Poi -> com.amap.api.maps.model.Poi:
    com.amap.api.maps.model.PoiCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    java.lang.String getName() -> getName
    com.amap.api.maps.model.LatLng getCoordinate() -> getCoordinate
    java.lang.String getPoiId() -> getPoiId
    int describeContents() -> describeContents
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.PoiCreator -> com.amap.api.maps.model.PoiCreator:
    com.amap.api.maps.model.Poi createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.Poi[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.PoiPara -> com.amap.api.maps.model.PoiPara:
    com.amap.api.maps.model.LatLng a -> a
    java.lang.String b -> b
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    void setCenter(com.amap.api.maps.model.LatLng) -> setCenter
    java.lang.String getKeywords() -> getKeywords
    void setKeywords(java.lang.String) -> setKeywords
com.amap.api.maps.model.Polygon -> com.amap.api.maps.model.Polygon:
    com.amap.api.mapcore.aj a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.PolygonOptions -> com.amap.api.maps.model.PolygonOptions:
    com.amap.api.maps.model.PolygonOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolygonOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolygonOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.PolygonOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.PolygonOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.PolygonOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolygonOptions visible(boolean) -> visible
    java.util.List getPoints() -> getPoints
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.PolygonOptionsCreator -> com.amap.api.maps.model.PolygonOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolygonOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Polyline -> com.amap.api.maps.model.Polyline:
    com.amap.api.mapcore.ak a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    void setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.amap.api.maps.model.LatLng getNearestLatLng(com.amap.api.maps.model.LatLng) -> getNearestLatLng
    void setTransparency(float) -> setTransparency
com.amap.api.maps.model.PolylineOptions -> com.amap.api.maps.model.PolylineOptions:
    com.amap.api.maps.model.PolylineOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    float e -> e
    boolean f -> f
    java.lang.String a -> a
    com.amap.api.maps.model.BitmapDescriptor g -> g
    java.util.List h -> h
    java.util.List i -> i
    java.util.List j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    com.amap.api.maps.model.PolylineOptions setUseTexture(boolean) -> setUseTexture
    com.amap.api.maps.model.PolylineOptions setCustomTexture(com.amap.api.maps.model.BitmapDescriptor) -> setCustomTexture
    com.amap.api.maps.model.BitmapDescriptor getCustomTexture() -> getCustomTexture
    com.amap.api.maps.model.PolylineOptions setCustomTextureList(java.util.List) -> setCustomTextureList
    java.util.List getCustomTextureList() -> getCustomTextureList
    com.amap.api.maps.model.PolylineOptions setCustomTextureIndex(java.util.List) -> setCustomTextureIndex
    java.util.List getCustomTextureIndex() -> getCustomTextureIndex
    com.amap.api.maps.model.PolylineOptions colorValues(java.util.List) -> colorValues
    java.util.List getColorValues() -> getColorValues
    com.amap.api.maps.model.PolylineOptions useGradient(boolean) -> useGradient
    boolean isUseGradient() -> isUseGradient
    boolean isUseTexture() -> isUseTexture
    boolean isGeodesic() -> isGeodesic
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolylineOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolylineOptions width(float) -> width
    com.amap.api.maps.model.PolylineOptions color(int) -> color
    com.amap.api.maps.model.PolylineOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolylineOptions visible(boolean) -> visible
    com.amap.api.maps.model.PolylineOptions geodesic(boolean) -> geodesic
    com.amap.api.maps.model.PolylineOptions setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getColor() -> getColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.PolylineOptionsCreator -> com.amap.api.maps.model.PolylineOptionsCreator:
    com.amap.api.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolylineOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.RoutePara -> com.amap.api.maps.model.RoutePara:
    int a -> a
    int b -> b
    com.amap.api.maps.model.LatLng c -> c
    com.amap.api.maps.model.LatLng d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int getDrivingRouteStyle() -> getDrivingRouteStyle
    void setDrivingRouteStyle(int) -> setDrivingRouteStyle
    int getTransitRouteStyle() -> getTransitRouteStyle
    void setTransitRouteStyle(int) -> setTransitRouteStyle
    com.amap.api.maps.model.LatLng getStartPoint() -> getStartPoint
    void setStartPoint(com.amap.api.maps.model.LatLng) -> setStartPoint
    com.amap.api.maps.model.LatLng getEndPoint() -> getEndPoint
    void setEndPoint(com.amap.api.maps.model.LatLng) -> setEndPoint
    java.lang.String getEndName() -> getEndName
    void setEndName(java.lang.String) -> setEndName
    java.lang.String getStartName() -> getStartName
    void setStartName(java.lang.String) -> setStartName
com.amap.api.maps.model.RuntimeRemoteException -> com.amap.api.maps.model.RuntimeRemoteException:
com.amap.api.maps.model.Text -> com.amap.api.maps.model.Text:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.amap.api.mapcore.an a -> a
    void remove() -> remove
    void destroy() -> destroy
    java.lang.String getId() -> getId
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setBackgroundColor(int) -> setBackgroundColor
    int getBackgroundColor() -> getBackgroundColor
    void setFontColor(int) -> setFontColor
    int getFontColor() -> getFontColor
    void setFontSize(int) -> setFontSize
    int getFontSize() -> getFontSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    void setAlign(int,int) -> setAlign
    int getAlignX() -> getAlignX
    int getAlignY() -> getAlignY
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
    void setRotate(float) -> setRotate
    float getRotate() -> getRotate
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
com.amap.api.maps.model.TextOptions -> com.amap.api.maps.model.TextOptions:
    com.amap.api.maps.model.TextOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    android.graphics.Typeface d -> d
    float e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    java.lang.Object j -> j
    int k -> k
    float l -> l
    boolean m -> m
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.TextOptions position(com.amap.api.maps.model.LatLng) -> position
    com.amap.api.maps.model.TextOptions text(java.lang.String) -> text
    com.amap.api.maps.model.TextOptions typeface(android.graphics.Typeface) -> typeface
    com.amap.api.maps.model.TextOptions visible(boolean) -> visible
    com.amap.api.maps.model.TextOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.TextOptions rotate(float) -> rotate
    com.amap.api.maps.model.TextOptions align(int,int) -> align
    com.amap.api.maps.model.TextOptions backgroundColor(int) -> backgroundColor
    com.amap.api.maps.model.TextOptions setObject(java.lang.Object) -> setObject
    com.amap.api.maps.model.TextOptions fontColor(int) -> fontColor
    com.amap.api.maps.model.TextOptions fontSize(int) -> fontSize
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    java.lang.String getText() -> getText
    android.graphics.Typeface getTypeface() -> getTypeface
    float getRotate() -> getRotate
    int getAlignX() -> getAlignX
    int getAlignY() -> getAlignY
    int getBackgroundColor() -> getBackgroundColor
    int getFontColor() -> getFontColor
    java.lang.Object getObject() -> getObject
    int getFontSize() -> getFontSize
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.TextOptionsCreator -> com.amap.api.maps.model.TextOptionsCreator:
    com.amap.api.maps.model.TextOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TextOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Tile -> com.amap.api.maps.model.Tile:
    com.amap.api.maps.model.d CREATOR -> CREATOR
    int a -> a
    int width -> width
    int height -> height
    byte[] data -> data
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.TileOverlay -> com.amap.api.maps.model.TileOverlay:
    com.amap.api.mapcore.ao a -> a
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.TileOverlayOptions -> com.amap.api.maps.model.TileOverlayOptions:
    com.amap.api.maps.model.TileOverlayOptionsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.TileProvider b -> b
    boolean c -> c
    float d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.TileOverlayOptions tileProvider(com.amap.api.maps.model.TileProvider) -> tileProvider
    com.amap.api.maps.model.TileOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.TileOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.TileOverlayOptions memCacheSize(int) -> memCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheSize(int) -> diskCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheDir(java.lang.String) -> diskCacheDir
    com.amap.api.maps.model.TileOverlayOptions memoryCacheEnabled(boolean) -> memoryCacheEnabled
    com.amap.api.maps.model.TileOverlayOptions diskCacheEnabled(boolean) -> diskCacheEnabled
    com.amap.api.maps.model.TileProvider getTileProvider() -> getTileProvider
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int getMemCacheSize() -> getMemCacheSize
    int getDiskCacheSize() -> getDiskCacheSize
    java.lang.String getDiskCacheDir() -> getDiskCacheDir
    boolean getMemoryCacheEnabled() -> getMemoryCacheEnabled
    boolean getDiskCacheEnabled() -> getDiskCacheEnabled
com.amap.api.maps.model.TileOverlayOptionsCreator -> com.amap.api.maps.model.TileOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TileOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.TileProjection -> com.amap.api.maps.model.TileProjection:
    com.amap.api.maps.model.TileProjection CREATOR -> CREATOR
    int offsetX -> offsetX
    int offsetY -> offsetY
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.TileProjectionCreator -> com.amap.api.maps.model.TileProjectionCreator:
    com.amap.api.maps.model.TileProjection createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TileProjection[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.TileProvider -> com.amap.api.maps.model.TileProvider:
    com.amap.api.maps.model.Tile NO_TILE -> NO_TILE
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.UrlTileProvider -> com.amap.api.maps.model.UrlTileProvider:
    int a -> a
    int b -> b
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    byte[] a(java.io.InputStream) -> a
    long a(java.io.InputStream,java.io.OutputStream) -> a
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.VisibleRegion -> com.amap.api.maps.model.VisibleRegion:
    com.amap.api.maps.model.VisibleRegionCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng nearLeft -> nearLeft
    com.amap.api.maps.model.LatLng nearRight -> nearRight
    com.amap.api.maps.model.LatLng farLeft -> farLeft
    com.amap.api.maps.model.LatLng farRight -> farRight
    com.amap.api.maps.model.LatLngBounds latLngBounds -> latLngBounds
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int a() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.VisibleRegionCreator -> com.amap.api.maps.model.VisibleRegionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.VisibleRegion[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.WeightedLatLng -> com.amap.api.maps.model.WeightedLatLng:
    double DEFAULT_INTENSITY -> DEFAULT_INTENSITY
    com.autonavi.amap.mapcore.DPoint a -> a
    double intensity -> intensity
    com.amap.api.maps.model.LatLng latLng -> latLng
    com.autonavi.amap.mapcore.DPoint getPoint() -> getPoint
com.amap.api.maps.model.a -> com.amap.api.maps.model.a:
com.amap.api.maps.model.b -> com.amap.api.maps.model.b:
com.amap.api.maps.model.c -> com.amap.api.maps.model.c:
    com.amap.api.mapcore.util.ay a -> a
    int b -> b
    java.util.List c -> c
    java.util.List d -> d
    void a(com.amap.api.maps.model.WeightedLatLng) -> a
    void a(double,double,com.amap.api.maps.model.WeightedLatLng) -> a
    void a() -> a
    java.util.Collection a(com.amap.api.mapcore.util.ay) -> a
    void a(com.amap.api.mapcore.util.ay,java.util.Collection) -> a
com.amap.api.maps.model.d -> com.amap.api.maps.model.d:
    com.amap.api.maps.model.Tile a(android.os.Parcel) -> a
    com.amap.api.maps.model.Tile[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.City -> com.amap.api.maps.offlinemap.City:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setCity(java.lang.String) -> setCity
    java.lang.String getCity() -> getCity
    void setCode(java.lang.String) -> setCode
    java.lang.String getCode() -> getCode
    java.lang.String getJianpin() -> getJianpin
    void setJianpin(java.lang.String) -> setJianpin
    java.lang.String getPinyin() -> getPinyin
    void setPinyin(java.lang.String) -> setPinyin
    java.lang.String getAdcode() -> getAdcode
    void setAdcode(java.lang.String) -> setAdcode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineMapCity -> com.amap.api.maps.offlinemap.OfflineMapCity:
    java.lang.String a -> a
    long b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    long getSize() -> getSize
    void setSize(long) -> setSize
    int getState() -> getState
    void setState(int) -> setState
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getcompleteCode() -> getcompleteCode
    void setCompleteCode(int) -> setCompleteCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineMapManager -> com.amap.api.maps.offlinemap.OfflineMapManager:
    android.content.Context c -> c
    com.amap.api.maps.AMap d -> d
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener e -> e
    android.os.Handler f -> f
    android.os.Handler g -> g
    com.amap.api.mapcore.util.l a -> a
    com.amap.api.mapcore.util.h b -> b
    void a(android.content.Context) -> a
    void downloadByCityCode(java.lang.String) -> downloadByCityCode
    void downloadByCityName(java.lang.String) -> downloadByCityName
    void downloadByProvinceName(java.lang.String) -> downloadByProvinceName
    void remove(java.lang.String) -> remove
    java.util.ArrayList getOfflineMapProvinceList() -> getOfflineMapProvinceList
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityCode(java.lang.String) -> getItemByCityCode
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityName(java.lang.String) -> getItemByCityName
    com.amap.api.maps.offlinemap.OfflineMapProvince getItemByProvinceName(java.lang.String) -> getItemByProvinceName
    java.util.ArrayList getOfflineMapCityList() -> getOfflineMapCityList
    java.util.ArrayList getDownloadingCityList() -> getDownloadingCityList
    java.util.ArrayList getDownloadingProvinceList() -> getDownloadingProvinceList
    java.util.ArrayList getDownloadOfflineMapCityList() -> getDownloadOfflineMapCityList
    java.util.ArrayList getDownloadOfflineMapProvinceList() -> getDownloadOfflineMapProvinceList
    void a(java.lang.String,java.lang.String) -> a
    void updateOfflineCityByCode(java.lang.String) -> updateOfflineCityByCode
    void updateOfflineCityByName(java.lang.String) -> updateOfflineCityByName
    void updateOfflineMapProvinceByName(java.lang.String) -> updateOfflineMapProvinceByName
    void a() -> a
    void restart() -> restart
    void stop() -> stop
    void pause() -> pause
    void destroy() -> destroy
    void b() -> b
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener a(com.amap.api.maps.offlinemap.OfflineMapManager) -> a
    android.os.Handler b(com.amap.api.maps.offlinemap.OfflineMapManager) -> b
    com.amap.api.maps.AMap c(com.amap.api.maps.offlinemap.OfflineMapManager) -> c
com.amap.api.maps.offlinemap.OfflineMapManager$1 -> com.amap.api.maps.offlinemap.OfflineMapManager$1:
    com.amap.api.maps.offlinemap.OfflineMapManager a -> a
    void a(com.amap.api.mapcore.util.g) -> a
    void b(com.amap.api.mapcore.util.g) -> b
    void c(com.amap.api.mapcore.util.g) -> c
com.amap.api.maps.offlinemap.OfflineMapManager$1$1 -> com.amap.api.maps.offlinemap.OfflineMapManager$1$1:
    com.amap.api.mapcore.util.g a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager$1 b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$1$2 -> com.amap.api.maps.offlinemap.OfflineMapManager$1$2:
    com.amap.api.mapcore.util.g a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager$1 b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$1$3 -> com.amap.api.maps.offlinemap.OfflineMapManager$1$3:
    com.amap.api.mapcore.util.g a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager$1 b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$2 -> com.amap.api.maps.offlinemap.OfflineMapManager$2:
    java.lang.String a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$3 -> com.amap.api.maps.offlinemap.OfflineMapManager$3:
    java.lang.String a -> a
    com.amap.api.maps.offlinemap.OfflineMapManager b -> b
    void run() -> run
com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener -> com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener:
    void onDownload(int,int,java.lang.String) -> onDownload
    void onCheckUpdate(boolean,java.lang.String) -> onCheckUpdate
    void onRemove(boolean,java.lang.String,java.lang.String) -> onRemove
com.amap.api.maps.offlinemap.OfflineMapProvince -> com.amap.api.maps.offlinemap.OfflineMapProvince:
    java.lang.String a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    int e -> e
    java.util.ArrayList f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    int getState() -> getState
    void setState(int) -> setState
    long getSize() -> getSize
    void setSize(long) -> setSize
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getcompleteCode() -> getcompleteCode
    void setCompleteCode(int) -> setCompleteCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.util.ArrayList getCityList() -> getCityList
    void setCityList(java.util.ArrayList) -> setCityList
com.amap.api.maps.offlinemap.OfflineMapStatus -> com.amap.api.maps.offlinemap.OfflineMapStatus:
    int CHECKUPDATES -> CHECKUPDATES
    int ERROR -> ERROR
    int STOP -> STOP
    int LOADING -> LOADING
    int UNZIP -> UNZIP
    int WAITING -> WAITING
    int PAUSE -> PAUSE
    int SUCCESS -> SUCCESS
    int NEW_VERSION -> NEW_VERSION
    int EXCEPTION_NETWORK_LOADING -> EXCEPTION_NETWORK_LOADING
    int EXCEPTION_AMAP -> EXCEPTION_AMAP
    int EXCEPTION_SDCARD -> EXCEPTION_SDCARD
    int START_DOWNLOAD_FAILD -> START_DOWNLOAD_FAILD
com.amap.api.maps.offlinemap.Province -> com.amap.api.maps.offlinemap.Province:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getProvinceName() -> getProvinceName
    java.lang.String getJianpin() -> getJianpin
    java.lang.String getPinyin() -> getPinyin
    void setProvinceName(java.lang.String) -> setProvinceName
    void setJianpin(java.lang.String) -> setJianpin
    void setPinyin(java.lang.String) -> setPinyin
    void setProvinceCode(java.lang.String) -> setProvinceCode
    java.lang.String getProvinceCode() -> getProvinceCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.a -> com.amap.api.maps.offlinemap.a:
    com.amap.api.maps.offlinemap.City a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.City[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.b -> com.amap.api.maps.offlinemap.b:
    com.amap.api.maps.offlinemap.OfflineMapCity a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.OfflineMapCity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.c -> com.amap.api.maps.offlinemap.c:
    com.amap.api.maps.offlinemap.OfflineMapProvince a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.OfflineMapProvince[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.d -> com.amap.api.maps.offlinemap.d:
    com.amap.api.maps.offlinemap.Province a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.Province[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.overlay.BusLineOverlay -> com.amap.api.maps.overlay.BusLineOverlay:
    com.amap.api.services.busline.BusLineItem a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    com.amap.api.maps.model.Polyline d -> d
    java.util.List e -> e
    com.amap.api.maps.model.BitmapDescriptor f -> f
    com.amap.api.maps.model.BitmapDescriptor g -> g
    com.amap.api.maps.model.BitmapDescriptor h -> h
    android.content.Context i -> i
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void a() -> a
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a(java.util.List) -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getBusStationIndex(com.amap.api.maps.model.Marker) -> getBusStationIndex
    com.amap.api.services.busline.BusStationItem getBusStationItem(int) -> getBusStationItem
    int getBusColor() -> getBusColor
    float getBuslineWidth() -> getBuslineWidth
    com.amap.api.maps.model.BitmapDescriptor a(java.lang.String) -> a
com.amap.api.maps.overlay.BusRouteOverlay -> com.amap.api.maps.overlay.BusRouteOverlay:
    com.amap.api.services.route.BusPath a -> a
    com.amap.api.maps.model.LatLng b -> b
    void addToMap() -> addToMap
    void a(com.amap.api.services.route.BusStep) -> a
    void a(com.amap.api.services.route.RouteBusLineItem) -> a
    void a(java.util.List) -> a
    void a(com.amap.api.maps.model.LatLng,java.lang.String,java.lang.String) -> a
    void b(com.amap.api.services.route.RouteBusLineItem) -> b
    void a(com.amap.api.services.route.BusStep,com.amap.api.services.route.BusStep) -> a
    void b(com.amap.api.services.route.BusStep,com.amap.api.services.route.BusStep) -> b
    void c(com.amap.api.services.route.BusStep,com.amap.api.services.route.BusStep) -> c
    void b(com.amap.api.services.route.BusStep) -> b
    com.amap.api.services.core.LatLonPoint c(com.amap.api.services.route.BusStep) -> c
    void a(com.amap.api.services.core.LatLonPoint,com.amap.api.services.core.LatLonPoint) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    void b(java.util.List) -> b
    java.lang.String c(java.util.List) -> c
    void drawLineArrow(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> drawLineArrow
    java.lang.String c(com.amap.api.services.route.RouteBusLineItem) -> c
    com.amap.api.services.core.LatLonPoint d(com.amap.api.services.route.BusStep) -> d
    com.amap.api.services.core.LatLonPoint e(com.amap.api.services.route.BusStep) -> e
    com.amap.api.services.core.LatLonPoint f(com.amap.api.services.route.BusStep) -> f
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    void zoomToSpan() -> zoomToSpan
    void removeFromMap() -> removeFromMap
com.amap.api.maps.overlay.DrivingRouteOverlay -> com.amap.api.maps.overlay.DrivingRouteOverlay:
    com.amap.api.services.route.DrivePath a -> a
    java.util.List b -> b
    java.util.List c -> c
    boolean d -> d
    android.content.Context e -> e
    com.amap.api.maps.model.PolylineOptions f -> f
    void addToMap() -> addToMap
    void a() -> a
    void b() -> b
    com.amap.api.services.core.LatLonPoint a(com.amap.api.services.route.DriveStep) -> a
    com.amap.api.services.core.LatLonPoint b(com.amap.api.services.route.DriveStep) -> b
    void a(com.amap.api.services.core.LatLonPoint,com.amap.api.maps.model.LatLng) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    void c(com.amap.api.services.route.DriveStep) -> c
    void c() -> c
    com.amap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    void setThroughPointIconVisibility(boolean) -> setThroughPointIconVisibility
    com.amap.api.maps.model.BitmapDescriptor d() -> d
    void removeFromMap() -> removeFromMap
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    void zoomToSpan() -> zoomToSpan
com.amap.api.maps.overlay.PoiOverlay -> com.amap.api.maps.overlay.PoiOverlay:
    java.util.List a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a() -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getBitmapDescriptor(int) -> getBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getPoiIndex(com.amap.api.maps.model.Marker) -> getPoiIndex
    com.amap.api.services.core.PoiItem getPoiItem(int) -> getPoiItem
com.amap.api.maps.overlay.WalkRouteOverlay -> com.amap.api.maps.overlay.WalkRouteOverlay:
    com.amap.api.services.route.WalkPath a -> a
    void addToMap() -> addToMap
    void a(com.amap.api.services.route.WalkStep,com.amap.api.services.route.WalkStep) -> a
    com.amap.api.services.core.LatLonPoint a(com.amap.api.services.route.WalkStep) -> a
    com.amap.api.services.core.LatLonPoint b(com.amap.api.services.route.WalkStep) -> b
    void a(com.amap.api.services.core.LatLonPoint,com.amap.api.services.core.LatLonPoint) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    void c(com.amap.api.services.route.WalkStep) -> c
    void a(com.amap.api.services.route.WalkStep,com.amap.api.maps.model.LatLng) -> a
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    void zoomToSpan() -> zoomToSpan
    void removeFromMap() -> removeFromMap
com.amap.api.maps.overlay.a -> com.amap.api.maps.overlay.a:
    int a -> a
    com.amap.api.maps.model.LatLng a(com.amap.api.services.core.LatLonPoint) -> a
    java.util.ArrayList a(java.util.List) -> a
com.amap.api.maps.overlay.b -> com.amap.api.maps.overlay.b:
    java.util.List stationMarkers -> stationMarkers
    java.util.List allPolyLines -> allPolyLines
    com.amap.api.maps.model.Marker startMarker -> startMarker
    com.amap.api.maps.model.Marker endMarker -> endMarker
    com.amap.api.maps.model.LatLng startPoint -> startPoint
    com.amap.api.maps.model.LatLng endPoint -> endPoint
    com.amap.api.maps.AMap mAMap -> mAMap
    android.content.Context a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    boolean nodeIconVisible -> nodeIconVisible
    void removeFromMap() -> removeFromMap
    void a() -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getWalkBitmapDescriptor() -> getWalkBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getDriveBitmapDescriptor() -> getDriveBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor a(android.graphics.Bitmap,java.lang.String) -> a
    void addStartAndEndMarker() -> addStartAndEndMarker
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    void setNodeIconVisibility(boolean) -> setNodeIconVisibility
    void addStationMarker(com.amap.api.maps.model.MarkerOptions) -> addStationMarker
    void addPolyLine(com.amap.api.maps.model.PolylineOptions) -> addPolyLine
    float getRouteWidth() -> getRouteWidth
    int getWalkColor() -> getWalkColor
    int getBusColor() -> getBusColor
    int getDriveColor() -> getDriveColor
com.android.common.content.SQLiteContentProvider -> com.android.common.content.SQLiteContentProvider:
    java.lang.ThreadLocal mApplyingBatch -> a
com.android.ex.editstyledtext.EditStyledText -> com.android.ex.editstyledtext.EditStyledText:
    java.lang.CharSequence STR_HORIZONTALLINE -> a
    java.lang.CharSequence STR_CLEARSTYLES -> b
    java.lang.CharSequence STR_PASTE -> c
    float mPaddingScale -> d
    java.util.ArrayList mESTNotifiers -> e
    android.graphics.drawable.Drawable mDefaultBackground -> f
    com.android.ex.editstyledtext.EditStyledText$EditorManager mManager -> g
    android.view.inputmethod.InputConnection mInputConnection -> h
    com.android.ex.editstyledtext.EditStyledText$StyledTextConverter mConverter -> i
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog mDialog -> j
    android.text.NoCopySpan$Concrete SELECTING -> k
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void drawableStateChanged() -> drawableStateChanged
    boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    void onCreateContextMenu(android.view.ContextMenu) -> onCreateContextMenu
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void init() -> o
    void setStyledTextHtmlConverter(com.android.ex.editstyledtext.EditStyledText$StyledTextHtmlConverter) -> setStyledTextHtmlConverter
    void sendOnTouchEvent(android.view.MotionEvent) -> a
    boolean isButtonsFocused() -> a
    void showPreview() -> p
    void cancelViewManagers() -> q
    void showInsertImageSelectAlertDialog() -> r
    void showMenuAlertDialog() -> s
    void sendHintMessage(int) -> b
    void notifyStateChanged(int,int) -> a
    void onStartEdit() -> b
    void onEndEdit() -> c
    void onStartCopy() -> d
    void onStartCut() -> e
    void onStartPaste() -> f
    void onStartSelect() -> g
    void onStartSelectAll() -> h
    void onFixSelectedItem() -> i
    void onInsertHorizontalLine() -> j
    void onClearStyles() -> k
    void onRefreshStyles() -> t
    void onRefreshZeoWidthChar() -> u
    void setItemSize(int) -> setItemSize
    void setItemColor(int) -> setItemColor
    void setAlignment(android.text.Layout$Alignment) -> setAlignment
    void setBackgroundColor(int) -> setBackgroundColor
    void setMarquee(int) -> setMarquee
    void setHtml(java.lang.String) -> setHtml
    void setBuilder(android.app.AlertDialog$Builder) -> setBuilder
    boolean isEditting() -> l
    boolean isStyledText() -> m
    boolean isSoftKeyBlocked() -> n
    int getEditMode() -> getEditMode
    int getSelectState() -> getSelectState
    java.lang.String getHtml() -> getHtml
    java.lang.String getPreviewHtml() -> getPreviewHtml
    int getBackgroundColor() -> getBackgroundColor
    com.android.ex.editstyledtext.EditStyledText$EditorManager getEditStyledTextManager() -> getEditStyledTextManager
    int getForegroundColor(int) -> a
    void finishComposingText() -> v
    float getPaddingScale() -> getPaddingScale
    int dipToPx(int) -> c
    int getMaxImageWidthDip() -> getMaxImageWidthDip
    int getMaxImageWidthPx() -> getMaxImageWidthPx
    void startSelecting(android.view.View,android.text.Spannable) -> c
    void stopSelecting(android.view.View,android.text.Spannable) -> d
    void access$300(com.android.ex.editstyledtext.EditStyledText,int,int) -> a
    int access$400(com.android.ex.editstyledtext.EditStyledText) -> a
    int access$500(com.android.ex.editstyledtext.EditStyledText) -> b
    android.graphics.drawable.Drawable access$600(com.android.ex.editstyledtext.EditStyledText) -> c
    void access$700(android.view.View,android.text.Spannable) -> a
    void access$800(android.view.View,android.text.Spannable) -> b
    void access$900(com.android.ex.editstyledtext.EditStyledText,int) -> a
    void access$1000(com.android.ex.editstyledtext.EditStyledText) -> d
    float access$1100(com.android.ex.editstyledtext.EditStyledText) -> e
    int access$1400(com.android.ex.editstyledtext.EditStyledText,int) -> b
    com.android.ex.editstyledtext.EditStyledText$EditorManager access$1700(com.android.ex.editstyledtext.EditStyledText) -> f
    void access$1900(com.android.ex.editstyledtext.EditStyledText) -> g
    void access$3500(com.android.ex.editstyledtext.EditStyledText) -> h
    void access$3800(com.android.ex.editstyledtext.EditStyledText) -> i
    void access$4100(com.android.ex.editstyledtext.EditStyledText) -> j
    void access$4400(com.android.ex.editstyledtext.EditStyledText) -> k
com.android.ex.editstyledtext.EditStyledText$1 -> com.android.ex.editstyledtext.a:
com.android.ex.editstyledtext.EditStyledText$ColorPaletteDrawable -> com.android.ex.editstyledtext.b:
    android.graphics.Rect mRect -> a
    void draw(android.graphics.Canvas) -> draw
com.android.ex.editstyledtext.EditStyledText$EditModeActions -> com.android.ex.editstyledtext.c:
    com.android.ex.editstyledtext.EditStyledText mEST -> b
    com.android.ex.editstyledtext.EditStyledText$EditorManager mManager -> c
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog mDialog -> d
    int mMode -> e
    java.util.HashMap mActionMap -> f
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$NothingAction mNothingAction -> g
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$CopyAction mCopyAction -> h
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$PasteAction mPasteAction -> i
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$SelectAction mSelectAction -> j
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$CutAction mCutAction -> k
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$SelectAllAction mSelectAllAction -> l
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$HorizontalLineAction mHorizontalLineAction -> m
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$StopSelectionAction mStopSelectionAction -> n
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$ClearStylesAction mClearStylesAction -> o
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$ImageAction mImageAction -> p
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$BackgroundColorAction mBackgroundColorAction -> q
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$PreviewAction mPreviewAction -> r
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$CancelAction mCancelEditAction -> s
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$TextViewAction mTextViewAction -> t
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$StartEditAction mStartEditAction -> u
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$EndEditAction mEndEditAction -> v
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$ResetAction mResetAction -> w
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$ShowMenuAction mShowMenuAction -> x
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$AlignAction mAlignAction -> y
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$TelopAction mTelopAction -> z
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$SwingAction mSwingAction -> A
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$MarqueeDialogAction mMarqueeDialogAction -> B
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$ColorAction mColorAction -> C
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$SizeAction mSizeAction -> D
    com.android.ex.editstyledtext.EditStyledText this$0 -> a
    void onAction(int,java.lang.Object[]) -> a
    void onAction(int) -> a
    void onSelectAction() -> a
    com.android.ex.editstyledtext.EditStyledText$EditModeActions$EditModeActionBase getAction(int) -> c
    boolean doNext() -> b
    boolean doNext(int) -> b
    com.android.ex.editstyledtext.EditStyledText access$1800(com.android.ex.editstyledtext.EditStyledText$EditModeActions) -> a
    com.android.ex.editstyledtext.EditStyledText$EditorManager access$2000(com.android.ex.editstyledtext.EditStyledText$EditModeActions) -> b
    int access$2200(com.android.ex.editstyledtext.EditStyledText$EditModeActions) -> c
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog access$3900(com.android.ex.editstyledtext.EditStyledText$EditModeActions) -> d
com.android.ex.editstyledtext.EditStyledText$EditModeActions$AlignAction -> com.android.ex.editstyledtext.d:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doSelectionIsFixed() -> a
com.android.ex.editstyledtext.EditStyledText$EditModeActions$BackgroundColorAction -> com.android.ex.editstyledtext.e:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$CancelAction -> com.android.ex.editstyledtext.f:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$ClearStylesAction -> com.android.ex.editstyledtext.g:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$ColorAction -> com.android.ex.editstyledtext.h:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doSelectionIsFixed() -> a
    boolean doSelectionIsFixedAndWaitingInput() -> c
com.android.ex.editstyledtext.EditStyledText$EditModeActions$CopyAction -> com.android.ex.editstyledtext.i:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doEndPosIsSelected() -> d
com.android.ex.editstyledtext.EditStyledText$EditModeActions$CutAction -> com.android.ex.editstyledtext.j:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doEndPosIsSelected() -> d
com.android.ex.editstyledtext.EditStyledText$EditModeActions$EditModeActionBase -> com.android.ex.editstyledtext.k:
    java.lang.Object[] mParams -> a
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> b
    boolean doNotSelected() -> b
    boolean doStartPosIsSelected() -> e
    boolean doEndPosIsSelected() -> d
    boolean doSelectionIsFixed() -> a
    boolean doSelectionIsFixedAndWaitingInput() -> c
    boolean fixSelection() -> f
    void addParams(java.lang.Object[]) -> a
    java.lang.Object getParam(int) -> a
com.android.ex.editstyledtext.EditStyledText$EditModeActions$EndEditAction -> com.android.ex.editstyledtext.l:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$HorizontalLineAction -> com.android.ex.editstyledtext.m:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$ImageAction -> com.android.ex.editstyledtext.n:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$MarqueeDialogAction -> com.android.ex.editstyledtext.o:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doSelectionIsFixed() -> a
com.android.ex.editstyledtext.EditStyledText$EditModeActions$NothingAction -> com.android.ex.editstyledtext.p:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
com.android.ex.editstyledtext.EditStyledText$EditModeActions$PasteAction -> com.android.ex.editstyledtext.q:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$PreviewAction -> com.android.ex.editstyledtext.r:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$ResetAction -> com.android.ex.editstyledtext.s:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$SelectAction -> com.android.ex.editstyledtext.t:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
    boolean doStartPosIsSelected() -> e
    boolean doSelectionIsFixed() -> a
com.android.ex.editstyledtext.EditStyledText$EditModeActions$SelectAllAction -> com.android.ex.editstyledtext.u:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$SetSpanActionBase -> com.android.ex.editstyledtext.v:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> c
    boolean doNotSelected() -> b
    boolean doStartPosIsSelected() -> e
    boolean doEndPosIsSelected() -> d
    boolean doSelectionIsFixed() -> a
com.android.ex.editstyledtext.EditStyledText$EditModeActions$ShowMenuAction -> com.android.ex.editstyledtext.w:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$SizeAction -> com.android.ex.editstyledtext.x:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doSelectionIsFixed() -> a
    boolean doSelectionIsFixedAndWaitingInput() -> c
com.android.ex.editstyledtext.EditStyledText$EditModeActions$StartEditAction -> com.android.ex.editstyledtext.y:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$StopSelectionAction -> com.android.ex.editstyledtext.z:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doNotSelected() -> b
com.android.ex.editstyledtext.EditStyledText$EditModeActions$SwingAction -> com.android.ex.editstyledtext.aa:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doSelectionIsFixed() -> a
com.android.ex.editstyledtext.EditStyledText$EditModeActions$TelopAction -> com.android.ex.editstyledtext.ab:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doSelectionIsFixed() -> a
com.android.ex.editstyledtext.EditStyledText$EditModeActions$TextViewAction -> com.android.ex.editstyledtext.ac:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> a
    boolean doEndPosIsSelected() -> d
com.android.ex.editstyledtext.EditStyledText$EditModeActions$TextViewActionBase -> com.android.ex.editstyledtext.ad:
    com.android.ex.editstyledtext.EditStyledText$EditModeActions this$1 -> c
    boolean doNotSelected() -> b
    boolean doEndPosIsSelected() -> d
com.android.ex.editstyledtext.EditStyledText$EditStyledTextNotifier -> com.android.ex.editstyledtext.ae:
    void sendHintMsg(int) -> a
    void onStateChanged(int,int) -> a
    boolean sendOnTouchEvent(android.view.MotionEvent) -> a
    boolean isButtonsFocused() -> a
    boolean showPreview() -> b
    void cancelViewManager() -> c
    boolean showInsertImageSelectAlertDialog() -> d
    boolean showMenuAlertDialog() -> e
com.android.ex.editstyledtext.EditStyledText$EditStyledTextSpans -> com.android.ex.editstyledtext.af:
com.android.ex.editstyledtext.EditStyledText$EditStyledTextSpans$HorizontalLineDrawable -> com.android.ex.editstyledtext.ag:
    android.text.Spannable mSpannable -> a
    int mWidth -> b
    boolean DBG_HL -> c
    void draw(android.graphics.Canvas) -> draw
    void renewBounds(int) -> a
    void renewColor(int) -> b
    void renewColor() -> a
    com.android.ex.editstyledtext.EditStyledText$EditStyledTextSpans$HorizontalLineSpan getParentSpan() -> b
com.android.ex.editstyledtext.EditStyledText$EditStyledTextSpans$HorizontalLineSpan -> com.android.ex.editstyledtext.ah:
    com.android.ex.editstyledtext.EditStyledText$EditStyledTextSpans$HorizontalLineDrawable mDrawable -> a
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    void resetWidth(int) -> a
com.android.ex.editstyledtext.EditStyledText$EditStyledTextSpans$MarqueeSpan -> com.android.ex.editstyledtext.ai:
    int mType -> a
    int mMarqueeColor -> b
    void resetColor(int) -> a
    int getMarqueeColor(int,int) -> a
    boolean checkType(int) -> b
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.android.ex.editstyledtext.EditStyledText$EditStyledTextSpans$RescalableImageSpan -> com.android.ex.editstyledtext.aj:
    android.net.Uri mContentUri -> a
    android.graphics.drawable.Drawable mDrawable -> d
    android.content.Context mContext -> e
    int mIntrinsicWidth -> b
    int mIntrinsicHeight -> c
    int MAXWIDTH -> f
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
    android.net.Uri getContentUri() -> a
    void rescaleBigImage(android.graphics.drawable.Drawable) -> a
com.android.ex.editstyledtext.EditStyledText$EditorManager -> com.android.ex.editstyledtext.ak:
    boolean mEditFlag -> b
    boolean mSoftKeyBlockFlag -> c
    boolean mKeepNonLineSpan -> d
    boolean mWaitInputFlag -> e
    boolean mTextIsFinishedFlag -> f
    int mMode -> g
    int mState -> h
    int mCurStart -> i
    int mCurEnd -> j
    int mColorWaitInput -> k
    int mSizeWaitInput -> l
    int mBackgroundColor -> m
    android.text.style.BackgroundColorSpan mComposingTextMask -> n
    com.android.ex.editstyledtext.EditStyledText mEST -> o
    com.android.ex.editstyledtext.EditStyledText$EditModeActions mActions -> p
    com.android.ex.editstyledtext.EditStyledText$SoftKeyReceiver mSkr -> q
    android.text.SpannableStringBuilder mCopyBuffer -> r
    com.android.ex.editstyledtext.EditStyledText this$0 -> a
    void onAction(int) -> a
    void onAction(int,boolean) -> a
    void startEdit() -> y
    void onStartSelect(boolean) -> a
    void onCursorMoved() -> a
    void onStartSelectAll(boolean) -> b
    void onFixSelectedItem() -> b
    void insertImageFromUri(android.net.Uri) -> a
    void insertImageFromResId(int) -> e
    void insertHorizontalLine() -> z
    void clearStyles(java.lang.CharSequence) -> a
    void onClearStyles() -> c
    void clearStyles() -> A
    void onRefreshZeoWidthChar() -> d
    void onRefreshStyles() -> e
    void setBackgroundColor(int) -> b
    void setItemSize(int,boolean) -> b
    void setItemColor(int,boolean) -> c
    void setAlignment(android.text.Layout$Alignment) -> a
    void setTelop() -> f
    void setSwing() -> g
    void setMarquee(int) -> c
    void setTextComposingMask(int,int) -> a
    void setEditMode(int) -> f
    void setSelectState(int) -> g
    void unsetTextComposingMask() -> h
    boolean isEditting() -> i
    boolean isStyledText() -> j
    boolean isSoftKeyBlocked() -> k
    boolean isWaitInput() -> l
    int getBackgroundColor() -> m
    int getEditMode() -> n
    int getSelectState() -> o
    int getSelectionStart() -> p
    int getSelectionEnd() -> q
    int getSizeWaitInput() -> r
    int getColorWaitInput() -> s
    void setInternalSelection(int,int) -> c
    void updateSpanPreviousFromCursor(android.text.Editable,int,int,int) -> a
    void updateSpanNextToCursor(android.text.Editable,int,int,int) -> b
    boolean canPaste() -> t
    void endEdit() -> B
    void fixSelectionAndDoNextAction() -> C
    android.text.SpannableStringBuilder removeImageChar(android.text.SpannableStringBuilder) -> a
    void copyToClipBoard() -> D
    void cutToClipBoard() -> E
    boolean isClipBoardChanged(java.lang.CharSequence) -> b
    void pasteFromClipboard() -> F
    void handleSelectAll() -> G
    void selectAll() -> H
    void resetEdit() -> I
    void setSelection() -> J
    void unsetSelect() -> K
    void setSelectStartPos() -> L
    void setSelectEndPos() -> M
    void setEndPos(int) -> d
    boolean isWaitingNextAction() -> N
    void waitSelection() -> O
    void resumeSelection() -> P
    boolean isTextSelected() -> Q
    void setStyledTextSpan(java.lang.Object,int,int) -> a
    void setLineStyledTextSpan(java.lang.Object) -> a
    void changeSizeSelectedText(int) -> h
    void changeColorSelectedText(int) -> i
    void changeAlign(android.text.Layout$Alignment) -> b
    void addTelop() -> R
    void addSwing() -> S
    void addMarquee(int) -> j
    void insertImageSpan(android.text.style.DynamicDrawableSpan,int) -> a
    int findLineStart(android.text.Editable,int) -> a
    int findLineEnd(android.text.Editable,int) -> b
    void dumpSpannableString(java.lang.CharSequence) -> c
    void showSoftKey() -> u
    void showSoftKey(int,int) -> b
    void hideSoftKey() -> v
    void blockSoftKey() -> w
    void unblockSoftKey() -> x
    boolean access$200(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> a
    boolean access$202(com.android.ex.editstyledtext.EditStyledText$EditorManager,boolean) -> a
    void access$2100(com.android.ex.editstyledtext.EditStyledText$EditorManager,int) -> a
    void access$2300(com.android.ex.editstyledtext.EditStyledText$EditorManager,int) -> b
    void access$2400(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> b
    void access$2500(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> c
    void access$2600(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> d
    boolean access$2700(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> e
    void access$2800(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> f
    void access$2900(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> g
    void access$3000(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> h
    void access$3100(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> i
    void access$3200(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> j
    void access$3300(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> k
    void access$3400(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> l
    void access$3600(com.android.ex.editstyledtext.EditStyledText$EditorManager,android.net.Uri) -> a
    void access$3700(com.android.ex.editstyledtext.EditStyledText$EditorManager,int) -> c
    void access$4200(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> m
    void access$4300(com.android.ex.editstyledtext.EditStyledText$EditorManager) -> n
    void access$4500(com.android.ex.editstyledtext.EditStyledText$EditorManager,int,int) -> a
com.android.ex.editstyledtext.EditStyledText$MenuHandler -> com.android.ex.editstyledtext.al:
    com.android.ex.editstyledtext.EditStyledText this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.android.ex.editstyledtext.EditStyledText$SavedStyledTextState -> com.android.ex.editstyledtext.EditStyledText$SavedStyledTextState:
    int mBackgroundColor -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.android.ex.editstyledtext.EditStyledText$SoftKeyReceiver -> com.android.ex.editstyledtext.EditStyledText$SoftKeyReceiver:
    int mNewStart -> a
    int mNewEnd -> b
    com.android.ex.editstyledtext.EditStyledText mEST -> c
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
com.android.ex.editstyledtext.EditStyledText$StyledTextArrowKeyMethod -> com.android.ex.editstyledtext.am:
    com.android.ex.editstyledtext.EditStyledText$EditorManager mManager -> a
    java.lang.String LOG_TAG -> b
    boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent) -> onKeyDown
    int getEndPos(android.widget.TextView) -> a
    boolean up(android.widget.TextView,android.text.Spannable) -> up
    boolean down(android.widget.TextView,android.text.Spannable) -> down
    boolean left(android.widget.TextView,android.text.Spannable) -> left
    boolean right(android.widget.TextView,android.text.Spannable) -> right
    boolean executeDown(android.widget.TextView,android.text.Spannable,int) -> a
com.android.ex.editstyledtext.EditStyledText$StyledTextConverter -> com.android.ex.editstyledtext.an:
    com.android.ex.editstyledtext.EditStyledText mEST -> b
    com.android.ex.editstyledtext.EditStyledText$StyledTextHtmlConverter mHtml -> c
    com.android.ex.editstyledtext.EditStyledText this$0 -> a
    void setStyledTextHtmlConverter(com.android.ex.editstyledtext.EditStyledText$StyledTextHtmlConverter) -> a
    java.lang.String getHtml(boolean) -> a
    java.lang.String getPreviewHtml() -> a
    void SetHtml(java.lang.String) -> a
    com.android.ex.editstyledtext.EditStyledText access$1200(com.android.ex.editstyledtext.EditStyledText$StyledTextConverter) -> a
com.android.ex.editstyledtext.EditStyledText$StyledTextConverter$1 -> com.android.ex.editstyledtext.ao:
    com.android.ex.editstyledtext.EditStyledText$StyledTextConverter this$1 -> a
    android.graphics.drawable.Drawable getDrawable(java.lang.String) -> getDrawable
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog -> com.android.ex.editstyledtext.ap:
    android.app.AlertDialog$Builder mBuilder -> a
    android.app.AlertDialog mAlertDialog -> b
    java.lang.CharSequence mColorTitle -> c
    java.lang.CharSequence mSizeTitle -> d
    java.lang.CharSequence mAlignTitle -> e
    java.lang.CharSequence mMarqueeTitle -> f
    java.lang.CharSequence[] mColorNames -> g
    java.lang.CharSequence[] mColorInts -> h
    java.lang.CharSequence[] mSizeNames -> i
    java.lang.CharSequence[] mSizeDisplayInts -> j
    java.lang.CharSequence[] mSizeSendInts -> k
    java.lang.CharSequence[] mAlignNames -> l
    java.lang.CharSequence[] mMarqueeNames -> m
    java.lang.CharSequence mColorDefaultMessage -> n
    com.android.ex.editstyledtext.EditStyledText mEST -> o
    void setBuilder(android.app.AlertDialog$Builder) -> a
    boolean checkColorAlertParams() -> a
    boolean checkSizeAlertParams() -> b
    boolean checkAlignAlertParams() -> c
    boolean checkMarqueeAlertParams() -> d
    void buildDialogue(java.lang.CharSequence,java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> a
    void buildAndShowColorDialogue(int,java.lang.CharSequence,int[]) -> a
    void onShowForegroundColorAlertDialog() -> e
    void onShowBackgroundColorAlertDialog() -> f
    void onShowSizeAlertDialog() -> g
    void onShowAlignAlertDialog() -> h
    void onShowMarqueeAlertDialog() -> i
    com.android.ex.editstyledtext.EditStyledText access$1300(com.android.ex.editstyledtext.EditStyledText$StyledTextDialog) -> a
    android.app.AlertDialog access$1500(com.android.ex.editstyledtext.EditStyledText$StyledTextDialog) -> b
    android.app.AlertDialog access$1502(com.android.ex.editstyledtext.EditStyledText$StyledTextDialog,android.app.AlertDialog) -> a
    java.lang.CharSequence[] access$1600(com.android.ex.editstyledtext.EditStyledText$StyledTextDialog) -> c
    void access$4000(com.android.ex.editstyledtext.EditStyledText$StyledTextDialog) -> d
    void access$4600(com.android.ex.editstyledtext.EditStyledText$StyledTextDialog) -> e
    void access$4700(com.android.ex.editstyledtext.EditStyledText$StyledTextDialog) -> f
    void access$4800(com.android.ex.editstyledtext.EditStyledText$StyledTextDialog) -> g
    void access$4900(com.android.ex.editstyledtext.EditStyledText$StyledTextDialog) -> h
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$1 -> com.android.ex.editstyledtext.aq:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$10 -> com.android.ex.editstyledtext.ar:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$11 -> com.android.ex.editstyledtext.as:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$2 -> com.android.ex.editstyledtext.at:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$3 -> com.android.ex.editstyledtext.au:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$4 -> com.android.ex.editstyledtext.av:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$5 -> com.android.ex.editstyledtext.aw:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$6 -> com.android.ex.editstyledtext.ax:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$7 -> com.android.ex.editstyledtext.ay:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$8 -> com.android.ex.editstyledtext.az:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.android.ex.editstyledtext.EditStyledText$StyledTextDialog$9 -> com.android.ex.editstyledtext.ba:
    com.android.ex.editstyledtext.EditStyledText$StyledTextDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.ex.editstyledtext.EditStyledText$StyledTextHtmlConverter -> com.android.ex.editstyledtext.bb:
    java.lang.String toHtml(android.text.Spanned,boolean) -> a
    java.lang.String toHtml(android.text.Spanned,boolean,int,float) -> a
    android.text.Spanned fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> a
com.android.ex.editstyledtext.EditStyledText$StyledTextHtmlStandard -> com.android.ex.editstyledtext.bc:
    com.android.ex.editstyledtext.EditStyledText this$0 -> a
    java.lang.String toHtml(android.text.Spanned,boolean) -> a
    java.lang.String toHtml(android.text.Spanned,boolean,int,float) -> a
    android.text.Spanned fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> a
com.android.ex.editstyledtext.EditStyledText$StyledTextInputConnection -> com.android.ex.editstyledtext.bd:
    com.android.ex.editstyledtext.EditStyledText mEST -> a
    boolean commitText(java.lang.CharSequence,int) -> commitText
    boolean finishComposingText() -> finishComposingText
com.android.internal.telephony.ITelephony -> a.a:
    boolean endCall() -> a
    void answerRingingCall() -> b
com.android.vcard.JapaneseUtils -> com.android.vcard.JapaneseUtils:
    java.util.Map sHalfWidthMap -> sHalfWidthMap
    java.lang.String tryGetHalfWidthText(char) -> tryGetHalfWidthText
com.android.vcard.VCardBuilder -> com.android.vcard.VCardBuilder:
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.Set sAllowedAndroidPropertySet -> sAllowedAndroidPropertySet
    int DEFAULT_PHONE_TYPE -> DEFAULT_PHONE_TYPE
    int DEFAULT_POSTAL_TYPE -> DEFAULT_POSTAL_TYPE
    int DEFAULT_EMAIL_TYPE -> DEFAULT_EMAIL_TYPE
    java.lang.String VCARD_DATA_VCARD -> VCARD_DATA_VCARD
    java.lang.String VCARD_DATA_PUBLIC -> VCARD_DATA_PUBLIC
    java.lang.String VCARD_PARAM_SEPARATOR -> VCARD_PARAM_SEPARATOR
    java.lang.String VCARD_END_OF_LINE -> VCARD_END_OF_LINE
    java.lang.String VCARD_DATA_SEPARATOR -> VCARD_DATA_SEPARATOR
    java.lang.String VCARD_ITEM_SEPARATOR -> VCARD_ITEM_SEPARATOR
    java.lang.String VCARD_WS -> VCARD_WS
    java.lang.String VCARD_PARAM_EQUAL -> VCARD_PARAM_EQUAL
    java.lang.String VCARD_PARAM_ENCODING_QP -> VCARD_PARAM_ENCODING_QP
    java.lang.String VCARD_PARAM_ENCODING_BASE64_V21 -> VCARD_PARAM_ENCODING_BASE64_V21
    java.lang.String VCARD_PARAM_ENCODING_BASE64_AS_B -> VCARD_PARAM_ENCODING_BASE64_AS_B
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    int mVCardType -> mVCardType
    boolean mIsV30OrV40 -> mIsV30OrV40
    boolean mIsJapaneseMobilePhone -> mIsJapaneseMobilePhone
    boolean mOnlyOneNoteFieldIsAvailable -> mOnlyOneNoteFieldIsAvailable
    boolean mIsDoCoMo -> mIsDoCoMo
    boolean mShouldUseQuotedPrintable -> mShouldUseQuotedPrintable
    boolean mUsesAndroidProperty -> mUsesAndroidProperty
    boolean mUsesDefactProperty -> mUsesDefactProperty
    boolean mAppendTypeParamName -> mAppendTypeParamName
    boolean mRefrainsQPToNameProperties -> mRefrainsQPToNameProperties
    boolean mNeedsToConvertPhoneticString -> mNeedsToConvertPhoneticString
    boolean mShouldAppendCharsetParam -> mShouldAppendCharsetParam
    java.lang.String mCharset -> mCharset
    java.lang.String mVCardCharsetParameter -> mVCardCharsetParameter
    java.lang.StringBuilder mBuilder -> mBuilder
    boolean mEndAppended -> mEndAppended
    java.util.Map sPostalTypePriorityMap -> sPostalTypePriorityMap
    void clear() -> clear
    boolean containsNonEmptyName(android.content.ContentValues) -> containsNonEmptyName
    android.content.ContentValues getPrimaryContentValueWithStructuredName(java.util.List) -> getPrimaryContentValueWithStructuredName
    com.android.vcard.VCardBuilder appendNamePropertiesV40(java.util.List) -> appendNamePropertiesV40
    com.android.vcard.VCardBuilder appendNameProperties(java.util.List) -> appendNameProperties
    void appendPhoneticNameFields(android.content.ContentValues) -> appendPhoneticNameFields
    com.android.vcard.VCardBuilder appendNickNames(java.util.List) -> appendNickNames
    com.android.vcard.VCardBuilder appendPhones(java.util.List,com.android.vcard.VCardPhoneNumberTranslationCallback) -> appendPhones
    java.util.List splitPhoneNumbers(java.lang.String) -> splitPhoneNumbers
    com.android.vcard.VCardBuilder appendEmails(java.util.List) -> appendEmails
    com.android.vcard.VCardBuilder appendPostals(java.util.List) -> appendPostals
    void appendPostalsForDoCoMo(java.util.List) -> appendPostalsForDoCoMo
    void appendPostalsForGeneric(java.util.List) -> appendPostalsForGeneric
    com.android.vcard.VCardBuilder$PostalStruct tryConstructPostalStruct(android.content.ContentValues) -> tryConstructPostalStruct
    com.android.vcard.VCardBuilder appendIms(java.util.List) -> appendIms
    com.android.vcard.VCardBuilder appendWebsites(java.util.List) -> appendWebsites
    com.android.vcard.VCardBuilder appendOrganizations(java.util.List) -> appendOrganizations
    com.android.vcard.VCardBuilder appendPhotos(java.util.List) -> appendPhotos
    com.android.vcard.VCardBuilder appendNotes(java.util.List) -> appendNotes
    com.android.vcard.VCardBuilder appendEvents(java.util.List) -> appendEvents
    com.android.vcard.VCardBuilder appendRelation(java.util.List) -> appendRelation
    void appendPostalLine(int,java.lang.String,android.content.ContentValues,boolean,boolean) -> appendPostalLine
    void appendEmailLine(int,java.lang.String,java.lang.String,boolean) -> appendEmailLine
    void appendTelLine(java.lang.Integer,java.lang.String,java.lang.String,boolean) -> appendTelLine
    void appendUncommonPhoneType(java.lang.StringBuilder,java.lang.Integer) -> appendUncommonPhoneType
    void appendPhotoLine(java.lang.String,java.lang.String) -> appendPhotoLine
    com.android.vcard.VCardBuilder appendSipAddresses(java.util.List) -> appendSipAddresses
    void appendAndroidSpecificProperty(java.lang.String,android.content.ContentValues) -> appendAndroidSpecificProperty
    void appendLineWithCharsetAndQPDetection(java.lang.String,java.lang.String) -> appendLineWithCharsetAndQPDetection
    void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List) -> appendLineWithCharsetAndQPDetection
    void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List,java.lang.String) -> appendLineWithCharsetAndQPDetection
    void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List,java.util.List) -> appendLineWithCharsetAndQPDetection
    void appendLine(java.lang.String,java.lang.String) -> appendLine
    void appendLine(java.lang.String,java.util.List) -> appendLine
    void appendLine(java.lang.String,java.lang.String,boolean,boolean) -> appendLine
    void appendLine(java.lang.String,java.util.List,java.lang.String) -> appendLine
    void appendLine(java.lang.String,java.util.List,java.lang.String,boolean,boolean) -> appendLine
    void appendLine(java.lang.String,java.util.List,boolean,boolean) -> appendLine
    void appendLine(java.lang.String,java.util.List,java.util.List,boolean,boolean) -> appendLine
    void appendTypeParameters(java.util.List) -> appendTypeParameters
    void appendTypeParameter(java.lang.String) -> appendTypeParameter
    void appendTypeParameter(java.lang.StringBuilder,java.lang.String) -> appendTypeParameter
    boolean shouldAppendCharsetParam(java.lang.String[]) -> shouldAppendCharsetParam
    java.lang.String encodeQuotedPrintable(java.lang.String) -> encodeQuotedPrintable
    java.lang.String escapeCharacters(java.lang.String) -> escapeCharacters
    java.lang.String toString() -> toString
com.android.vcard.VCardBuilder$PostalStruct -> com.android.vcard.VCardBuilder$PostalStruct:
    boolean reallyUseQuotedPrintable -> reallyUseQuotedPrintable
    boolean appendCharset -> appendCharset
    java.lang.String addressData -> addressData
com.android.vcard.VCardComposer -> com.android.vcard.VCardComposer:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean DEBUG -> DEBUG
    java.lang.String FAILURE_REASON_FAILED_TO_GET_DATABASE_INFO -> FAILURE_REASON_FAILED_TO_GET_DATABASE_INFO
    java.lang.String FAILURE_REASON_NO_ENTRY -> FAILURE_REASON_NO_ENTRY
    java.lang.String FAILURE_REASON_NOT_INITIALIZED -> FAILURE_REASON_NOT_INITIALIZED
    java.lang.String FAILURE_REASON_UNSUPPORTED_URI -> FAILURE_REASON_UNSUPPORTED_URI
    java.lang.String NO_ERROR -> NO_ERROR
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    java.lang.String UTF_8 -> UTF_8
    java.util.Map sImMap -> sImMap
    int mVCardType -> mVCardType
    android.content.ContentResolver mContentResolver -> mContentResolver
    boolean mIsDoCoMo -> mIsDoCoMo
    boolean mFirstVCardEmittedInDoCoMoCase -> mFirstVCardEmittedInDoCoMoCase
    android.database.Cursor mCursor -> mCursor
    boolean mCursorSuppliedFromOutside -> mCursorSuppliedFromOutside
    int mIdColumn -> mIdColumn
    android.net.Uri mContentUriForRawContactsEntity -> mContentUriForRawContactsEntity
    java.lang.String mCharset -> mCharset
    boolean mInitDone -> mInitDone
    java.lang.String mErrorReason -> mErrorReason
    boolean mTerminateCalled -> mTerminateCalled
    java.lang.String[] sContactsProjection -> sContactsProjection
    com.android.vcard.VCardPhoneNumberTranslationCallback mPhoneTranslationCallback -> mPhoneTranslationCallback
    boolean init() -> init
    boolean initWithRawContactsEntityUri(android.net.Uri) -> initWithRawContactsEntityUri
    boolean init(java.lang.String,java.lang.String[]) -> init
    boolean init(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String) -> init
    boolean init(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String,android.net.Uri) -> init
    boolean init(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.net.Uri) -> init
    boolean init(android.database.Cursor) -> init
    boolean initInterFirstPart(android.net.Uri) -> initInterFirstPart
    boolean initInterCursorCreationPart(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> initInterCursorCreationPart
    boolean initInterMainPart() -> initInterMainPart
    boolean initInterLastPart() -> initInterLastPart
    java.lang.String createOneEntry() -> createOneEntry
    java.lang.String createOneEntry(java.lang.reflect.Method) -> createOneEntry
    java.lang.String createOneEntryInternal(java.lang.String,java.lang.reflect.Method) -> createOneEntryInternal
    void setPhoneNumberTranslationCallback(com.android.vcard.VCardPhoneNumberTranslationCallback) -> setPhoneNumberTranslationCallback
    java.lang.String buildVCard(java.util.Map) -> buildVCard
    void terminate() -> terminate
    void closeCursorIfAppropriate() -> closeCursorIfAppropriate
    void finalize() -> finalize
    int getCount() -> getCount
    boolean isAfterLast() -> isAfterLast
    java.lang.String getErrorReason() -> getErrorReason
com.android.vcard.VCardConfig -> com.android.vcard.VCardConfig:
    java.lang.String LOG_TAG -> LOG_TAG
    int LOG_LEVEL_NONE -> LOG_LEVEL_NONE
    int LOG_LEVEL_PERFORMANCE_MEASUREMENT -> LOG_LEVEL_PERFORMANCE_MEASUREMENT
    int LOG_LEVEL_SHOW_WARNING -> LOG_LEVEL_SHOW_WARNING
    int LOG_LEVEL_VERBOSE -> LOG_LEVEL_VERBOSE
    int LOG_LEVEL -> LOG_LEVEL
    java.lang.String DEFAULT_INTERMEDIATE_CHARSET -> DEFAULT_INTERMEDIATE_CHARSET
    java.lang.String DEFAULT_IMPORT_CHARSET -> DEFAULT_IMPORT_CHARSET
    java.lang.String DEFAULT_EXPORT_CHARSET -> DEFAULT_EXPORT_CHARSET
    int VERSION_21 -> VERSION_21
    int VERSION_30 -> VERSION_30
    int VERSION_40 -> VERSION_40
    int VERSION_MASK -> VERSION_MASK
    int NAME_ORDER_DEFAULT -> NAME_ORDER_DEFAULT
    int NAME_ORDER_EUROPE -> NAME_ORDER_EUROPE
    int NAME_ORDER_JAPANESE -> NAME_ORDER_JAPANESE
    int NAME_ORDER_MASK -> NAME_ORDER_MASK
    int FLAG_USE_ANDROID_PROPERTY -> FLAG_USE_ANDROID_PROPERTY
    int FLAG_USE_DEFACT_PROPERTY -> FLAG_USE_DEFACT_PROPERTY
    int FLAG_DOCOMO -> FLAG_DOCOMO
    int FLAG_REFRAIN_QP_TO_NAME_PROPERTIES -> FLAG_REFRAIN_QP_TO_NAME_PROPERTIES
    int FLAG_CONVERT_PHONETIC_NAME_STRINGS -> FLAG_CONVERT_PHONETIC_NAME_STRINGS
    int FLAG_APPEND_TYPE_PARAM -> FLAG_APPEND_TYPE_PARAM
    int FLAG_REFRAIN_PHONE_NUMBER_FORMATTING -> FLAG_REFRAIN_PHONE_NUMBER_FORMATTING
    int FLAG_REFRAIN_IMAGE_EXPORT -> FLAG_REFRAIN_IMAGE_EXPORT
    int VCARD_TYPE_UNKNOWN -> VCARD_TYPE_UNKNOWN
    int VCARD_TYPE_V21_GENERIC -> VCARD_TYPE_V21_GENERIC
    java.lang.String VCARD_TYPE_V21_GENERIC_STR -> VCARD_TYPE_V21_GENERIC_STR
    int VCARD_TYPE_V30_GENERIC -> VCARD_TYPE_V30_GENERIC
    java.lang.String VCARD_TYPE_V30_GENERIC_STR -> VCARD_TYPE_V30_GENERIC_STR
    int VCARD_TYPE_V40_GENERIC -> VCARD_TYPE_V40_GENERIC
    java.lang.String VCARD_TYPE_V40_GENERIC_STR -> VCARD_TYPE_V40_GENERIC_STR
    int VCARD_TYPE_V21_EUROPE -> VCARD_TYPE_V21_EUROPE
    java.lang.String VCARD_TYPE_V21_EUROPE_STR -> VCARD_TYPE_V21_EUROPE_STR
    int VCARD_TYPE_V30_EUROPE -> VCARD_TYPE_V30_EUROPE
    java.lang.String VCARD_TYPE_V30_EUROPE_STR -> VCARD_TYPE_V30_EUROPE_STR
    int VCARD_TYPE_V21_JAPANESE -> VCARD_TYPE_V21_JAPANESE
    java.lang.String VCARD_TYPE_V21_JAPANESE_STR -> VCARD_TYPE_V21_JAPANESE_STR
    int VCARD_TYPE_V30_JAPANESE -> VCARD_TYPE_V30_JAPANESE
    java.lang.String VCARD_TYPE_V30_JAPANESE_STR -> VCARD_TYPE_V30_JAPANESE_STR
    int VCARD_TYPE_V21_JAPANESE_MOBILE -> VCARD_TYPE_V21_JAPANESE_MOBILE
    java.lang.String VCARD_TYPE_V21_JAPANESE_MOBILE_STR -> VCARD_TYPE_V21_JAPANESE_MOBILE_STR
    int VCARD_TYPE_DOCOMO -> VCARD_TYPE_DOCOMO
    java.lang.String VCARD_TYPE_DOCOMO_STR -> VCARD_TYPE_DOCOMO_STR
    int VCARD_TYPE_DEFAULT -> VCARD_TYPE_DEFAULT
    java.util.Map sVCardTypeMap -> sVCardTypeMap
    java.util.Set sJapaneseMobileTypeSet -> sJapaneseMobileTypeSet
    int getVCardTypeFromString(java.lang.String) -> getVCardTypeFromString
    boolean isVersion21(int) -> isVersion21
    boolean isVersion30(int) -> isVersion30
    boolean isVersion40(int) -> isVersion40
    boolean shouldUseQuotedPrintable(int) -> shouldUseQuotedPrintable
    int getNameOrderType(int) -> getNameOrderType
    boolean usesAndroidSpecificProperty(int) -> usesAndroidSpecificProperty
    boolean usesDefactProperty(int) -> usesDefactProperty
    boolean showPerformanceLog() -> showPerformanceLog
    boolean shouldRefrainQPToNameProperties(int) -> shouldRefrainQPToNameProperties
    boolean appendTypeParamName(int) -> appendTypeParamName
    boolean isJapaneseDevice(int) -> isJapaneseDevice
    boolean refrainPhoneNumberFormatting(int) -> refrainPhoneNumberFormatting
    boolean needsToConvertPhoneticString(int) -> needsToConvertPhoneticString
    boolean onlyOneNoteFieldIsAvailable(int) -> onlyOneNoteFieldIsAvailable
    boolean isDoCoMo(int) -> isDoCoMo
com.android.vcard.VCardConstants -> com.android.vcard.VCardConstants:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String VERSION_V21 -> VERSION_V21
    java.lang.String VERSION_V30 -> VERSION_V30
    java.lang.String VERSION_V40 -> VERSION_V40
    java.lang.String PROPERTY_BEGIN -> PROPERTY_BEGIN
    java.lang.String PROPERTY_VERSION -> PROPERTY_VERSION
    java.lang.String PROPERTY_N -> PROPERTY_N
    java.lang.String PROPERTY_FN -> PROPERTY_FN
    java.lang.String PROPERTY_ADR -> PROPERTY_ADR
    java.lang.String PROPERTY_EMAIL -> PROPERTY_EMAIL
    java.lang.String PROPERTY_NOTE -> PROPERTY_NOTE
    java.lang.String PROPERTY_ORG -> PROPERTY_ORG
    java.lang.String PROPERTY_SOUND -> PROPERTY_SOUND
    java.lang.String PROPERTY_TEL -> PROPERTY_TEL
    java.lang.String PROPERTY_TITLE -> PROPERTY_TITLE
    java.lang.String PROPERTY_ROLE -> PROPERTY_ROLE
    java.lang.String PROPERTY_PHOTO -> PROPERTY_PHOTO
    java.lang.String PROPERTY_LOGO -> PROPERTY_LOGO
    java.lang.String PROPERTY_URL -> PROPERTY_URL
    java.lang.String PROPERTY_BDAY -> PROPERTY_BDAY
    java.lang.String PROPERTY_ANNIVERSARY -> PROPERTY_ANNIVERSARY
    java.lang.String PROPERTY_NAME -> PROPERTY_NAME
    java.lang.String PROPERTY_NICKNAME -> PROPERTY_NICKNAME
    java.lang.String PROPERTY_SORT_STRING -> PROPERTY_SORT_STRING
    java.lang.String PROPERTY_IMPP -> PROPERTY_IMPP
    java.lang.String PROPERTY_END -> PROPERTY_END
    java.lang.String PROPERTY_REV -> PROPERTY_REV
    java.lang.String PROPERTY_AGENT -> PROPERTY_AGENT
    java.lang.String PROPERTY_GENDER -> PROPERTY_GENDER
    java.lang.String PROPERTY_XML -> PROPERTY_XML
    java.lang.String PROPERTY_FBURL -> PROPERTY_FBURL
    java.lang.String PROPERTY_PRODID -> PROPERTY_PRODID
    java.lang.String PROPERTY_RELATED -> PROPERTY_RELATED
    java.lang.String PROPERTY_CATEGORIES -> PROPERTY_CATEGORIES
    java.lang.String PROPERTY_CLIENTPIDMAP -> PROPERTY_CLIENTPIDMAP
    java.lang.String PROPERTY_CALURI -> PROPERTY_CALURI
    java.lang.String PROPERTY_X_SIP -> PROPERTY_X_SIP
    java.lang.String PROPERTY_X_PHONETIC_FIRST_NAME -> PROPERTY_X_PHONETIC_FIRST_NAME
    java.lang.String PROPERTY_X_PHONETIC_MIDDLE_NAME -> PROPERTY_X_PHONETIC_MIDDLE_NAME
    java.lang.String PROPERTY_X_PHONETIC_LAST_NAME -> PROPERTY_X_PHONETIC_LAST_NAME
    java.lang.String PROPERTY_X_AIM -> PROPERTY_X_AIM
    java.lang.String PROPERTY_X_MSN -> PROPERTY_X_MSN
    java.lang.String PROPERTY_X_YAHOO -> PROPERTY_X_YAHOO
    java.lang.String PROPERTY_X_ICQ -> PROPERTY_X_ICQ
    java.lang.String PROPERTY_X_JABBER -> PROPERTY_X_JABBER
    java.lang.String PROPERTY_X_GOOGLE_TALK -> PROPERTY_X_GOOGLE_TALK
    java.lang.String PROPERTY_X_SKYPE_USERNAME -> PROPERTY_X_SKYPE_USERNAME
    java.lang.String PROPERTY_X_QQ -> PROPERTY_X_QQ
    java.lang.String PROPERTY_X_NETMEETING -> PROPERTY_X_NETMEETING
    java.lang.String PROPERTY_X_SKYPE_PSTNNUMBER -> PROPERTY_X_SKYPE_PSTNNUMBER
    java.lang.String PROPERTY_X_ANDROID_CUSTOM -> PROPERTY_X_ANDROID_CUSTOM
    java.lang.String PROPERTY_X_CLASS -> PROPERTY_X_CLASS
    java.lang.String PROPERTY_X_REDUCTION -> PROPERTY_X_REDUCTION
    java.lang.String PROPERTY_X_NO -> PROPERTY_X_NO
    java.lang.String PROPERTY_X_DCM_HMN_MODE -> PROPERTY_X_DCM_HMN_MODE
    java.lang.String PARAM_TYPE -> PARAM_TYPE
    java.lang.String PARAM_TYPE_HOME -> PARAM_TYPE_HOME
    java.lang.String PARAM_TYPE_WORK -> PARAM_TYPE_WORK
    java.lang.String PARAM_TYPE_FAX -> PARAM_TYPE_FAX
    java.lang.String PARAM_TYPE_CELL -> PARAM_TYPE_CELL
    java.lang.String PARAM_TYPE_VOICE -> PARAM_TYPE_VOICE
    java.lang.String PARAM_TYPE_INTERNET -> PARAM_TYPE_INTERNET
    java.lang.String PARAM_VALUE -> PARAM_VALUE
    java.lang.String PARAM_CHARSET -> PARAM_CHARSET
    java.lang.String PARAM_ENCODING -> PARAM_ENCODING
    java.lang.String PARAM_TYPE_PREF -> PARAM_TYPE_PREF
    java.lang.String PARAM_TYPE_CAR -> PARAM_TYPE_CAR
    java.lang.String PARAM_TYPE_ISDN -> PARAM_TYPE_ISDN
    java.lang.String PARAM_TYPE_PAGER -> PARAM_TYPE_PAGER
    java.lang.String PARAM_TYPE_TLX -> PARAM_TYPE_TLX
    java.lang.String PARAM_TYPE_MODEM -> PARAM_TYPE_MODEM
    java.lang.String PARAM_TYPE_MSG -> PARAM_TYPE_MSG
    java.lang.String PARAM_TYPE_BBS -> PARAM_TYPE_BBS
    java.lang.String PARAM_TYPE_VIDEO -> PARAM_TYPE_VIDEO
    java.lang.String PARAM_ENCODING_7BIT -> PARAM_ENCODING_7BIT
    java.lang.String PARAM_ENCODING_8BIT -> PARAM_ENCODING_8BIT
    java.lang.String PARAM_ENCODING_QP -> PARAM_ENCODING_QP
    java.lang.String PARAM_ENCODING_BASE64 -> PARAM_ENCODING_BASE64
    java.lang.String PARAM_ENCODING_B -> PARAM_ENCODING_B
    java.lang.String PARAM_PHONE_EXTRA_TYPE_CALLBACK -> PARAM_PHONE_EXTRA_TYPE_CALLBACK
    java.lang.String PARAM_PHONE_EXTRA_TYPE_RADIO -> PARAM_PHONE_EXTRA_TYPE_RADIO
    java.lang.String PARAM_PHONE_EXTRA_TYPE_TTY_TDD -> PARAM_PHONE_EXTRA_TYPE_TTY_TDD
    java.lang.String PARAM_PHONE_EXTRA_TYPE_ASSISTANT -> PARAM_PHONE_EXTRA_TYPE_ASSISTANT
    java.lang.String PARAM_PHONE_EXTRA_TYPE_COMPANY_MAIN -> PARAM_PHONE_EXTRA_TYPE_COMPANY_MAIN
    java.lang.String PARAM_PHONE_EXTRA_TYPE_OTHER -> PARAM_PHONE_EXTRA_TYPE_OTHER
    java.lang.String PARAM_ADR_TYPE_PARCEL -> PARAM_ADR_TYPE_PARCEL
    java.lang.String PARAM_ADR_TYPE_DOM -> PARAM_ADR_TYPE_DOM
    java.lang.String PARAM_ADR_TYPE_INTL -> PARAM_ADR_TYPE_INTL
    java.lang.String PARAM_LANGUAGE -> PARAM_LANGUAGE
    java.lang.String PARAM_SORT_AS -> PARAM_SORT_AS
    java.lang.String PARAM_EXTRA_TYPE_COMPANY -> PARAM_EXTRA_TYPE_COMPANY
    java.lang.String PARAM_TYPE_X_IRMC_N -> PARAM_TYPE_X_IRMC_N
    int MAX_DATA_COLUMN -> MAX_DATA_COLUMN
    int MAX_CHARACTER_NUMS_QP -> MAX_CHARACTER_NUMS_QP
    int MAX_CHARACTER_NUMS_BASE64_V30 -> MAX_CHARACTER_NUMS_BASE64_V30
com.android.vcard.VCardConstants$ImportOnly -> com.android.vcard.VCardConstants$ImportOnly:
    java.lang.String PROPERTY_X_NICKNAME -> PROPERTY_X_NICKNAME
    java.lang.String PROPERTY_X_GOOGLE_TALK_WITH_SPACE -> PROPERTY_X_GOOGLE_TALK_WITH_SPACE
com.android.vcard.VCardEntry -> com.android.vcard.VCardEntry:
    java.lang.String LOG_TAG -> LOG_TAG
    int DEFAULT_ORGANIZATION_TYPE -> DEFAULT_ORGANIZATION_TYPE
    java.util.Map sImMap -> sImMap
    com.android.vcard.VCardEntry$NameData mNameData -> mNameData
    java.util.List mPhoneList -> mPhoneList
    java.util.List mEmailList -> mEmailList
    java.util.List mPostalList -> mPostalList
    java.util.List mOrganizationList -> mOrganizationList
    java.util.List mImList -> mImList
    java.util.List mPhotoList -> mPhotoList
    java.util.List mWebsiteList -> mWebsiteList
    java.util.List mSipList -> mSipList
    java.util.List mNicknameList -> mNicknameList
    java.util.List mNoteList -> mNoteList
    java.util.List mAndroidCustomDataList -> mAndroidCustomDataList
    com.android.vcard.VCardEntry$BirthdayData mBirthday -> mBirthday
    com.android.vcard.VCardEntry$AnniversaryData mAnniversary -> mAnniversary
    int mVCardType -> mVCardType
    android.accounts.Account mAccount -> mAccount
    java.util.List mChildren -> mChildren
    java.util.List sEmptyList -> sEmptyList
    void iterateAllData(com.android.vcard.VCardEntry$EntryElementIterator) -> iterateAllData
    void iterateOneList(java.util.List,com.android.vcard.VCardEntry$EntryElementIterator) -> iterateOneList
    java.lang.String toString() -> toString
    void addPhone(int,java.lang.String,java.lang.String,boolean) -> addPhone
    void addSip(java.lang.String,int,java.lang.String,boolean) -> addSip
    void addNickName(java.lang.String) -> addNickName
    void addEmail(int,java.lang.String,java.lang.String,boolean) -> addEmail
    void addPostal(int,java.util.List,java.lang.String,boolean) -> addPostal
    void addNewOrganization(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean) -> addNewOrganization
    java.lang.String buildSinglePhoneticNameFromSortAsParam(java.util.Map) -> buildSinglePhoneticNameFromSortAsParam
    void handleOrgValue(int,java.util.List,java.util.Map,boolean) -> handleOrgValue
    void handleTitleValue(java.lang.String) -> handleTitleValue
    void addIm(int,java.lang.String,java.lang.String,int,boolean) -> addIm
    void addNote(java.lang.String) -> addNote
    void addPhotoBytes(java.lang.String,byte[],boolean) -> addPhotoBytes
    void tryHandleSortAsName(java.util.Map) -> tryHandleSortAsName
    void handleNProperty(java.util.List,java.util.Map) -> handleNProperty
    void handlePhoneticNameFromSound(java.util.List) -> handlePhoneticNameFromSound
    void addProperty(com.android.vcard.VCardProperty) -> addProperty
    void handleSipCase(java.lang.String,java.util.Collection) -> handleSipCase
    void addChild(com.android.vcard.VCardEntry) -> addChild
    void handleAndroidCustomProperty(java.util.List) -> handleAndroidCustomProperty
    java.lang.String constructDisplayName() -> constructDisplayName
    void consolidateFields() -> consolidateFields
    boolean isIgnorable() -> isIgnorable
    java.util.ArrayList constructInsertOperations(android.content.ContentResolver,java.util.ArrayList) -> constructInsertOperations
    com.android.vcard.VCardEntry buildFromResolver(android.content.ContentResolver) -> buildFromResolver
    com.android.vcard.VCardEntry buildFromResolver(android.content.ContentResolver,android.net.Uri) -> buildFromResolver
    java.lang.String listToString(java.util.List) -> listToString
    com.android.vcard.VCardEntry$NameData getNameData() -> getNameData
    java.util.List getNickNameList() -> getNickNameList
    java.lang.String getBirthday() -> getBirthday
    java.util.List getNotes() -> getNotes
    java.util.List getPhoneList() -> getPhoneList
    java.util.List getEmailList() -> getEmailList
    java.util.List getPostalList() -> getPostalList
    java.util.List getOrganizationList() -> getOrganizationList
    java.util.List getImList() -> getImList
    java.util.List getPhotoList() -> getPhotoList
    java.util.List getWebsiteList() -> getWebsiteList
    java.util.List getChildlen() -> getChildlen
    java.lang.String getDisplayName() -> getDisplayName
com.android.vcard.VCardEntry$1 -> com.android.vcard.VCardEntry$1:
com.android.vcard.VCardEntry$AndroidCustomData -> com.android.vcard.VCardEntry$AndroidCustomData:
    java.lang.String mMimeType -> mMimeType
    java.util.List mDataList -> mDataList
    com.android.vcard.VCardEntry$AndroidCustomData constructAndroidCustomData(java.util.List) -> constructAndroidCustomData
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getMimeType() -> getMimeType
    java.util.List getDataList() -> getDataList
com.android.vcard.VCardEntry$AnniversaryData -> com.android.vcard.VCardEntry$AnniversaryData:
    java.lang.String mAnniversary -> mAnniversary
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getAnniversary() -> getAnniversary
com.android.vcard.VCardEntry$BirthdayData -> com.android.vcard.VCardEntry$BirthdayData:
    java.lang.String mBirthday -> mBirthday
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getBirthday() -> getBirthday
    java.lang.String access$1800(com.android.vcard.VCardEntry$BirthdayData) -> access$1800
com.android.vcard.VCardEntry$EmailData -> com.android.vcard.VCardEntry$EmailData:
    java.lang.String mAddress -> mAddress
    int mType -> mType
    java.lang.String mLabel -> mLabel
    boolean mIsPrimary -> mIsPrimary
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getAddress() -> getAddress
    int getType() -> getType
    java.lang.String getLabel() -> getLabel
    boolean isPrimary() -> isPrimary
    java.lang.String access$1500(com.android.vcard.VCardEntry$EmailData) -> access$1500
com.android.vcard.VCardEntry$EntryElement -> com.android.vcard.VCardEntry$EntryElement:
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
com.android.vcard.VCardEntry$EntryElementIterator -> com.android.vcard.VCardEntry$EntryElementIterator:
    void onIterationStarted() -> onIterationStarted
    void onIterationEnded() -> onIterationEnded
    void onElementGroupStarted(com.android.vcard.VCardEntry$EntryLabel) -> onElementGroupStarted
    void onElementGroupEnded() -> onElementGroupEnded
    boolean onElement(com.android.vcard.VCardEntry$EntryElement) -> onElement
com.android.vcard.VCardEntry$EntryLabel -> com.android.vcard.VCardEntry$EntryLabel:
    com.android.vcard.VCardEntry$EntryLabel NAME -> NAME
    com.android.vcard.VCardEntry$EntryLabel PHONE -> PHONE
    com.android.vcard.VCardEntry$EntryLabel EMAIL -> EMAIL
    com.android.vcard.VCardEntry$EntryLabel POSTAL_ADDRESS -> POSTAL_ADDRESS
    com.android.vcard.VCardEntry$EntryLabel ORGANIZATION -> ORGANIZATION
    com.android.vcard.VCardEntry$EntryLabel IM -> IM
    com.android.vcard.VCardEntry$EntryLabel PHOTO -> PHOTO
    com.android.vcard.VCardEntry$EntryLabel WEBSITE -> WEBSITE
    com.android.vcard.VCardEntry$EntryLabel SIP -> SIP
    com.android.vcard.VCardEntry$EntryLabel NICKNAME -> NICKNAME
    com.android.vcard.VCardEntry$EntryLabel NOTE -> NOTE
    com.android.vcard.VCardEntry$EntryLabel BIRTHDAY -> BIRTHDAY
    com.android.vcard.VCardEntry$EntryLabel ANNIVERSARY -> ANNIVERSARY
    com.android.vcard.VCardEntry$EntryLabel ANDROID_CUSTOM -> ANDROID_CUSTOM
    com.android.vcard.VCardEntry$EntryLabel[] $VALUES -> $VALUES
    com.android.vcard.VCardEntry$EntryLabel[] values() -> values
    com.android.vcard.VCardEntry$EntryLabel valueOf(java.lang.String) -> valueOf
com.android.vcard.VCardEntry$ImData -> com.android.vcard.VCardEntry$ImData:
    java.lang.String mAddress -> mAddress
    int mProtocol -> mProtocol
    java.lang.String mCustomProtocol -> mCustomProtocol
    int mType -> mType
    boolean mIsPrimary -> mIsPrimary
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getAddress() -> getAddress
    int getProtocol() -> getProtocol
    java.lang.String getCustomProtocol() -> getCustomProtocol
    int getType() -> getType
    boolean isPrimary() -> isPrimary
com.android.vcard.VCardEntry$InsertOperationConstrutor -> com.android.vcard.VCardEntry$InsertOperationConstrutor:
    java.util.List mOperationList -> mOperationList
    int mBackReferenceIndex -> mBackReferenceIndex
    com.android.vcard.VCardEntry this$0 -> this$0
    void onIterationStarted() -> onIterationStarted
    void onIterationEnded() -> onIterationEnded
    void onElementGroupStarted(com.android.vcard.VCardEntry$EntryLabel) -> onElementGroupStarted
    void onElementGroupEnded() -> onElementGroupEnded
    boolean onElement(com.android.vcard.VCardEntry$EntryElement) -> onElement
com.android.vcard.VCardEntry$IsIgnorableIterator -> com.android.vcard.VCardEntry$IsIgnorableIterator:
    boolean mEmpty -> mEmpty
    com.android.vcard.VCardEntry this$0 -> this$0
    void onIterationStarted() -> onIterationStarted
    void onIterationEnded() -> onIterationEnded
    void onElementGroupStarted(com.android.vcard.VCardEntry$EntryLabel) -> onElementGroupStarted
    void onElementGroupEnded() -> onElementGroupEnded
    boolean onElement(com.android.vcard.VCardEntry$EntryElement) -> onElement
    boolean getResult() -> getResult
com.android.vcard.VCardEntry$NameData -> com.android.vcard.VCardEntry$NameData:
    java.lang.String mFamily -> mFamily
    java.lang.String mGiven -> mGiven
    java.lang.String mMiddle -> mMiddle
    java.lang.String mPrefix -> mPrefix
    java.lang.String mSuffix -> mSuffix
    java.lang.String mFormatted -> mFormatted
    java.lang.String mPhoneticFamily -> mPhoneticFamily
    java.lang.String mPhoneticGiven -> mPhoneticGiven
    java.lang.String mPhoneticMiddle -> mPhoneticMiddle
    java.lang.String mSortString -> mSortString
    java.lang.String displayName -> displayName
    boolean emptyStructuredName() -> emptyStructuredName
    boolean emptyPhoneticStructuredName() -> emptyPhoneticStructuredName
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getFamily() -> getFamily
    java.lang.String getMiddle() -> getMiddle
    java.lang.String getGiven() -> getGiven
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getSuffix() -> getSuffix
    java.lang.String getFormatted() -> getFormatted
    java.lang.String getSortString() -> getSortString
    void setFamily(java.lang.String) -> setFamily
    void setMiddle(java.lang.String) -> setMiddle
    void setGiven(java.lang.String) -> setGiven
    void setPrefix(java.lang.String) -> setPrefix
    void setSuffix(java.lang.String) -> setSuffix
    java.lang.String access$500(com.android.vcard.VCardEntry$NameData) -> access$500
    java.lang.String access$600(com.android.vcard.VCardEntry$NameData) -> access$600
    java.lang.String access$700(com.android.vcard.VCardEntry$NameData) -> access$700
    java.lang.String access$602(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$602
    java.lang.String access$702(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$702
    java.lang.String access$502(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$502
    java.lang.String access$802(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$802
    java.lang.String access$902(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$902
    java.lang.String access$1002(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1002
    java.lang.String access$1102(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1102
    java.lang.String access$1202(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1202
    java.lang.String access$1302(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1302
    java.lang.String access$1300(com.android.vcard.VCardEntry$NameData) -> access$1300
    java.lang.String access$1402(com.android.vcard.VCardEntry$NameData,java.lang.String) -> access$1402
    java.lang.String access$1200(com.android.vcard.VCardEntry$NameData) -> access$1200
    java.lang.String access$1000(com.android.vcard.VCardEntry$NameData) -> access$1000
    java.lang.String access$1100(com.android.vcard.VCardEntry$NameData) -> access$1100
    java.lang.String access$900(com.android.vcard.VCardEntry$NameData) -> access$900
    java.lang.String access$800(com.android.vcard.VCardEntry$NameData) -> access$800
com.android.vcard.VCardEntry$NicknameData -> com.android.vcard.VCardEntry$NicknameData:
    java.lang.String mNickname -> mNickname
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getNickname() -> getNickname
com.android.vcard.VCardEntry$NoteData -> com.android.vcard.VCardEntry$NoteData:
    java.lang.String mNote -> mNote
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getNote() -> getNote
com.android.vcard.VCardEntry$OrganizationData -> com.android.vcard.VCardEntry$OrganizationData:
    java.lang.String mOrganizationName -> mOrganizationName
    java.lang.String mDepartmentName -> mDepartmentName
    java.lang.String mTitle -> mTitle
    java.lang.String mPhoneticName -> mPhoneticName
    int mType -> mType
    boolean mIsPrimary -> mIsPrimary
    java.lang.String getFormattedString() -> getFormattedString
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getOrganizationName() -> getOrganizationName
    java.lang.String getDepartmentName() -> getDepartmentName
    java.lang.String getTitle() -> getTitle
    java.lang.String getPhoneticName() -> getPhoneticName
    int getType() -> getType
    boolean isPrimary() -> isPrimary
    java.lang.String access$100(com.android.vcard.VCardEntry$OrganizationData) -> access$100
    java.lang.String access$200(com.android.vcard.VCardEntry$OrganizationData) -> access$200
    java.lang.String access$102(com.android.vcard.VCardEntry$OrganizationData,java.lang.String) -> access$102
    java.lang.String access$202(com.android.vcard.VCardEntry$OrganizationData,java.lang.String) -> access$202
    boolean access$302(com.android.vcard.VCardEntry$OrganizationData,boolean) -> access$302
    java.lang.String access$400(com.android.vcard.VCardEntry$OrganizationData) -> access$400
    java.lang.String access$402(com.android.vcard.VCardEntry$OrganizationData,java.lang.String) -> access$402
com.android.vcard.VCardEntry$PhoneData -> com.android.vcard.VCardEntry$PhoneData:
    java.lang.String mNumber -> mNumber
    int mType -> mType
    java.lang.String mLabel -> mLabel
    boolean mIsPrimary -> mIsPrimary
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getNumber() -> getNumber
    int getType() -> getType
    java.lang.String getLabel() -> getLabel
    boolean isPrimary() -> isPrimary
    java.lang.String access$1600(com.android.vcard.VCardEntry$PhoneData) -> access$1600
com.android.vcard.VCardEntry$PhotoData -> com.android.vcard.VCardEntry$PhotoData:
    java.lang.String mFormat -> mFormat
    boolean mIsPrimary -> mIsPrimary
    byte[] mBytes -> mBytes
    java.lang.Integer mHashCode -> mHashCode
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getFormat() -> getFormat
    byte[] getBytes() -> getBytes
    boolean isPrimary() -> isPrimary
com.android.vcard.VCardEntry$PostalData -> com.android.vcard.VCardEntry$PostalData:
    int ADDR_MAX_DATA_SIZE -> ADDR_MAX_DATA_SIZE
    java.lang.String mPobox -> mPobox
    java.lang.String mExtendedAddress -> mExtendedAddress
    java.lang.String mStreet -> mStreet
    java.lang.String mLocalty -> mLocalty
    java.lang.String mRegion -> mRegion
    java.lang.String mPostalCode -> mPostalCode
    java.lang.String mCountry -> mCountry
    int mType -> mType
    java.lang.String mLabel -> mLabel
    boolean mIsPrimary -> mIsPrimary
    int mVCardType -> mVCardType
    com.android.vcard.VCardEntry$PostalData constructPostalData(java.util.List,int,java.lang.String,boolean,int) -> constructPostalData
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    java.lang.String getFormattedAddress(int) -> getFormattedAddress
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getPobox() -> getPobox
    java.lang.String getExtendedAddress() -> getExtendedAddress
    java.lang.String getStreet() -> getStreet
    java.lang.String getLocalty() -> getLocalty
    java.lang.String getRegion() -> getRegion
    java.lang.String getPostalCode() -> getPostalCode
    java.lang.String getCountry() -> getCountry
    int getType() -> getType
    java.lang.String getLabel() -> getLabel
    boolean isPrimary() -> isPrimary
com.android.vcard.VCardEntry$SipData -> com.android.vcard.VCardEntry$SipData:
    java.lang.String mAddress -> mAddress
    int mType -> mType
    java.lang.String mLabel -> mLabel
    boolean mIsPrimary -> mIsPrimary
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getAddress() -> getAddress
    int getType() -> getType
    java.lang.String getLabel() -> getLabel
com.android.vcard.VCardEntry$ToStringIterator -> com.android.vcard.VCardEntry$ToStringIterator:
    java.lang.StringBuilder mBuilder -> mBuilder
    boolean mFirstElement -> mFirstElement
    com.android.vcard.VCardEntry this$0 -> this$0
    void onIterationStarted() -> onIterationStarted
    void onElementGroupStarted(com.android.vcard.VCardEntry$EntryLabel) -> onElementGroupStarted
    boolean onElement(com.android.vcard.VCardEntry$EntryElement) -> onElement
    void onElementGroupEnded() -> onElementGroupEnded
    void onIterationEnded() -> onIterationEnded
    java.lang.String toString() -> toString
com.android.vcard.VCardEntry$WebsiteData -> com.android.vcard.VCardEntry$WebsiteData:
    java.lang.String mWebsite -> mWebsite
    void constructInsertOperation(java.util.List,int) -> constructInsertOperation
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.android.vcard.VCardEntry$EntryLabel getEntryLabel() -> getEntryLabel
    java.lang.String getWebsite() -> getWebsite
com.android.vcard.VCardEntryCommitter -> com.android.vcard.VCardEntryCommitter:
    java.lang.String LOG_TAG -> LOG_TAG
    android.content.ContentResolver mContentResolver -> mContentResolver
    long mTimeToCommit -> mTimeToCommit
    int mCounter -> mCounter
    java.util.ArrayList mOperationList -> mOperationList
    java.util.ArrayList mCreatedUris -> mCreatedUris
    void onStart() -> onStart
    void onEnd() -> onEnd
    void onEntryCreated(com.android.vcard.VCardEntry) -> onEntryCreated
    android.net.Uri pushIntoContentResolver(java.util.ArrayList) -> pushIntoContentResolver
    java.util.ArrayList getCreatedUris() -> getCreatedUris
com.android.vcard.VCardEntryConstructor -> com.android.vcard.VCardEntryConstructor:
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.List mEntryStack -> mEntryStack
    com.android.vcard.VCardEntry mCurrentEntry -> mCurrentEntry
    int mVCardType -> mVCardType
    android.accounts.Account mAccount -> mAccount
    java.util.List mEntryHandlers -> mEntryHandlers
    void addEntryHandler(com.android.vcard.VCardEntryHandler) -> addEntryHandler
    void onVCardStarted() -> onVCardStarted
    void onVCardEnded() -> onVCardEnded
    void clear() -> clear
    void onEntryStarted() -> onEntryStarted
    void onEntryEnded() -> onEntryEnded
    void onPropertyCreated(com.android.vcard.VCardProperty) -> onPropertyCreated
com.android.vcard.VCardEntryCounter -> com.android.vcard.VCardEntryCounter:
    int mCount -> mCount
    int getCount() -> getCount
    void onVCardStarted() -> onVCardStarted
    void onVCardEnded() -> onVCardEnded
    void onEntryStarted() -> onEntryStarted
    void onEntryEnded() -> onEntryEnded
    void onPropertyCreated(com.android.vcard.VCardProperty) -> onPropertyCreated
com.android.vcard.VCardEntryHandler -> com.android.vcard.VCardEntryHandler:
    void onStart() -> onStart
    void onEntryCreated(com.android.vcard.VCardEntry) -> onEntryCreated
    void onEnd() -> onEnd
com.android.vcard.VCardInterpreter -> com.android.vcard.VCardInterpreter:
    void onVCardStarted() -> onVCardStarted
    void onVCardEnded() -> onVCardEnded
    void onEntryStarted() -> onEntryStarted
    void onEntryEnded() -> onEntryEnded
    void onPropertyCreated(com.android.vcard.VCardProperty) -> onPropertyCreated
com.android.vcard.VCardParser -> com.android.vcard.VCardParser:
    void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    void parse(java.io.InputStream) -> parse
    void parseOne(java.io.InputStream) -> parseOne
    void parse(java.io.InputStream,com.android.vcard.VCardInterpreter) -> parse
    void cancel() -> cancel
com.android.vcard.VCardParserImpl_V21 -> com.android.vcard.VCardParserImpl_V21:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String DEFAULT_ENCODING -> DEFAULT_ENCODING
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String mIntermediateCharset -> mIntermediateCharset
    java.util.List mInterpreterList -> mInterpreterList
    boolean mCanceled -> mCanceled
    java.lang.String mCurrentEncoding -> mCurrentEncoding
    java.lang.String mCurrentCharset -> mCurrentCharset
    com.android.vcard.VCardParserImpl_V21$CustomBufferedReader mReader -> mReader
    java.util.Set mUnknownTypeSet -> mUnknownTypeSet
    java.util.Set mUnknownValueSet -> mUnknownValueSet
    int STATE_GROUP_OR_PROPERTY_NAME -> STATE_GROUP_OR_PROPERTY_NAME
    int STATE_PARAMS -> STATE_PARAMS
    int STATE_PARAMS_IN_DQUOTE -> STATE_PARAMS_IN_DQUOTE
    boolean isValidPropertyName(java.lang.String) -> isValidPropertyName
    java.lang.String getLine() -> getLine
    java.lang.String peekLine() -> peekLine
    java.lang.String getNonEmptyLine() -> getNonEmptyLine
    boolean parseOneVCard() -> parseOneVCard
    boolean readBeginVCard(boolean) -> readBeginVCard
    void parseItems() -> parseItems
    boolean parseItem() -> parseItem
    void parseItemInter(com.android.vcard.VCardProperty,java.lang.String) -> parseItemInter
    void handleNest() -> handleNest
    com.android.vcard.VCardProperty constructPropertyData(java.lang.String) -> constructPropertyData
    void handleParams(com.android.vcard.VCardProperty,java.lang.String) -> handleParams
    void handleParamWithoutName(com.android.vcard.VCardProperty,java.lang.String) -> handleParamWithoutName
    void handleType(com.android.vcard.VCardProperty,java.lang.String) -> handleType
    void handleValue(com.android.vcard.VCardProperty,java.lang.String) -> handleValue
    void handleEncoding(com.android.vcard.VCardProperty,java.lang.String) -> handleEncoding
    void handleCharset(com.android.vcard.VCardProperty,java.lang.String) -> handleCharset
    void handleLanguage(com.android.vcard.VCardProperty,java.lang.String) -> handleLanguage
    boolean isAsciiLetter(char) -> isAsciiLetter
    void handleAnyParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String) -> handleAnyParam
    void handlePropertyValue(com.android.vcard.VCardProperty,java.lang.String) -> handlePropertyValue
    java.lang.String getQuotedPrintablePart(java.lang.String) -> getQuotedPrintablePart
    java.lang.String getBase64(java.lang.String) -> getBase64
    void handleAgent(com.android.vcard.VCardProperty) -> handleAgent
    java.lang.String maybeUnescapeText(java.lang.String) -> maybeUnescapeText
    java.lang.String maybeUnescapeCharacter(char) -> maybeUnescapeCharacter
    java.lang.String unescapeCharacter(char) -> unescapeCharacter
    int getVersion() -> getVersion
    java.lang.String getVersionString() -> getVersionString
    java.util.Set getKnownPropertyNameSet() -> getKnownPropertyNameSet
    java.util.Set getKnownTypeSet() -> getKnownTypeSet
    java.util.Set getKnownValueSet() -> getKnownValueSet
    java.util.Set getAvailableEncodingSet() -> getAvailableEncodingSet
    java.lang.String getDefaultEncoding() -> getDefaultEncoding
    java.lang.String getDefaultCharset() -> getDefaultCharset
    java.lang.String getCurrentCharset() -> getCurrentCharset
    void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    void parse(java.io.InputStream) -> parse
    void parseOne(java.io.InputStream) -> parseOne
    void cancel() -> cancel
com.android.vcard.VCardParserImpl_V21$CustomBufferedReader -> com.android.vcard.VCardParserImpl_V21$CustomBufferedReader:
    long mTime -> mTime
    boolean mNextLineIsValid -> mNextLineIsValid
    java.lang.String mNextLine -> mNextLine
    java.lang.String readLine() -> readLine
    java.lang.String peekLine() -> peekLine
    long getTotalmillisecond() -> getTotalmillisecond
com.android.vcard.VCardParserImpl_V30 -> com.android.vcard.VCardParserImpl_V30:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String mPreviousLine -> mPreviousLine
    boolean mEmittedAgentWarning -> mEmittedAgentWarning
    int getVersion() -> getVersion
    java.lang.String getVersionString() -> getVersionString
    java.lang.String getLine() -> getLine
    java.lang.String getNonEmptyLine() -> getNonEmptyLine
    boolean readBeginVCard(boolean) -> readBeginVCard
    void handleParams(com.android.vcard.VCardProperty,java.lang.String) -> handleParams
    void handleAnyParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String) -> handleAnyParam
    void handleParamWithoutName(com.android.vcard.VCardProperty,java.lang.String) -> handleParamWithoutName
    void handleType(com.android.vcard.VCardProperty,java.lang.String) -> handleType
    void splitAndPutParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String) -> splitAndPutParam
    java.lang.String encodeParamValue(java.lang.String) -> encodeParamValue
    void handleAgent(com.android.vcard.VCardProperty) -> handleAgent
    java.lang.String getBase64(java.lang.String) -> getBase64
    java.lang.String maybeUnescapeText(java.lang.String) -> maybeUnescapeText
    java.lang.String unescapeText(java.lang.String) -> unescapeText
    java.lang.String maybeUnescapeCharacter(char) -> maybeUnescapeCharacter
    java.lang.String unescapeCharacter(char) -> unescapeCharacter
    java.util.Set getKnownPropertyNameSet() -> getKnownPropertyNameSet
com.android.vcard.VCardParserImpl_V40 -> com.android.vcard.VCardParserImpl_V40:
    int getVersion() -> getVersion
    java.lang.String getVersionString() -> getVersionString
    java.lang.String maybeUnescapeText(java.lang.String) -> maybeUnescapeText
    java.lang.String unescapeText(java.lang.String) -> unescapeText
    java.lang.String unescapeCharacter(char) -> unescapeCharacter
    java.util.Set getKnownPropertyNameSet() -> getKnownPropertyNameSet
com.android.vcard.VCardParser_V21 -> com.android.vcard.VCardParser_V21:
    java.util.Set sKnownPropertyNameSet -> sKnownPropertyNameSet
    java.util.Set sKnownTypeSet -> sKnownTypeSet
    java.util.Set sKnownValueSet -> sKnownValueSet
    java.util.Set sAvailableEncoding -> sAvailableEncoding
    com.android.vcard.VCardParserImpl_V21 mVCardParserImpl -> mVCardParserImpl
    void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    void parse(java.io.InputStream) -> parse
    void parseOne(java.io.InputStream) -> parseOne
    void cancel() -> cancel
com.android.vcard.VCardParser_V30 -> com.android.vcard.VCardParser_V30:
    java.util.Set sKnownPropertyNameSet -> sKnownPropertyNameSet
    java.util.Set sAcceptableEncoding -> sAcceptableEncoding
    com.android.vcard.VCardParserImpl_V30 mVCardParserImpl -> mVCardParserImpl
    void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    void parse(java.io.InputStream) -> parse
    void parseOne(java.io.InputStream) -> parseOne
    void cancel() -> cancel
com.android.vcard.VCardParser_V40 -> com.android.vcard.VCardParser_V40:
    java.util.Set sKnownPropertyNameSet -> sKnownPropertyNameSet
    java.util.Set sAcceptableEncoding -> sAcceptableEncoding
    com.android.vcard.VCardParserImpl_V40 mVCardParserImpl -> mVCardParserImpl
    void addInterpreter(com.android.vcard.VCardInterpreter) -> addInterpreter
    void parse(java.io.InputStream) -> parse
    void parseOne(java.io.InputStream) -> parseOne
    void cancel() -> cancel
com.android.vcard.VCardPhoneNumberTranslationCallback -> com.android.vcard.VCardPhoneNumberTranslationCallback:
    java.lang.String onValueReceived(java.lang.String,int,java.lang.String,boolean) -> onValueReceived
com.android.vcard.VCardProperty -> com.android.vcard.VCardProperty:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String mName -> mName
    java.util.List mGroupList -> mGroupList
    java.util.Map mParameterMap -> mParameterMap
    java.lang.String mRawValue -> mRawValue
    java.util.List mValueList -> mValueList
    byte[] mByteValue -> mByteValue
    void setName(java.lang.String) -> setName
    void addGroup(java.lang.String) -> addGroup
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    void setRawValue(java.lang.String) -> setRawValue
    void setValues(java.lang.String[]) -> setValues
    void setValues(java.util.List) -> setValues
    void addValues(java.lang.String[]) -> addValues
    void addValues(java.util.List) -> addValues
    void setByteValue(byte[]) -> setByteValue
    java.lang.String getName() -> getName
    java.util.List getGroupList() -> getGroupList
    java.util.Map getParameterMap() -> getParameterMap
    java.util.Collection getParameters(java.lang.String) -> getParameters
    java.lang.String getRawValue() -> getRawValue
    java.util.List getValueList() -> getValueList
    byte[] getByteValue() -> getByteValue
com.android.vcard.VCardSourceDetector -> com.android.vcard.VCardSourceDetector:
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.Set APPLE_SIGNS -> APPLE_SIGNS
    java.util.Set JAPANESE_MOBILE_PHONE_SIGNS -> JAPANESE_MOBILE_PHONE_SIGNS
    java.util.Set WINDOWS_MOBILE_PHONE_SIGNS -> WINDOWS_MOBILE_PHONE_SIGNS
    java.util.Set FOMA_SIGNS -> FOMA_SIGNS
    java.lang.String TYPE_FOMA_CHARSET_SIGN -> TYPE_FOMA_CHARSET_SIGN
    int PARSE_TYPE_UNKNOWN -> PARSE_TYPE_UNKNOWN
    int PARSE_TYPE_APPLE -> PARSE_TYPE_APPLE
    int PARSE_TYPE_MOBILE_PHONE_JP -> PARSE_TYPE_MOBILE_PHONE_JP
    int PARSE_TYPE_DOCOMO_FOMA -> PARSE_TYPE_DOCOMO_FOMA
    int PARSE_TYPE_WINDOWS_MOBILE_V65_JP -> PARSE_TYPE_WINDOWS_MOBILE_V65_JP
    int mParseType -> mParseType
    int mVersion -> mVersion
    java.lang.String mSpecifiedCharset -> mSpecifiedCharset
    void onVCardStarted() -> onVCardStarted
    void onVCardEnded() -> onVCardEnded
    void onEntryStarted() -> onEntryStarted
    void onEntryEnded() -> onEntryEnded
    void onPropertyCreated(com.android.vcard.VCardProperty) -> onPropertyCreated
    int getEstimatedType() -> getEstimatedType
    java.lang.String getEstimatedCharset() -> getEstimatedCharset
com.android.vcard.VCardUtils -> com.android.vcard.VCardUtils:
    java.lang.String LOG_TAG -> LOG_TAG
    java.util.Map sKnownPhoneTypesMap_ItoS -> sKnownPhoneTypesMap_ItoS
    java.util.Set sPhoneTypesUnknownToContactsSet -> sPhoneTypesUnknownToContactsSet
    java.util.Map sKnownPhoneTypeMap_StoI -> sKnownPhoneTypeMap_StoI
    java.util.Map sKnownImPropNameMap_ItoS -> sKnownImPropNameMap_ItoS
    java.util.Set sMobilePhoneLabelSet -> sMobilePhoneLabelSet
    java.util.Set sUnAcceptableAsciiInV21WordSet -> sUnAcceptableAsciiInV21WordSet
    int[] sEscapeIndicatorsV30 -> sEscapeIndicatorsV30
    int[] sEscapeIndicatorsV40 -> sEscapeIndicatorsV40
    java.lang.String getPhoneTypeString(java.lang.Integer) -> getPhoneTypeString
    java.lang.Object getPhoneTypeFromStrings(java.util.Collection,java.lang.String) -> getPhoneTypeFromStrings
    boolean isMobilePhoneLabel(java.lang.String) -> isMobilePhoneLabel
    boolean isValidInV21ButUnknownToContactsPhoteType(java.lang.String) -> isValidInV21ButUnknownToContactsPhoteType
    java.lang.String getPropertyNameForIm(int) -> getPropertyNameForIm
    java.lang.String[] sortNameElements(int,java.lang.String,java.lang.String,java.lang.String) -> sortNameElements
    int getPhoneNumberFormat(int) -> getPhoneNumberFormat
    java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String) -> constructNameFromElements
    java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> constructNameFromElements
    java.util.List constructListFromValue(java.lang.String,int) -> constructListFromValue
    boolean containsOnlyPrintableAscii(java.lang.String[]) -> containsOnlyPrintableAscii
    boolean containsOnlyPrintableAscii(java.util.Collection) -> containsOnlyPrintableAscii
    boolean containsOnlyNonCrLfPrintableAscii(java.lang.String[]) -> containsOnlyNonCrLfPrintableAscii
    boolean containsOnlyNonCrLfPrintableAscii(java.util.Collection) -> containsOnlyNonCrLfPrintableAscii
    boolean containsOnlyAlphaDigitHyphen(java.lang.String[]) -> containsOnlyAlphaDigitHyphen
    boolean containsOnlyAlphaDigitHyphen(java.util.Collection) -> containsOnlyAlphaDigitHyphen
    boolean containsOnlyWhiteSpaces(java.lang.String[]) -> containsOnlyWhiteSpaces
    boolean containsOnlyWhiteSpaces(java.util.Collection) -> containsOnlyWhiteSpaces
    boolean isV21Word(java.lang.String) -> isV21Word
    java.lang.String toStringAsV30ParamValue(java.lang.String) -> toStringAsV30ParamValue
    java.lang.String toStringAsV40ParamValue(java.lang.String) -> toStringAsV40ParamValue
    java.lang.String toStringAsParamValue(java.lang.String,int[]) -> toStringAsParamValue
    java.lang.String toHalfWidthString(java.lang.String) -> toHalfWidthString
    java.lang.String guessImageType(byte[]) -> guessImageType
    boolean areAllEmpty(java.lang.String[]) -> areAllEmpty
    java.lang.String parseQuotedPrintable(java.lang.String,boolean,java.lang.String,java.lang.String) -> parseQuotedPrintable
    com.android.vcard.VCardParser getAppropriateParser(int) -> getAppropriateParser
    java.lang.String convertStringCharset(java.lang.String,java.lang.String,java.lang.String) -> convertStringCharset
com.android.vcard.VCardUtils$DecoderException -> com.android.vcard.VCardUtils$DecoderException:
com.android.vcard.VCardUtils$PhoneNumberUtilsPort -> com.android.vcard.VCardUtils$PhoneNumberUtilsPort:
    java.lang.String formatNumber(java.lang.String,int) -> formatNumber
com.android.vcard.VCardUtils$QuotedPrintableCodecPort -> com.android.vcard.VCardUtils$QuotedPrintableCodecPort:
    byte ESCAPE_CHAR -> ESCAPE_CHAR
    byte[] decodeQuotedPrintable(byte[]) -> decodeQuotedPrintable
com.android.vcard.VCardUtils$TextUtilsPort -> com.android.vcard.VCardUtils$TextUtilsPort:
    boolean isPrintableAscii(char) -> isPrintableAscii
    boolean isPrintableAsciiOnly(java.lang.CharSequence) -> isPrintableAsciiOnly
com.android.vcard.exception.VCardAgentNotSupportedException -> com.android.vcard.exception.VCardAgentNotSupportedException:
com.android.vcard.exception.VCardException -> com.android.vcard.exception.VCardException:
com.android.vcard.exception.VCardInvalidCommentLineException -> com.android.vcard.exception.VCardInvalidCommentLineException:
com.android.vcard.exception.VCardInvalidLineException -> com.android.vcard.exception.VCardInvalidLineException:
com.android.vcard.exception.VCardNestedException -> com.android.vcard.exception.VCardNestedException:
com.android.vcard.exception.VCardNotSupportedException -> com.android.vcard.exception.VCardNotSupportedException:
com.android.vcard.exception.VCardVersionException -> com.android.vcard.exception.VCardVersionException:
com.aps.a -> b.a:
    android.content.Context f -> f
    int g -> g
    android.net.ConnectivityManager h -> h
    android.net.wifi.WifiManager i -> i
    android.telephony.TelephonyManager j -> j
    java.util.List k -> k
    java.util.List l -> l
    java.util.Map m -> m
    java.util.Map n -> n
    com.aps.b o -> o
    android.telephony.PhoneStateListener p -> p
    int q -> q
    com.aps.a$a r -> r
    android.net.wifi.WifiInfo s -> s
    org.json.JSONObject t -> t
    java.lang.String u -> u
    com.aps.c v -> v
    long w -> w
    boolean x -> x
    long y -> y
    long z -> z
    long A -> A
    com.aps.l B -> B
    int C -> C
    java.lang.String D -> D
    com.aps.y E -> E
    java.lang.StringBuilder F -> F
    long G -> G
    long H -> H
    long a -> a
    android.telephony.CellLocation I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    boolean L -> L
    java.util.TimerTask b -> b
    java.util.Timer c -> c
    com.aps.ae d -> d
    int e -> e
    void a(android.content.Context,com.amap.api.location.d) -> a
    com.aps.c a() -> a
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.aps.j,android.app.PendingIntent) -> a
    void b(com.aps.j,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    void b() -> b
    void f() -> f
    void g() -> g
    void a(android.telephony.CellLocation) -> a
    boolean a(long) -> a
    java.lang.String h() -> h
    boolean a(android.net.wifi.WifiInfo) -> a
    boolean a(android.net.wifi.ScanResult) -> a
    java.lang.StringBuilder i() -> i
    byte[] a(java.lang.Object) -> a
    void a(java.util.List) -> a
    boolean a(int) -> a
    byte[] j() -> j
    boolean k() -> k
    boolean l() -> l
    boolean m() -> m
    com.aps.c a(byte[],boolean) -> a
    void a(java.lang.StringBuilder) -> a
    void b(int) -> b
    com.aps.e b(android.telephony.CellLocation) -> b
    com.aps.e a(android.telephony.NeighboringCellInfo) -> a
    void c(android.telephony.CellLocation) -> c
    void d(android.telephony.CellLocation) -> d
    void n() -> n
    void o() -> o
    boolean p() -> p
    void c() -> c
    void q() -> q
    void d() -> d
    void a(com.amap.api.location.AMapLocation) -> a
    void r() -> r
    boolean s() -> s
    com.aps.c t() -> t
    void u() -> u
    int a(boolean,int) -> a
    void c(int) -> c
    void v() -> v
    void w() -> w
    void d(int) -> d
    boolean e() -> e
    void x() -> x
    java.lang.String a(int,int,int) -> a
    boolean a(com.aps.a) -> a
    android.telephony.CellLocation a(com.aps.a,android.telephony.CellLocation) -> a
    long a(com.aps.a,long) -> a
    int b(com.aps.a) -> b
    void a(com.aps.a,int) -> a
    java.util.List c(com.aps.a) -> c
    int b(com.aps.a,int) -> b
    android.net.wifi.WifiManager d(com.aps.a) -> d
    java.util.List a(com.aps.a,java.util.List) -> a
    java.util.List e(com.aps.a) -> e
    void f(com.aps.a) -> f
    void g(com.aps.a) -> g
    int h(com.aps.a) -> h
    boolean a(com.aps.a,boolean) -> a
    boolean i(com.aps.a) -> i
    void c(com.aps.a,int) -> c
com.aps.a$1 -> b.b:
    com.aps.a a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
com.aps.a$2 -> b.c:
    int a -> a
    com.aps.a b -> b
    void run() -> run
com.aps.a$a -> b.d:
    com.aps.a a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.aa -> b.e:
    byte k -> k
    short l -> l
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    short d -> d
    short e -> e
    byte f -> f
    byte[] g -> g
    byte[] h -> h
    short i -> i
    java.util.ArrayList j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
    byte[] a() -> a
com.aps.ab -> b.f:
    com.aps.aa a(android.location.Location,com.aps.ai,int,byte,long) -> a
com.aps.ac -> b.g:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.ad -> b.h:
    byte[] a -> a
    short b -> b
    byte[] c -> c
com.aps.ae -> b.i:
    java.io.File a -> a
    java.util.ArrayList c -> c
    int[] b -> b
    boolean d -> d
    byte[] a() -> a
    void a(boolean) -> a
    boolean b() -> b
    int c() -> c
com.aps.af -> b.j:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    byte[] a(byte[],int) -> a
    void a(int) -> a
    int a() -> a
    java.io.File a(long) -> a
    boolean b(long) -> b
    java.io.File b() -> b
    java.io.File d() -> d
    java.util.ArrayList a(java.io.File[]) -> a
    int e() -> e
    java.io.File f() -> f
    java.io.File c(long) -> c
    java.io.File d(long) -> d
    byte[] a(byte[]) -> a
    com.aps.aa a(android.location.Location,com.aps.ai,int,byte,long) -> a
    int a(int,int) -> a
    byte[] a(java.util.BitSet) -> a
    java.util.BitSet b(byte[]) -> b
    boolean c() -> c
    java.io.File a(android.content.Context) -> a
com.aps.ag -> b.k:
    byte g -> g
    int a -> a
    int b -> b
    short c -> c
    short d -> d
    int e -> e
    byte f -> f
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.ah -> b.l:
    short a -> a
    int b -> b
    byte c -> c
com.aps.ai -> b.m:
    android.content.Context a -> a
    android.telephony.TelephonyManager b -> b
    android.location.LocationManager c -> c
    android.net.wifi.WifiManager d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    long k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    int n -> n
    int o -> o
    int p -> p
    java.lang.String q -> q
    long r -> r
    long s -> s
    com.aps.ai t -> t
    com.aps.ak u -> u
    com.aps.al v -> v
    android.telephony.CellLocation w -> w
    com.aps.am x -> x
    java.util.List y -> y
    java.util.Timer z -> z
    java.lang.Thread A -> A
    android.os.Looper B -> B
    int C -> C
    com.aps.ai a(android.content.Context) -> a
    java.lang.String[] b(android.telephony.TelephonyManager) -> b
    void a() -> a
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    java.util.List j() -> j
    java.util.List k() -> k
    byte l() -> l
    java.util.List m() -> m
    java.util.List n() -> n
    long o() -> o
    java.lang.String p() -> p
    int q() -> q
    int r() -> r
    int s() -> s
    java.lang.String t() -> t
    java.util.List a(float) -> a
    java.util.List b(float) -> b
    java.util.List u() -> u
    void v() -> v
    void w() -> w
    void z() -> z
    void a(android.content.BroadcastReceiver) -> a
    void b(android.content.BroadcastReceiver) -> b
    void a(java.util.List) -> a
    boolean c(android.content.Context) -> c
    android.content.Context x() -> x
    boolean b(android.content.Context) -> b
    android.os.Looper a(com.aps.ai,android.os.Looper) -> a
    java.util.Timer a(com.aps.ai,java.util.Timer) -> a
    com.aps.ak a(com.aps.ai,com.aps.ak) -> a
    com.aps.ak a(com.aps.ai) -> a
    void a(com.aps.ai,android.telephony.PhoneStateListener) -> a
    com.aps.al a(com.aps.ai,com.aps.al) -> a
    com.aps.al b(com.aps.ai) -> b
    void a(com.aps.ai,android.location.GpsStatus$NmeaListener) -> a
    android.net.wifi.WifiManager c(com.aps.ai) -> c
    java.util.Timer d(com.aps.ai) -> d
    java.util.List e(com.aps.ai) -> e
    long a(com.aps.ai,long) -> a
    int y() -> y
    boolean a(com.aps.ai,boolean) -> a
    android.telephony.TelephonyManager f(com.aps.ai) -> f
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(com.aps.ai,int) -> a
    int b(com.aps.ai,int) -> b
    long b(com.aps.ai,long) -> b
    android.telephony.CellLocation a(com.aps.ai,android.telephony.CellLocation) -> a
    boolean g(com.aps.ai) -> g
    int c(com.aps.ai,int) -> c
    int h(com.aps.ai) -> h
    long c(com.aps.ai,long) -> c
    java.lang.String a(com.aps.ai,java.lang.String) -> a
com.aps.aj -> b.n:
    com.aps.ai a -> a
    void run() -> run
com.aps.ak -> b.o:
    com.aps.ai a -> a
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.aps.al -> b.p:
    com.aps.ai a -> a
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.aps.am -> b.q:
    com.aps.ai a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.an -> b.r:
    com.aps.am a -> a
    void run() -> run
com.aps.ao -> b.s:
    com.aps.y a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    boolean a(android.location.Location) -> a
com.aps.ap -> b.t:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.aq -> b.u:
    com.aps.y a -> a
    void run() -> run
com.aps.ar -> b.v:
    com.aps.aq a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aps.as -> b.w:
    long a -> a
    long b -> b
    boolean c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.aps.y h -> h
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.aps.at -> b.x:
    com.aps.y a -> a
    void run() -> run
com.aps.au -> b.y:
    com.aps.y a -> a
    void a() -> a
com.aps.av -> b.z:
    android.content.Context a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
    com.aps.au k -> k
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    void a(int) -> a
    int f() -> f
    void b(int) -> b
    void a(com.aps.au) -> a
    com.aps.av a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] c(int) -> c
    byte[] a(long) -> a
    int a(byte[],int) -> a
    long b(byte[],int) -> b
    void g() -> g
com.aps.aw -> b.aa:
    int c -> c
    int d -> d
    com.aps.ai e -> e
    float f -> f
    com.aps.ba a -> a
    com.aps.ax b -> b
    void a() -> a
    boolean a(android.location.Location) -> a
    void a(int) -> a
    void b(int) -> b
    boolean b(android.location.Location) -> b
com.aps.ax -> b.ab:
    com.aps.ay a -> a
    android.location.Location b -> b
com.aps.ay -> b.ac:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
com.aps.az -> b.ad:
    java.lang.String a -> a
com.aps.b -> b.ae:
    java.lang.String a -> a
    javax.crypto.Cipher b -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
com.aps.ba -> b.af:
    java.util.List a -> a
    android.location.Location b -> b
com.aps.bb -> b.ag:
    java.lang.String[] a -> a
    boolean a(java.lang.String[],java.lang.String) -> a
com.aps.bc -> b.ah:
    java.io.RandomAccessFile a -> a
    com.aps.af b -> b
    java.io.File c -> c
    com.aps.ae a(int) -> a
    java.util.BitSet b() -> b
    java.util.ArrayList a(int,int) -> a
    byte a(byte[]) -> a
    int a(java.util.BitSet) -> a
    int a(int,int,int) -> a
    int a() -> a
    void a(com.aps.ae) -> a
com.aps.bd -> b.ai:
    java.io.RandomAccessFile a -> a
    com.aps.af b -> b
    java.lang.String c -> c
    java.io.File d -> d
    void a(long,byte[]) -> a
com.aps.be -> b.aj:
    java.lang.String a -> a
    boolean a(android.content.Context) -> a
    void a(java.lang.String) -> a
com.aps.c -> b.ak:
    java.lang.String a -> a
    double b -> b
    double c -> c
    float d -> d
    float e -> e
    float f -> f
    long g -> g
    com.amap.api.location.core.AMapLocException h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    org.json.JSONObject v -> v
    com.amap.api.location.core.AMapLocException a() -> a
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    double d() -> d
    void a(double) -> a
    double e() -> e
    void b(double) -> b
    float f() -> f
    void a(float) -> a
    long g() -> g
    void a(long) -> a
    java.lang.String h() -> h
    void d(java.lang.String) -> d
    java.lang.String i() -> i
    void e(java.lang.String) -> e
    java.lang.String j() -> j
    void f(java.lang.String) -> f
    java.lang.String k() -> k
    void g(java.lang.String) -> g
    java.lang.String l() -> l
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void l(java.lang.String) -> l
    void m(java.lang.String) -> m
    void n(java.lang.String) -> n
    org.json.JSONObject m() -> m
    void a(org.json.JSONObject) -> a
    java.lang.String n() -> n
com.aps.d -> b.al:
    com.aps.d a -> a
    java.util.LinkedHashMap b -> b
    com.aps.p c -> c
    long d -> d
    java.io.File b(android.content.Context) -> b
    com.aps.d a(android.content.Context) -> a
    void a(java.lang.String,com.aps.c,java.lang.StringBuilder) -> a
    com.aps.c a(java.lang.String,java.lang.StringBuilder,java.lang.String) -> a
    boolean a(java.lang.String,com.aps.c) -> a
    void a() -> a
    com.aps.d$a a(java.lang.String,java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.StringBuilder) -> a
    void a(java.lang.String,java.util.Hashtable) -> a
    double a(double[],double[]) -> a
com.aps.d$a -> b.am:
    com.aps.c a -> a
    java.lang.String b -> b
    com.aps.c a() -> a
    void a(com.aps.c) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.aps.e -> b.an:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
com.aps.f -> b.ao:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    long i -> i
    long j -> j
    boolean k -> k
    android.util.SparseArray l -> l
    java.lang.String[] m -> m
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(boolean) -> a
com.aps.g -> b.ap:
    java.util.regex.Pattern a -> a
    java.io.File c -> c
    java.io.File d -> d
    java.io.File e -> e
    java.io.File f -> f
    int g -> g
    long h -> h
    int i -> i
    long j -> j
    java.io.Writer k -> k
    java.util.LinkedHashMap l -> l
    int m -> m
    long n -> n
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable o -> o
    java.io.OutputStream p -> p
    com.aps.g a(java.io.File,int,int,long) -> a
    void c() -> c
    void d(java.lang.String) -> d
    void d() -> d
    void e() -> e
    void a(java.io.File) -> a
    void a(java.io.File,java.io.File,boolean) -> a
    com.aps.g$c a(java.lang.String) -> a
    com.aps.g$a b(java.lang.String) -> b
    com.aps.g$a a(java.lang.String,long) -> a
    void a(com.aps.g$a,boolean) -> a
    boolean f() -> f
    boolean c(java.lang.String) -> c
    void g() -> g
    void close() -> close
    void h() -> h
    void a() -> a
    void e(java.lang.String) -> e
    java.io.Writer a(com.aps.g) -> a
    void b(com.aps.g) -> b
    boolean c(com.aps.g) -> c
    void d(com.aps.g) -> d
    int a(com.aps.g,int) -> a
    int e(com.aps.g) -> e
    java.io.File f(com.aps.g) -> f
    java.io.OutputStream b() -> b
    void a(com.aps.g,com.aps.g$a,boolean) -> a
com.aps.g$a -> b.aq:
    com.aps.g$b b -> b
    boolean[] c -> c
    boolean d -> d
    boolean e -> e
    com.aps.g a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.aps.g$b a(com.aps.g$a) -> a
    boolean[] b(com.aps.g$a) -> b
    boolean a(com.aps.g$a,boolean) -> a
com.aps.g$a$a -> b.ar:
    com.aps.g$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.aps.g$b -> b.as:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.aps.g$a e -> e
    long f -> f
    com.aps.g a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.aps.g$b,boolean) -> a
    com.aps.g$a a(com.aps.g$b,com.aps.g$a) -> a
    void a(com.aps.g$b,java.lang.String[]) -> a
    com.aps.g$a a(com.aps.g$b) -> a
    long[] b(com.aps.g$b) -> b
    java.lang.String c(com.aps.g$b) -> c
    boolean d(com.aps.g$b) -> d
    long e(com.aps.g$b) -> e
    long a(com.aps.g$b,long) -> a
com.aps.g$c -> b.at:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    long[] e -> e
    com.aps.g a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.aps.h -> b.au:
    com.aps.g a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.aps.i -> b.av:
    void write(int) -> write
com.aps.j -> b.aw:
    double a -> a
    double b -> b
    float c -> c
    int d -> d
    long e -> e
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
com.aps.k -> b.ax:
    void a(android.content.Context,com.amap.api.location.d) -> a
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.amap.api.location.AMapLocation) -> a
    com.aps.c a() -> a
    void a(com.aps.j,android.app.PendingIntent) -> a
    void b(com.aps.j,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    void b() -> b
com.aps.l -> b.ay:
    com.aps.l a -> a
    com.aps.l a() -> a
    java.lang.String a(android.content.Context,java.lang.String,byte[],java.lang.String) -> a
    java.lang.String a(byte[],android.content.Context,org.json.JSONObject) -> a
    org.apache.http.client.HttpClient a(android.content.Context,android.net.NetworkInfo) -> a
    boolean a(java.lang.String,int) -> a
    int a(android.net.NetworkInfo) -> a
    java.lang.String a(android.telephony.TelephonyManager) -> a
    boolean a(org.apache.http.HttpResponse) -> a
    java.lang.String[] a(org.json.JSONObject) -> a
    java.lang.String b() -> b
    java.lang.String a(byte[],android.content.Context) -> a
com.aps.m -> b.az:
    java.lang.String a(java.lang.String) -> a
    com.aps.c b(java.lang.String) -> b
com.aps.m$1 -> b.ba:
com.aps.m$a -> b.bb:
    com.aps.c a -> a
    java.lang.String b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.aps.m$b -> b.bc:
    java.lang.String a -> a
    boolean b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.aps.n -> b.bd:
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
com.aps.o -> b.be:
    java.lang.String a -> a
    short b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    byte[] A -> A
    byte[] a() -> a
    byte[] a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.lang.String,int) -> a
    void b() -> b
com.aps.p -> b.bf:
    java.util.List a -> a
    com.aps.g b -> b
    int c -> c
    com.aps.p a(java.io.File,int,long) -> a
    java.util.Map a(java.lang.String) -> a
    java.io.OutputStream a(java.lang.String,java.util.Map) -> a
    void b(java.lang.String,java.util.Map) -> b
    java.util.Map a(com.aps.g$c) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.aps.p$1 -> b.bg:
com.aps.p$a -> b.bh:
    com.aps.g$a a -> a
    boolean b -> b
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
com.aps.q -> b.bi:
    com.aps.q a -> a
    java.lang.String a(java.lang.Object,java.lang.String) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(int) -> a
    byte[] b(java.lang.String) -> b
    byte[] b(int) -> b
    byte[] a(long) -> a
com.aps.r -> b.bj:
    java.io.InputStream a -> a
    java.nio.charset.Charset b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    void close() -> close
    java.lang.String a() -> a
    void b() -> b
    java.nio.charset.Charset a(com.aps.r) -> a
com.aps.r$1 -> b.bk:
    com.aps.r a -> a
    java.lang.String toString() -> toString
com.aps.s -> b.bl:
    java.nio.charset.Charset a -> a
    java.nio.charset.Charset b -> b
    void a(java.io.File) -> a
    void a(java.io.Closeable) -> a
com.aps.t -> b.bm:
    void a(java.lang.Object[]) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(java.lang.Throwable) -> a
    boolean a(com.aps.c) -> a
    int a(int) -> a
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    long a() -> a
    boolean a(android.content.Context) -> a
    float a(double[]) -> a
    java.lang.Object b(android.content.Context,java.lang.String) -> b
    void a(org.apache.http.params.HttpParams,int) -> a
    int b() -> b
    byte[] a(byte[]) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
com.aps.u -> b.bn:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.aps.v -> b.bo:
    byte f -> f
    short a -> a
    int b -> b
    byte c -> c
    byte d -> d
    java.util.ArrayList e -> e
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.w -> b.bp:
    boolean a -> a
    java.lang.String b -> b
    boolean c -> c
    double d -> d
    double e -> e
    void d() -> d
    boolean a() -> a
    double b() -> b
    double c() -> c
com.aps.x -> b.bq:
    short a -> a
    int b -> b
    com.aps.z c -> c
    com.aps.v d -> d
    com.aps.ag e -> e
    com.aps.ac f -> f
com.aps.y -> b.br:
    boolean a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object i -> i
    com.aps.y j -> j
    boolean k -> k
    boolean l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    long q -> q
    android.content.Context r -> r
    android.location.LocationManager s -> s
    com.aps.ai t -> t
    com.aps.aw u -> u
    com.aps.bd v -> v
    com.aps.af w -> w
    com.aps.bc x -> x
    com.aps.av y -> y
    com.aps.ab z -> z
    java.lang.Thread A -> A
    android.os.Looper B -> B
    com.aps.at C -> C
    android.location.Location D -> D
    com.aps.as E -> E
    android.os.Handler F -> F
    com.aps.au G -> G
    android.location.LocationListener H -> H
    android.content.BroadcastReceiver I -> I
    android.location.GpsStatus J -> J
    int K -> K
    int L -> L
    java.util.HashMap M -> M
    int N -> N
    int O -> O
    float P -> P
    float Q -> Q
    float R -> R
    float S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    com.aps.y a(android.content.Context) -> a
    void a(int) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    com.aps.ae d() -> d
    void a(com.aps.ae,java.lang.String) -> a
    boolean e() -> e
    int f() -> f
    void n() -> n
    int a(java.util.HashMap) -> a
    double[] a(java.util.List) -> a
    void a(com.aps.y) -> a
    int g() -> g
    int h() -> h
    int i() -> i
    int j() -> j
    int k() -> k
    com.aps.av b(com.aps.y) -> b
    long a(com.aps.y,long) -> a
    android.location.Location a(com.aps.y,android.location.Location) -> a
    boolean c(com.aps.y) -> c
    void a(com.aps.y,android.location.Location,int,long) -> a
    void a(com.aps.y,java.lang.String) -> a
    android.os.Looper a(com.aps.y,android.os.Looper) -> a
    com.aps.as a(com.aps.y,com.aps.as) -> a
    com.aps.as d(com.aps.y) -> d
    android.location.LocationManager e(com.aps.y) -> e
    android.os.Handler a(com.aps.y,android.os.Handler) -> a
    int l() -> l
    android.location.LocationListener f(com.aps.y) -> f
    android.location.Location g(com.aps.y) -> g
    int h(com.aps.y) -> h
    android.location.GpsStatus i(com.aps.y) -> i
    android.location.GpsStatus a(com.aps.y,android.location.GpsStatus) -> a
    int a(com.aps.y,int) -> a
    int b(com.aps.y,int) -> b
    java.util.HashMap a(com.aps.y,java.util.HashMap) -> a
    int m() -> m
    int j(com.aps.y) -> j
    int k(com.aps.y) -> k
    int c(com.aps.y,int) -> c
    com.aps.ai l(com.aps.y) -> l
    int d(com.aps.y,int) -> d
    java.util.HashMap m(com.aps.y) -> m
    int b(com.aps.y,java.util.HashMap) -> b
    android.os.Handler n(com.aps.y) -> n
    int e(com.aps.y,int) -> e
    int o(com.aps.y) -> o
    int a(com.aps.y,com.aps.w,int) -> a
    int p(com.aps.y) -> p
    java.lang.String b(com.aps.y,java.lang.String) -> b
com.aps.z -> b.bs:
    byte k -> k
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    short f -> f
    byte g -> g
    byte h -> h
    long i -> i
    long j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.autonavi.amap.mapcore.AMapNativeRenderer -> com.autonavi.amap.mapcore.AMapNativeRenderer:
    void nativeDrawLineByTextureID(float[],int,float,int,float,float,float,float,float,boolean,boolean,boolean) -> nativeDrawLineByTextureID
    void nativeDrawLineByMultiTextureID(float[],int,float,int[],int,int[],int,float) -> nativeDrawLineByMultiTextureID
    void nativeDrawLineByMultiColor(float[],int,float,int,int[],int,int[],int) -> nativeDrawLineByMultiColor
    void nativeDrawGradientColorLine(float[],int,float,int[],int,int[],int,int) -> nativeDrawGradientColorLine
com.autonavi.amap.mapcore.BaseMapCallImplement -> com.autonavi.amap.mapcore.BaseMapCallImplement:
    java.util.ArrayList roadReqMapGrids -> roadReqMapGrids
    java.util.ArrayList bldReqMapGrids -> bldReqMapGrids
    java.util.ArrayList regionReqMapGrids -> regionReqMapGrids
    java.util.ArrayList poiReqMapGrids -> poiReqMapGrids
    java.util.ArrayList versionMapGrids -> versionMapGrids
    java.util.ArrayList indoorMapGrids -> indoorMapGrids
    java.util.ArrayList vectmcReqMapGirds -> vectmcReqMapGirds
    java.util.ArrayList stiReqMapGirds -> stiReqMapGirds
    java.util.ArrayList curRoadMapGrids -> curRoadMapGrids
    java.util.ArrayList curBldMapGrids -> curBldMapGrids
    java.util.ArrayList curRegionMapGrids -> curRegionMapGrids
    java.util.ArrayList curPoiMapGrids -> curPoiMapGrids
    java.util.ArrayList curVectmcMapGirds -> curVectmcMapGirds
    java.util.ArrayList curStiMapGirds -> curStiMapGirds
    java.util.ArrayList curScreenGirds -> curScreenGirds
    java.util.ArrayList curIndoorMapGirds -> curIndoorMapGirds
    com.autonavi.amap.mapcore.ConnectionManager connectionManager -> connectionManager
    com.autonavi.amap.mapcore.d tileProcessCtrl -> tileProcessCtrl
    com.autonavi.amap.mapcore.TextTextureGenerator textTextureGenerator -> textTextureGenerator
    java.lang.Object mapGridFillLock -> mapGridFillLock
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    java.util.ArrayList getReqGridList(int) -> getReqGridList
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    java.util.ArrayList getCurGridList(int) -> getCurGridList
    boolean isGridsInScreen(java.util.ArrayList,int) -> isGridsInScreen
    boolean isGridInScreen(int,java.lang.String) -> isGridInScreen
    boolean isGridInList(java.lang.String,java.util.ArrayList) -> isGridInList
    boolean isIndoorGridsInScreen(java.util.ArrayList,int) -> isIndoorGridsInScreen
    boolean isIndoorGridInScreen(int,java.lang.String,short) -> isIndoorGridInScreen
    boolean isIndoorGridInList(java.lang.String,java.util.ArrayList) -> isIndoorGridInList
    void proccessRequiredData(com.autonavi.amap.mapcore.MapCore,java.util.ArrayList,int) -> proccessRequiredData
    void OnMapSurfaceCreate(com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void onPause() -> onPause
    void onResume(com.autonavi.amap.mapcore.MapCore) -> onResume
    void OnMapDestory(com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
    void newMap(com.autonavi.amap.mapcore.MapCore) -> newMap
    void destoryMap(com.autonavi.amap.mapcore.MapCore) -> destoryMap
com.autonavi.amap.mapcore.BaseMapLoader -> com.autonavi.amap.mapcore.BaseMapLoader:
    com.autonavi.amap.mapcore.MapCore mGLMapEngine -> mGLMapEngine
    com.autonavi.amap.mapcore.BaseMapCallImplement mMapCallback -> mMapCallback
    java.util.ArrayList mapTiles -> mapTiles
    long createtime -> createtime
    int mapLevel -> mapLevel
    byte[] recievedDataBuffer -> recievedDataBuffer
    int recievedDataSize -> recievedDataSize
    int nextImgDataLength -> nextImgDataLength
    boolean recievedHeader -> recievedHeader
    int mCapaticy -> mCapaticy
    int mCapaticyExt -> mCapaticyExt
    boolean inRequest -> inRequest
    boolean isFinished -> isFinished
    boolean mCanceled -> mCanceled
    int datasource -> datasource
    long m_reqestStartLen -> m_reqestStartLen
    java.net.HttpURLConnection httpURLConnection -> httpURLConnection
    java.lang.String getMapSvrPath() -> getMapSvrPath
    java.lang.String getGridParma() -> getGridParma
    boolean isRequestValid() -> isRequestValid
    java.lang.String getMapAddress() -> getMapAddress
    boolean processReceivedDataHeader(int) -> processReceivedDataHeader
    boolean isNeedProcessReturn() -> isNeedProcessReturn
    void processRecivedVersionOrScenicWidgetData() -> processRecivedVersionOrScenicWidgetData
    void processRecivedDataByType() -> processRecivedDataByType
    void processReceivedTileDataV4(byte[],int,int) -> processReceivedTileDataV4
    java.lang.String getURL(java.lang.String,java.lang.String,java.lang.String) -> getURL
    void initTestTime() -> initTestTime
    void privteTestTime(java.lang.String,java.lang.String) -> privteTestTime
    boolean isAssic(java.lang.String) -> isAssic
    boolean containllegal(java.lang.String) -> containllegal
    void OnException(int) -> OnException
    boolean hasFinished() -> hasFinished
    void doCancel() -> doCancel
    void onConnectionOver() -> onConnectionOver
    void doRequest() -> doRequest
    void onConnectionError(com.autonavi.amap.mapcore.BaseMapLoader,int,java.lang.String) -> onConnectionError
    void onConnectionOpened() -> onConnectionOpened
    void addReuqestTiles(com.autonavi.amap.mapcore.MapSourceGridData) -> addReuqestTiles
    void onConnectionRecieveData(byte[],int) -> onConnectionRecieveData
    void processRecivedData() -> processRecivedData
    void processReceivedDataV4() -> processReceivedDataV4
    void processRecivedTileData(byte[],int,int) -> processRecivedTileData
    void processRecivedVersionData(byte[],int,int) -> processRecivedVersionData
com.autonavi.amap.mapcore.ConnectionManager -> com.autonavi.amap.mapcore.ConnectionManager:
    int MAX_THREAD_COUNT -> MAX_THREAD_COUNT
    boolean threadFlag -> threadFlag
    com.autonavi.amap.mapcore.MapCore mGLMapEngine -> mGLMapEngine
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.ArrayList threadPoolList -> threadPoolList
    java.util.ArrayList connPool -> connPool
    void shutDown() -> shutDown
    void insertConntionTask(com.autonavi.amap.mapcore.BaseMapLoader) -> insertConntionTask
    void checkListPoolOld() -> checkListPoolOld
    void checkListPool() -> checkListPool
    void run() -> run
    void doAsyncRequest() -> doAsyncRequest
com.autonavi.amap.mapcore.Convert -> com.autonavi.amap.mapcore.Convert:
    int getInt(byte[],int) -> getInt
    short getShort(byte[],int) -> getShort
    int getUShort(byte[],int) -> getUShort
    boolean getBit(byte,int) -> getBit
    byte[] copyString(byte[],int,int) -> copyString
    byte[] covertBytes(byte) -> covertBytes
    byte[] convertInt(int) -> convertInt
    int getNum(byte,int,int) -> getNum
    int getNum(short,int,int) -> getNum
    byte[] convertShort(int) -> convertShort
    void writeInt(byte[],int,int) -> writeInt
    void writeShort(byte[],int,short) -> writeShort
    void moveArray(byte[],int,byte[],int,int) -> moveArray
    java.lang.String getString(byte[],int,int) -> getString
    byte[] getSubBytes(byte[],int,int) -> getSubBytes
    byte[] get1BString(java.lang.String) -> get1BString
    byte[] get2BString(java.lang.String) -> get2BString
    double convertDouble(byte[],int) -> convertDouble
    byte[] getDouble(double) -> getDouble
    void convert1bString(byte[],int,com.autonavi.amap.mapcore.b) -> convert1bString
    void convert2bString(byte[],int,com.autonavi.amap.mapcore.b) -> convert2bString
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.autonavi.amap.mapcore.CoordUtil -> com.autonavi.amap.mapcore.CoordUtil:
    int convertToGcj(double[],double[]) -> convertToGcj
com.autonavi.amap.mapcore.DPoint -> com.autonavi.amap.mapcore.DPoint:
    double x -> x
    double y -> y
com.autonavi.amap.mapcore.ERROR_CODE -> com.autonavi.amap.mapcore.ERROR_CODE:
    int CONN_CREATE_FALSE -> CONN_CREATE_FALSE
    int CONN_ERROR -> CONN_ERROR
    int ERROR_NONE -> ERROR_NONE
    int CANCEL_ERROR -> CANCEL_ERROR
com.autonavi.amap.mapcore.FPoint -> com.autonavi.amap.mapcore.FPoint:
    float x -> x
    float y -> y
    boolean equals(java.lang.Object) -> equals
com.autonavi.amap.mapcore.FileUtil -> com.autonavi.amap.mapcore.FileUtil:
    java.lang.String TAG -> TAG
    void copy(android.content.Context,java.lang.String,java.io.File) -> copy
    void deleteFile(java.io.File) -> deleteFile
    java.lang.String getMapBaseStorage(android.content.Context) -> getMapBaseStorage
    java.lang.String getExternalStroragePath(android.content.Context) -> getExternalStroragePath
    void writeDatasToFile(java.lang.String,byte[]) -> writeDatasToFile
    byte[] readFileContents(java.lang.String) -> readFileContents
    void createNoMediaFileIfNotExist(java.lang.String) -> createNoMediaFileIfNotExist
com.autonavi.amap.mapcore.GLMapResManager -> com.autonavi.amap.mapcore.GLMapResManager:
    int TEXTURE_ICON -> TEXTURE_ICON
    int TEXTURE_BACKGROUND -> TEXTURE_BACKGROUND
    int TEXTURE_ROADARROW -> TEXTURE_ROADARROW
    int TEXTURE_ROADROUND -> TEXTURE_ROADROUND
    int TEXTURE_TMC_RED -> TEXTURE_TMC_RED
    int TEXTURE_TMC_YELLOW -> TEXTURE_TMC_YELLOW
    int TEXTURE_TMC_GREEN -> TEXTURE_TMC_GREEN
    int TEXTURE_TMC_BLACK -> TEXTURE_TMC_BLACK
    int TEXTURE_TMC_GRAY -> TEXTURE_TMC_GRAY
    int TEXTURE_RAILWAY -> TEXTURE_RAILWAY
    int TEXTURE_TIANQIAO -> TEXTURE_TIANQIAO
    int TEXTURE_CHANGDUAN -> TEXTURE_CHANGDUAN
    int TEXTURE_HK_GAOSU_GUIDE_BOARD -> TEXTURE_HK_GAOSU_GUIDE_BOARD
    int TEXTURE_GJ_GAOSU_GUIDE_BOARD -> TEXTURE_GJ_GAOSU_GUIDE_BOARD
    int TEXTURE_SHENG_GAOSU_GUIDE_BOARD -> TEXTURE_SHENG_GAOSU_GUIDE_BOARD
    int TEXTURE_GUODAO_GUIDE_BOARD -> TEXTURE_GUODAO_GUIDE_BOARD
    int TEXTURE_SHENGDAO_GUIDE_BOARD -> TEXTURE_SHENGDAO_GUIDE_BOARD
    int TEXTURE_XIANDAO_GUIDE_BOARD -> TEXTURE_XIANDAO_GUIDE_BOARD
    int TEXTURE_XIANGDAO_GUIDE_BOARD -> TEXTURE_XIANGDAO_GUIDE_BOARD
    int TEXTURE_TOP_COVER -> TEXTURE_TOP_COVER
    int TEXTURE_BIG_ICON -> TEXTURE_BIG_ICON
    int TEXTURE_INDOORICON -> TEXTURE_INDOORICON
    int AM_STYLEDATA_INDOOR -> AM_STYLEDATA_INDOOR
    boolean isBigIcon -> isBigIcon
    com.amap.api.mapcore.AMapDelegateImp mapDelegateImp -> mapDelegateImp
    android.content.Context mContext -> mContext
    com.autonavi.amap.mapcore.MapCore mMapCore -> mMapCore
    java.lang.String styleName1 -> styleName1
    java.lang.String styleName2 -> styleName2
    java.lang.String styleName3 -> styleName3
    java.lang.String styleName4 -> styleName4
    java.lang.String styleName5 -> styleName5
    java.lang.String styleName6 -> styleName6
    java.lang.String styleName7 -> styleName7
    java.lang.String styleName8 -> styleName8
    java.lang.String styleName9 -> styleName9
    java.lang.String iconName1 -> iconName1
    java.lang.String iconName2 -> iconName2
    java.lang.String iconName3 -> iconName3
    java.lang.String iconName4 -> iconName4
    java.lang.String styleName50 -> styleName50
    java.lang.String iconName50 -> iconName50
    int AM_STYLE_DATA_TYPE_BASE_MAP -> AM_STYLE_DATA_TYPE_BASE_MAP
    int AM_DATA_FORMAT_TYPE_GZIP -> AM_DATA_FORMAT_TYPE_GZIP
    void setStyleData() -> setStyleData
    void setIconsData(boolean) -> setIconsData
    java.lang.String getBigIconName(java.lang.String) -> getBigIconName
    java.lang.String getStyleName() -> getStyleName
    java.lang.String getIconName() -> getIconName
    void setTrafficTexture(boolean) -> setTrafficTexture
    void setBkTexture(boolean) -> setBkTexture
    void setRoadGuideTexture(boolean) -> setRoadGuideTexture
    void setOtherMapTexture(boolean) -> setOtherMapTexture
    com.autonavi.amap.mapcore.MapCore access$000(com.autonavi.amap.mapcore.GLMapResManager) -> access$000
com.autonavi.amap.mapcore.GLMapResManager$1 -> com.autonavi.amap.mapcore.GLMapResManager$1:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    com.autonavi.amap.mapcore.GLMapResManager d -> d
    void run() -> run
com.autonavi.amap.mapcore.GLMapResManager$2 -> com.autonavi.amap.mapcore.GLMapResManager$2:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    byte[] d -> d
    byte[] e -> e
    com.autonavi.amap.mapcore.GLMapResManager f -> f
    void run() -> run
com.autonavi.amap.mapcore.GLMapResManager$3 -> com.autonavi.amap.mapcore.GLMapResManager$3:
    byte[] a -> a
    byte[] b -> b
    com.autonavi.amap.mapcore.GLMapResManager c -> c
    void run() -> run
com.autonavi.amap.mapcore.GLMapResManager$4 -> com.autonavi.amap.mapcore.GLMapResManager$4:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    byte[] d -> d
    byte[] e -> e
    com.autonavi.amap.mapcore.GLMapResManager f -> f
    void run() -> run
com.autonavi.amap.mapcore.GLMapResManager$MapViewMode -> com.autonavi.amap.mapcore.GLMapResManager$MapViewMode:
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode NORAML -> NORAML
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode SATELLITE -> SATELLITE
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode BUS -> BUS
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode[] $VALUES -> $VALUES
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode[] values() -> values
    com.autonavi.amap.mapcore.GLMapResManager$MapViewMode valueOf(java.lang.String) -> valueOf
com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState -> com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState:
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState NORMAL -> NORMAL
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState PREVIEW_CAR -> PREVIEW_CAR
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState PREVIEW_BUS -> PREVIEW_BUS
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState PREVIEW_FOOT -> PREVIEW_FOOT
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState NAVI_CAR -> NAVI_CAR
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState NAVI_BUS -> NAVI_BUS
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState NAVI_FOOT -> NAVI_FOOT
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState[] $VALUES -> $VALUES
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState[] values() -> values
    com.autonavi.amap.mapcore.GLMapResManager$MapViewModeState valueOf(java.lang.String) -> valueOf
com.autonavi.amap.mapcore.GLMapResManager$MapViewTime -> com.autonavi.amap.mapcore.GLMapResManager$MapViewTime:
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime DAY -> DAY
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime NIGHT -> NIGHT
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime[] $VALUES -> $VALUES
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime[] values() -> values
    com.autonavi.amap.mapcore.GLMapResManager$MapViewTime valueOf(java.lang.String) -> valueOf
com.autonavi.amap.mapcore.IBaseMapCallback -> com.autonavi.amap.mapcore.IBaseMapCallback:
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
com.autonavi.amap.mapcore.IMapCallback -> com.autonavi.amap.mapcore.IMapCallback:
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    void requestRender() -> requestRender
    void onIndoorBuildingActivity(com.autonavi.amap.mapcore.MapCore,byte[]) -> onIndoorBuildingActivity
    void onIndoorDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[],int[],int[]) -> onIndoorDataRequired
com.autonavi.amap.mapcore.IPoint -> com.autonavi.amap.mapcore.IPoint:
    int x -> x
    int y -> y
    java.lang.Object clone() -> clone
com.autonavi.amap.mapcore.IndoorMapLoader -> com.autonavi.amap.mapcore.IndoorMapLoader:
    java.lang.String mIndoorChannel -> mIndoorChannel
    java.lang.String IndoorSignKey -> IndoorSignKey
    int getInt2(byte[],int) -> getInt2
    short getShort2(byte[],int) -> getShort2
    java.lang.String getIndoorMD5Params(java.lang.String) -> getIndoorMD5Params
    java.lang.String getIndoorRequestParams() -> getIndoorRequestParams
    java.lang.String assScodeToParma(java.lang.StringBuffer) -> assScodeToParma
    java.lang.String getGridParma() -> getGridParma
    java.lang.String getMapAddress() -> getMapAddress
    java.lang.String getMapSvrPath() -> getMapSvrPath
    boolean isRequestValid() -> isRequestValid
    void processReceivedIndoorData() -> processReceivedIndoorData
    void processReceivedTileDataV4(byte[],int,int) -> processReceivedTileDataV4
    void processRecivedVersionOrScenicWidgetData() -> processRecivedVersionOrScenicWidgetData
    boolean processReceivedDataHeader(int) -> processReceivedDataHeader
    boolean isNeedProcessReturn() -> isNeedProcessReturn
    void processRecivedDataByType() -> processRecivedDataByType
com.autonavi.amap.mapcore.MapCore -> com.autonavi.amap.mapcore.MapCore:
    int TEXTURE_ICON -> TEXTURE_ICON
    int TEXTURE_BACKGROUND -> TEXTURE_BACKGROUND
    int TEXTURE_ROADARROW -> TEXTURE_ROADARROW
    int TEXTURE_ROADROUND -> TEXTURE_ROADROUND
    int TEXTURE_TMC_RED -> TEXTURE_TMC_RED
    int TEXTURE_TMC_YELLOW -> TEXTURE_TMC_YELLOW
    int TEXTURE_TMC_GREEN -> TEXTURE_TMC_GREEN
    int TEXTURE_TMC_BLACK -> TEXTURE_TMC_BLACK
    int TEXTURE_RAILWAY -> TEXTURE_RAILWAY
    int AM_DATA_ROADMAP -> AM_DATA_ROADMAP
    int AM_DATA_GEO_BUILDING -> AM_DATA_GEO_BUILDING
    int AM_DATA_BMP_BASEMAP -> AM_DATA_BMP_BASEMAP
    int AM_DATA_SATELLITE -> AM_DATA_SATELLITE
    int AM_DATA_VEC_TMC -> AM_DATA_VEC_TMC
    int AM_DATA_SCREEN -> AM_DATA_SCREEN
    int AM_DATA_MODEL -> AM_DATA_MODEL
    int AM_DATA_STANDARD -> AM_DATA_STANDARD
    int AM_DATA_POI -> AM_DATA_POI
    int AM_DATA_VERSION -> AM_DATA_VERSION
    int AM_DATA_INDOOR -> AM_DATA_INDOOR
    int AM_DATA_GUIDE -> AM_DATA_GUIDE
    int AM_DATA_SCENIC_WIDGET -> AM_DATA_SCENIC_WIDGET
    int MAPRENDER_ENTER -> MAPRENDER_ENTER
    int MAPRENDER_BASEMAPBEGIN -> MAPRENDER_BASEMAPBEGIN
    int MAPRENDER_BUILDINGBEGIN -> MAPRENDER_BUILDINGBEGIN
    int MAPRENDER_LABELSBEGIN -> MAPRENDER_LABELSBEGIN
    int MAPRENDER_RENDEROVER -> MAPRENDER_RENDEROVER
    int MAPRENDER_NOMORENEEDRENDER -> MAPRENDER_NOMORENEEDRENDER
    android.content.Context mContext -> mContext
    com.autonavi.amap.mapcore.IMapCallback mMapcallback -> mMapcallback
    com.autonavi.amap.mapcore.TextTextureGenerator textTextureGenerator -> textTextureGenerator
    long native_instance -> native_instance
    javax.microedition.khronos.opengles.GL10 mGL -> mGL
    byte[] tmp_3072bytes_data -> tmp_3072bytes_data
    void newMap() -> newMap
    android.content.Context getContext() -> getContext
    void setGL(javax.microedition.khronos.opengles.GL10) -> setGL
    void setMapCallback(com.autonavi.amap.mapcore.IMapCallback) -> setMapCallback
    boolean isMapEngineValid() -> isMapEngineValid
    void surfaceCreate(javax.microedition.khronos.opengles.GL10) -> surfaceCreate
    void surfaceChange(javax.microedition.khronos.opengles.GL10,int,int) -> surfaceChange
    void drawFrame(javax.microedition.khronos.opengles.GL10) -> drawFrame
    void setStyleData(byte[],int,int) -> setStyleData
    void setInternaltexture(byte[],int) -> setInternaltexture
    long getInstanceHandle() -> getInstanceHandle
    com.autonavi.amap.mapcore.MapProjection getMapstate() -> getMapstate
    void setMapstate(com.autonavi.amap.mapcore.MapProjection) -> setMapstate
    void setParameter(int,int,int,int,int) -> setParameter
    void setIndoorBuildingToBeActive(java.lang.String,int,java.lang.String) -> setIndoorBuildingToBeActive
    boolean putMapData(byte[],int,int,int,int) -> putMapData
    int getLabelBuffer(int,int,int,byte[]) -> getLabelBuffer
    com.autonavi.amap.mapcore.SelectedMapPoi GetSelectedMapPoi(int,int,int) -> GetSelectedMapPoi
    void putCharbitmap(int,byte[]) -> putCharbitmap
    boolean canStopRenderMap() -> canStopRenderMap
    void OnMapSurfaceCreate() -> OnMapSurfaceCreate
    void OnMapSufaceChanged(int,int) -> OnMapSufaceChanged
    void OnMapSurfaceRenderer(int) -> OnMapSurfaceRenderer
    void OnMapProcessEvent() -> OnMapProcessEvent
    void OnMapDestory() -> OnMapDestory
    void OnMapDataRequired(int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(int[],int) -> OnMapLabelsRequired
    byte[] OnMapCharsWidthsRequired(int[],int,int) -> OnMapCharsWidthsRequired
    void OnMapReferencechanged(java.lang.String,java.lang.String) -> OnMapReferencechanged
    void onIndoorBuildingActivity(byte[]) -> onIndoorBuildingActivity
    void onIndoorDataRequired(int,java.lang.String[],int[],int[]) -> onIndoorDataRequired
    void destroy() -> destroy
    void fillCurGridListWithDataType(java.util.ArrayList,int) -> fillCurGridListWithDataType
    long nativeNewInstance(java.lang.String,java.lang.String) -> nativeNewInstance
    void nativeDestroy(long,com.autonavi.amap.mapcore.MapCore) -> nativeDestroy
    void nativeSetStyleData(long,byte[],int,int) -> nativeSetStyleData
    void nativeSetInternaltexture(long,byte[],int) -> nativeSetInternaltexture
    void nativeSurfaceCreate(long,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceCreate
    void nativeSurfaceChange(long,com.autonavi.amap.mapcore.MapCore,int,int) -> nativeSurfaceChange
    void nativeSurfaceRenderMap(long,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceRenderMap
    void nativeSetMapstate(long,long) -> nativeSetMapstate
    long nativeGetMapstate(long) -> nativeGetMapstate
    int nativeGetSelectedMapPois(long,int,int,int,byte[]) -> nativeGetSelectedMapPois
    void nativeSetparameter(long,int,int,int,int,int) -> nativeSetparameter
    int nativePutMapdata(long,int,byte[]) -> nativePutMapdata
    void nativePutCharbitmap(long,int,byte[]) -> nativePutCharbitmap
    void nativeGetScreenGrids(long,byte[],int) -> nativeGetScreenGrids
    void nativeChangeMapEnv(long,java.lang.String) -> nativeChangeMapEnv
    void nativeSetInternalTexture(long,byte[],int) -> nativeSetInternalTexture
    void nativeSetCityBound(long,byte[]) -> nativeSetCityBound
    boolean nativeCanStopRenderMap(long) -> nativeCanStopRenderMap
    int nativePutMapdata(long,int,byte[],int) -> nativePutMapdata
    void nativeSetParmater(long,int,int,int,int,int) -> nativeSetParmater
    int nativeGetMapStateInstance(long) -> nativeGetMapStateInstance
    int nativeSelectMapPois(long,int,int,int,byte[]) -> nativeSelectMapPois
    void nativeAddPoiFilter(long,int,int,int,float,float,java.lang.String) -> nativeAddPoiFilter
    void nativeRemovePoiFilter(long,java.lang.String) -> nativeRemovePoiFilter
    void nativeClearPoiFilter(long) -> nativeClearPoiFilter
    void nativeSetIndoorBuildingToBeActive(long,java.lang.String,int,java.lang.String) -> nativeSetIndoorBuildingToBeActive
com.autonavi.amap.mapcore.MapCoreManager -> com.autonavi.amap.mapcore.MapCoreManager:
    java.util.Hashtable mapCoreTable -> mapCoreTable
    com.autonavi.amap.mapcore.MapCoreManager mapCoreManager -> mapCoreManager
    com.autonavi.amap.mapcore.MapCoreManager getInstance() -> getInstance
    void putMapCore(int,com.autonavi.amap.mapcore.MapCore) -> putMapCore
    com.autonavi.amap.mapcore.MapCore getMapCore(int) -> getMapCore
    void removeMapCore(int) -> removeMapCore
    int getMapCoreSize() -> getMapCoreSize
    void OnMapDataRequired(int,java.lang.String[],int) -> OnMapDataRequired
    void OnMapLabelsRequired(int[],int,int) -> OnMapLabelsRequired
    void onIndoorBuildingActivity(byte[],int) -> onIndoorBuildingActivity
    void onIndoorDataRequired(int,java.lang.String[],int[],int[],int) -> onIndoorDataRequired
com.autonavi.amap.mapcore.MapProjection -> com.autonavi.amap.mapcore.MapProjection:
    long native_instance -> native_instance
    boolean m_bNewInstance -> m_bNewInstance
    void recycle() -> recycle
    long getInstanceHandle() -> getInstanceHandle
    void getBound(com.autonavi.amap.mapcore.IPoint) -> getBound
    void setGeoCenter(int,int) -> setGeoCenter
    void getGeoCenter(com.autonavi.amap.mapcore.IPoint) -> getGeoCenter
    void setMapCenter(float,float) -> setMapCenter
    void getMapCenter(com.autonavi.amap.mapcore.FPoint) -> getMapCenter
    void setMapZoomer(float) -> setMapZoomer
    float getMapZoomer() -> getMapZoomer
    void setMapAngle(float) -> setMapAngle
    float getMapAngle() -> getMapAngle
    void setCameraHeaderAngle(float) -> setCameraHeaderAngle
    float getCameraHeaderAngle() -> getCameraHeaderAngle
    void geo2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> geo2Map
    void map2Win(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Win
    void win2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> win2Map
    float getMapLenWithWinbyY(int,int) -> getMapLenWithWinbyY
    float getMapLenWithWin(int) -> getMapLenWithWin
    void map2Geo(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Geo
    void setCenterWithMap(float,float) -> setCenterWithMap
    void getCenterMap(com.autonavi.amap.mapcore.FPoint) -> getCenterMap
    void lonlat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> lonlat2Geo
    void geo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> geo2LonLat
    float getMapLenWithGeo(int) -> getMapLenWithGeo
    void recalculate() -> recalculate
    long nativeNewInstance(long) -> nativeNewInstance
    void nativeDestroy(long) -> nativeDestroy
    void nativeGetBound(long,com.autonavi.amap.mapcore.IPoint) -> nativeGetBound
    void nativeSetGeoCenter(long,int,int) -> nativeSetGeoCenter
    void nativeGetGeoCenter(long,com.autonavi.amap.mapcore.IPoint) -> nativeGetGeoCenter
    void nativeSetMapCenter(long,float,float) -> nativeSetMapCenter
    void nativeGetMapCenter(long,com.autonavi.amap.mapcore.FPoint) -> nativeGetMapCenter
    void nativeSetMapZoomer(long,float) -> nativeSetMapZoomer
    float nativeGetMapZoomer(long) -> nativeGetMapZoomer
    void nativeSetMapAngle(long,float) -> nativeSetMapAngle
    float nativeGetMapAngle(long) -> nativeGetMapAngle
    void nativeSetCameraHeaderAngle(long,float) -> nativeSetCameraHeaderAngle
    float nativeGetCameraHeaderAngle(long) -> nativeGetCameraHeaderAngle
    void nativeGeo2Map(long,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeGeo2Map
    void nativeMap2Win(long,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Win
    void nativeWin2Map(long,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeWin2Map
    float nativeGetMapLenWithWinbyY(long,int,int) -> nativeGetMapLenWithWinbyY
    float nativeGetMapLenWithWin(long,int) -> nativeGetMapLenWithWin
    void nativeMap2Geo(long,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Geo
    void nativeSetCenterWithMap(long,float,float) -> nativeSetCenterWithMap
    void nativeGetCenterMap(long,com.autonavi.amap.mapcore.FPoint) -> nativeGetCenterMap
    void nativeLonLat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> nativeLonLat2Geo
    void nativeGeo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> nativeGeo2LonLat
    float nativeGetMapLenWithGeo(long,int) -> nativeGetMapLenWithGeo
    void nativeRecalculate(long) -> nativeRecalculate
com.autonavi.amap.mapcore.MapSourceGridData -> com.autonavi.amap.mapcore.MapSourceGridData:
    java.lang.String gridName -> gridName
    int sourceType -> sourceType
    java.lang.Object obj -> obj
    java.lang.String keyGridName -> keyGridName
    int mIndoorIndex -> mIndoorIndex
    int mIndoorVersion -> mIndoorVersion
    java.lang.String getKeyGridName() -> getKeyGridName
    int getSourceType() -> getSourceType
    java.lang.String getGridName() -> getGridName
com.autonavi.amap.mapcore.MapTilsCacheAndResManager -> com.autonavi.amap.mapcore.MapTilsCacheAndResManager:
    int STYLE_DATA -> STYLE_DATA
    int ICONS_DATA -> ICONS_DATA
    java.lang.String AUTONAVI_PATH -> AUTONAVI_PATH
    java.lang.String AUTONAVI_DATA_PATH -> AUTONAVI_DATA_PATH
    java.lang.String MAP_DATA_OFFLINE_PATH_NAME -> MAP_DATA_OFFLINE_PATH_NAME
    java.lang.String MAP_CACHE_PATH_NAME -> MAP_CACHE_PATH_NAME
    java.lang.String MAP_TILES_PATH_NAME -> MAP_TILES_PATH_NAME
    java.lang.String MAP_RES_EXT_PATH_NAME -> MAP_RES_EXT_PATH_NAME
    java.lang.String MAP_MAP_ASSETS_NAME -> MAP_MAP_ASSETS_NAME
    com.autonavi.amap.mapcore.MapTilsCacheAndResManager getInstance(android.content.Context) -> getInstance
    void checkDir() -> checkDir
    void clearOnlineMapTilsCache() -> clearOnlineMapTilsCache
    java.lang.String getBaseMapPath() -> getBaseMapPath
    java.lang.String getMapCachePath() -> getMapCachePath
    java.lang.String getMapOnlineDataPath() -> getMapOnlineDataPath
    java.lang.String getMapExtResPath() -> getMapExtResPath
    java.lang.String getMapOfflineDataPath() -> getMapOfflineDataPath
    byte[] getStyleData(java.lang.String,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getStyleData
    byte[] getIconsData(java.lang.String,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getIconsData
    byte[] getOtherResData(java.lang.String) -> getOtherResData
    void saveFile(java.lang.String,int,int,byte[]) -> saveFile
    boolean canUpate(java.lang.String) -> canUpate
com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile -> com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile:
    java.lang.String fullName -> fullName
    java.lang.String name -> name
    int serverVersion -> serverVersion
    int clientVersion -> clientVersion
    int type -> type
com.autonavi.amap.mapcore.MapTilsCacheAndResManagerImpl -> com.autonavi.amap.mapcore.MapTilsCacheAndResManagerImpl:
    com.autonavi.amap.mapcore.MapTilsCacheAndResManagerImpl instance -> instance
    android.content.Context mContext -> mContext
    java.lang.String mMapBaseDataPath -> mMapBaseDataPath
    java.lang.String mMapOfflinePath -> mMapOfflinePath
    java.lang.String mCachePath -> mCachePath
    java.lang.String mMapOnlineTilesPath -> mMapOnlineTilesPath
    java.lang.String mMapExtResPath -> mMapExtResPath
    long Style_Update_Internal_Time -> Style_Update_Internal_Time
    int CREATE_DIR_COUNT -> CREATE_DIR_COUNT
    com.autonavi.amap.mapcore.MapTilsCacheAndResManagerImpl instance(android.content.Context) -> instance
    void reset() -> reset
    java.lang.String getBaseMapPath() -> getBaseMapPath
    java.lang.String getMapCachePath() -> getMapCachePath
    java.lang.String getMapOnlineDataPath() -> getMapOnlineDataPath
    java.lang.String getMapOfflineDataPath() -> getMapOfflineDataPath
    java.lang.String getMapExtResPath() -> getMapExtResPath
    byte[] getStyleData(java.lang.String,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getStyleData
    byte[] getIconsData(java.lang.String,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getIconsData
    byte[] getOtherResData(java.lang.String) -> getOtherResData
    void init() -> init
    void initRelease() -> initRelease
    void initDebug() -> initDebug
    void saveFile(java.lang.String,int,int,byte[]) -> saveFile
    java.lang.String getFilePreName(java.lang.String) -> getFilePreName
    void setRetFile(com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile,java.lang.String) -> setRetFile
    byte[] getStyleIconsData(java.lang.String,int,com.autonavi.amap.mapcore.MapTilsCacheAndResManager$RetStyleIconsFile) -> getStyleIconsData
    void copyAssertToTmp(android.content.Context,java.lang.String,java.io.File) -> copyAssertToTmp
    void checkDir() -> checkDir
    void clearOnlineMapTilsCache() -> clearOnlineMapTilsCache
    void addUdateRecorder(java.lang.String) -> addUdateRecorder
    boolean canUpate(java.lang.String) -> canUpate
com.autonavi.amap.mapcore.Md5Utility -> com.autonavi.amap.mapcore.Md5Utility:
    java.lang.String hexdigest(java.lang.String) -> hexdigest
    java.lang.String getFileMD5(java.lang.String) -> getFileMD5
    java.lang.String getFileMD5(java.io.File) -> getFileMD5
    java.lang.String getStringMD5(java.lang.String) -> getStringMD5
    java.lang.String getCharArrayMD5(char[]) -> getCharArrayMD5
    java.lang.String getByteArrayMD5(byte[]) -> getByteArrayMD5
com.autonavi.amap.mapcore.NormalMapLoader -> com.autonavi.amap.mapcore.NormalMapLoader:
    java.lang.String getGridParmaV4() -> getGridParmaV4
    java.lang.String getGridParma() -> getGridParma
    java.lang.String getMapSvrPath() -> getMapSvrPath
    java.lang.String getMapAddress() -> getMapAddress
    boolean isRequestValid() -> isRequestValid
    void processRecivedVersionOrScenicWidgetData() -> processRecivedVersionOrScenicWidgetData
    void processRecivedDataByType() -> processRecivedDataByType
    boolean processReceivedDataHeader(int) -> processReceivedDataHeader
    boolean isNeedProcessReturn() -> isNeedProcessReturn
    void processRecivedTileData(byte[],int,int) -> processRecivedTileData
    void processRecivedTileDataBmp(byte[],int,int) -> processRecivedTileDataBmp
    void processRecivedTileDataVTmc(byte[],int,int) -> processRecivedTileDataVTmc
    void processRecivedModels(byte[],int,int) -> processRecivedModels
com.autonavi.amap.mapcore.ResUtil -> com.autonavi.amap.mapcore.ResUtil:
    android.graphics.Bitmap decodeBitmapWithAdaptiveSize(android.content.Context,int) -> decodeBitmapWithAdaptiveSize
    android.graphics.Bitmap decodeAssetBitmap(android.content.Context,java.lang.String) -> decodeAssetBitmap
    android.graphics.Bitmap decodeAssetBitmapWithSize(android.content.Context,java.lang.String,int,int) -> decodeAssetBitmapWithSize
    byte[] decodeAssetResData(android.content.Context,java.lang.String) -> decodeAssetResData
    int dipToPixel(android.content.Context,int) -> dipToPixel
    int spToPixel(android.content.Context,int) -> spToPixel
    java.lang.String getString(android.content.Context,int) -> getString
com.autonavi.amap.mapcore.SelectedMapPoi -> com.autonavi.amap.mapcore.SelectedMapPoi:
    int winx -> winx
    int winy -> winy
    int mapx -> mapx
    int mapy -> mapy
    int iconXmin -> iconXmin
    int iconXmax -> iconXmax
    int iconYmin -> iconYmin
    int iconYmax -> iconYmax
    java.lang.String name -> name
    java.lang.String poiid -> poiid
com.autonavi.amap.mapcore.SingalThread -> com.autonavi.amap.mapcore.SingalThread:
    java.util.concurrent.locks.Lock mLock -> mLock
    java.util.concurrent.locks.Condition mWaiting -> mWaiting
    boolean isWaiting -> isWaiting
    java.lang.String logTag -> logTag
    void doWait() -> doWait
    void doAwake() -> doAwake
com.autonavi.amap.mapcore.TextTextureGenerator -> com.autonavi.amap.mapcore.TextTextureGenerator:
    int TEXT_FONTSIZE -> TEXT_FONTSIZE
    int TEXT_FONTSIZE_TRUE -> TEXT_FONTSIZE_TRUE
    int AN_LABEL_MAXCHARINLINE -> AN_LABEL_MAXCHARINLINE
    int AN_LABEL_MULITYLINE_SPAN -> AN_LABEL_MULITYLINE_SPAN
    int ALIGNCENTER -> ALIGNCENTER
    int ALIGNLEFT -> ALIGNLEFT
    int ALIGNRIGHT -> ALIGNRIGHT
    float base_line -> base_line
    float start_x -> start_x
    android.graphics.Paint text_paint -> text_paint
    int GetNearstSize2N(int) -> GetNearstSize2N
    byte[] getTextPixelBuffer(int) -> getTextPixelBuffer
    byte[] getCharsWidths(int[]) -> getCharsWidths
    android.graphics.Paint newPaint(java.lang.String,int,int) -> newPaint
    float getFontlength(android.graphics.Paint,java.lang.String) -> getFontlength
    float getFontHeight(android.graphics.Paint) -> getFontHeight
    void generaAsccIITexturePng() -> generaAsccIITexturePng
    java.lang.String getFontVersion() -> getFontVersion
com.autonavi.amap.mapcore.VMapDataCache -> com.autonavi.amap.mapcore.VMapDataCache:
    int MAXSIZE -> MAXSIZE
    java.util.HashMap vMapDataHs -> vMapDataHs
    java.util.ArrayList vMapDataList -> vMapDataList
    java.util.HashMap vCancelMapDataHs -> vCancelMapDataHs
    java.util.ArrayList vCancelMapDataList -> vCancelMapDataList
    com.autonavi.amap.mapcore.VMapDataCache instance -> instance
    com.autonavi.amap.mapcore.VMapDataCache getInstance() -> getInstance
    void reset() -> reset
    int getSize() -> getSize
    java.lang.String getKey(java.lang.String,int) -> getKey
    com.autonavi.amap.mapcore.e getRecoder(java.lang.String,int) -> getRecoder
    com.autonavi.amap.mapcore.e getCancelRecoder(java.lang.String,int) -> getCancelRecoder
    com.autonavi.amap.mapcore.e putRecoder(byte[],java.lang.String,int) -> putRecoder
    com.autonavi.amap.mapcore.e putCancelRecoder(byte[],java.lang.String,int) -> putCancelRecoder
com.autonavi.amap.mapcore.VTMCDataCache -> com.autonavi.amap.mapcore.VTMCDataCache:
    int MAXSIZE -> MAXSIZE
    int MAX_EXPIREDTIME -> MAX_EXPIREDTIME
    java.util.Hashtable vtmcHs -> vtmcHs
    java.util.ArrayList vtmcList -> vtmcList
    com.autonavi.amap.mapcore.VTMCDataCache instance -> instance
    int mNewestTimeStamp -> mNewestTimeStamp
    com.autonavi.amap.mapcore.VTMCDataCache getInstance() -> getInstance
    void reset() -> reset
    int getSize() -> getSize
    void deleteData(java.lang.String) -> deleteData
    com.autonavi.amap.mapcore.f getData(java.lang.String,boolean) -> getData
    com.autonavi.amap.mapcore.f putData(byte[]) -> putData
com.autonavi.amap.mapcore.a -> com.autonavi.amap.mapcore.a:
    com.autonavi.amap.mapcore.BaseMapLoader a -> a
    void run() -> run
com.autonavi.amap.mapcore.b -> com.autonavi.amap.mapcore.b:
    int a -> a
    java.lang.String b -> b
com.autonavi.amap.mapcore.c -> com.autonavi.amap.mapcore.c:
    java.lang.String a -> a
    int b -> b
com.autonavi.amap.mapcore.d -> com.autonavi.amap.mapcore.d:
    java.util.Hashtable d -> d
    int a -> a
    long b -> b
    boolean c -> c
    void a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a() -> a
    void b() -> b
com.autonavi.amap.mapcore.e -> com.autonavi.amap.mapcore.e:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
com.autonavi.amap.mapcore.f -> com.autonavi.amap.mapcore.f:
    byte[] a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    void a(int) -> a
com.baidu.android.bbalbs.common.a.a -> com.baidu.android.bbalbs.common.a.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.android.bbalbs.common.a.b -> com.baidu.android.bbalbs.common.a.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.bbalbs.common.a.c -> com.baidu.android.bbalbs.common.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.android.bbalbs.common.util.CommonParam -> com.baidu.android.bbalbs.common.util.CommonParam:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.android.bbalbs.common.util.a -> com.baidu.android.bbalbs.common.util.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.android.bbalbs.common.util.a$a -> com.baidu.android.bbalbs.common.util.a$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.android.bbalbs.common.util.a$a a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.ErrorMessage -> com.baidu.lbsapi.auth.ErrorMessage:
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.LBSAuthManager -> com.baidu.lbsapi.auth.LBSAuthManager:
    boolean debug -> debug
    int CODE_UNAUTHENTICATE -> CODE_UNAUTHENTICATE
    int CODE_AUTHENTICATING -> CODE_AUTHENTICATING
    int CODE_AUTHENTICATE_SUCC -> CODE_AUTHENTICATE_SUCC
    int CODE_INNER_ERROR -> CODE_INNER_ERROR
    java.lang.String VERSION -> VERSION
    java.lang.String API_KEY -> API_KEY
    java.lang.String CACHE_FILE_NAME -> CACHE_FILE_NAME
    java.lang.String CACHE_KEY -> CACHE_KEY
    java.lang.String AUTH_URL -> AUTH_URL
    android.content.Context mContext -> mContext
    com.baidu.lbsapi.auth.c mHttpAsyncTask -> mHttpAsyncTask
    com.baidu.lbsapi.auth.h mThreadLooper -> mThreadLooper
    int mAuthCounter -> mAuthCounter
    int AUTH_TIMEOUT -> AUTH_TIMEOUT
    java.util.Hashtable listenerTable -> listenerTable
    android.os.Handler mHandler -> mHandler
    void createAuthThread() -> createAuthThread
    java.lang.String getPublicKey(android.content.Context) -> getPublicKey
    java.lang.String getPublicKey(android.content.Context,java.lang.String) -> getPublicKey
    void callbackToMainThread(java.lang.String,java.lang.String) -> callbackToMainThread
    int parseAuthMessage(java.lang.String) -> parseAuthMessage
    int authenticate(com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    int authenticate(boolean,java.util.Hashtable,com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    int authenticate(boolean,java.lang.String,java.util.Hashtable,com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    boolean checkAkChanged(java.lang.String) -> checkAkChanged
    void sendAuthRequest(boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> sendAuthRequest
    java.lang.String getAuthString() -> getAuthString
    void saveAuthString(java.lang.String) -> saveAuthString
    java.lang.String getCurProcessName(android.content.Context) -> getCurProcessName
    java.util.Hashtable access$000() -> access$000
    boolean access$100(com.baidu.lbsapi.auth.LBSAuthManager,java.lang.String) -> access$100
    void access$200(com.baidu.lbsapi.auth.LBSAuthManager,boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> access$200
    com.baidu.lbsapi.auth.h access$300() -> access$300
    void access$400(com.baidu.lbsapi.auth.LBSAuthManager,java.lang.String,java.lang.String) -> access$400
com.baidu.lbsapi.auth.LBSAuthManagerListener -> com.baidu.lbsapi.auth.LBSAuthManagerListener:
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.lbsapi.auth.a -> com.baidu.lbsapi.auth.a:
    boolean a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b -> com.baidu.lbsapi.auth.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean b(android.content.Context,java.lang.String) -> b
com.baidu.lbsapi.auth.b$a -> com.baidu.lbsapi.auth.b$a:
    java.lang.String a(byte[]) -> a
com.baidu.lbsapi.auth.c -> com.baidu.lbsapi.auth.c:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.HashMap e -> e
    com.baidu.lbsapi.auth.c$a f -> f
    void a(java.util.HashMap,com.baidu.lbsapi.auth.c$a) -> a
    void a(java.lang.String) -> a
    boolean a(org.apache.http.client.HttpClient) -> a
    void b(org.apache.http.client.HttpClient) -> b
    void a(org.apache.http.client.HttpClient,java.lang.String,java.util.HashMap) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String a(android.content.Context) -> a
    java.util.HashMap a(java.util.HashMap) -> a
    org.apache.http.client.HttpClient a() -> a
    java.lang.String a(com.baidu.lbsapi.auth.c) -> a
    java.util.HashMap b(com.baidu.lbsapi.auth.c) -> b
    void a(com.baidu.lbsapi.auth.c,java.lang.String,java.util.HashMap) -> a
com.baidu.lbsapi.auth.c$a -> com.baidu.lbsapi.auth.c$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.c$b -> com.baidu.lbsapi.auth.c$b:
    javax.net.ssl.SSLContext a -> a
    javax.net.ssl.X509TrustManager b -> b
    com.baidu.lbsapi.auth.c c -> c
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.baidu.lbsapi.auth.d -> com.baidu.lbsapi.auth.d:
    com.baidu.lbsapi.auth.c a -> a
    void run() -> run
com.baidu.lbsapi.auth.e -> com.baidu.lbsapi.auth.e:
    com.baidu.lbsapi.auth.LBSAuthManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.lbsapi.auth.f -> com.baidu.lbsapi.auth.f:
    int a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Hashtable e -> e
    com.baidu.lbsapi.auth.LBSAuthManager f -> f
    void run() -> run
com.baidu.lbsapi.auth.g -> com.baidu.lbsapi.auth.g:
    java.lang.String a -> a
    com.baidu.lbsapi.auth.LBSAuthManager b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.h -> com.baidu.lbsapi.auth.h:
    android.os.Handler a -> a
    java.lang.Object b -> b
    boolean c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    void b() -> b
    void c() -> c
com.baidu.location.A -> com.baidu.location.A:
    com.baidu.location.x a -> a
    void run() -> run
com.baidu.location.B -> com.baidu.location.B:
    boolean a -> a
    java.lang.String b -> b
    com.baidu.location.B$a c -> c
    com.baidu.location.B d -> d
    com.baidu.location.B do() -> do
    void for() -> for
    void if() -> if
    java.lang.String a() -> a
    boolean int() -> int
    boolean a(com.baidu.location.B,boolean) -> a
    java.lang.String a(com.baidu.location.B,java.lang.String) -> a
    boolean a(com.baidu.location.B) -> a
com.baidu.location.B$a -> com.baidu.location.B$a:
    com.baidu.location.B a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.BDErrorReport -> com.baidu.location.BDErrorReport:
    java.lang.String a -> a
    void onReportResult(boolean) -> onReportResult
    int setErrorInfo(boolean,double,double,boolean,java.lang.String,double,double,java.lang.String,java.lang.String) -> setErrorInfo
    android.os.Bundle getErrorInfo() -> getErrorInfo
com.baidu.location.BDGeofence -> com.baidu.location.BDGeofence:
    int GEOFENCE_TRANSITION_ENTER -> GEOFENCE_TRANSITION_ENTER
    java.lang.String COORD_TYPE_BD09 -> COORD_TYPE_BD09
    java.lang.String COORD_TYPE_BD09LL -> COORD_TYPE_BD09LL
    java.lang.String COORD_TYPE_GCJ -> COORD_TYPE_GCJ
    int RADIUS_TYPE_SMALL -> RADIUS_TYPE_SMALL
    java.lang.String getGeofenceId() -> getGeofenceId
com.baidu.location.BDGeofence$Builder -> com.baidu.location.BDGeofence$Builder:
    java.lang.String do -> do
    double for -> for
    double try -> try
    int a -> a
    boolean new -> new
    long if -> if
    java.lang.String int -> int
    com.baidu.location.BDGeofence$Builder setExpirationDruation(long) -> setExpirationDruation
    com.baidu.location.BDGeofence$Builder setCircularRegion(double,double,int) -> setCircularRegion
    com.baidu.location.BDGeofence$Builder setGeofenceId(java.lang.String) -> setGeofenceId
    com.baidu.location.BDGeofence$Builder setCoordType(java.lang.String) -> setCoordType
    com.baidu.location.BDGeofence build() -> build
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int OPERATORS_TYPE_UNKONW -> OPERATORS_TYPE_UNKONW
    int OPERATORS_TYPE_MOBILE -> OPERATORS_TYPE_MOBILE
    int OPERATORS_TYPE_UNICOM -> OPERATORS_TYPE_UNICOM
    int OPERATORS_TYPE_TELECOMU -> OPERATORS_TYPE_TELECOMU
    int gU -> gU
    java.lang.String gY -> gY
    double gH -> gH
    double gV -> gV
    boolean gJ -> gJ
    double gN -> gN
    boolean gK -> gK
    float gX -> gX
    boolean gQ -> gQ
    float gS -> gS
    boolean gW -> gW
    int gG -> gG
    float gM -> gM
    java.lang.String gZ -> gZ
    boolean gT -> gT
    java.lang.String gF -> gF
    boolean gO -> gO
    com.baidu.location.BDLocation$a gP -> gP
    java.lang.String gI -> gI
    java.lang.String gR -> gR
    int g0 -> g0
    java.lang.String gL -> gL
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String bm() -> bm
    void if(java.lang.Boolean) -> if
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    com.baidu.location.BDLocation p(java.lang.String) -> p
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    float getDirection() -> getDirection
    void setDirection(float) -> setDirection
    boolean hasSateNumber() -> hasSateNumber
    boolean hasAddr() -> hasAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getFloor() -> getFloor
    java.lang.String getNetworkLocationType() -> getNetworkLocationType
    int getOperators() -> getOperators
    void byte(int) -> byte
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String bn() -> bn
    java.lang.String getAdUrl(java.lang.String) -> getAdUrl
    java.lang.String bo() -> bo
    void internalSet(int,java.lang.String) -> internalSet
com.baidu.location.BDLocation$a -> com.baidu.location.BDLocation$a:
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String try -> try
    com.baidu.location.BDLocation a -> a
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.BDLocationStatusCodes -> com.baidu.location.BDLocationStatusCodes:
    int SUCCESS -> SUCCESS
    int ERROR -> ERROR
    int GEOFENCE_NOT_AVAIABLE -> GEOFENCE_NOT_AVAIABLE
    int GEOFENCE_TOO_MANY_GEOFENCES -> GEOFENCE_TOO_MANY_GEOFENCES
    int GEOFENCE_SERVICE_NO_ALIVIABLE -> GEOFENCE_SERVICE_NO_ALIVIABLE
    int getStatusCode(int) -> getStatusCode
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.aj mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.C -> com.baidu.location.C:
    java.lang.String i -> i
    java.lang.String I -> I
    int F -> F
    int byte -> byte
    int for -> for
    int k -> k
    int r -> r
    int O -> O
    int d -> d
    int L -> L
    int Q -> Q
    int else -> else
    int E -> E
    int goto -> goto
    int q -> q
    int K -> K
    int G -> G
    int o -> o
    int void -> void
    int do -> do
    int char -> char
    int p -> p
    int n -> n
    int h -> h
    int x -> x
    int e -> e
    int case -> case
    int C -> C
    int f -> f
    int D -> D
    int A -> A
    int B -> B
    int z -> z
    int m -> m
    int M -> M
    int u -> u
    int s -> s
    int N -> N
    int H -> H
    int w -> w
    int y -> y
    int v -> v
    int try -> try
    int l -> l
    int g -> g
    int int -> int
    int t -> t
    int long -> long
    int if -> if
    int b -> b
    int P -> P
    int j -> j
    int J -> J
    int new -> new
    int c -> c
com.baidu.location.CommonEncrypt -> com.baidu.location.CommonEncrypt:
    boolean a -> a
    byte[] encrypt(byte[]) -> encrypt
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
com.baidu.location.D -> com.baidu.location.D:
    com.baidu.location.D a -> a
    java.lang.String R -> R
    boolean S -> S
    boolean T -> T
    boolean U -> U
    java.lang.String V -> V
    int W -> W
    double X -> X
    double Y -> Y
    double Z -> Z
    double aa -> aa
    double ab -> ab
    long ac -> ac
    boolean ad -> ad
    boolean ae -> ae
    int af -> af
    int ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    boolean ak -> ak
    com.baidu.location.D cd() -> cd
    void j(android.os.Message) -> j
    void ci() -> ci
    void ch() -> ch
    void a(android.os.Message) -> a
    com.baidu.location.BDLocation case(boolean) -> case
    void a(com.baidu.location.u$b) -> a
    void a(com.baidu.location.u$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> a
    void a() -> a
    void if(java.lang.String,com.baidu.location.ac$a,com.baidu.location.u$b,com.baidu.location.BDLocation) -> if
    void a(java.lang.String) -> a
    void a(java.lang.String,com.baidu.location.ac$a,android.database.sqlite.SQLiteDatabase) -> a
    void b() -> b
    java.lang.String a(boolean) -> a
    void c() -> c
    void a(com.baidu.location.D) -> a
    boolean a(com.baidu.location.D,boolean) -> a
    java.lang.String b(com.baidu.location.D) -> b
    void a(com.baidu.location.D,java.lang.String,com.baidu.location.ac$a,android.database.sqlite.SQLiteDatabase) -> a
    void a(com.baidu.location.D,com.baidu.location.u$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> a
com.baidu.location.D$a -> com.baidu.location.D$a:
    com.baidu.location.D a -> a
    java.lang.Boolean a(java.lang.Boolean[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.D$b -> com.baidu.location.D$b:
    com.baidu.location.D a -> a
    java.lang.Boolean a(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.E -> com.baidu.location.E:
    com.baidu.location.D a -> a
    void run() -> run
com.baidu.location.F -> com.baidu.location.F:
    com.baidu.location.F W -> W
    java.lang.String a -> a
    java.lang.String R -> R
    java.lang.String S -> S
    android.hardware.SensorManager T -> T
    int U -> U
    int V -> V
    java.lang.String iH -> iH
    java.lang.String iM -> iM
    com.baidu.location.F cn() -> cn
    void cm() -> cm
    void cp() -> cp
    void try(java.lang.String,java.lang.String) -> try
    java.lang.String ck() -> ck
    java.lang.String co() -> co
    java.lang.String cl() -> cl
    java.lang.String cj() -> cj
    java.lang.String s(java.lang.String) -> s
    java.lang.String char(boolean) -> char
    java.lang.String if(boolean,java.lang.String) -> if
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.location.G -> com.baidu.location.G:
    boolean a3 -> a3
    boolean am -> am
    boolean ah -> ah
    int al -> al
    java.lang.String a -> a
    java.lang.String Y -> Y
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    boolean aG -> aG
    boolean U -> U
    boolean V -> V
    java.lang.String aA -> aA
    java.lang.Process aC -> aC
    java.lang.String aw -> aw
    java.lang.String bc -> bc
    boolean a7 -> a7
    int aM -> aM
    double a9 -> a9
    double an -> an
    double aH -> aH
    double ac -> ac
    int ak -> ak
    byte[] aB -> aB
    boolean ar -> ar
    int ai -> ai
    float ae -> ae
    float aR -> aR
    float ag -> ag
    float aT -> aT
    int aI -> aI
    int W -> W
    int aJ -> aJ
    int X -> X
    int aa -> aa
    int ax -> ax
    int a4 -> a4
    float be -> be
    float bb -> bb
    float ap -> ap
    float a0 -> a0
    int aX -> aX
    float ab -> ab
    int at -> at
    float aU -> aU
    float bd -> bd
    float ba -> ba
    int a8 -> a8
    int a6 -> a6
    int aj -> aj
    boolean az -> az
    boolean aZ -> aZ
    int av -> av
    int as -> as
    int ay -> ay
    long aQ -> aQ
    long aK -> aK
    long ad -> ad
    long ao -> ao
    long aS -> aS
    long aD -> aD
    int a5 -> a5
    int aV -> aV
    int aW -> aW
    int aO -> aO
    float a2 -> a2
    float af -> af
    float Z -> Z
    int aq -> aq
    int aF -> aF
    int au -> au
    int a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String if(com.baidu.location.ac$a,com.baidu.location.u$b,android.location.Location,java.lang.String,int) -> if
    java.lang.String if(com.baidu.location.ac$a,com.baidu.location.u$b,android.location.Location,java.lang.String) -> if
    void char() -> char
    void case() -> case
    void do(java.lang.String,java.lang.String) -> do
    void if(java.lang.String,java.lang.String) -> if
    void if(java.lang.String) -> if
    boolean if(com.baidu.location.BDLocation) -> if
    void do(java.lang.String) -> do
    java.lang.String for() -> for
    java.lang.String try() -> try
    java.lang.String int() -> int
    java.lang.String do() -> do
    java.lang.String byte() -> byte
    java.lang.String else() -> else
    java.lang.String goto() -> goto
com.baidu.location.GeofenceClient -> com.baidu.location.GeofenceClient:
    int bj -> bj
    java.lang.String BUNDLE_FOR_GEOFENCE_ID -> BUNDLE_FOR_GEOFENCE_ID
    android.content.Context bf -> bf
    boolean bl -> bl
    android.os.Messenger bk -> bk
    com.baidu.location.GeofenceClient$a bm -> bm
    android.os.Messenger bi -> bi
    com.baidu.location.GeofenceClient$OnGeofenceTriggerListener bg -> bg
    long bn -> bn
    android.content.ServiceConnection bh -> bh
    void start() -> start
    void void() -> void
    void setInterval(long) -> setInterval
    long d() -> d
    boolean isStarted() -> isStarted
    void registerGeofenceTriggerListener(com.baidu.location.GeofenceClient$OnGeofenceTriggerListener) -> registerGeofenceTriggerListener
    void addBDGeofence(com.baidu.location.BDGeofence,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> addBDGeofence
    void removeBDGeofences(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> removeBDGeofences
    void for(java.lang.String) -> for
    void int(java.lang.String) -> int
    void startGeofenceScann() -> startGeofenceScann
    void stop() -> stop
    void long() -> long
    android.os.Messenger if(com.baidu.location.GeofenceClient,android.os.Messenger) -> if
    android.os.Messenger if(com.baidu.location.GeofenceClient) -> if
    boolean if(com.baidu.location.GeofenceClient,boolean) -> if
    void do(com.baidu.location.GeofenceClient,java.lang.String) -> do
    void do(com.baidu.location.GeofenceClient) -> do
    void if(com.baidu.location.GeofenceClient,java.lang.String) -> if
com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener:
    void onAddBDGeofencesResult(int,java.lang.String) -> onAddBDGeofencesResult
com.baidu.location.GeofenceClient$OnGeofenceTriggerListener -> com.baidu.location.GeofenceClient$OnGeofenceTriggerListener:
    void onGeofenceTrigger(java.lang.String) -> onGeofenceTrigger
    void onGeofenceExit(java.lang.String) -> onGeofenceExit
com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener:
    void onRemoveBDGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveBDGeofencesByRequestIdsResult
com.baidu.location.GeofenceClient$a -> com.baidu.location.GeofenceClient$a:
    com.baidu.location.GeofenceClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.H -> com.baidu.location.H:
    java.lang.String a -> a
    java.lang.String R -> R
    java.lang.String S -> S
    android.os.Handler T -> T
    com.baidu.location.H U -> U
    com.baidu.location.H X() -> X
    void Z() -> Z
    android.os.Handler d() -> d
    void T() -> T
    void do(boolean) -> do
    void e() -> e
    boolean f() -> f
    void g() -> g
    boolean a(java.lang.String,java.lang.String) -> a
    void if(java.io.File,java.io.File) -> if
    void a(com.baidu.location.H) -> a
    boolean b(com.baidu.location.H) -> b
    void c(com.baidu.location.H) -> c
com.baidu.location.I -> com.baidu.location.I:
    com.baidu.location.H a -> a
    void run() -> run
com.baidu.location.J -> com.baidu.location.J:
    com.baidu.location.H a -> a
    void run() -> run
com.baidu.location.Jni -> com.baidu.location.Jni:
    int a -> a
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    boolean Y -> Y
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String g(byte[]) -> g
    void f(byte[],byte[]) -> f
    java.lang.String i(java.lang.String) -> i
    java.lang.String l(java.lang.String) -> l
    java.lang.String j(java.lang.String) -> j
    double[] if(double,double,java.lang.String) -> if
    void int(java.lang.String,java.lang.String) -> int
    java.lang.String k(java.lang.String) -> k
com.baidu.location.K -> com.baidu.location.K:
    com.baidu.location.H a -> a
    void run() -> run
com.baidu.location.L -> com.baidu.location.L:
    java.lang.String a -> a
    int b -> b
    com.baidu.location.L c -> c
    int d -> d
    int e -> e
    com.baidu.location.L do() -> do
    void a(int,long) -> a
    long a(int) -> a
    long if() -> if
    void a(long) -> a
    long a() -> a
    void if(long) -> if
com.baidu.location.LLSInterface -> com.baidu.location.LLSInterface:
    void onCreate(android.content.Context) -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnBind(android.content.Intent) -> onUnBind
    void onDestroy() -> onDestroy
    double getVersion() -> getVersion
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String jq -> jq
    int jt -> jt
    int jS -> jS
    int jB -> jB
    int j4 -> j4
    int jO -> jO
    int jR -> jR
    int jH -> jH
    int jC -> jC
    int jF -> jF
    int jo -> jo
    int j1 -> j1
    int jP -> jP
    int jx -> jx
    long jU -> jU
    java.lang.String j3 -> j3
    com.baidu.location.LocationClientOption jN -> jN
    boolean jT -> jT
    android.content.Context jK -> jK
    android.os.Messenger jL -> jL
    com.baidu.location.LocationClient$a jp -> jp
    android.os.Messenger jJ -> jJ
    java.util.ArrayList j5 -> j5
    com.baidu.location.BDLocation j0 -> j0
    boolean jE -> jE
    boolean jY -> jY
    boolean jG -> jG
    com.baidu.location.LocationClient$b ju -> ju
    boolean jn -> jn
    java.lang.Object jr -> jr
    long jM -> jM
    long jV -> jV
    com.baidu.location.aj jw -> jw
    boolean jZ -> jZ
    com.baidu.location.BDLocationListener jD -> jD
    java.lang.String j2 -> j2
    java.lang.String jX -> jX
    boolean jA -> jA
    java.lang.Boolean jz -> jz
    java.lang.Boolean jv -> jv
    java.lang.Boolean jQ -> jQ
    boolean jI -> jI
    android.content.ServiceConnection jW -> jW
    long jy -> jy
    com.baidu.location.BDErrorReport js -> js
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void cB() -> cB
    int requestLocation() -> requestLocation
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void cy() -> cy
    void stop() -> stop
    void cz() -> cz
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void l(android.os.Message) -> l
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void q(android.os.Message) -> q
    void n(android.os.Message) -> n
    android.os.Bundle cx() -> cx
    android.os.Bundle cw() -> cw
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void s(android.os.Message) -> s
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void r(android.os.Message) -> r
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void m(android.os.Message) -> m
    void cA() -> cA
    void o(android.os.Message) -> o
    void if(android.os.Message,int) -> if
    void p(android.os.Message) -> p
    void char(int) -> char
    void setForBaiduMap(boolean) -> setForBaiduMap
    void setDebug(boolean) -> setDebug
    boolean notifyError() -> notifyError
    int reportErrorWithInfo(com.baidu.location.BDErrorReport) -> reportErrorWithInfo
    void cancleError() -> cancleError
    void goto(boolean) -> goto
    boolean else(int) -> else
    java.lang.String getAccessKey() -> getAccessKey
    android.os.Messenger if(com.baidu.location.LocationClient,android.os.Messenger) -> if
    android.os.Messenger char(com.baidu.location.LocationClient) -> char
    boolean if(com.baidu.location.LocationClient,boolean) -> if
    android.os.Messenger new(com.baidu.location.LocationClient) -> new
    android.os.Bundle long(com.baidu.location.LocationClient) -> long
    com.baidu.location.LocationClientOption else(com.baidu.location.LocationClient) -> else
    java.lang.Boolean if(com.baidu.location.LocationClient) -> if
    java.lang.Boolean if(com.baidu.location.LocationClient,java.lang.Boolean) -> if
    com.baidu.location.LocationClient$a byte(com.baidu.location.LocationClient) -> byte
    java.lang.Object for(com.baidu.location.LocationClient) -> for
    boolean int(com.baidu.location.LocationClient,boolean) -> int
    java.util.ArrayList goto(com.baidu.location.LocationClient) -> goto
    void for(com.baidu.location.LocationClient,android.os.Message) -> for
    void do(com.baidu.location.LocationClient,android.os.Message) -> do
    void if(com.baidu.location.LocationClient,android.os.Message) -> if
    void case(com.baidu.location.LocationClient,android.os.Message) -> case
    void byte(com.baidu.location.LocationClient,android.os.Message) -> byte
    void new(com.baidu.location.LocationClient,android.os.Message) -> new
    void do(com.baidu.location.LocationClient) -> do
    void try(com.baidu.location.LocationClient) -> try
    void case(com.baidu.location.LocationClient) -> case
    void int(com.baidu.location.LocationClient,android.os.Message) -> int
    void int(com.baidu.location.LocationClient) -> int
    boolean for(com.baidu.location.LocationClient,boolean) -> for
    void if(com.baidu.location.LocationClient,android.os.Message,int) -> if
    void try(com.baidu.location.LocationClient,android.os.Message) -> try
    void do(com.baidu.location.LocationClient,boolean) -> do
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int MIN_SCAN_SPAN_NETWORK -> MIN_SCAN_SPAN_NETWORK
    int byte -> byte
    int void -> void
    int try -> try
    java.lang.String do -> do
    java.lang.String else -> else
    boolean for -> for
    int int -> int
    int d -> d
    java.lang.String if -> if
    int h -> h
    boolean goto -> goto
    boolean a -> a
    boolean new -> new
    boolean e -> e
    float c -> c
    int long -> long
    java.lang.String case -> case
    boolean b -> b
    boolean char -> char
    boolean g -> g
    com.baidu.location.LocationClientOption$LocationMode f -> f
    boolean equals(com.baidu.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setIsNeedAddress(boolean) -> setIsNeedAddress
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    void setLocationMode(com.baidu.location.LocationClientOption$LocationMode) -> setLocationMode
    com.baidu.location.LocationClientOption$LocationMode getLocationMode() -> getLocationMode
    void setNeedDeviceDirect(boolean) -> setNeedDeviceDirect
    boolean a() -> a
    void SetIgnoreCacheException(boolean) -> SetIgnoreCacheException
    void setIgnoreKillProcess(boolean) -> setIgnoreKillProcess
com.baidu.location.LocationClientOption$1 -> com.baidu.location.LocationClientOption$1:
    int[] a -> a
com.baidu.location.LocationClientOption$LocationMode -> com.baidu.location.LocationClientOption$LocationMode:
    com.baidu.location.LocationClientOption$LocationMode Hight_Accuracy -> Hight_Accuracy
    com.baidu.location.LocationClientOption$LocationMode Battery_Saving -> Battery_Saving
    com.baidu.location.LocationClientOption$LocationMode Device_Sensors -> Device_Sensors
    com.baidu.location.LocationClientOption$LocationMode[] a -> a
    com.baidu.location.LocationClientOption$LocationMode[] values() -> values
    com.baidu.location.LocationClientOption$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.location.M -> com.baidu.location.M:
    boolean bs -> bs
    long bp -> bp
    long a -> a
    long R -> R
    com.baidu.location.M S -> S
    com.baidu.location.M e() -> e
    void h() -> h
    void try(java.lang.String) -> try
    long new(java.lang.String) -> new
com.baidu.location.N -> com.baidu.location.N:
    com.baidu.location.N a -> a
    com.baidu.location.N for() -> for
    void int() -> int
    void do() -> do
    void if() -> if
    void a() -> a
com.baidu.location.O -> com.baidu.location.O:
    void a(android.content.Context,android.app.PendingIntent,int) -> a
    void a(android.content.Context,android.app.PendingIntent) -> a
com.baidu.location.P -> com.baidu.location.P:
    double a -> a
    double R -> R
    boolean S -> S
    long T -> T
    double U -> U
    double V -> V
    int W -> W
    int X -> X
    com.baidu.location.P Y -> Y
    com.baidu.location.P cZ() -> cZ
    void if(boolean,boolean,double,double) -> if
    void byte(com.baidu.location.BDLocation) -> byte
    java.lang.String cY() -> cY
com.baidu.location.Q -> com.baidu.location.Q:
    com.baidu.location.Q a -> a
    java.util.ArrayList R -> R
    boolean S -> S
    boolean T -> T
    com.baidu.location.Q p() -> p
    void n() -> n
    boolean k() -> k
    void new(android.os.Message) -> new
    void do(android.os.Message) -> do
    boolean int(android.os.Message) -> int
    java.lang.String if(android.os.Message) -> if
    void if(com.baidu.location.BDLocation,int) -> if
    void do(com.baidu.location.BDLocation) -> do
    void byte(java.lang.String) -> byte
    void if(com.baidu.location.BDLocation,android.os.Message) -> if
    void i() -> i
    java.lang.String o() -> o
    int for(android.os.Message) -> for
    com.baidu.location.Q$a a(android.os.Messenger) -> a
    void a(com.baidu.location.Q$a) -> a
    void a() -> a
    void b() -> b
    void m() -> m
com.baidu.location.Q$a -> com.baidu.location.Q$a:
    java.lang.String int -> int
    android.os.Messenger for -> for
    com.baidu.location.LocationClientOption do -> do
    int if -> if
    com.baidu.location.Q a -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.BDLocation,int) -> a
    void if(com.baidu.location.BDLocation) -> if
    void a() -> a
    void if() -> if
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.Q$a,int) -> a
com.baidu.location.R -> com.baidu.location.R:
    java.lang.String V -> V
    java.lang.String W -> W
    java.io.File X -> X
    java.io.File Y -> Y
    long Z -> Z
    int aa -> aa
    android.app.AlarmManager ab -> ab
    com.baidu.location.R$a ac -> ac
    android.app.PendingIntent ad -> ad
    android.content.Context ae -> ae
    long af -> af
    long[] ag -> ag
    int ah -> ah
    com.baidu.location.ac$a ai -> ai
    java.lang.String bM -> bM
    java.lang.String aj -> aj
    int ak -> ak
    boolean al -> al
    boolean am -> am
    boolean an -> an
    android.os.Handler ao -> ao
    int ap -> ap
    boolean aq -> aq
    long ar -> ar
    int as -> as
    long at -> at
    long au -> au
    long av -> av
    java.lang.String aw -> aw
    boolean ax -> ax
    com.baidu.location.R$c a -> a
    java.util.ArrayList R -> R
    java.util.ArrayList S -> S
    long T -> T
    java.lang.String U -> U
    void u() -> u
    void a() -> a
    void a(boolean) -> a
    void b() -> b
    void q() -> q
    java.lang.String s() -> s
    boolean r() -> r
    boolean a(double,double) -> a
    android.os.Handler a(com.baidu.location.R) -> a
com.baidu.location.R$a -> com.baidu.location.R$a:
    com.baidu.location.R a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.R$b -> com.baidu.location.R$b:
    double do -> do
    double if -> if
    java.util.HashMap b -> b
    double c -> c
    com.baidu.location.R a -> a
    double a(com.baidu.location.R$b) -> a
    java.util.HashMap if() -> if
    double a() -> a
com.baidu.location.R$c -> com.baidu.location.R$c:
    boolean a -> a
    com.baidu.location.R b -> b
    void a(android.content.Context) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.S -> com.baidu.location.S:
    com.baidu.location.R a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.T -> com.baidu.location.T:
    com.baidu.location.T a -> a
    com.baidu.location.T a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.location.U -> com.baidu.location.U:
    java.util.ArrayList a -> a
    boolean R -> R
    long S -> S
    long T -> T
    int U -> U
    android.os.Handler X -> X
    int db -> db
    com.baidu.location.U V -> V
    com.baidu.location.U$a Y -> Y
    int Z -> Z
    com.baidu.location.U ac() -> ac
    void do(int) -> do
    void T() -> T
    void do(boolean) -> do
    boolean for(boolean) -> for
    void d() -> d
    boolean ab() -> ab
    void a(com.baidu.location.U) -> a
    android.os.Handler b(com.baidu.location.U) -> b
com.baidu.location.U$a -> com.baidu.location.U$a:
    java.lang.String a -> a
    int R -> R
    boolean S -> S
    com.baidu.location.U T -> T
    void T() -> T
    void do(boolean) -> do
    boolean aa() -> aa
com.baidu.location.V -> com.baidu.location.V:
    com.baidu.location.U a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.W -> com.baidu.location.W:
    java.util.ArrayList R -> R
    java.util.ArrayList S -> S
    java.util.ArrayList T -> T
    java.util.ArrayList U -> U
    java.util.ArrayList V -> V
    java.util.ArrayList W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.io.File ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    int ag -> ag
    int ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    double al -> al
    double am -> am
    double an -> an
    double ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    android.location.Location as -> as
    android.location.Location at -> at
    android.location.Location au -> au
    com.baidu.location.u$b av -> av
    com.baidu.location.W$b aw -> aw
    com.baidu.location.W ax -> ax
    int ay -> ay
    long a -> a
    com.baidu.location.W x() -> x
    java.lang.String B() -> B
    void do(com.baidu.location.ac$a,com.baidu.location.u$b,android.location.Location,java.lang.String) -> do
    void if(double,double,double,double) -> if
    boolean if(android.location.Location,boolean) -> if
    boolean a(android.location.Location) -> a
    boolean a(android.location.Location,com.baidu.location.u$b) -> a
    void z() -> z
    void A() -> A
    void E() -> E
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    int a(java.util.List,int) -> a
    boolean a(int,int,int,int,long) -> a
    void case(java.lang.String) -> case
    void char(java.lang.String) -> char
    void if(int,boolean) -> if
    boolean if(java.lang.String,java.util.List) -> if
    java.lang.String D() -> D
    void w() -> w
    java.lang.String if(int) -> if
    java.lang.String y() -> y
    void if(java.lang.String,int) -> if
    void if(java.lang.String,int,boolean) -> if
    void if(int,int) -> if
    void if(int,int,boolean) -> if
    void C() -> C
    void F() -> F
    void long(java.lang.String) -> long
    java.lang.String if(com.baidu.location.ac$a,com.baidu.location.u$b,android.location.Location,java.lang.String,java.lang.String) -> if
com.baidu.location.W$a -> com.baidu.location.W$a:
    java.lang.String R -> R
    com.baidu.location.W a -> a
    void T() -> T
    void do(boolean) -> do
    void ae() -> ae
com.baidu.location.W$b -> com.baidu.location.W$b:
    boolean a -> a
    int R -> R
    int S -> S
    java.util.ArrayList U -> U
    com.baidu.location.W T -> T
    void T() -> T
    void do(boolean) -> do
    void af() -> af
com.baidu.location.X -> com.baidu.location.X:
    com.baidu.location.X a -> a
    com.baidu.location.R R -> R
    android.os.Handler S -> S
    com.baidu.location.X H() -> H
    void K() -> K
    void G() -> G
    android.os.Handler I() -> I
    void a() -> a
    void a(com.baidu.location.X) -> a
com.baidu.location.X$a -> com.baidu.location.X$a:
    com.baidu.location.X a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.Y -> com.baidu.location.Y:
    boolean a -> a
    int R -> R
    java.lang.String S -> S
    int T -> T
    java.lang.String cR -> cR
    int c0 -> c0
    org.apache.http.HttpEntity cS -> cS
    java.util.List cT -> cT
    java.lang.String cW -> cW
    int W -> W
    void T() -> T
    void do(boolean) -> do
    void Q() -> Q
    void N() -> N
    void R() -> R
    void d() -> d
    int e() -> e
    int a(android.content.Context,android.net.NetworkInfo) -> a
    boolean if(android.content.Context) -> if
    void a(com.baidu.location.Y) -> a
    int a() -> a
    java.lang.String b() -> b
    int c() -> c
    boolean a(com.baidu.location.Y,boolean) -> a
com.baidu.location.Z -> com.baidu.location.Z:
    com.baidu.location.Y a -> a
    void run() -> run
com.baidu.location.a -> com.baidu.location.a:
    com.baidu.location.BDLocation a(android.os.Parcel) -> a
    com.baidu.location.BDLocation[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.a.a.a -> com.baidu.location.a.a.a:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.location.a.a.b -> com.baidu.location.a.a.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.location.a.a.b$a -> com.baidu.location.a.a.b$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.location.a.a.b$a a(android.content.Context) -> a
com.baidu.location.a.a.c -> com.baidu.location.a.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.a.b.a -> com.baidu.location.a.b.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.location.a.b.b -> com.baidu.location.a.b.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.location.aa -> com.baidu.location.aa:
    com.baidu.location.Y a -> a
    void run() -> run
com.baidu.location.ab -> com.baidu.location.ab:
    com.baidu.location.Y a -> a
    void run() -> run
com.baidu.location.ac -> com.baidu.location.ac:
    com.baidu.location.ac a -> a
    android.telephony.TelephonyManager R -> R
    com.baidu.location.ac$a S -> S
    java.util.List T -> T
    java.lang.String U -> U
    com.baidu.location.ac$b V -> V
    boolean W -> W
    java.lang.reflect.Method X -> X
    java.lang.reflect.Method Y -> Y
    java.lang.reflect.Method Z -> Z
    java.lang.Class aa -> aa
    long ab -> ab
    int ac -> ac
    boolean ad -> ad
    int ae -> ae
    int af -> af
    com.baidu.location.ac an() -> an
    void am() -> am
    void as() -> as
    int ap() -> ap
    java.lang.String ao() -> ao
    boolean b() -> b
    com.baidu.location.ac$a ak() -> ak
    void a(android.telephony.CellLocation) -> a
    int aq() -> aq
    long a() -> a
    com.baidu.location.ac$a a(com.baidu.location.ac) -> a
    java.util.List b(com.baidu.location.ac) -> b
    int c(com.baidu.location.ac) -> c
    int a(com.baidu.location.ac,int) -> a
    int d(com.baidu.location.ac) -> d
    android.telephony.TelephonyManager e(com.baidu.location.ac) -> e
    void a(com.baidu.location.ac,android.telephony.CellLocation) -> a
com.baidu.location.ac$a -> com.baidu.location.ac$a:
    int for -> for
    int try -> try
    int do -> do
    int if -> if
    long byte -> byte
    int int -> int
    char new -> new
    com.baidu.location.ac a -> a
    boolean a(com.baidu.location.ac$a) -> a
    boolean do() -> do
    boolean for() -> for
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    java.lang.String if() -> if
    java.lang.String int() -> int
com.baidu.location.ac$b -> com.baidu.location.ac$b:
    com.baidu.location.ac a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.ad -> com.baidu.location.ad:
    com.baidu.location.ad a -> a
    com.baidu.location.BDLocation S -> S
    long T -> T
    com.baidu.location.m$a eH -> eH
    com.baidu.location.ad aG() -> aG
    void long(android.os.Message) -> long
    void b(android.os.Message) -> b
    void b() -> b
    void a(android.os.Message) -> a
    void a() -> a
com.baidu.location.ae -> com.baidu.location.ae:
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.location.ae$a -> com.baidu.location.ae$a:
    java.lang.String a(byte[]) -> a
com.baidu.location.af -> com.baidu.location.af:
    com.baidu.location.af a -> a
    java.lang.String R -> R
    java.io.File S -> S
    java.lang.StringBuffer T -> T
    boolean U -> U
    int V -> V
    int W -> W
    long X -> X
    long Y -> Y
    long Z -> Z
    double aa -> aa
    double ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    java.lang.String af -> af
    boolean ag -> ag
    com.baidu.location.af aK() -> aK
    void aO() -> aO
    boolean do(android.location.Location) -> do
    boolean a(android.location.Location,int,int) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a(int) -> a
    void a() -> a
    void b() -> b
    java.lang.String aM() -> aM
    boolean c() -> c
    boolean a(int,int,int) -> a
com.baidu.location.ag -> com.baidu.location.ag:
    long a -> a
    com.baidu.location.ag R -> R
    android.content.Context S -> S
    android.location.LocationManager T -> T
    android.location.Location U -> U
    com.baidu.location.ag$b V -> V
    com.baidu.location.ag$c W -> W
    android.location.GpsStatus X -> X
    com.baidu.location.ag$a Y -> Y
    int Z -> Z
    long aa -> aa
    long ab -> ab
    boolean ac -> ac
    boolean ad -> ad
    java.lang.String ae -> ae
    boolean af -> af
    long ag -> ag
    long ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.io.File ak -> ak
    android.os.Handler al -> al
    int am -> am
    int an -> an
    int ao -> ao
    int ap -> ap
    android.location.Location aq -> aq
    android.location.Location ar -> ar
    long as -> as
    long at -> at
    java.lang.StringBuilder au -> au
    java.lang.String av -> av
    int aw -> aw
    int ax -> ax
    java.util.HashMap ay -> ay
    com.baidu.location.ag a4() -> a4
    void aU() -> aU
    void a(java.lang.String,android.location.Location) -> a
    void a2() -> a2
    void a3() -> a3
    void aW() -> aW
    java.lang.String aV() -> aV
    void int(boolean) -> int
    java.lang.String aY() -> aY
    java.lang.String case(android.location.Location) -> case
    java.lang.String aP() -> aP
    android.location.Location aS() -> aS
    boolean aT() -> aT
    boolean aR() -> aR
    boolean if(android.location.Location,android.location.Location,boolean) -> if
    void a(android.location.Location) -> a
    void b(android.location.Location) -> b
    void a(double,double,float) -> a
    void a(boolean) -> a
    java.lang.String byte(android.location.Location) -> byte
    java.lang.String new(android.location.Location) -> new
    void a0() -> a0
    java.lang.String a(android.location.GpsSatellite,java.util.HashMap) -> a
    int a(java.util.HashMap) -> a
    java.lang.String b() -> b
    double[] a(java.util.List) -> a
    double[] a(double,double) -> a
    double[] b(double,double) -> b
    int a(com.baidu.location.w,int) -> a
    boolean a1() -> a1
    void a(com.baidu.location.ag,android.location.Location) -> a
    com.baidu.location.ag$a a(com.baidu.location.ag) -> a
    void a(com.baidu.location.ag,java.lang.String,android.location.Location) -> a
    boolean b(com.baidu.location.ag) -> b
    long a(com.baidu.location.ag,long) -> a
    android.os.Handler c(com.baidu.location.ag) -> c
    long b(com.baidu.location.ag,long) -> b
    void a(com.baidu.location.ag,boolean) -> a
    void b(com.baidu.location.ag,android.location.Location) -> b
    boolean b(com.baidu.location.ag,boolean) -> b
    long c(com.baidu.location.ag,long) -> c
    android.location.LocationManager d(com.baidu.location.ag) -> d
    android.location.GpsStatus e(com.baidu.location.ag) -> e
    android.location.GpsStatus a(com.baidu.location.ag,android.location.GpsStatus) -> a
    java.lang.StringBuilder a(java.lang.StringBuilder) -> a
    int a(com.baidu.location.ag,int) -> a
    int b(com.baidu.location.ag,int) -> b
    java.util.HashMap a(com.baidu.location.ag,java.util.HashMap) -> a
    int f(com.baidu.location.ag) -> f
    java.util.HashMap g(com.baidu.location.ag) -> g
    java.lang.String a(com.baidu.location.ag,android.location.GpsSatellite,java.util.HashMap) -> a
    java.lang.StringBuilder a() -> a
    int a(int) -> a
    int b(com.baidu.location.ag,java.util.HashMap) -> b
    long h(com.baidu.location.ag) -> h
    int i(com.baidu.location.ag) -> i
    int a(com.baidu.location.ag,com.baidu.location.w,int) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.location.ag$a -> com.baidu.location.ag$a:
    long a -> a
    long c -> c
    int d -> d
    boolean e -> e
    boolean f -> f
    java.util.List g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    com.baidu.location.ag b -> b
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.location.ag$b -> com.baidu.location.ag$b:
    com.baidu.location.ag a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.ag$c -> com.baidu.location.ag$c:
    long b -> b
    com.baidu.location.ag a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.ah -> com.baidu.location.ah:
    com.baidu.location.ag a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ai -> com.baidu.location.ai:
    com.baidu.location.ai a -> a
    com.baidu.location.ai$a R -> R
    long S -> S
    boolean f6 -> f6
    boolean f8 -> f8
    boolean gb -> gb
    boolean f0 -> f0
    boolean f1 -> f1
    boolean f5 -> f5
    java.lang.String T -> T
    int gc -> gc
    int f4 -> f4
    int gd -> gd
    com.baidu.location.ai a7() -> a7
    void a9() -> a9
    void a() -> a
    boolean o(java.lang.String) -> o
    void a5() -> a5
    void bb() -> bb
    void a8() -> a8
    void n(java.lang.String) -> n
    void a(org.apache.http.HttpEntity) -> a
    void b(org.apache.http.HttpEntity) -> b
    void try(int) -> try
    void a6() -> a6
    void bc() -> bc
    void new(int) -> new
    void a(com.baidu.location.ai,org.apache.http.HttpEntity) -> a
    void b(com.baidu.location.ai,org.apache.http.HttpEntity) -> b
com.baidu.location.ai$a -> com.baidu.location.ai$a:
    java.lang.String a -> a
    boolean R -> R
    boolean S -> S
    com.baidu.location.ai T -> T
    void T() -> T
    void do(boolean) -> do
    void if(java.lang.String,boolean) -> if
com.baidu.location.aj -> com.baidu.location.aj:
    java.util.ArrayList a -> a
    float R -> R
    com.baidu.location.BDLocation S -> S
    long T -> T
    com.baidu.location.LocationClient U -> U
    android.content.Context V -> V
    int W -> W
    long X -> X
    boolean Y -> Y
    boolean Z -> Z
    android.app.PendingIntent aa -> aa
    android.app.AlarmManager ab -> ab
    com.baidu.location.aj$b ac -> ac
    java.lang.String gi -> gi
    com.baidu.location.aj$a ad -> ad
    boolean ae -> ae
    void be() -> be
    int do(com.baidu.location.BDNotifyListener) -> do
    void if(com.baidu.location.BDNotifyListener) -> if
    int for(com.baidu.location.BDNotifyListener) -> for
    boolean a() -> a
    void b() -> b
    void a(long) -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.aj,com.baidu.location.BDLocation) -> a
    java.util.ArrayList a(com.baidu.location.aj) -> a
    com.baidu.location.LocationClient b(com.baidu.location.aj) -> b
com.baidu.location.aj$a -> com.baidu.location.aj$a:
    com.baidu.location.aj a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void a(com.baidu.location.BDLocation) -> a
com.baidu.location.aj$b -> com.baidu.location.aj$b:
    com.baidu.location.aj a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.b -> com.baidu.location.b:
    com.baidu.location.GeofenceClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.c -> com.baidu.location.c:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.d -> com.baidu.location.d:
    long i2 -> i2
    java.lang.String ji -> ji
    boolean a -> a
    java.util.List b -> b
    java.util.List c -> c
    android.os.PowerManager$WakeLock d -> d
    android.os.HandlerThread e -> e
    com.baidu.location.d$d f -> f
    com.baidu.location.d$c g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    com.baidu.location.u$b k -> k
    com.baidu.location.u$b l -> l
    java.lang.String m -> m
    android.os.Messenger n -> n
    int o -> o
    java.util.Map p -> p
    com.baidu.location.d jf -> jf
    android.os.Handler q -> q
    boolean r -> r
    com.baidu.location.d cq() -> cq
    void a() -> a
    void a(java.util.List) -> a
    void b() -> b
    void for(com.baidu.location.t) -> for
    java.util.List a(boolean) -> a
    boolean c() -> c
    void a(android.content.Context) -> a
    void d() -> d
    void if(android.content.Context,android.os.Message) -> if
    void new(android.content.Context) -> new
    void try(android.content.Context) -> try
    void if(android.content.Context,int) -> if
    java.util.List for(java.lang.String,boolean) -> for
    java.util.List if(java.util.List,boolean) -> if
    java.util.Map e() -> e
    boolean a(com.baidu.location.d,boolean) -> a
    java.lang.String a(com.baidu.location.d,java.lang.String) -> a
    com.baidu.location.u$b a(com.baidu.location.d,com.baidu.location.u$b) -> a
    boolean a(com.baidu.location.d) -> a
    boolean b(com.baidu.location.d,boolean) -> b
    java.util.Map b(com.baidu.location.d) -> b
    android.os.Messenger c(com.baidu.location.d) -> c
    java.util.List c(com.baidu.location.d,boolean) -> c
    java.lang.String d(com.baidu.location.d) -> d
    java.lang.String e(com.baidu.location.d) -> e
    boolean f(com.baidu.location.d) -> f
    boolean g(com.baidu.location.d) -> g
    com.baidu.location.u$b h(com.baidu.location.d) -> h
    java.lang.String b(com.baidu.location.d,java.lang.String) -> b
    java.util.List a(com.baidu.location.d,java.util.List) -> a
    java.util.List b(com.baidu.location.d,java.util.List) -> b
    void c(com.baidu.location.d,java.util.List) -> c
    void i(com.baidu.location.d) -> i
    void a(com.baidu.location.d,android.content.Context) -> a
    com.baidu.location.d$d j(com.baidu.location.d) -> j
    android.os.Handler k(com.baidu.location.d) -> k
com.baidu.location.d$1 -> com.baidu.location.d$1:
com.baidu.location.d$a -> com.baidu.location.d$a:
    com.baidu.location.t R -> R
    java.lang.String S -> S
    com.baidu.location.d a -> a
    void T() -> T
    void do(boolean) -> do
    void d() -> d
    void e() -> e
    void ai() -> ai
com.baidu.location.d$b -> com.baidu.location.d$b:
    com.baidu.location.d a -> a
    void a(android.os.Message) -> a
    void a() -> a
com.baidu.location.d$c -> com.baidu.location.d$c:
    com.baidu.location.d a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.d$d -> com.baidu.location.d$d:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.e -> com.baidu.location.e:
    com.baidu.location.e a -> a
    com.baidu.location.e bg() -> bg
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void if(java.io.File,java.lang.String,java.lang.String) -> if
    void bh() -> bh
    java.lang.String a(java.lang.Throwable) -> a
    boolean a(java.lang.String,java.lang.String) -> a
com.baidu.location.f -> com.baidu.location.f:
    com.baidu.location.LLSInterface ii -> ii
    com.baidu.location.LLSInterface ik -> ik
    com.baidu.location.LLSInterface il -> il
    java.lang.String replaceFileName -> replaceFileName
    java.lang.String ij -> ij
    android.content.Context mC -> mC
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    float getFrameVersion() -> getFrameVersion
    java.lang.String getJarFileName() -> getJarFileName
    android.content.Context getServiceContext() -> getServiceContext
com.baidu.location.g -> com.baidu.location.g:
    com.baidu.location.g$a a -> a
    android.os.Messenger R -> R
    android.content.Context S -> S
    boolean gv -> gv
    android.os.Looper T -> T
    android.os.HandlerThread U -> U
    boolean V -> V
    long W -> W
    boolean gE -> gE
    long gw -> gw
    void onCreate(android.content.Context) -> onCreate
    void a() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void b() -> b
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Handler bj() -> bj
    long bi() -> bi
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void d(android.os.Message) -> d
    boolean onUnBind(android.content.Intent) -> onUnBind
    double getVersion() -> getVersion
    void a(com.baidu.location.g,android.os.Message) -> a
    void b(com.baidu.location.g,android.os.Message) -> b
    void c(com.baidu.location.g,android.os.Message) -> c
    void d(com.baidu.location.g,android.os.Message) -> d
    void a(com.baidu.location.g) -> a
    void b(com.baidu.location.g) -> b
com.baidu.location.g$a -> com.baidu.location.g$a:
    com.baidu.location.g a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.h -> com.baidu.location.h:
    int a -> a
    int R -> R
    android.hardware.SensorManager S -> S
    android.hardware.Sensor T -> T
    android.hardware.Sensor U -> U
    android.os.Handler V -> V
    com.baidu.location.h W -> W
    boolean X -> X
    boolean Y -> Y
    boolean Z -> Z
    boolean aa -> aa
    java.lang.StringBuffer ab -> ab
    java.lang.StringBuffer ac -> ac
    java.lang.Runnable ad -> ad
    java.lang.Runnable ae -> ae
    int af -> af
    int ag -> ag
    boolean ah -> ah
    com.baidu.location.h cM() -> cM
    void goto(int) -> goto
    boolean a(int) -> a
    void a(java.io.RandomAccessFile,int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean a(java.io.File) -> a
    java.lang.String c(int) -> c
    java.lang.String d(int) -> d
    java.lang.String b() -> b
    boolean a(java.io.File,int) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String cG() -> cG
    void cO() -> cO
    void cK() -> cK
    void cP() -> cP
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void a(java.lang.StringBuffer) -> a
    void b(java.lang.StringBuffer) -> b
    void a(java.lang.StringBuffer,java.lang.StringBuffer,java.lang.String) -> a
    void a(java.lang.StringBuffer,java.io.File) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    java.lang.Runnable a(com.baidu.location.h) -> a
    android.os.Handler b(com.baidu.location.h) -> b
    java.lang.Runnable c(com.baidu.location.h) -> c
com.baidu.location.i -> com.baidu.location.i:
    com.baidu.location.h a -> a
    void run() -> run
com.baidu.location.j -> com.baidu.location.j:
    com.baidu.location.h a -> a
    void run() -> run
com.baidu.location.k -> com.baidu.location.k:
    com.baidu.location.k a -> a
    android.os.Handler g1 -> g1
    com.baidu.location.k bp() -> bp
    void bt() -> bt
    void br() -> br
    boolean bs() -> bs
    boolean bq() -> bq
com.baidu.location.l -> com.baidu.location.l:
    float[] a -> a
    float[] R -> R
    float[] S -> S
    android.hardware.SensorManager T -> T
    com.baidu.location.l U -> U
    float V -> V
    boolean W -> W
    com.baidu.location.l bw() -> bw
    void bx() -> bx
    void bv() -> bv
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void try(boolean) -> try
    boolean by() -> by
    float bu() -> bu
com.baidu.location.m -> com.baidu.location.m:
    com.baidu.location.u$b ek -> ek
    com.baidu.location.ac$a eh -> eh
    boolean a -> a
    boolean S -> S
    boolean T -> T
    boolean U -> U
    java.lang.String ee -> ee
    android.os.Handler R -> R
    void a(android.os.Message) -> a
    void a() -> a
    java.lang.String e(java.lang.String) -> e
com.baidu.location.m$a -> com.baidu.location.m$a:
    java.lang.String a -> a
    java.lang.String R -> R
    com.baidu.location.m S -> S
    void T() -> T
    void do(boolean) -> do
    void d(java.lang.String) -> d
com.baidu.location.m$b -> com.baidu.location.m$b:
    com.baidu.location.m a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.n -> com.baidu.location.n:
    com.baidu.location.n U -> U
    int a -> a
    int S -> S
    boolean V -> V
    com.baidu.location.v W -> W
    com.baidu.location.m$a em -> em
    java.lang.String X -> X
    com.baidu.location.BDLocation Y -> Y
    com.baidu.location.BDLocation Z -> Z
    com.baidu.location.u$b aa -> aa
    com.baidu.location.ac$a ab -> ab
    boolean ac -> ac
    boolean ad -> ad
    boolean ae -> ae
    long af -> af
    long ag -> ag
    int ah -> ah
    android.os.Handler T -> T
    com.baidu.location.n ay() -> ay
    void case(android.os.Message) -> case
    void b() -> b
    void c() -> c
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void d(android.os.Message) -> d
    void e() -> e
    boolean a(com.baidu.location.u$b) -> a
    boolean aA() -> aA
    boolean a(com.baidu.location.ac$a) -> a
    void f() -> f
    void aw() -> aw
    void a(android.os.Message) -> a
    void a() -> a
    void d() -> d
    void for(com.baidu.location.BDLocation) -> for
    void g() -> g
    void h() -> h
    boolean a(com.baidu.location.n) -> a
    boolean a(com.baidu.location.n,boolean) -> a
    void b(com.baidu.location.n) -> b
com.baidu.location.n$1 -> com.baidu.location.n$1:
com.baidu.location.n$a -> com.baidu.location.n$a:
    com.baidu.location.n a -> a
    void run() -> run
com.baidu.location.o -> com.baidu.location.o:
    com.baidu.location.o a -> a
    android.os.Handler R -> R
    boolean S -> S
    boolean T -> T
    com.baidu.location.o bA() -> bA
    void bz() -> bz
    void a() -> a
    void bB() -> bB
    void a(com.baidu.location.o) -> a
com.baidu.location.p -> com.baidu.location.p:
    com.baidu.location.o a -> a
    void run() -> run
com.baidu.location.q -> com.baidu.location.q:
    com.baidu.location.q a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String new -> new
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.baidu.location.q$a h -> h
    long i -> i
    long j -> j
    long k -> k
    com.baidu.location.q a() -> a
    void do() -> do
    void if() -> if
    void a(android.os.Message) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> if
    java.lang.String a(com.baidu.location.q) -> a
    java.lang.String a(com.baidu.location.q,java.lang.String) -> a
    java.lang.String b(com.baidu.location.q) -> b
    java.lang.String b(com.baidu.location.q,java.lang.String) -> b
    long c(com.baidu.location.q) -> c
    long d(com.baidu.location.q) -> d
    long a(com.baidu.location.q,long) -> a
com.baidu.location.q$a -> com.baidu.location.q$a:
    boolean a -> a
    java.lang.String R -> R
    android.os.Messenger S -> S
    com.baidu.location.q T -> T
    void T() -> T
    void do(boolean) -> do
    void try(android.os.Message) -> try
com.baidu.location.r -> com.baidu.location.r:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void if(boolean,java.lang.Object) -> if
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void if(boolean) -> if
com.baidu.location.s -> com.baidu.location.s:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.location.t -> com.baidu.location.t:
    int int -> int
    java.lang.String b -> b
    double c -> c
    double d -> d
    int e -> e
    float f -> f
    long g -> g
    int h -> h
    java.lang.String i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    long m -> m
    int a -> a
    int b() -> b
    void a(int) -> a
    java.lang.String getGeofenceId() -> getGeofenceId
    double case() -> case
    double a() -> a
    float do() -> do
    void a(float) -> a
    long goto() -> goto
    java.lang.String int() -> int
    boolean byte() -> byte
    void do(boolean) -> do
    boolean for() -> for
    void if(boolean) -> if
    boolean if() -> if
    void a(boolean) -> a
    long else() -> else
    void a(long) -> a
    int char() -> char
    int new() -> new
    void a(java.lang.String) -> a
    void b(int) -> b
    void a(double,double) -> a
    void b(java.lang.String) -> b
    void b(long) -> b
    java.lang.String c(int) -> c
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.location.u -> com.baidu.location.u:
    long a -> a
    long R -> R
    long S -> S
    com.baidu.location.u T -> T
    android.net.wifi.WifiManager U -> U
    com.baidu.location.u$a V -> V
    com.baidu.location.u$b W -> W
    long X -> X
    long Y -> Y
    boolean Z -> Z
    java.lang.Object aa -> aa
    java.lang.reflect.Method ab -> ab
    boolean ac -> ac
    long ad -> ad
    com.baidu.location.u bW() -> bW
    void b2() -> b2
    void bT() -> bT
    boolean b3() -> b3
    boolean bX() -> bX
    boolean b5() -> b5
    boolean bU() -> bU
    java.lang.String b4() -> b4
    com.baidu.location.u$b bS() -> bS
    com.baidu.location.u$b b1() -> b1
    com.baidu.location.u$b bY() -> bY
    void a() -> a
    boolean bZ() -> bZ
    boolean if(com.baidu.location.u$b,com.baidu.location.u$b,float) -> if
    double if(com.baidu.location.u$b,com.baidu.location.u$b) -> if
    java.lang.String b0() -> b0
    boolean a(java.lang.String) -> a
    long a(com.baidu.location.u,long) -> a
    void a(com.baidu.location.u) -> a
    boolean a(com.baidu.location.u,java.lang.String) -> a
    long b(com.baidu.location.u) -> b
com.baidu.location.u$1 -> com.baidu.location.u$1:
com.baidu.location.u$a -> com.baidu.location.u$a:
    com.baidu.location.u a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.u$b -> com.baidu.location.u$b:
    java.util.List for -> for
    long b -> b
    long c -> c
    boolean d -> d
    boolean e -> e
    com.baidu.location.u a -> a
    java.lang.String int() -> int
    int try() -> try
    java.lang.String char() -> char
    java.lang.String byte() -> byte
    java.lang.String a(int) -> a
    java.lang.String else() -> else
    void a() -> a
    java.lang.String if(int) -> if
    boolean if(com.baidu.location.u$b) -> if
    boolean do(com.baidu.location.u$b) -> do
    boolean a(com.baidu.location.u$b) -> a
    int do() -> do
    boolean case() -> case
    boolean for() -> for
    boolean new() -> new
    boolean if() -> if
com.baidu.location.v -> com.baidu.location.v:
    boolean do(com.baidu.location.u$b) -> do
    int try(com.baidu.location.BDLocation) -> try
    void b6() -> b6
com.baidu.location.w -> com.baidu.location.w:
    boolean a -> a
    java.lang.String R -> R
    boolean S -> S
    java.lang.String T -> T
    int U -> U
    int V -> V
    java.lang.String W -> W
    char X -> X
    java.lang.String Y -> Y
    boolean Z -> Z
    int aa -> aa
    double ab -> ab
    double ac -> ac
    java.util.List ad -> ad
    boolean ae -> ae
    int af -> af
    boolean ag -> ag
    java.lang.String kt -> kt
    int ko -> ko
    void a() -> a
    boolean a(java.lang.String) -> a
    boolean cV() -> cV
    int cX() -> cX
    java.lang.String cU() -> cU
    double cW() -> cW
    double cT() -> cT
com.baidu.location.x -> com.baidu.location.x:
    int h4 -> h4
    android.content.Context a -> a
    com.baidu.location.x$a R -> R
    android.os.HandlerThread S -> S
    java.lang.Object T -> T
    com.baidu.location.x U -> U
    com.baidu.location.x for(android.content.Context) -> for
    void if(com.baidu.location.t,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void do(com.baidu.location.t) -> do
    void if(com.baidu.location.t) -> if
    void do(java.lang.String,boolean) -> do
    void if(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    long a() -> a
    void a(int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> a
    void a(int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> a
    void b() -> b
    void b7() -> b7
    void c() -> c
    int a(com.baidu.location.t,java.lang.String) -> a
    int a(java.util.List) -> a
    void d() -> d
    void e() -> e
    void a(com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> a
    void int(android.content.Context) -> int
    int do(android.content.Context) -> do
    void a(com.baidu.location.x) -> a
    android.content.Context b(com.baidu.location.x) -> b
    void a(com.baidu.location.x,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> a
    com.baidu.location.x$a c(com.baidu.location.x) -> c
    void a(com.baidu.location.x,int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> a
    void a(com.baidu.location.x,int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> a
    int a(com.baidu.location.x,com.baidu.location.t,java.lang.String) -> a
    int a(com.baidu.location.x,java.util.List) -> a
com.baidu.location.x$a -> com.baidu.location.x$a:
    int if -> if
    int do -> do
    int for -> for
    com.baidu.location.x a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.x$b -> com.baidu.location.x$b:
    com.baidu.location.t R -> R
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener S -> S
    int T -> T
    com.baidu.location.x a -> a
    void T() -> T
    void do(boolean) -> do
    void ag() -> ag
com.baidu.location.x$c -> com.baidu.location.x$c:
    com.baidu.location.t b -> b
    java.lang.String c -> c
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener d -> d
    com.baidu.location.x a -> a
    void run() -> run
com.baidu.location.x$d -> com.baidu.location.x$d:
    java.util.List b -> b
    com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener c -> c
    com.baidu.location.x a -> a
    void run() -> run
com.baidu.location.y -> com.baidu.location.y:
    com.baidu.location.t a -> a
    com.baidu.location.x b -> b
    void run() -> run
com.baidu.location.z -> com.baidu.location.z:
    com.baidu.location.t a -> a
    com.baidu.location.x b -> b
    void run() -> run
com.baidu.mapapi.SDKInitializer -> com.baidu.mapapi.SDKInitializer:
    java.lang.String SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR -> SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR
    java.lang.String SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR -> SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR
    java.lang.String SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE -> SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE
    boolean a -> a
    void initialize(java.lang.String,android.content.Context) -> initialize
    void initialize(android.content.Context) -> initialize
com.baidu.mapapi.VersionInfo -> com.baidu.mapapi.VersionInfo:
    java.lang.String VERSION_INFO -> VERSION_INFO
    java.lang.String VERSION_DESC -> VERSION_DESC
    java.lang.String getApiVersion() -> getApiVersion
    java.lang.String getVersionDesc() -> getVersionDesc
com.baidu.mapapi.a -> com.baidu.mapapi.a:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Handler c -> c
    com.baidu.platform.comapi.a d -> d
    int e -> e
    com.baidu.mapapi.a f -> f
    com.baidu.mapapi.a a() -> a
    void a(android.content.Context) -> a
    void b() -> b
    void c() -> c
    android.content.Context d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Message) -> a
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.b -> com.baidu.mapapi.b:
    com.baidu.mapapi.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.map.Arc -> com.baidu.mapapi.map.Arc:
    java.lang.String f -> f
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.ArcOptions -> com.baidu.mapapi.map.ArcOptions:
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.model.LatLng g -> g
    com.baidu.mapapi.model.LatLng h -> h
    com.baidu.mapapi.model.LatLng i -> i
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    com.baidu.mapapi.map.ArcOptions color(int) -> color
    com.baidu.mapapi.map.ArcOptions points(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> points
    com.baidu.mapapi.map.ArcOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.ArcOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.ArcOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.ArcOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.BaiduMap -> com.baidu.mapapi.map.BaiduMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    java.lang.String b -> b
    com.baidu.mapapi.map.Projection c -> c
    com.baidu.mapapi.map.UiSettings d -> d
    com.baidu.platform.comapi.map.f e -> e
    java.util.List f -> f
    com.baidu.mapapi.map.Overlay$a g -> g
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener h -> h
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener i -> i
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback j -> j
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener k -> k
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener l -> l
    com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener m -> m
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener n -> n
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener o -> o
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback p -> p
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback q -> q
    com.baidu.mapapi.map.HeatMap r -> r
    java.util.concurrent.locks.Lock s -> s
    com.baidu.mapapi.map.InfoWindow t -> t
    com.baidu.mapapi.map.Marker u -> u
    android.view.View v -> v
    com.baidu.mapapi.map.Marker w -> w
    com.baidu.mapapi.map.MyLocationData x -> x
    com.baidu.mapapi.map.MyLocationConfiguration y -> y
    com.baidu.mapapi.map.MapView a -> a
    boolean z -> z
    com.baidu.mapapi.map.Overlay addOverlay(com.baidu.mapapi.map.OverlayOptions) -> addOverlay
    void clear() -> clear
    void setMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> setMapStatus
    com.baidu.mapapi.map.MapStatus getMapStatus() -> getMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate,int) -> animateMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> animateMapStatus
    com.baidu.platform.comapi.map.z a(com.baidu.mapapi.map.MapStatusUpdate) -> a
    void setMapType(int) -> setMapType
    int getMapType() -> getMapType
    float getMaxZoomLevel() -> getMaxZoomLevel
    void setMaxAndMinZoomLevel(float,float) -> setMaxAndMinZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    com.baidu.mapapi.map.Projection getProjection() -> getProjection
    com.baidu.mapapi.map.UiSettings getUiSettings() -> getUiSettings
    void setBuildingsEnabled(boolean) -> setBuildingsEnabled
    boolean isBuildingsEnabled() -> isBuildingsEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationData(com.baidu.mapapi.map.MyLocationData) -> setMyLocationData
    com.baidu.mapapi.map.MyLocationData getLocationData() -> getLocationData
    void setMyLocationConfigeration(com.baidu.mapapi.map.MyLocationConfiguration) -> setMyLocationConfigeration
    com.baidu.mapapi.map.MyLocationConfiguration getLocationConfigeration() -> getLocationConfigeration
    void a(com.baidu.mapapi.map.MyLocationData,com.baidu.mapapi.map.MyLocationConfiguration) -> a
    void addHeatMap(com.baidu.mapapi.map.HeatMap) -> addHeatMap
    void a(com.baidu.mapapi.map.HeatMap) -> a
    void a() -> a
    void setBaiduHeatMapEnabled(boolean) -> setBaiduHeatMapEnabled
    boolean isBaiduHeatMapEnabled() -> isBaiduHeatMapEnabled
    boolean isSupportBaiduHeatMap() -> isSupportBaiduHeatMap
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isTrafficEnabled() -> isTrafficEnabled
    void snapshot(com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshot
    void showInfoWindow(com.baidu.mapapi.map.InfoWindow) -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    void setOnMapStatusChangeListener(com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener) -> setOnMapStatusChangeListener
    void setOnMapClickListener(com.baidu.mapapi.map.BaiduMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapLoadedCallback(com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback) -> setOnMapLoadedCallback
    void setOnMapDoubleClickListener(com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener) -> setOnMapDoubleClickListener
    void setOnMapLongClickListener(com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnMyLocationClickListener(com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener) -> setOnMyLocationClickListener
    void setOnMapDrawFrameCallback(com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback) -> setOnMapDrawFrameCallback
    java.util.List a(com.baidu.mapapi.map.BaiduMap) -> a
    com.baidu.platform.comapi.map.f b(com.baidu.mapapi.map.BaiduMap) -> b
    android.view.View c(com.baidu.mapapi.map.BaiduMap) -> c
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener d(com.baidu.mapapi.map.BaiduMap) -> d
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener e(com.baidu.mapapi.map.BaiduMap) -> e
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener f(com.baidu.mapapi.map.BaiduMap) -> f
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener g(com.baidu.mapapi.map.BaiduMap) -> g
    com.baidu.mapapi.map.Projection a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Projection) -> a
    boolean a(com.baidu.mapapi.map.BaiduMap,boolean) -> a
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback h(com.baidu.mapapi.map.BaiduMap) -> h
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback i(com.baidu.mapapi.map.BaiduMap) -> i
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener j(com.baidu.mapapi.map.BaiduMap) -> j
    com.baidu.mapapi.map.InfoWindow k(com.baidu.mapapi.map.BaiduMap) -> k
    com.baidu.mapapi.map.Marker l(com.baidu.mapapi.map.BaiduMap) -> l
    com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener m(com.baidu.mapapi.map.BaiduMap) -> m
    com.baidu.mapapi.map.Marker n(com.baidu.mapapi.map.BaiduMap) -> n
    com.baidu.mapapi.map.Projection o(com.baidu.mapapi.map.BaiduMap) -> o
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener p(com.baidu.mapapi.map.BaiduMap) -> p
    com.baidu.mapapi.map.Marker a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Marker) -> a
    java.util.concurrent.locks.Lock q(com.baidu.mapapi.map.BaiduMap) -> q
    com.baidu.mapapi.map.HeatMap r(com.baidu.mapapi.map.BaiduMap) -> r
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback s(com.baidu.mapapi.map.BaiduMap) -> s
com.baidu.mapapi.map.BaiduMap$1 -> com.baidu.mapapi.map.BaiduMap$1:
    int[] a -> a
com.baidu.mapapi.map.BaiduMap$OnMapClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapClickListener:
    void onMapClick(com.baidu.mapapi.model.LatLng) -> onMapClick
    boolean onMapPoiClick(com.baidu.mapapi.map.MapPoi) -> onMapPoiClick
com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener:
    void onMapDoubleClick(com.baidu.mapapi.model.LatLng) -> onMapDoubleClick
com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback -> com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback:
    void onMapDrawFrame(javax.microedition.khronos.opengles.GL10,com.baidu.mapapi.map.MapStatus) -> onMapDrawFrame
com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback -> com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback:
    void onMapLoaded() -> onMapLoaded
com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener:
    void onMapLongClick(com.baidu.mapapi.model.LatLng) -> onMapLongClick
com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener -> com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener:
    void onMapStatusChangeStart(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeStart
    void onMapStatusChange(com.baidu.mapapi.map.MapStatus) -> onMapStatusChange
    void onMapStatusChangeFinish(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeFinish
com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener:
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener:
    void onMarkerDrag(com.baidu.mapapi.map.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.baidu.mapapi.map.Marker) -> onMarkerDragEnd
    void onMarkerDragStart(com.baidu.mapapi.map.Marker) -> onMarkerDragStart
com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener -> com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener:
    boolean onMyLocationClick() -> onMyLocationClick
com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback -> com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback:
    void onSnapshotReady(android.graphics.Bitmap) -> onSnapshotReady
com.baidu.mapapi.map.BaiduMapOptions -> com.baidu.mapapi.map.BaiduMapOptions:
    com.baidu.mapapi.map.MapStatus a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.baidu.mapapi.map.BaiduMapOptions mapStatus(com.baidu.mapapi.map.MapStatus) -> mapStatus
    com.baidu.mapapi.map.BaiduMapOptions compassEnabled(boolean) -> compassEnabled
    com.baidu.mapapi.map.BaiduMapOptions mapType(int) -> mapType
    com.baidu.mapapi.map.BaiduMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions overlookingGesturesEnabled(boolean) -> overlookingGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scaleControlEnabled(boolean) -> scaleControlEnabled
    com.baidu.platform.comapi.map.y a() -> a
com.baidu.mapapi.map.BitmapDescriptor -> com.baidu.mapapi.map.BitmapDescriptor:
    android.graphics.Bitmap a -> a
    android.os.Bundle b -> b
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    byte[] a() -> a
    android.os.Bundle b() -> b
    void recycle() -> recycle
com.baidu.mapapi.map.BitmapDescriptorFactory -> com.baidu.mapapi.map.BitmapDescriptorFactory:
    com.baidu.mapapi.map.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.baidu.mapapi.map.BitmapDescriptor fromAssetWithDpi(java.lang.String) -> fromAssetWithDpi
    com.baidu.mapapi.map.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
    com.baidu.mapapi.map.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.baidu.mapapi.map.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.baidu.mapapi.map.BitmapDescriptor fromResource(int) -> fromResource
    com.baidu.mapapi.map.BitmapDescriptor fromView(android.view.View) -> fromView
com.baidu.mapapi.map.Circle -> com.baidu.mapapi.map.Circle:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.Stroke d -> d
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setFillColor(int) -> setFillColor
    void setRadius(int) -> setRadius
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.CircleOptions -> com.baidu.mapapi.map.CircleOptions:
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.map.Stroke h -> h
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.CircleOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.CircleOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.CircleOptions radius(int) -> radius
    com.baidu.mapapi.map.CircleOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.CircleOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.CircleOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.CircleOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Dot -> com.baidu.mapapi.map.Dot:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setColor(int) -> setColor
    void setRadius(int) -> setRadius
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.DotOptions -> com.baidu.mapapi.map.DotOptions:
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.DotOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.DotOptions color(int) -> color
    com.baidu.mapapi.map.DotOptions radius(int) -> radius
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.DotOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.DotOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.DotOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Gradient -> com.baidu.mapapi.map.Gradient:
    int a -> a
    int[] b -> b
    float[] c -> c
    java.util.HashMap a() -> a
    int[] a(double) -> a
    int a(int,int,float) -> a
com.baidu.mapapi.map.Gradient$1 -> com.baidu.mapapi.map.Gradient$1:
com.baidu.mapapi.map.Gradient$a -> com.baidu.mapapi.map.Gradient$a:
    int b -> b
    int c -> c
    float d -> d
    com.baidu.mapapi.map.Gradient a -> a
    float a(com.baidu.mapapi.map.Gradient$a) -> a
    int b(com.baidu.mapapi.map.Gradient$a) -> b
    int c(com.baidu.mapapi.map.Gradient$a) -> c
com.baidu.mapapi.map.GroundOverlay -> com.baidu.mapapi.map.GroundOverlay:
    java.lang.String o -> o
    int a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    com.baidu.mapapi.model.LatLng c -> c
    int d -> d
    int e -> e
    float f -> f
    float g -> g
    com.baidu.mapapi.model.LatLngBounds h -> h
    float i -> i
    void setImage(com.baidu.mapapi.map.BitmapDescriptor) -> setImage
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setDimensions(int) -> setDimensions
    void setDimensions(int,int) -> setDimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setPositionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> setPositionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.GroundOverlayOptions -> com.baidu.mapapi.map.GroundOverlayOptions:
    com.baidu.mapapi.map.BitmapDescriptor d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    float h -> h
    float i -> i
    com.baidu.mapapi.model.LatLngBounds j -> j
    float k -> k
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.GroundOverlayOptions image(com.baidu.mapapi.map.BitmapDescriptor) -> image
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    com.baidu.mapapi.map.GroundOverlayOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int) -> dimensions
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int,int) -> dimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.baidu.mapapi.map.GroundOverlayOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.GroundOverlayOptions positionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> positionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    com.baidu.mapapi.map.GroundOverlayOptions transparency(float) -> transparency
    float getTransparency() -> getTransparency
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.GroundOverlayOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.GroundOverlayOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.GroundOverlayOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.HeatMap -> com.baidu.mapapi.map.HeatMap:
    java.lang.String b -> b
    android.util.SparseIntArray c -> c
    int[] d -> d
    float[] e -> e
    com.baidu.mapapi.map.i f -> f
    java.util.Collection g -> g
    int h -> h
    com.baidu.mapapi.map.Gradient i -> i
    double j -> j
    com.baidu.mapapi.map.d k -> k
    int[] l -> l
    double[] m -> m
    double[] n -> n
    java.util.HashMap o -> o
    java.util.concurrent.ExecutorService p -> p
    java.util.HashSet q -> q
    com.baidu.mapapi.map.BaiduMap a -> a
    int DEFAULT_RADIUS -> DEFAULT_RADIUS
    double DEFAULT_OPACITY -> DEFAULT_OPACITY
    com.baidu.mapapi.map.Gradient DEFAULT_GRADIENT -> DEFAULT_GRADIENT
    void removeHeatMap() -> removeHeatMap
    void b(java.util.Collection) -> b
    java.util.Collection c(java.util.Collection) -> c
    com.baidu.mapapi.map.j a(int,int,int) -> a
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    com.baidu.mapapi.map.j c(java.lang.String) -> c
    void a(java.lang.String,com.baidu.mapapi.map.j) -> a
    void d() -> d
    void b() -> b
    void c() -> c
    void b(int,int,int) -> b
    void a(com.baidu.mapapi.map.Gradient) -> a
    double[] a(int) -> a
    com.baidu.mapapi.map.j a(android.graphics.Bitmap) -> a
    com.baidu.mapapi.map.d d(java.util.Collection) -> d
    double[] a(int,double) -> a
    double[][] a(double[][],double[]) -> a
    android.graphics.Bitmap a(double[][],int[],double) -> a
    double a(java.util.Collection,com.baidu.mapapi.map.d,int,int) -> a
    java.util.Collection a(java.util.Collection) -> a
    void a(com.baidu.mapapi.map.HeatMap,int,int,int) -> a
com.baidu.mapapi.map.HeatMap$Builder -> com.baidu.mapapi.map.HeatMap$Builder:
    java.util.Collection a -> a
    int b -> b
    com.baidu.mapapi.map.Gradient c -> c
    double d -> d
    com.baidu.mapapi.map.HeatMap$Builder data(java.util.Collection) -> data
    com.baidu.mapapi.map.HeatMap$Builder weightedData(java.util.Collection) -> weightedData
    com.baidu.mapapi.map.HeatMap$Builder radius(int) -> radius
    com.baidu.mapapi.map.HeatMap$Builder gradient(com.baidu.mapapi.map.Gradient) -> gradient
    com.baidu.mapapi.map.HeatMap$Builder opacity(double) -> opacity
    com.baidu.mapapi.map.HeatMap build() -> build
    java.util.Collection a(com.baidu.mapapi.map.HeatMap$Builder) -> a
    int b(com.baidu.mapapi.map.HeatMap$Builder) -> b
    com.baidu.mapapi.map.Gradient c(com.baidu.mapapi.map.HeatMap$Builder) -> c
    double d(com.baidu.mapapi.map.HeatMap$Builder) -> d
com.baidu.mapapi.map.InfoWindow -> com.baidu.mapapi.map.InfoWindow:
    com.baidu.mapapi.map.BitmapDescriptor a -> a
    android.view.View b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener d -> d
    int e -> e
com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener -> com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener:
    void onInfoWindowClick() -> onInfoWindowClick
com.baidu.mapapi.map.MapFragment -> com.baidu.mapapi.map.MapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.MapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.MapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.MapPoi -> com.baidu.mapapi.map.MapPoi:
    java.lang.String c -> c
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.map.MapStatus -> com.baidu.mapapi.map.MapStatus:
    float rotate -> rotate
    com.baidu.mapapi.model.LatLng target -> target
    float overlook -> overlook
    float zoom -> zoom
    android.graphics.Point targetScreen -> targetScreen
    com.baidu.platform.comapi.map.z a -> a
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.z) -> a
    com.baidu.platform.comapi.map.z a() -> a
    com.baidu.platform.comapi.map.z b(com.baidu.platform.comapi.map.z) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.MapStatus$Builder -> com.baidu.mapapi.map.MapStatus$Builder:
    float a -> a
    com.baidu.mapapi.model.LatLng b -> b
    float c -> c
    float d -> d
    android.graphics.Point e -> e
    com.baidu.mapapi.map.MapStatus$Builder rotate(float) -> rotate
    com.baidu.mapapi.map.MapStatus$Builder target(com.baidu.mapapi.model.LatLng) -> target
    com.baidu.mapapi.map.MapStatus$Builder overlook(float) -> overlook
    com.baidu.mapapi.map.MapStatus$Builder zoom(float) -> zoom
    com.baidu.mapapi.map.MapStatus$Builder targetScreen(android.graphics.Point) -> targetScreen
    com.baidu.mapapi.map.MapStatus build() -> build
com.baidu.mapapi.map.MapStatusUpdate -> com.baidu.mapapi.map.MapStatusUpdate:
    java.lang.String l -> l
    int a -> a
    com.baidu.mapapi.map.MapStatus b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLngBounds d -> d
    int e -> e
    int f -> f
    float g -> g
    int h -> h
    int i -> i
    float j -> j
    android.graphics.Point k -> k
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.f,com.baidu.mapapi.map.MapStatus) -> a
com.baidu.mapapi.map.MapStatusUpdateFactory -> com.baidu.mapapi.map.MapStatusUpdateFactory:
    com.baidu.mapapi.map.MapStatusUpdate newMapStatus(com.baidu.mapapi.map.MapStatus) -> newMapStatus
    com.baidu.mapapi.map.MapStatusUpdate newLatLng(com.baidu.mapapi.model.LatLng) -> newLatLng
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds,int,int) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngZoom(com.baidu.mapapi.model.LatLng,float) -> newLatLngZoom
    com.baidu.mapapi.map.MapStatusUpdate scrollBy(int,int) -> scrollBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomIn() -> zoomIn
    com.baidu.mapapi.map.MapStatusUpdate zoomOut() -> zoomOut
    com.baidu.mapapi.map.MapStatusUpdate zoomTo(float) -> zoomTo
com.baidu.mapapi.map.MapView -> com.baidu.mapapi.map.MapView:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.f b -> b
    com.baidu.mapapi.map.BaiduMap c -> c
    android.widget.ImageView d -> d
    android.graphics.Bitmap e -> e
    android.widget.ZoomControls f -> f
    android.graphics.Point g -> g
    android.graphics.Point h -> h
    android.widget.RelativeLayout i -> i
    android.widget.TextView j -> j
    android.widget.TextView k -> k
    android.widget.ImageView l -> l
    android.util.SparseArray m -> m
    float n -> n
    com.baidu.platform.comapi.map.h o -> o
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> a
    void b(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b() -> b
    void c(android.content.Context) -> c
    com.baidu.mapapi.map.BaiduMap getMap() -> getMap
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View) -> a
    void showZoomControls(boolean) -> showZoomControls
    void setZoomControlsPosition(android.graphics.Point) -> setZoomControlsPosition
    void showScaleControl(boolean) -> showScaleControl
    void setScaleControlPosition(android.graphics.Point) -> setScaleControlPosition
    com.baidu.platform.comapi.map.f a(com.baidu.mapapi.map.MapView) -> a
    float b(com.baidu.mapapi.map.MapView) -> b
    android.util.SparseArray a() -> a
    android.widget.ImageView c(com.baidu.mapapi.map.MapView) -> c
    android.widget.TextView d(com.baidu.mapapi.map.MapView) -> d
    android.widget.TextView e(com.baidu.mapapi.map.MapView) -> e
    float a(com.baidu.mapapi.map.MapView,float) -> a
    void f(com.baidu.mapapi.map.MapView) -> f
com.baidu.mapapi.map.MapViewLayoutParams -> com.baidu.mapapi.map.MapViewLayoutParams:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.baidu.mapapi.model.LatLng a -> a
    android.graphics.Point b -> b
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode c -> c
    float d -> d
    float e -> e
    int f -> f
com.baidu.mapapi.map.MapViewLayoutParams$Builder -> com.baidu.mapapi.map.MapViewLayoutParams$Builder:
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    android.graphics.Point d -> d
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode e -> e
    int f -> f
    int g -> g
    int h -> h
    com.baidu.mapapi.map.MapViewLayoutParams build() -> build
    com.baidu.mapapi.map.MapViewLayoutParams$Builder width(int) -> width
    com.baidu.mapapi.map.MapViewLayoutParams$Builder height(int) -> height
    com.baidu.mapapi.map.MapViewLayoutParams$Builder align(int,int) -> align
    com.baidu.mapapi.map.MapViewLayoutParams$Builder position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.MapViewLayoutParams$Builder point(android.graphics.Point) -> point
    com.baidu.mapapi.map.MapViewLayoutParams$Builder layoutMode(com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode) -> layoutMode
    com.baidu.mapapi.map.MapViewLayoutParams$Builder yOffset(int) -> yOffset
com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode -> com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode:
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode mapMode -> mapMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode absoluteMode -> absoluteMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] $VALUES -> $VALUES
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] values() -> values
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.Marker -> com.baidu.mapapi.map.Marker:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    float c -> c
    float d -> d
    boolean e -> e
    boolean f -> f
    float g -> g
    java.lang.String h -> h
    int i -> i
    void setIcon(com.baidu.mapapi.map.BitmapDescriptor) -> setIcon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setRotate(float) -> setRotate
    float getRotate() -> getRotate
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.MarkerOptions -> com.baidu.mapapi.map.MarkerOptions:
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.map.BitmapDescriptor e -> e
    float f -> f
    float g -> g
    boolean h -> h
    boolean i -> i
    float j -> j
    java.lang.String k -> k
    int l -> l
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.MarkerOptions icon(com.baidu.mapapi.map.BitmapDescriptor) -> icon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    com.baidu.mapapi.map.MarkerOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.MarkerOptions perspective(boolean) -> perspective
    boolean isPerspective() -> isPerspective
    com.baidu.mapapi.map.MarkerOptions a(int) -> a
    com.baidu.mapapi.map.MarkerOptions draggable(boolean) -> draggable
    boolean isDraggable() -> isDraggable
    com.baidu.mapapi.map.MarkerOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.MarkerOptions rotate(float) -> rotate
    float getRotate() -> getRotate
    com.baidu.mapapi.map.MarkerOptions title(java.lang.String) -> title
    java.lang.String getTitle() -> getTitle
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.MarkerOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.MarkerOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.MarkerOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.MyLocationConfiguration -> com.baidu.mapapi.map.MyLocationConfiguration:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode locationMode -> locationMode
    boolean enableDirection -> enableDirection
    com.baidu.mapapi.map.BitmapDescriptor customMarker -> customMarker
com.baidu.mapapi.map.MyLocationConfiguration$LocationMode -> com.baidu.mapapi.map.MyLocationConfiguration$LocationMode:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode NORMAL -> NORMAL
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode FOLLOWING -> FOLLOWING
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode COMPASS -> COMPASS
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] a -> a
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] values() -> values
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MyLocationData -> com.baidu.mapapi.map.MyLocationData:
    double latitude -> latitude
    double longitude -> longitude
    float speed -> speed
    float direction -> direction
    float accuracy -> accuracy
    int satellitesNum -> satellitesNum
com.baidu.mapapi.map.MyLocationData$Builder -> com.baidu.mapapi.map.MyLocationData$Builder:
    double a -> a
    double b -> b
    float c -> c
    float d -> d
    float e -> e
    int f -> f
    com.baidu.mapapi.map.MyLocationData$Builder latitude(double) -> latitude
    com.baidu.mapapi.map.MyLocationData$Builder longitude(double) -> longitude
    com.baidu.mapapi.map.MyLocationData$Builder speed(float) -> speed
    com.baidu.mapapi.map.MyLocationData$Builder direction(float) -> direction
    com.baidu.mapapi.map.MyLocationData$Builder accuracy(float) -> accuracy
    com.baidu.mapapi.map.MyLocationData$Builder satellitesNum(int) -> satellitesNum
    com.baidu.mapapi.map.MyLocationData build() -> build
com.baidu.mapapi.map.Overlay -> com.baidu.mapapi.map.Overlay:
    java.lang.String j -> j
    com.baidu.platform.comapi.map.e k -> k
    int l -> l
    boolean m -> m
    android.os.Bundle n -> n
    com.baidu.mapapi.map.Overlay$a listener -> listener
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    android.os.Bundle getExtraInfo() -> getExtraInfo
    void setExtraInfo(android.os.Bundle) -> setExtraInfo
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
    void remove() -> remove
    void a(int,android.os.Bundle) -> a
    void a(java.util.List,android.os.Bundle) -> a
com.baidu.mapapi.map.Overlay$a -> com.baidu.mapapi.map.Overlay$a:
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.OverlayOptions -> com.baidu.mapapi.map.OverlayOptions:
    com.baidu.mapapi.map.Overlay a() -> a
com.baidu.mapapi.map.Polygon -> com.baidu.mapapi.map.Polygon:
    com.baidu.mapapi.map.Stroke a -> a
    int b -> b
    java.util.List c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setFillColor(int) -> setFillColor
    void setPoints(java.util.List) -> setPoints
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolygonOptions -> com.baidu.mapapi.map.PolygonOptions:
    com.baidu.mapapi.map.Stroke d -> d
    int e -> e
    java.util.List f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.PolygonOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.PolygonOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolygonOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolygonOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolygonOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolygonOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Polyline -> com.baidu.mapapi.map.Polyline:
    int a -> a
    java.util.List b -> b
    int c -> c
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(java.util.List) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolylineOptions -> com.baidu.mapapi.map.PolylineOptions:
    int d -> d
    java.util.List e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    com.baidu.mapapi.map.PolylineOptions color(int) -> color
    com.baidu.mapapi.map.PolylineOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolylineOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolylineOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolylineOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolylineOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Projection -> com.baidu.mapapi.map.Projection:
    com.baidu.platform.comapi.map.f a -> a
    com.baidu.mapapi.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.baidu.mapapi.model.LatLng) -> toScreenLocation
    android.graphics.PointF toOpenGLLocation(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.map.MapStatus) -> toOpenGLLocation
    float metersToEquatorPixels(float) -> metersToEquatorPixels
com.baidu.mapapi.map.Stroke -> com.baidu.mapapi.map.Stroke:
    int strokeWidth -> strokeWidth
    int color -> color
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.SupportMapFragment -> com.baidu.mapapi.map.SupportMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.SupportMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.SupportMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.Text -> com.baidu.mapapi.map.Text:
    java.lang.String p -> p
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    int d -> d
    int e -> e
    android.graphics.Typeface f -> f
    int g -> g
    int h -> h
    float i -> i
    int o -> o
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    void setText(java.lang.String) -> setText
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    void setBgColor(int) -> setBgColor
    void setFontColor(int) -> setFontColor
    void setFontSize(int) -> setFontSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setAlign(int,int) -> setAlign
    void setRotate(float) -> setRotate
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TextOptions -> com.baidu.mapapi.map.TextOptions:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    int h -> h
    android.graphics.Typeface i -> i
    int j -> j
    int k -> k
    float l -> l
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    com.baidu.mapapi.map.TextOptions text(java.lang.String) -> text
    com.baidu.mapapi.map.TextOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.TextOptions bgColor(int) -> bgColor
    com.baidu.mapapi.map.TextOptions fontColor(int) -> fontColor
    com.baidu.mapapi.map.TextOptions fontSize(int) -> fontSize
    com.baidu.mapapi.map.TextOptions typeface(android.graphics.Typeface) -> typeface
    com.baidu.mapapi.map.TextOptions align(int,int) -> align
    com.baidu.mapapi.map.TextOptions rotate(float) -> rotate
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.TextOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.TextOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.TextOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.UiSettings -> com.baidu.mapapi.map.UiSettings:
    com.baidu.platform.comapi.map.f a -> a
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isOverlookingGesturesEnabled() -> isOverlookingGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setCompassPosition(android.graphics.Point) -> setCompassPosition
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setOverlookingGesturesEnabled(boolean) -> setOverlookingGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
com.baidu.mapapi.map.WeightedLatLng -> com.baidu.mapapi.map.WeightedLatLng:
    android.graphics.Point a -> a
    double DEFAULT_INTENSITY -> DEFAULT_INTENSITY
    double intensity -> intensity
    com.baidu.mapapi.model.LatLng latLng -> latLng
    android.graphics.Point a() -> a
com.baidu.mapapi.map.a -> com.baidu.mapapi.map.a:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.b -> com.baidu.mapapi.map.b:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.map.z) -> a
    void b(com.baidu.platform.comapi.map.z) -> b
    void c(com.baidu.platform.comapi.map.z) -> c
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.platform.comapi.a.b) -> d
    void e(com.baidu.platform.comapi.a.b) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.z) -> a
    void d() -> d
    void e() -> e
com.baidu.mapapi.map.c -> com.baidu.mapapi.map.c:
    com.baidu.mapapi.map.BaiduMap a -> a
    android.os.Bundle a(int,int,int) -> a
com.baidu.mapapi.map.d -> com.baidu.mapapi.map.d:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean a(double,double) -> a
    boolean a(android.graphics.Point) -> a
    boolean a(double,double,double,double) -> a
    boolean a(com.baidu.mapapi.map.d) -> a
    boolean b(com.baidu.mapapi.map.d) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.e -> com.baidu.mapapi.map.e:
    int a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.HeatMap d -> d
    void run() -> run
com.baidu.mapapi.map.f -> com.baidu.mapapi.map.f:
    com.baidu.mapapi.map.MapView a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(com.baidu.platform.comapi.map.z) -> a
    void b(com.baidu.platform.comapi.map.z) -> b
    void c(com.baidu.platform.comapi.map.z) -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.platform.comapi.a.b) -> d
    void e(com.baidu.platform.comapi.a.b) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.z) -> a
    void d() -> d
    void e() -> e
com.baidu.mapapi.map.g -> com.baidu.mapapi.map.g:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.h -> com.baidu.mapapi.map.h:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.i -> com.baidu.mapapi.map.i:
    com.baidu.mapapi.map.d a -> a
    int b -> b
    java.util.List c -> c
    java.util.List d -> d
    void a(com.baidu.mapapi.map.i$a) -> a
    void a(double,double,com.baidu.mapapi.map.i$a) -> a
    void a() -> a
    java.util.Collection a(com.baidu.mapapi.map.d) -> a
    void a(com.baidu.mapapi.map.d,java.util.Collection) -> a
com.baidu.mapapi.map.i$a -> com.baidu.mapapi.map.i$a:
    android.graphics.Point a() -> a
com.baidu.mapapi.map.j -> com.baidu.mapapi.map.j:
    byte[] a -> a
    int b -> b
    int c -> c
    android.os.Bundle a() -> a
com.baidu.mapapi.map.offline.MKOLSearchRecord -> com.baidu.mapapi.map.offline.MKOLSearchRecord:
    int cityID -> cityID
    int size -> size
    java.lang.String cityName -> cityName
    int cityType -> cityType
    java.util.ArrayList childCities -> childCities
com.baidu.mapapi.map.offline.MKOLUpdateElement -> com.baidu.mapapi.map.offline.MKOLUpdateElement:
    int UNDEFINED -> UNDEFINED
    int DOWNLOADING -> DOWNLOADING
    int WAITING -> WAITING
    int SUSPENDED -> SUSPENDED
    int FINISHED -> FINISHED
    int eOLDSMd5Error -> eOLDSMd5Error
    int eOLDSNetError -> eOLDSNetError
    int eOLDSIOError -> eOLDSIOError
    int eOLDSWifiError -> eOLDSWifiError
    int eOLDSMissData -> eOLDSMissData
    int cityID -> cityID
    java.lang.String cityName -> cityName
    int ratio -> ratio
    int status -> status
    com.baidu.mapapi.model.LatLng geoPt -> geoPt
    int size -> size
    int serversize -> serversize
    int level -> level
    boolean update -> update
com.baidu.mapapi.map.offline.MKOfflineMap -> com.baidu.mapapi.map.offline.MKOfflineMap:
    java.lang.String a -> a
    int TYPE_NEW_OFFLINE -> TYPE_NEW_OFFLINE
    int TYPE_DOWNLOAD_UPDATE -> TYPE_DOWNLOAD_UPDATE
    int TYPE_VER_UPDATE -> TYPE_VER_UPDATE
    com.baidu.platform.comapi.map.q b -> b
    com.baidu.mapapi.map.offline.MKOfflineMapListener c -> c
    boolean init(com.baidu.mapapi.map.offline.MKOfflineMapListener) -> init
    boolean start(int) -> start
    boolean pause(int) -> pause
    void destroy() -> destroy
    boolean remove(int) -> remove
    java.util.ArrayList getHotCityList() -> getHotCityList
    java.util.ArrayList getOfflineCityList() -> getOfflineCityList
    java.util.ArrayList searchCity(java.lang.String) -> searchCity
    java.util.ArrayList getAllUpdateInfo() -> getAllUpdateInfo
    com.baidu.mapapi.map.offline.MKOLUpdateElement getUpdateInfo(int) -> getUpdateInfo
    int importOfflineData() -> importOfflineData
    int importOfflineData(boolean) -> importOfflineData
    com.baidu.platform.comapi.map.q a(com.baidu.mapapi.map.offline.MKOfflineMap) -> a
    com.baidu.mapapi.map.offline.MKOfflineMapListener b(com.baidu.mapapi.map.offline.MKOfflineMap) -> b
com.baidu.mapapi.map.offline.MKOfflineMapListener -> com.baidu.mapapi.map.offline.MKOfflineMapListener:
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.baidu.mapapi.map.offline.a -> com.baidu.mapapi.map.offline.a:
    com.baidu.mapapi.map.offline.MKOfflineMap a -> a
    void a(int,int) -> a
com.baidu.mapapi.model.LatLng -> com.baidu.mapapi.model.LatLng:
    java.lang.String a -> a
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds -> com.baidu.mapapi.model.LatLngBounds:
    com.baidu.mapapi.model.LatLng northeast -> northeast
    com.baidu.mapapi.model.LatLng southwest -> southwest
    boolean contains(com.baidu.mapapi.model.LatLng) -> contains
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds$Builder -> com.baidu.mapapi.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    boolean e -> e
    com.baidu.mapapi.model.LatLngBounds build() -> build
    com.baidu.mapapi.model.LatLngBounds$Builder include(com.baidu.mapapi.model.LatLng) -> include
com.baidu.mapapi.model.a -> com.baidu.mapapi.model.a:
    android.os.Bundle a -> a
    double[] b -> b
    double[] c -> c
    double[][] d -> d
    double[][] e -> e
    com.baidu.mapapi.model.a$a a(com.baidu.mapapi.model.a$a,double[]) -> a
    com.baidu.mapapi.model.LatLng a(com.baidu.platform.comapi.a.b) -> a
    com.baidu.platform.comapi.a.b a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.platform.comapi.a.d b(com.baidu.mapapi.model.LatLng) -> b
    int a(com.baidu.mapapi.model.LatLng,int) -> a
    com.baidu.mapapi.model.LatLng a(java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(java.lang.String) -> b
    java.util.List c(java.lang.String) -> c
    com.baidu.platform.comapi.a.d a(float,float,java.lang.String) -> a
    java.util.List d(java.lang.String) -> d
com.baidu.mapapi.model.a$a -> com.baidu.mapapi.model.a$a:
    double a -> a
    double b -> b
com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException -> com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException:
com.baidu.mapapi.navi.BaiduMapNavigation -> com.baidu.mapapi.navi.BaiduMapNavigation:
    int a(android.content.Context) -> a
    void openBaiduMapNavi(com.baidu.mapapi.navi.NaviPara,android.content.Context) -> openBaiduMapNavi
    void openWebBaiduMapNavi(com.baidu.mapapi.navi.NaviPara,android.content.Context) -> openWebBaiduMapNavi
    java.lang.String a(com.baidu.mapapi.navi.NaviPara) -> a
    void getLatestBaiduMapApp(android.content.Context) -> getLatestBaiduMapApp
    java.lang.String b(android.content.Context) -> b
com.baidu.mapapi.navi.IllegalNaviArgumentException -> com.baidu.mapapi.navi.IllegalNaviArgumentException:
com.baidu.mapapi.navi.NaviPara -> com.baidu.mapapi.navi.NaviPara:
    com.baidu.mapapi.model.LatLng startPoint -> startPoint
    java.lang.String startName -> startName
    com.baidu.mapapi.model.LatLng endPoint -> endPoint
    java.lang.String endName -> endName
com.baidu.mapapi.overlayutil.BusLineOverlay -> com.baidu.mapapi.overlayutil.BusLineOverlay:
    com.baidu.mapapi.search.busline.BusLineResult c -> c
    void setData(com.baidu.mapapi.search.busline.BusLineResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    boolean onBusStationClick(int) -> onBusStationClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.DrivingRouteOverlay -> com.baidu.mapapi.overlayutil.DrivingRouteOverlay:
    com.baidu.mapapi.search.route.DrivingRouteLine c -> c
    java.util.List getOverlayOptions() -> getOverlayOptions
    void setData(com.baidu.mapapi.search.route.DrivingRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.OverlayManager -> com.baidu.mapapi.overlayutil.OverlayManager:
    com.baidu.mapapi.map.BaiduMap a -> a
    java.util.List c -> c
    java.util.List b -> b
    java.util.List getOverlayOptions() -> getOverlayOptions
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
com.baidu.mapapi.overlayutil.PoiOverlay -> com.baidu.mapapi.overlayutil.PoiOverlay:
    com.baidu.mapapi.search.poi.PoiResult c -> c
    void setData(com.baidu.mapapi.search.poi.PoiResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.search.poi.PoiResult getPoiResult() -> getPoiResult
    boolean onPoiClick(int) -> onPoiClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay -> com.baidu.mapapi.overlayutil.TransitRouteOverlay:
    com.baidu.mapapi.search.route.TransitRouteLine c -> c
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep) -> a
    void setData(com.baidu.mapapi.search.route.TransitRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay$1 -> com.baidu.mapapi.overlayutil.TransitRouteOverlay$1:
    int[] a -> a
com.baidu.mapapi.overlayutil.WalkingRouteOverlay -> com.baidu.mapapi.overlayutil.WalkingRouteOverlay:
    com.baidu.mapapi.search.route.WalkingRouteLine c -> c
    void setData(com.baidu.mapapi.search.route.WalkingRouteLine) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.search.busline.BusLineResult -> com.baidu.mapapi.search.busline.BusLineResult:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    java.util.Date d -> d
    java.util.Date e -> e
    java.lang.String f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.lang.String getBusCompany() -> getBusCompany
    java.lang.String getBusLineName() -> getBusLineName
    void a(java.lang.String) -> a
    boolean isMonthTicket() -> isMonthTicket
    void a(boolean) -> a
    java.util.Date getStartTime() -> getStartTime
    void a(java.util.Date) -> a
    java.util.Date getEndTime() -> getEndTime
    void b(java.util.Date) -> b
    java.util.List getStations() -> getStations
    void a(java.util.List) -> a
    java.util.List getSteps() -> getSteps
    void b(java.util.List) -> b
    java.lang.String getUid() -> getUid
    void b(java.lang.String) -> b
com.baidu.mapapi.search.busline.BusLineResult$BusStation -> com.baidu.mapapi.search.busline.BusLineResult$BusStation:
com.baidu.mapapi.search.busline.BusLineResult$BusStep -> com.baidu.mapapi.search.busline.BusLineResult$BusStep:
com.baidu.mapapi.search.busline.BusLineSearch -> com.baidu.mapapi.search.busline.BusLineSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.busline.BusLineSearch newInstance() -> newInstance
    boolean searchBusLine(com.baidu.mapapi.search.busline.BusLineSearchOption) -> searchBusLine
    void setOnGetBusLineSearchResultListener(com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener) -> setOnGetBusLineSearchResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.busline.BusLineSearch) -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b(com.baidu.mapapi.search.busline.BusLineSearch) -> b
com.baidu.mapapi.search.busline.BusLineSearch$1 -> com.baidu.mapapi.search.busline.BusLineSearch$1:
com.baidu.mapapi.search.busline.BusLineSearch$a -> com.baidu.mapapi.search.busline.BusLineSearch$a:
    com.baidu.mapapi.search.busline.BusLineSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.busline.BusLineSearchOption -> com.baidu.mapapi.search.busline.BusLineSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.busline.BusLineSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.busline.BusLineSearchOption uid(java.lang.String) -> uid
com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener -> com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener:
    void onGetBusLineResult(com.baidu.mapapi.search.busline.BusLineResult) -> onGetBusLineResult
com.baidu.mapapi.search.busline.a -> com.baidu.mapapi.search.busline.a:
    com.baidu.mapapi.search.busline.BusLineResult a(java.lang.String) -> a
com.baidu.mapapi.search.core.CityInfo -> com.baidu.mapapi.search.core.CityInfo:
    java.lang.String city -> city
    int num -> num
com.baidu.mapapi.search.core.PoiInfo -> com.baidu.mapapi.search.core.PoiInfo:
    java.lang.String name -> name
    java.lang.String uid -> uid
    java.lang.String address -> address
    java.lang.String city -> city
    java.lang.String phoneNum -> phoneNum
    java.lang.String postCode -> postCode
    com.baidu.mapapi.search.core.PoiInfo$POITYPE type -> type
    com.baidu.mapapi.model.LatLng location -> location
    boolean hasCaterDetails -> hasCaterDetails
    boolean isPano -> isPano
com.baidu.mapapi.search.core.PoiInfo$POITYPE -> com.baidu.mapapi.search.core.PoiInfo$POITYPE:
    com.baidu.mapapi.search.core.PoiInfo$POITYPE POINT -> POINT
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_STATION -> BUS_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_LINE -> BUS_LINE
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_STATION -> SUBWAY_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_LINE -> SUBWAY_LINE
    int a -> a
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] values() -> values
    com.baidu.mapapi.search.core.PoiInfo$POITYPE valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
    com.baidu.mapapi.search.core.PoiInfo$POITYPE fromInt(int) -> fromInt
com.baidu.mapapi.search.core.RouteLine -> com.baidu.mapapi.search.core.RouteLine:
    com.baidu.mapapi.search.core.RouteNode a -> a
    com.baidu.mapapi.search.core.RouteNode b -> b
    java.lang.String c -> c
    java.util.List d -> d
    int e -> e
    int f -> f
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    com.baidu.mapapi.search.core.RouteNode getStarting() -> getStarting
    void setStarting(com.baidu.mapapi.search.core.RouteNode) -> setStarting
    com.baidu.mapapi.search.core.RouteNode getTerminal() -> getTerminal
    void setTerminal(com.baidu.mapapi.search.core.RouteNode) -> setTerminal
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void setSteps(java.util.List) -> setSteps
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.core.RouteNode -> com.baidu.mapapi.search.core.RouteNode:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.core.RouteNode titleAndLocation(java.lang.String,com.baidu.mapapi.model.LatLng) -> titleAndLocation
    com.baidu.mapapi.search.core.RouteNode location(com.baidu.mapapi.model.LatLng) -> location
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void setLocation(com.baidu.mapapi.model.LatLng) -> setLocation
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
com.baidu.mapapi.search.core.RouteStep -> com.baidu.mapapi.search.core.RouteStep:
    int a -> a
    int b -> b
    java.util.List mWayPoints -> mWayPoints
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    java.util.List getWayPoints() -> getWayPoints
    void setWayPoints(java.util.List) -> setWayPoints
com.baidu.mapapi.search.core.SearchResult -> com.baidu.mapapi.search.core.SearchResult:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO error -> error
com.baidu.mapapi.search.core.SearchResult$ERRORNO -> com.baidu.mapapi.search.core.SearchResult$ERRORNO:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NO_ERROR -> NO_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO RESULT_NOT_FOUND -> RESULT_NOT_FOUND
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_KEYWORD -> AMBIGUOUS_KEYWORD
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_ROURE_ADDR -> AMBIGUOUS_ROURE_ADDR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS -> NOT_SUPPORT_BUS
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS_2CITY -> NOT_SUPPORT_BUS_2CITY
    com.baidu.mapapi.search.core.SearchResult$ERRORNO ST_EN_TOO_NEAR -> ST_EN_TOO_NEAR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] values() -> values
    com.baidu.mapapi.search.core.SearchResult$ERRORNO valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.core.TaxiInfo -> com.baidu.mapapi.search.core.TaxiInfo:
    float a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    float e -> e
    float f -> f
    float getTotalPrice() -> getTotalPrice
    void setTotalPrice(float) -> setTotalPrice
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    float getPerKMPrice() -> getPerKMPrice
    void setPerKMPrice(float) -> setPerKMPrice
    float getStartPrice() -> getStartPrice
    void setStartPrice(float) -> setStartPrice
com.baidu.mapapi.search.core.VehicleInfo -> com.baidu.mapapi.search.core.VehicleInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    int getPassStationNum() -> getPassStationNum
    void setPassStationNum(int) -> setPassStationNum
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getZonePrice() -> getZonePrice
    void setZonePrice(int) -> setZonePrice
    int getTotalPrice() -> getTotalPrice
    void setTotalPrice(int) -> setTotalPrice
com.baidu.mapapi.search.geocode.GeoCodeOption -> com.baidu.mapapi.search.geocode.GeoCodeOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.GeoCodeOption city(java.lang.String) -> city
    com.baidu.mapapi.search.geocode.GeoCodeOption address(java.lang.String) -> address
com.baidu.mapapi.search.geocode.GeoCodeResult -> com.baidu.mapapi.search.geocode.GeoCodeResult:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
com.baidu.mapapi.search.geocode.GeoCoder -> com.baidu.mapapi.search.geocode.GeoCoder:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.geocode.GeoCoder newInstance() -> newInstance
    boolean geocode(com.baidu.mapapi.search.geocode.GeoCodeOption) -> geocode
    boolean reverseGeoCode(com.baidu.mapapi.search.geocode.ReverseGeoCodeOption) -> reverseGeoCode
    void setOnGetGeoCodeResultListener(com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener) -> setOnGetGeoCodeResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.geocode.GeoCoder) -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b(com.baidu.mapapi.search.geocode.GeoCoder) -> b
    int c(com.baidu.mapapi.search.geocode.GeoCoder) -> c
com.baidu.mapapi.search.geocode.GeoCoder$1 -> com.baidu.mapapi.search.geocode.GeoCoder$1:
com.baidu.mapapi.search.geocode.GeoCoder$a -> com.baidu.mapapi.search.geocode.GeoCoder$a:
    com.baidu.mapapi.search.geocode.GeoCoder a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener -> com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener:
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
com.baidu.mapapi.search.geocode.ReverseGeoCodeOption -> com.baidu.mapapi.search.geocode.ReverseGeoCodeOption:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.search.geocode.ReverseGeoCodeOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.util.List e -> e
    java.lang.String getBusinessCircle() -> getBusinessCircle
    void a(java.lang.String) -> a
    java.lang.String getAddress() -> getAddress
    void b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent getAddressDetail() -> getAddressDetail
    void a(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent) -> a
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.util.List getPoiList() -> getPoiList
    void a(java.util.List) -> a
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent:
    java.lang.String streetNumber -> streetNumber
    java.lang.String street -> street
    java.lang.String district -> district
    java.lang.String city -> city
    java.lang.String province -> province
com.baidu.mapapi.search.geocode.a -> com.baidu.mapapi.search.geocode.a:
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult a(java.lang.String) -> a
    com.baidu.mapapi.search.geocode.GeoCodeResult b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent a(org.json.JSONObject,java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener -> com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener:
    void onGetPoiResult(com.baidu.mapapi.search.poi.PoiResult) -> onGetPoiResult
    void onGetPoiDetailResult(com.baidu.mapapi.search.poi.PoiDetailResult) -> onGetPoiDetailResult
com.baidu.mapapi.search.poi.PoiBoundSearchOption -> com.baidu.mapapi.search.poi.PoiBoundSearchOption:
    com.baidu.mapapi.model.LatLngBounds a -> a
    java.lang.String b -> b
    float c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.poi.PoiBoundSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiBoundSearchOption bound(com.baidu.mapapi.model.LatLngBounds) -> bound
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiCitySearchOption -> com.baidu.mapapi.search.poi.PoiCitySearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    float c -> c
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiCitySearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.poi.PoiCitySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiDetailResult -> com.baidu.mapapi.search.poi.PoiDetailResult:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    double k -> k
    double l -> l
    double m -> m
    double n -> n
    double o -> o
    double p -> p
    double q -> q
    double r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    java.lang.String x -> x
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    java.lang.String getAddress() -> getAddress
    java.lang.String getTelephone() -> getTelephone
    java.lang.String getUid() -> getUid
    java.lang.String getTag() -> getTag
    java.lang.String getDetailUrl() -> getDetailUrl
    java.lang.String getType() -> getType
    double getPrice() -> getPrice
    double getOverallRating() -> getOverallRating
    double getTasteRating() -> getTasteRating
    double getServiceRating() -> getServiceRating
    double getEnvironmentRating() -> getEnvironmentRating
    double getFacilityRating() -> getFacilityRating
    double getHygieneRating() -> getHygieneRating
    double getTechnologyRating() -> getTechnologyRating
    int getImageNum() -> getImageNum
    int getGrouponNum() -> getGrouponNum
    int getCommentNum() -> getCommentNum
    int getFavoriteNum() -> getFavoriteNum
    int getCheckinNum() -> getCheckinNum
    java.lang.String getShopHours() -> getShopHours
    boolean a(java.lang.String) -> a
com.baidu.mapapi.search.poi.PoiDetailSearchOption -> com.baidu.mapapi.search.poi.PoiDetailSearchOption:
    java.lang.String a -> a
    boolean b -> b
    com.baidu.mapapi.search.poi.PoiDetailSearchOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.poi.PoiNearbySearchOption -> com.baidu.mapapi.search.poi.PoiNearbySearchOption:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiNearbySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiNearbySearchOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.poi.PoiNearbySearchOption radius(int) -> radius
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiResult -> com.baidu.mapapi.search.poi.PoiResult:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.util.List e -> e
    java.util.List f -> f
    int getCurrentPageNum() -> getCurrentPageNum
    void a(int) -> a
    int getTotalPageNum() -> getTotalPageNum
    void b(int) -> b
    int getCurrentPageCapacity() -> getCurrentPageCapacity
    void c(int) -> c
    int getTotalPoiNum() -> getTotalPoiNum
    void d(int) -> d
    java.util.List getAllPoi() -> getAllPoi
    void a(java.util.List) -> a
    java.util.List getSuggestCityList() -> getSuggestCityList
    void b(java.util.List) -> b
com.baidu.mapapi.search.poi.PoiSearch -> com.baidu.mapapi.search.poi.PoiSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    boolean f -> f
    int g -> g
    com.baidu.mapapi.search.poi.PoiSearch newInstance() -> newInstance
    void setOnGetPoiSearchResultListener(com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener) -> setOnGetPoiSearchResultListener
    boolean searchInCity(com.baidu.mapapi.search.poi.PoiCitySearchOption) -> searchInCity
    boolean searchNearby(com.baidu.mapapi.search.poi.PoiNearbySearchOption) -> searchNearby
    boolean searchInBound(com.baidu.mapapi.search.poi.PoiBoundSearchOption) -> searchInBound
    boolean searchPoiDetail(com.baidu.mapapi.search.poi.PoiDetailSearchOption) -> searchPoiDetail
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.poi.PoiSearch) -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b(com.baidu.mapapi.search.poi.PoiSearch) -> b
    int c(com.baidu.mapapi.search.poi.PoiSearch) -> c
    int d(com.baidu.mapapi.search.poi.PoiSearch) -> d
com.baidu.mapapi.search.poi.PoiSearch$1 -> com.baidu.mapapi.search.poi.PoiSearch$1:
com.baidu.mapapi.search.poi.PoiSearch$a -> com.baidu.mapapi.search.poi.PoiSearch$a:
    com.baidu.mapapi.search.poi.PoiSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.poi.a -> com.baidu.mapapi.search.poi.a:
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String,int) -> a
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String) -> a
com.baidu.mapapi.search.route.DrivingRouteLine -> com.baidu.mapapi.search.route.DrivingRouteLine:
    boolean a -> a
    java.util.List b -> b
    boolean isSupportTraffic() -> isSupportTraffic
    void a(boolean) -> a
    java.util.List getWayPoints() -> getWayPoints
    void a(java.util.List) -> a
com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep -> com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntraceInstructions() -> getEntraceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
    int getNumTurns() -> getNumTurns
    void b(int) -> b
com.baidu.mapapi.search.route.DrivingRoutePlanOption -> com.baidu.mapapi.search.route.DrivingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy c -> c
    java.util.List d -> d
    com.baidu.mapapi.search.route.DrivingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.DrivingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.DrivingRoutePlanOption passBy(java.util.List) -> passBy
    com.baidu.mapapi.search.route.DrivingRoutePlanOption policy(com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy) -> policy
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy -> com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy:
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_AVOID_JAM -> ECAR_AVOID_JAM
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_TIME_FIRST -> ECAR_TIME_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_DIS_FIRST -> ECAR_DIS_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_FEE_FIRST -> ECAR_FEE_FIRST
    int a -> a
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] values() -> values
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.DrivingRouteResult -> com.baidu.mapapi.search.route.DrivingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.OnGetRoutePlanResultListener -> com.baidu.mapapi.search.route.OnGetRoutePlanResultListener:
    void onGetWalkingRouteResult(com.baidu.mapapi.search.route.WalkingRouteResult) -> onGetWalkingRouteResult
    void onGetTransitRouteResult(com.baidu.mapapi.search.route.TransitRouteResult) -> onGetTransitRouteResult
    void onGetDrivingRouteResult(com.baidu.mapapi.search.route.DrivingRouteResult) -> onGetDrivingRouteResult
com.baidu.mapapi.search.route.PlanNode -> com.baidu.mapapi.search.route.PlanNode:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.model.LatLng a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.baidu.mapapi.search.route.PlanNode withLocation(com.baidu.mapapi.model.LatLng) -> withLocation
    com.baidu.mapapi.search.route.PlanNode withCityNameAndPlaceName(java.lang.String,java.lang.String) -> withCityNameAndPlaceName
com.baidu.mapapi.search.route.RoutePlanSearch -> com.baidu.mapapi.search.route.RoutePlanSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.route.RoutePlanSearch newInstance() -> newInstance
    void setOnGetRoutePlanResultListener(com.baidu.mapapi.search.route.OnGetRoutePlanResultListener) -> setOnGetRoutePlanResultListener
    boolean transitSearch(com.baidu.mapapi.search.route.TransitRoutePlanOption) -> transitSearch
    boolean walkingSearch(com.baidu.mapapi.search.route.WalkingRoutePlanOption) -> walkingSearch
    boolean drivingSearch(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> drivingSearch
    java.util.ArrayList a(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> a
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.route.RoutePlanSearch) -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b(com.baidu.mapapi.search.route.RoutePlanSearch) -> b
    int c(com.baidu.mapapi.search.route.RoutePlanSearch) -> c
com.baidu.mapapi.search.route.RoutePlanSearch$1 -> com.baidu.mapapi.search.route.RoutePlanSearch$1:
com.baidu.mapapi.search.route.RoutePlanSearch$a -> com.baidu.mapapi.search.route.RoutePlanSearch$a:
    com.baidu.mapapi.search.route.RoutePlanSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.route.SuggestAddrInfo -> com.baidu.mapapi.search.route.SuggestAddrInfo:
    java.util.List a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List getSuggestStartNode() -> getSuggestStartNode
    void a(java.util.List) -> a
    java.util.List getSuggestEndNode() -> getSuggestEndNode
    void b(java.util.List) -> b
    java.util.List getSuggestWpNode() -> getSuggestWpNode
    void c(java.util.List) -> c
    java.util.List getSuggestStartCity() -> getSuggestStartCity
    void d(java.util.List) -> d
    java.util.List getSuggestEndCity() -> getSuggestEndCity
    void e(java.util.List) -> e
    java.util.List getSuggestWpCity() -> getSuggestWpCity
    void f(java.util.List) -> f
com.baidu.mapapi.search.route.TransitRouteLine -> com.baidu.mapapi.search.route.TransitRouteLine:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxitInfo() -> getTaxitInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep:
    com.baidu.mapapi.search.core.VehicleInfo c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String getInstructions() -> getInstructions
    void a(com.baidu.mapapi.search.core.VehicleInfo) -> a
    void a(java.lang.String) -> a
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType getStepType() -> getStepType
    void a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType) -> a
    void b(java.lang.String) -> b
    java.util.List getWayPoints() -> getWayPoints
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    com.baidu.mapapi.search.core.VehicleInfo getVehicleInfo() -> getVehicleInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType:
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType BUSLINE -> BUSLINE
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType SUBWAY -> SUBWAY
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType WAKLING -> WAKLING
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] $VALUES -> $VALUES
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] values() -> values
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.route.TransitRoutePlanOption -> com.baidu.mapapi.search.route.TransitRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy d -> d
    com.baidu.mapapi.search.route.TransitRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.TransitRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.TransitRoutePlanOption city(java.lang.String) -> city
    com.baidu.mapapi.search.route.TransitRoutePlanOption policy(com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy) -> policy
com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy -> com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy:
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TIME_FIRST -> EBUS_TIME_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TRANSFER_FIRST -> EBUS_TRANSFER_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_WALK_FIRST -> EBUS_WALK_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_NO_SUBWAY -> EBUS_NO_SUBWAY
    int a -> a
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] b -> b
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] values() -> values
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.TransitRouteResult -> com.baidu.mapapi.search.route.TransitRouteResult:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    java.util.List b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.WalkingRouteLine -> com.baidu.mapapi.search.route.WalkingRouteLine:
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep -> com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntraceInstructions() -> getEntraceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
com.baidu.mapapi.search.route.WalkingRoutePlanOption -> com.baidu.mapapi.search.route.WalkingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.WalkingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.WalkingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
com.baidu.mapapi.search.route.WalkingRouteResult -> com.baidu.mapapi.search.route.WalkingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    java.util.List getRouteLines() -> getRouteLines
    void a(java.util.List) -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.a -> com.baidu.mapapi.search.route.a:
    com.baidu.mapapi.search.route.TransitRouteResult a(java.lang.String) -> a
    com.baidu.mapapi.search.route.DrivingRouteResult b(java.lang.String) -> b
    com.baidu.mapapi.search.route.WalkingRouteResult c(java.lang.String) -> c
    com.baidu.mapapi.search.core.TaxiInfo d(java.lang.String) -> d
    com.baidu.mapapi.search.core.VehicleInfo e(java.lang.String) -> e
    com.baidu.mapapi.search.core.RouteNode b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
    com.baidu.mapapi.search.route.SuggestAddrInfo f(java.lang.String) -> f
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
    java.util.List a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String g(java.lang.String) -> g
com.baidu.mapapi.search.share.LocationShareURLOption -> com.baidu.mapapi.search.share.LocationShareURLOption:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.share.LocationShareURLOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.share.LocationShareURLOption name(java.lang.String) -> name
    com.baidu.mapapi.search.share.LocationShareURLOption snippet(java.lang.String) -> snippet
com.baidu.mapapi.search.share.OnGetShareUrlResultListener -> com.baidu.mapapi.search.share.OnGetShareUrlResultListener:
    void onGetPoiDetailShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetPoiDetailShareUrlResult
    void onGetLocationShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetLocationShareUrlResult
com.baidu.mapapi.search.share.PoiDetailShareURLOption -> com.baidu.mapapi.search.share.PoiDetailShareURLOption:
    java.lang.String a -> a
    com.baidu.mapapi.search.share.PoiDetailShareURLOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.share.ShareUrlResult -> com.baidu.mapapi.search.share.ShareUrlResult:
    java.lang.String a -> a
    int b -> b
    java.lang.String getUrl() -> getUrl
    void a(java.lang.String) -> a
    void a(int) -> a
com.baidu.mapapi.search.share.ShareUrlSearch -> com.baidu.mapapi.search.share.ShareUrlSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.share.ShareUrlSearch newInstance() -> newInstance
    boolean requestPoiDetailShareUrl(com.baidu.mapapi.search.share.PoiDetailShareURLOption) -> requestPoiDetailShareUrl
    boolean requestLocationShareUrl(com.baidu.mapapi.search.share.LocationShareURLOption) -> requestLocationShareUrl
    void setOnGetShareUrlResultListener(com.baidu.mapapi.search.share.OnGetShareUrlResultListener) -> setOnGetShareUrlResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.share.ShareUrlSearch) -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b(com.baidu.mapapi.search.share.ShareUrlSearch) -> b
    int c(com.baidu.mapapi.search.share.ShareUrlSearch) -> c
com.baidu.mapapi.search.share.ShareUrlSearch$1 -> com.baidu.mapapi.search.share.ShareUrlSearch$1:
com.baidu.mapapi.search.share.ShareUrlSearch$a -> com.baidu.mapapi.search.share.ShareUrlSearch$a:
    com.baidu.mapapi.search.share.ShareUrlSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.share.a -> com.baidu.mapapi.search.share.a:
    com.baidu.mapapi.search.share.ShareUrlResult a(java.lang.String) -> a
com.baidu.mapapi.search.sug.OnGetSuggestionResultListener -> com.baidu.mapapi.search.sug.OnGetSuggestionResultListener:
    void onGetSuggestionResult(com.baidu.mapapi.search.sug.SuggestionResult) -> onGetSuggestionResult
com.baidu.mapapi.search.sug.SuggestionResult -> com.baidu.mapapi.search.sug.SuggestionResult:
    java.util.ArrayList a -> a
    java.util.List getAllSuggestions() -> getAllSuggestions
    void a(java.util.ArrayList) -> a
com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo -> com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo:
    java.lang.String key -> key
    java.lang.String city -> city
    java.lang.String district -> district
com.baidu.mapapi.search.sug.SuggestionSearch -> com.baidu.mapapi.search.sug.SuggestionSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.sug.SuggestionSearch newInstance() -> newInstance
    boolean requestSuggestion(com.baidu.mapapi.search.sug.SuggestionSearchOption) -> requestSuggestion
    void setOnGetSuggestionResultListener(com.baidu.mapapi.search.sug.OnGetSuggestionResultListener) -> setOnGetSuggestionResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.sug.SuggestionSearch) -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b(com.baidu.mapapi.search.sug.SuggestionSearch) -> b
com.baidu.mapapi.search.sug.SuggestionSearch$1 -> com.baidu.mapapi.search.sug.SuggestionSearch$1:
com.baidu.mapapi.search.sug.SuggestionSearch$a -> com.baidu.mapapi.search.sug.SuggestionSearch$a:
    com.baidu.mapapi.search.sug.SuggestionSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.sug.SuggestionSearchOption -> com.baidu.mapapi.search.sug.SuggestionSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.search.sug.SuggestionSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.sug.SuggestionSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.sug.SuggestionSearchOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.sug.a -> com.baidu.mapapi.search.sug.a:
    com.baidu.mapapi.search.sug.SuggestionResult a(java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter -> com.baidu.mapapi.utils.CoordinateConverter:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.utils.CoordinateConverter$CoordType b -> b
    com.baidu.mapapi.utils.CoordinateConverter coord(com.baidu.mapapi.model.LatLng) -> coord
    com.baidu.mapapi.utils.CoordinateConverter from(com.baidu.mapapi.utils.CoordinateConverter$CoordType) -> from
    com.baidu.mapapi.model.LatLng convert() -> convert
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.LatLng b(com.baidu.mapapi.model.LatLng) -> b
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng,java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter$1 -> com.baidu.mapapi.utils.CoordinateConverter$1:
    int[] a -> a
com.baidu.mapapi.utils.CoordinateConverter$CoordType -> com.baidu.mapapi.utils.CoordinateConverter$CoordType:
    com.baidu.mapapi.utils.CoordinateConverter$CoordType GPS -> GPS
    com.baidu.mapapi.utils.CoordinateConverter$CoordType COMMON -> COMMON
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] $VALUES -> $VALUES
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] values() -> values
    com.baidu.mapapi.utils.CoordinateConverter$CoordType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.utils.DistanceUtil -> com.baidu.mapapi.utils.DistanceUtil:
    double getDistance(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> getDistance
com.baidu.mapapi.utils.PermissionCheck -> com.baidu.mapapi.utils.PermissionCheck:
    java.lang.String a -> a
    android.content.Context b -> b
    java.util.Hashtable c -> c
    com.baidu.lbsapi.auth.LBSAuthManager d -> d
    com.baidu.lbsapi.auth.LBSAuthManagerListener e -> e
    com.baidu.mapapi.utils.PermissionCheck$c f -> f
    void setPermissionCheckResultListener(com.baidu.mapapi.utils.PermissionCheck$c) -> setPermissionCheckResultListener
    void init(android.content.Context) -> init
    int permissionCheck() -> permissionCheck
    void destory() -> destory
    com.baidu.mapapi.utils.PermissionCheck$c a() -> a
com.baidu.mapapi.utils.PermissionCheck$1 -> com.baidu.mapapi.utils.PermissionCheck$1:
com.baidu.mapapi.utils.PermissionCheck$a -> com.baidu.mapapi.utils.PermissionCheck$a:
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.mapapi.utils.PermissionCheck$b -> com.baidu.mapapi.utils.PermissionCheck$b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.baidu.mapapi.utils.PermissionCheck$c -> com.baidu.mapapi.utils.PermissionCheck$c:
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.utils.a -> com.baidu.mapapi.utils.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.mapapi.utils.a$a -> com.baidu.mapapi.utils.a$a:
    java.lang.String a(byte[]) -> a
com.baidu.mapapi.utils.b -> com.baidu.mapapi.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.utils.e g -> g
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
com.baidu.mapapi.utils.c -> com.baidu.mapapi.utils.c:
    com.baidu.mapapi.map.offline.MKOLSearchRecord a(com.baidu.platform.comapi.map.p) -> a
    com.baidu.mapapi.map.offline.MKOLUpdateElement a(com.baidu.platform.comapi.map.s) -> a
com.baidu.mapapi.utils.d -> com.baidu.mapapi.utils.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
com.baidu.mapapi.utils.e -> com.baidu.mapapi.utils.e:
    com.baidu.mapapi.utils.e a -> a
    boolean b -> b
    boolean c -> c
    java.util.List d -> d
    com.baidu.mapapi.utils.d e -> e
    java.lang.String f -> f
    com.baidu.mapapi.utils.e a() -> a
    void a(android.content.Context) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    com.baidu.mapapi.utils.d b() -> b
    com.baidu.mapapi.utils.d b(android.content.Context) -> b
    boolean a(android.content.Context,com.baidu.mapapi.utils.d) -> a
    boolean a(java.lang.String) -> a
com.baidu.platform.comapi.a -> com.baidu.platform.comapi.a:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
com.baidu.platform.comapi.a.a -> com.baidu.platform.comapi.a.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    com.baidu.platform.comapi.a.d c -> c
    java.util.ArrayList d -> d
com.baidu.platform.comapi.a.b -> com.baidu.platform.comapi.a.b:
    int a -> a
    int b -> b
    int a() -> a
    int b() -> b
    void a(int) -> a
    void b(int) -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.a.c -> com.baidu.platform.comapi.a.c:
    com.baidu.platform.comapi.a.d a -> a
    com.baidu.platform.comapi.a.d b -> b
    void a(com.baidu.platform.comapi.a.d) -> a
    void b(com.baidu.platform.comapi.a.d) -> b
com.baidu.platform.comapi.a.d -> com.baidu.platform.comapi.a.d:
    int a -> a
    int b -> b
    int a() -> a
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.b.a -> com.baidu.platform.comapi.b.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.platform.comapi.b.b -> com.baidu.platform.comapi.b.b:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.platform.comapi.b.c -> com.baidu.platform.comapi.b.c:
    java.lang.String a -> a
    com.baidu.platform.comapi.b.b b -> b
    com.baidu.platform.comapi.b.d c -> c
    void a(com.baidu.platform.comapi.b.b) -> a
    void a() -> a
    void a(com.baidu.platform.comapi.b.d) -> a
    void a(android.os.Message) -> a
com.baidu.platform.comapi.b.d -> com.baidu.platform.comapi.b.d:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.search.a b -> b
    int c -> c
    com.baidu.platform.comapi.b.c d -> d
    android.os.Handler e -> e
    int f -> f
    android.os.Bundle g -> g
    void a(com.baidu.platform.comapi.b.b) -> a
    void a() -> a
    void a(int) -> a
    boolean a(java.lang.String,java.lang.String,int,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String,int,int,int,com.baidu.platform.comapi.a.c,com.baidu.platform.comapi.a.c,java.util.Map) -> a
    boolean a(java.lang.String,int,int,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d,java.util.Map) -> a
    android.os.Bundle a(com.baidu.platform.comapi.b.a) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,com.baidu.platform.comapi.a.c,int,int,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,int,int,java.util.ArrayList,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,int,java.lang.String,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d) -> a
    boolean a(com.baidu.platform.comapi.a.d) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(com.baidu.platform.comapi.a.d,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    java.lang.String b(int) -> b
    android.os.Bundle b() -> b
    int a(com.baidu.platform.comapi.b.d) -> a
    com.baidu.platform.comapi.b.c b(com.baidu.platform.comapi.b.d) -> b
com.baidu.platform.comapi.b.e -> com.baidu.platform.comapi.b.e:
    com.baidu.platform.comapi.b.d a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.b.f -> com.baidu.platform.comapi.b.f:
    com.baidu.platform.comapi.a.d a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.baidu.platform.comapi.c.a -> com.baidu.platform.comapi.c.a:
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
com.baidu.platform.comapi.c.b -> com.baidu.platform.comapi.c.b:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    void a(android.content.Context) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean a(android.net.NetworkInfo) -> a
com.baidu.platform.comapi.c.c -> com.baidu.platform.comapi.c.c:
    java.lang.String G -> G
    com.baidu.platform.comjni.map.commonmemcache.a a -> a
    com.baidu.platform.comjni.base.networkdetect.a b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    android.content.Context C -> C
    int D -> D
    float E -> E
    boolean H -> H
    int I -> I
    int J -> J
    java.lang.String F -> F
    void e(android.content.Context) -> e
    void f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    java.lang.String a(android.content.Context) -> a
    byte[] b(android.content.Context) -> b
    java.lang.String j(android.content.Context) -> j
    java.lang.String a() -> a
    java.lang.String k(android.content.Context) -> k
    void l(android.content.Context) -> l
    void c(android.content.Context) -> c
    void b() -> b
    void d(android.content.Context) -> d
    android.os.Bundle c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a(java.lang.String) -> a
    java.lang.String g() -> g
    void h() -> h
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    int j() -> j
    java.lang.String k() -> k
    int l() -> l
    java.lang.String m() -> m
    int n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
com.baidu.platform.comapi.map.A -> com.baidu.platform.comapi.map.A:
com.baidu.platform.comapi.map.B -> com.baidu.platform.comapi.map.B:
    com.baidu.platform.comjni.map.basemap.a a -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
com.baidu.platform.comapi.map.C -> com.baidu.platform.comapi.map.C:
    java.lang.String h -> h
    android.os.Bundle e -> e
    java.lang.String f -> f
    int g -> g
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    android.os.Bundle b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comapi.map.D -> com.baidu.platform.comapi.map.D:
com.baidu.platform.comapi.map.MapRenderer -> com.baidu.platform.comapi.map.MapRenderer:
    java.lang.String d -> d
    int e -> e
    com.baidu.platform.comapi.map.MapRenderer$a f -> f
    com.baidu.platform.comapi.map.f g -> g
    int a -> a
    int b -> b
    int c -> c
    void nativeInit(int) -> nativeInit
    void nativeResize(int,int,int) -> nativeResize
    int nativeRender(int) -> nativeRender
    void a(int) -> a
    boolean a() -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.baidu.platform.comapi.map.MapRenderer$a -> com.baidu.platform.comapi.map.MapRenderer$a:
    void t() -> t
com.baidu.platform.comapi.map.a -> com.baidu.platform.comapi.map.a:
com.baidu.platform.comapi.map.b -> com.baidu.platform.comapi.map.b:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
com.baidu.platform.comapi.map.c -> com.baidu.platform.comapi.map.c:
com.baidu.platform.comapi.map.d -> com.baidu.platform.comapi.map.d:
com.baidu.platform.comapi.map.e -> com.baidu.platform.comapi.map.e:
    com.baidu.platform.comapi.map.e a -> a
    com.baidu.platform.comapi.map.e b -> b
    com.baidu.platform.comapi.map.e c -> c
    com.baidu.platform.comapi.map.e d -> d
    com.baidu.platform.comapi.map.e e -> e
    com.baidu.platform.comapi.map.e f -> f
    com.baidu.platform.comapi.map.e g -> g
    com.baidu.platform.comapi.map.e h -> h
    com.baidu.platform.comapi.map.e i -> i
    com.baidu.platform.comapi.map.e j -> j
    com.baidu.platform.comapi.map.e[] k -> k
    com.baidu.platform.comapi.map.e[] values() -> values
    com.baidu.platform.comapi.map.e valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.f -> com.baidu.platform.comapi.map.f:
    java.lang.String e -> e
    float a -> a
    float b -> b
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    android.content.Context p -> p
    com.baidu.platform.comapi.map.MapRenderer q -> q
    java.util.List c -> c
    com.baidu.platform.comjni.map.basemap.a d -> d
    int r -> r
    android.os.Handler s -> s
    java.util.List t -> t
    com.baidu.platform.comapi.map.w u -> u
    com.baidu.platform.comapi.map.d v -> v
    com.baidu.platform.comapi.map.j w -> w
    com.baidu.platform.comapi.map.D x -> x
    com.baidu.platform.comapi.map.o y -> y
    com.baidu.platform.comapi.map.i z -> z
    com.baidu.platform.comapi.map.k A -> A
    com.baidu.platform.comapi.map.a B -> B
    com.baidu.platform.comapi.map.l C -> C
    com.baidu.platform.comapi.map.B D -> D
    boolean E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    com.baidu.platform.comapi.map.f$a J -> J
    android.view.VelocityTracker K -> K
    android.view.GestureDetector L -> L
    long M -> M
    long N -> N
    long O -> O
    long P -> P
    int Q -> Q
    float R -> R
    float S -> S
    boolean T -> T
    long U -> U
    long V -> V
    boolean W -> W
    boolean Z -> Z
    boolean aa -> aa
    void u() -> u
    void v() -> v
    boolean b(int,int,int,int,int,int) -> b
    void w() -> w
    void a(com.baidu.platform.comapi.map.y) -> a
    void x() -> x
    void y() -> y
    void a() -> a
    void a(com.baidu.platform.comapi.map.b) -> a
    void z() -> z
    boolean b() -> b
    void a(boolean) -> a
    boolean c() -> c
    boolean d() -> d
    void b(boolean) -> b
    boolean e() -> e
    void c(boolean) -> c
    void d(boolean) -> d
    boolean f() -> f
    void e(boolean) -> e
    void a(android.graphics.Point) -> a
    boolean g() -> g
    void f(boolean) -> f
    boolean h() -> h
    void g(boolean) -> g
    void i() -> i
    void a(java.lang.String,android.os.Bundle) -> a
    boolean j() -> j
    void h(boolean) -> h
    void i(boolean) -> i
    boolean k() -> k
    void j(boolean) -> j
    boolean l() -> l
    void k(boolean) -> k
    boolean m() -> m
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void n() -> n
    void a(com.baidu.platform.comapi.map.h) -> a
    void a(com.baidu.platform.comapi.map.l) -> a
    void a(com.baidu.platform.comapi.map.z) -> a
    void a(com.baidu.platform.comapi.map.z,int) -> a
    com.baidu.platform.comapi.map.z o() -> o
    com.baidu.platform.comapi.map.z p() -> p
    double q() -> q
    void a(java.lang.String) -> a
    float a(int,int,int,int) -> a
    float a(int,int,int,int,int,int) -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
    void r() -> r
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void s() -> s
    int a(int,int,int) -> a
    void t() -> t
    int a(android.os.Bundle,int,int,android.os.Bundle) -> a
    boolean a(int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean a(android.view.MotionEvent) -> a
    void b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
    boolean d(android.view.MotionEvent) -> d
    void A() -> A
    boolean b(int,int) -> b
    void B() -> B
    void C() -> C
    void D() -> D
    void E() -> E
    int a(com.baidu.platform.comapi.map.f) -> a
    int b(com.baidu.platform.comapi.map.f) -> b
    int c(com.baidu.platform.comapi.map.f) -> c
    void d(com.baidu.platform.comapi.map.f) -> d
    void e(com.baidu.platform.comapi.map.f) -> e
    boolean f(com.baidu.platform.comapi.map.f) -> f
    boolean a(com.baidu.platform.comapi.map.f,boolean) -> a
    boolean g(com.baidu.platform.comapi.map.f) -> g
    boolean h(com.baidu.platform.comapi.map.f) -> h
com.baidu.platform.comapi.map.f$a -> com.baidu.platform.comapi.map.f$a:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean e -> e
    float f -> f
    float g -> g
    double h -> h
com.baidu.platform.comapi.map.g -> com.baidu.platform.comapi.map.g:
    com.baidu.platform.comapi.map.f a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.h -> com.baidu.platform.comapi.map.h:
    void a() -> a
    void a(com.baidu.platform.comapi.map.z) -> a
    void b(com.baidu.platform.comapi.map.z) -> b
    void c(com.baidu.platform.comapi.map.z) -> c
    void a(com.baidu.platform.comapi.a.b) -> a
    void a(java.lang.String) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void d(com.baidu.platform.comapi.a.b) -> d
    void e(com.baidu.platform.comapi.a.b) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.z) -> a
    void d() -> d
    void e() -> e
com.baidu.platform.comapi.map.i -> com.baidu.platform.comapi.map.i:
com.baidu.platform.comapi.map.j -> com.baidu.platform.comapi.map.j:
com.baidu.platform.comapi.map.k -> com.baidu.platform.comapi.map.k:
com.baidu.platform.comapi.map.l -> com.baidu.platform.comapi.map.l:
    android.os.Bundle a(int,int,int) -> a
com.baidu.platform.comapi.map.m -> com.baidu.platform.comapi.map.m:
com.baidu.platform.comapi.map.n -> com.baidu.platform.comapi.map.n:
com.baidu.platform.comapi.map.o -> com.baidu.platform.comapi.map.o:
com.baidu.platform.comapi.map.p -> com.baidu.platform.comapi.map.p:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    void a(java.util.ArrayList) -> a
    java.util.ArrayList a() -> a
com.baidu.platform.comapi.map.q -> com.baidu.platform.comapi.map.q:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.basemap.a b -> b
    com.baidu.platform.comapi.map.q c -> c
    com.baidu.platform.comapi.map.v d -> d
    android.os.Handler e -> e
    com.baidu.platform.comapi.map.q a() -> a
    void g() -> g
    void h() -> h
    void b() -> b
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    boolean a(int) -> a
    boolean b(int) -> b
    boolean c(int) -> c
    boolean d(int) -> d
    boolean e(int) -> e
    boolean a(boolean,boolean) -> a
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    java.util.ArrayList a(java.lang.String) -> a
    com.baidu.platform.comapi.map.t f(int) -> f
    java.util.ArrayList e() -> e
    com.baidu.platform.comapi.map.q f() -> f
    com.baidu.platform.comapi.map.v a(com.baidu.platform.comapi.map.q) -> a
com.baidu.platform.comapi.map.r -> com.baidu.platform.comapi.map.r:
    com.baidu.platform.comapi.map.q a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.s -> com.baidu.platform.comapi.map.s:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.platform.comapi.a.d g -> g
    int h -> h
    int i -> i
    boolean j -> j
    int k -> k
    int l -> l
com.baidu.platform.comapi.map.t -> com.baidu.platform.comapi.map.t:
    com.baidu.platform.comapi.map.s a -> a
    void a(com.baidu.platform.comapi.map.s) -> a
    com.baidu.platform.comapi.map.s a() -> a
com.baidu.platform.comapi.map.u -> com.baidu.platform.comapi.map.u:
    void a(int,int) -> a
com.baidu.platform.comapi.map.v -> com.baidu.platform.comapi.map.v:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.u b -> b
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    void a(android.os.Message) -> a
com.baidu.platform.comapi.map.w -> com.baidu.platform.comapi.map.w:
com.baidu.platform.comapi.map.x -> com.baidu.platform.comapi.map.x:
    com.baidu.platform.comapi.map.x a -> a
    com.baidu.platform.comapi.map.x b -> b
    com.baidu.platform.comapi.map.x c -> c
    int d -> d
    com.baidu.platform.comapi.map.x[] e -> e
    com.baidu.platform.comapi.map.x[] values() -> values
    com.baidu.platform.comapi.map.x valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.y -> com.baidu.platform.comapi.map.y:
    com.baidu.platform.comapi.map.z a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.platform.comapi.map.y a(com.baidu.platform.comapi.map.z) -> a
    com.baidu.platform.comapi.map.y a(boolean) -> a
    com.baidu.platform.comapi.map.y a(int) -> a
    com.baidu.platform.comapi.map.y b(boolean) -> b
    com.baidu.platform.comapi.map.y c(boolean) -> c
    com.baidu.platform.comapi.map.y d(boolean) -> d
    com.baidu.platform.comapi.map.y e(boolean) -> e
com.baidu.platform.comapi.map.z -> com.baidu.platform.comapi.map.z:
    java.lang.String t -> t
    float a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    long h -> h
    long i -> i
    com.baidu.platform.comapi.map.z$b j -> j
    com.baidu.platform.comapi.map.z$a k -> k
    boolean l -> l
    double m -> m
    double n -> n
    int o -> o
    java.lang.String p -> p
    float q -> q
    boolean r -> r
    int s -> s
    void a(android.os.Bundle) -> a
    android.os.Bundle a(com.baidu.platform.comapi.map.f) -> a
com.baidu.platform.comapi.map.z$a -> com.baidu.platform.comapi.map.z$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    com.baidu.platform.comapi.a.d e -> e
    com.baidu.platform.comapi.a.d f -> f
    com.baidu.platform.comapi.a.d g -> g
    com.baidu.platform.comapi.a.d h -> h
    com.baidu.platform.comapi.map.z i -> i
com.baidu.platform.comapi.map.z$b -> com.baidu.platform.comapi.map.z$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.platform.comapi.map.z e -> e
com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect -> com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect:
    int Create() -> Create
com.baidu.platform.comjni.base.networkdetect.a -> com.baidu.platform.comjni.base.networkdetect.a:
    int a -> a
    com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect b -> b
    int a() -> a
com.baidu.platform.comjni.engine.AppEngine -> com.baidu.platform.comjni.engine.AppEngine:
    void despatchMessage(int,int,int,int) -> despatchMessage
    void InitClass() -> InitClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.JNIEngine -> com.baidu.platform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.a -> com.baidu.platform.comjni.engine.a:
    java.lang.String a -> a
    android.util.SparseArray b -> b
    void a(int,android.os.Handler) -> a
    void b(int,android.os.Handler) -> b
    void a(int,int,int,int) -> a
    void a() -> a
com.baidu.platform.comjni.map.basemap.BaseMapCallback -> com.baidu.platform.comjni.map.basemap.BaseMapCallback:
    android.util.SparseArray a -> a
    void addLayerDataInterface(int,com.baidu.platform.comjni.map.basemap.b) -> addLayerDataInterface
    void removeLayerDataInterface(int) -> removeLayerDataInterface
    int ReqLayerData(android.os.Bundle,int,int,android.os.Bundle) -> ReqLayerData
com.baidu.platform.comjni.map.basemap.JNIBaseMap -> com.baidu.platform.comjni.map.basemap.JNIBaseMap:
    int a -> a
    int Create() -> Create
    int SetCallback(int,com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    int Release(int) -> Release
    boolean Init(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> Init
    void OnPause(int) -> OnPause
    void OnResume(int) -> OnResume
    void ResetImageRes(int) -> ResetImageRes
    void SetMapStatus(int,android.os.Bundle) -> SetMapStatus
    int SetMapControlMode(int,int) -> SetMapControlMode
    android.os.Bundle GetMapStatus(int) -> GetMapStatus
    android.os.Bundle getDrawingMapStatus(int) -> getDrawingMapStatus
    float GetZoomToBound(int,android.os.Bundle) -> GetZoomToBound
    void ShowSatelliteMap(int,boolean) -> ShowSatelliteMap
    void ShowTrafficMap(int,boolean) -> ShowTrafficMap
    void ShowHotMap(int,boolean) -> ShowHotMap
    boolean GetBaiduHotMapCityInfo(int) -> GetBaiduHotMapCityInfo
    void ShowLayers(int,int,boolean) -> ShowLayers
    void UpdateLayers(int,int) -> UpdateLayers
    int AddLayer(int,int,int,java.lang.String) -> AddLayer
    void ClearLayer(int,int) -> ClearLayer
    java.lang.String GetNearlyObjID(int,int,int,int,int) -> GetNearlyObjID
    java.lang.String ScrPtToGeoPoint(int,int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(int,int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(int,java.lang.String) -> SaveScreenToLocal
    boolean OnRecordAdd(int,int) -> OnRecordAdd
    boolean OnRecordStart(int,int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(int,int,boolean,int) -> OnRecordSuspend
    boolean OnRecordRemove(int,int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll(int) -> OnRecordGetAll
    java.lang.String OnRecordGetAt(int,int) -> OnRecordGetAt
    boolean OnRecordImport(int,boolean,boolean) -> OnRecordImport
    java.lang.String OnHotcityGet(int) -> OnHotcityGet
    java.lang.String OnSchcityGet(int,java.lang.String) -> OnSchcityGet
    void addOneOverlayItem(int,android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(int,android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(int,android.os.Bundle) -> removeOneOverlayItem
    void PostStatInfo(int) -> PostStatInfo
    int MapProc(int,int,int,int) -> MapProc
    int CreateDuplicate(int) -> CreateDuplicate
    int[] GetScreenBuf(int,int[]) -> GetScreenBuf
    void enableDrawHouseHeight(int,boolean) -> enableDrawHouseHeight
    boolean isDrawHouseHeightEnable(int) -> isDrawHouseHeightEnable
    void clearHeatMapLayerCache(int) -> clearHeatMapLayerCache
com.baidu.platform.comjni.map.basemap.a -> com.baidu.platform.comjni.map.basemap.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.basemap.JNIBaseMap c -> c
    java.util.List d -> d
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Bundle) -> a
    int a(int) -> a
    android.os.Bundle g() -> g
    android.os.Bundle h() -> h
    float b(android.os.Bundle) -> b
    void a(boolean) -> a
    void b(boolean) -> b
    boolean i() -> i
    void c(boolean) -> c
    void a(int,boolean) -> a
    void b(int) -> b
    int a(int,int,java.lang.String) -> a
    void c(int) -> c
    java.lang.String a(int,int,int,int) -> a
    java.lang.String a(int,int) -> a
    java.lang.String b(int,int) -> b
    void a(java.lang.String) -> a
    boolean d(int) -> d
    boolean a(int,boolean,int) -> a
    boolean b(int,boolean,int) -> b
    boolean b(int,boolean) -> b
    java.lang.String j() -> j
    java.lang.String e(int) -> e
    boolean a(boolean,boolean) -> a
    java.lang.String k() -> k
    java.lang.String b(java.lang.String) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void e(android.os.Bundle) -> e
    void l() -> l
    int b(int,int,int,int) -> b
    int[] a(int[]) -> a
    void d(boolean) -> d
    boolean m() -> m
    void n() -> n
com.baidu.platform.comjni.map.basemap.b -> com.baidu.platform.comjni.map.basemap.b:
    int a(android.os.Bundle,int,int,android.os.Bundle) -> a
    boolean a(int) -> a
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache -> com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache:
    int Create() -> Create
    int Release(int) -> Release
    void Init(int,android.os.Bundle) -> Init
com.baidu.platform.comjni.map.commonmemcache.a -> com.baidu.platform.comjni.map.commonmemcache.a:
    int a -> a
    com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache b -> b
    int a() -> a
    int b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comjni.map.search.JNISearch -> com.baidu.platform.comjni.map.search.JNISearch:
    int Create() -> Create
    int Release(int) -> Release
    java.lang.String GetSearchResult(int,int) -> GetSearchResult
    boolean ForceSearchByCityName(int,android.os.Bundle) -> ForceSearchByCityName
    boolean AreaSearch(int,android.os.Bundle) -> AreaSearch
    boolean RoutePlanByBus(int,android.os.Bundle) -> RoutePlanByBus
    boolean RoutePlanByCar(int,android.os.Bundle) -> RoutePlanByCar
    boolean RoutePlanByFoot(int,android.os.Bundle) -> RoutePlanByFoot
    boolean POIDetailSearchPlace(int,java.lang.String) -> POIDetailSearchPlace
    boolean BusLineDetailSearch(int,java.lang.String,java.lang.String) -> BusLineDetailSearch
    boolean SuggestionSearch(int,android.os.Bundle) -> SuggestionSearch
    boolean ReverseGeocodeSearch(int,int,int) -> ReverseGeocodeSearch
    boolean geocode(int,java.lang.String,java.lang.String) -> geocode
    boolean PoiRGCShareUrlSearch(int,int,int,java.lang.String,java.lang.String) -> PoiRGCShareUrlSearch
    boolean PoiDetailShareUrlSearch(int,java.lang.String) -> PoiDetailShareUrlSearch
    boolean MapBoundSearch(int,android.os.Bundle) -> MapBoundSearch
com.baidu.platform.comjni.map.search.a -> com.baidu.platform.comjni.map.search.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.search.JNISearch c -> c
    int a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    boolean a(android.os.Bundle) -> a
    boolean b(android.os.Bundle) -> b
    boolean c(android.os.Bundle) -> c
    boolean d(android.os.Bundle) -> d
    boolean e(android.os.Bundle) -> e
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean f(android.os.Bundle) -> f
    boolean a(int,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(int,int,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean g(android.os.Bundle) -> g
com.baidu.platform.comjni.tools.BundleKeySet -> com.baidu.platform.comjni.tools.BundleKeySet:
    java.lang.String[] getBundleKeys(android.os.Bundle) -> getBundleKeys
com.baidu.platform.comjni.tools.JNITools -> com.baidu.platform.comjni.tools.JNITools:
    boolean TransGeoStr2Pt(java.lang.Object) -> TransGeoStr2Pt
    void TransNodeStr2Pt(java.lang.Object) -> TransNodeStr2Pt
    boolean TransGeoStr2ComplexPt(java.lang.Object) -> TransGeoStr2ComplexPt
    void GetDistanceByMC(java.lang.Object) -> GetDistanceByMC
    boolean CoordinateEncryptEx(float,float,java.lang.String,java.lang.Object) -> CoordinateEncryptEx
com.baidu.platform.comjni.tools.ParcelItem -> com.baidu.platform.comjni.tools.ParcelItem:
    android.os.Bundle b -> b
    android.os.Parcelable$Creator a -> a
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.platform.comjni.tools.a -> com.baidu.platform.comjni.tools.a:
    com.baidu.platform.comapi.a.a a(java.lang.String) -> a
    double a(com.baidu.platform.comapi.a.d,com.baidu.platform.comapi.a.d) -> a
com.baidu.platform.comjni.tools.b -> com.baidu.platform.comjni.tools.b:
    com.baidu.platform.comjni.tools.ParcelItem a(android.os.Parcel) -> a
    com.baidu.platform.comjni.tools.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.vi.VDeviceAPI -> com.baidu.vi.VDeviceAPI:
    android.os.PowerManager$WakeLock a -> a
    android.content.BroadcastReceiver b -> b
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.vi.c getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImsi() -> getImsi
com.baidu.vi.VMsg -> com.baidu.vi.VMsg:
    java.lang.String a -> a
    android.os.Handler b -> b
    android.os.HandlerThread c -> c
    void init() -> init
    void destroy() -> destroy
    void postMessage(int,int,int,int) -> postMessage
    void OnUserCommand1(int,int,int,int) -> OnUserCommand1
    void a(int,int,int,int) -> a
com.baidu.vi.VMsg$a -> com.baidu.vi.VMsg$a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.vi.a -> com.baidu.vi.a:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.vi.b -> com.baidu.vi.b:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    android.content.Context a() -> a
com.baidu.vi.c -> com.baidu.vi.c:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.baidu.vi.c$1 -> com.baidu.vi.c$1:
    int[] a -> a
com.example.xinlv.SleepEffectService -> com.example.xinlv.a:
    android.content.Context context -> a
com.example.xinlv.XinlvActivity -> com.example.xinlv.XinlvActivity:
    java.util.Timer timer -> f
    java.util.TimerTask task -> g
    int gx -> h
    int j -> i
    com.fox.exercise.db.SportContentDB contentDB -> j
    boolean flagxinlv -> k
    boolean flagxinlv2 -> l
    java.util.List lits_xinlv2 -> m
    java.util.Timer mTimer -> n
    java.util.TimerTask mTimerTask -> o
    android.os.Handler mHandler -> p
    cn.ingenic.indroidsync.SportsApp msApp -> q
    int count_xinlv -> r
    int[] count1 -> a
    java.lang.String unique_id -> s
    long startTimeSeconds -> t
    java.lang.String startTime1 -> u
    java.lang.String endtime1 -> v
    android.app.Dialog mLoadProgressDialog -> w
    double flag -> x
    android.os.Handler handler -> y
    java.lang.String title -> z
    org.achartengine.model.XYSeries series -> A
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> B
    org.achartengine.GraphicalView chart -> C
    org.achartengine.renderer.XYMultipleSeriesRenderer renderer -> D
    android.content.Context context -> E
    int addX -> F
    double addY -> b
    int[] xv -> c
    int[] yv -> d
    int[] hua -> e
    java.util.concurrent.atomic.AtomicBoolean processing -> G
    android.view.SurfaceView preview -> H
    android.view.SurfaceHolder previewHolder -> I
    android.hardware.Camera camera -> J
    android.widget.TextView text -> K
    android.hardware.Camera$Parameters parameters -> L
    android.graphics.drawable.AnimationDrawable animationDrawable -> M
    android.widget.ImageView animationTopRightView -> N
    android.widget.ImageView iv_back_xinlv -> O
    android.widget.ImageView iv_tongji_xinlv -> P
    android.widget.ImageView iv_startest_xinlView -> Q
    android.widget.TextView tv_zuijia -> R
    android.widget.TextView tv_xiegang -> S
    android.widget.TextView tv_wuyang -> T
    android.app.ActionBar actionBar -> U
    android.widget.TextView text_frame -> V
    android.widget.LinearLayout ll1 -> W
    int count -> X
    android.os.PowerManager$WakeLock wakeLock -> Y
    int averageIndex -> Z
    int[] averageArray -> aa
    com.example.xinlv.XinlvActivity$TYPE currentType -> ab
    int beatsIndex -> ac
    int[] beatsArray -> ad
    double beats -> ae
    long startTime -> af
    android.hardware.Camera$PreviewCallback previewCallback -> ag
    android.view.SurfaceHolder$Callback surfaceCallback -> ah
    android.os.Handler sleepHandler -> ai
    void onCreate(android.os.Bundle) -> onCreate
    void iv_btnEvent() -> s
    void initVIew() -> t
    void onDestroy() -> onDestroy
    org.achartengine.renderer.XYMultipleSeriesRenderer buildRenderer(int,org.achartengine.chart.PointStyle,boolean) -> a
    void updateChart() -> u
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onPause() -> onPause
    android.hardware.Camera$Size getSmallestPreviewSize(int,int,android.hardware.Camera$Parameters) -> b
    void uploadSleep(com.fox.exercise.newversion.entity.SleepEffect) -> a
    void waitShowDialog() -> v
    void healthCount() -> w
    java.util.concurrent.atomic.AtomicBoolean access$0() -> a
    void access$1(int) -> a
    int[] access$2() -> b
    com.example.xinlv.XinlvActivity$TYPE access$3() -> c
    double access$4() -> d
    void access$5(double) -> a
    void access$6(double) -> b
    int access$7() -> e
    void access$8(int) -> b
    void access$9(com.example.xinlv.XinlvActivity$TYPE) -> a
    long access$10() -> f
    void access$11(long) -> a
    int access$12() -> g
    void access$13(int) -> c
    int[] access$14() -> h
    android.widget.TextView access$15() -> i
    android.widget.TextView access$16() -> j
    android.widget.TextView access$17() -> k
    android.widget.TextView access$18() -> l
    android.hardware.Camera access$19() -> m
    android.view.SurfaceHolder access$20() -> n
    android.hardware.Camera$PreviewCallback access$21() -> o
    void access$22(android.hardware.Camera$Parameters) -> a
    android.hardware.Camera$Parameters access$23() -> p
    android.hardware.Camera$Size access$24(int,int,android.hardware.Camera$Parameters) -> a
    android.app.Dialog access$25(com.example.xinlv.XinlvActivity) -> a
    void access$26(android.hardware.Camera) -> a
    boolean access$27(com.example.xinlv.XinlvActivity) -> b
    void access$28(com.example.xinlv.XinlvActivity,boolean) -> a
    int access$29(com.example.xinlv.XinlvActivity) -> c
    void access$30(com.example.xinlv.XinlvActivity,int) -> a
    android.widget.ImageView access$31(com.example.xinlv.XinlvActivity) -> d
    android.widget.LinearLayout access$32(com.example.xinlv.XinlvActivity) -> e
    android.widget.TextView access$33(com.example.xinlv.XinlvActivity) -> f
    android.view.SurfaceView access$34() -> q
    void access$35(com.example.xinlv.XinlvActivity,long) -> a
    long access$36(com.example.xinlv.XinlvActivity) -> g
    void access$37(com.example.xinlv.XinlvActivity,java.lang.String) -> a
    cn.ingenic.indroidsync.SportsApp access$38(com.example.xinlv.XinlvActivity) -> h
    void access$39(com.example.xinlv.XinlvActivity) -> i
    void access$40(com.example.xinlv.XinlvActivity,java.lang.String) -> b
    void access$41(com.example.xinlv.XinlvActivity,android.widget.ImageView) -> a
    android.widget.ImageView access$42(com.example.xinlv.XinlvActivity) -> j
    void access$43(android.graphics.drawable.AnimationDrawable) -> a
    android.graphics.drawable.AnimationDrawable access$44() -> r
    void access$45(com.example.xinlv.XinlvActivity,android.content.Context) -> a
    java.lang.String access$46(com.example.xinlv.XinlvActivity) -> k
    void access$47(com.example.xinlv.XinlvActivity,org.achartengine.model.XYSeries) -> a
    void access$48(com.example.xinlv.XinlvActivity,org.achartengine.model.XYMultipleSeriesDataset) -> a
    org.achartengine.model.XYMultipleSeriesDataset access$49(com.example.xinlv.XinlvActivity) -> l
    org.achartengine.model.XYSeries access$50(com.example.xinlv.XinlvActivity) -> m
    void access$51(com.example.xinlv.XinlvActivity,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    android.content.Context access$52(com.example.xinlv.XinlvActivity) -> n
    org.achartengine.renderer.XYMultipleSeriesRenderer access$53(com.example.xinlv.XinlvActivity) -> o
    void access$54(com.example.xinlv.XinlvActivity,org.achartengine.GraphicalView) -> a
    org.achartengine.GraphicalView access$55(com.example.xinlv.XinlvActivity) -> p
    void access$56(com.example.xinlv.XinlvActivity,java.util.Timer) -> a
    java.util.List access$57(com.example.xinlv.XinlvActivity) -> q
    boolean access$58(com.example.xinlv.XinlvActivity) -> r
    void access$59(com.example.xinlv.XinlvActivity,boolean) -> b
    void access$60(com.example.xinlv.XinlvActivity,int) -> b
    int access$61(com.example.xinlv.XinlvActivity) -> s
    void access$62(com.example.xinlv.XinlvActivity,java.lang.String) -> c
    java.util.Timer access$63(com.example.xinlv.XinlvActivity) -> t
    java.lang.String access$64(com.example.xinlv.XinlvActivity) -> u
    java.lang.String access$65(com.example.xinlv.XinlvActivity) -> v
    java.lang.String access$66(com.example.xinlv.XinlvActivity) -> w
    void access$67(com.example.xinlv.XinlvActivity,com.fox.exercise.newversion.entity.SleepEffect) -> a
    com.fox.exercise.db.SportContentDB access$68(com.example.xinlv.XinlvActivity) -> x
    void access$69(com.example.xinlv.XinlvActivity,android.os.Handler) -> a
    android.os.Handler access$70(com.example.xinlv.XinlvActivity) -> y
    void access$71(com.example.xinlv.XinlvActivity,java.util.TimerTask) -> a
    java.util.Timer access$72(com.example.xinlv.XinlvActivity) -> z
    java.util.TimerTask access$73(com.example.xinlv.XinlvActivity) -> A
    void access$74(com.example.xinlv.XinlvActivity) -> B
    void access$75(com.example.xinlv.XinlvActivity,android.os.Handler) -> b
    android.os.Handler access$76(com.example.xinlv.XinlvActivity) -> C
    void access$77(com.example.xinlv.XinlvActivity,java.util.TimerTask) -> b
    java.util.TimerTask access$78(com.example.xinlv.XinlvActivity) -> D
    android.os.Handler access$79(com.example.xinlv.XinlvActivity) -> E
com.example.xinlv.XinlvActivity$1 -> com.example.xinlv.b:
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.example.xinlv.XinlvActivity$2 -> com.example.xinlv.c:
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.example.xinlv.XinlvActivity$3 -> com.example.xinlv.d:
    com.example.xinlv.XinlvActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.xinlv.XinlvActivity$4 -> com.example.xinlv.e:
    com.example.xinlv.XinlvActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.xinlv.XinlvActivity$5 -> com.example.xinlv.f:
    com.example.xinlv.XinlvActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.xinlv.XinlvActivity access$0(com.example.xinlv.XinlvActivity$5) -> a
com.example.xinlv.XinlvActivity$5$1 -> com.example.xinlv.g:
    com.example.xinlv.XinlvActivity$5 this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.xinlv.XinlvActivity$5$2 -> com.example.xinlv.h:
    com.example.xinlv.XinlvActivity$5 this$1 -> a
    void run() -> run
com.example.xinlv.XinlvActivity$5$3 -> com.example.xinlv.i:
    com.example.xinlv.XinlvActivity$5 this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.xinlv.XinlvActivity$5$4 -> com.example.xinlv.j:
    com.example.xinlv.XinlvActivity$5 this$1 -> a
    void run() -> run
com.example.xinlv.XinlvActivity$5$5 -> com.example.xinlv.k:
    com.example.xinlv.XinlvActivity$5 this$1 -> a
    void onClick(android.view.View) -> onClick
com.example.xinlv.XinlvActivity$6 -> com.example.xinlv.l:
    com.example.xinlv.XinlvActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.xinlv.XinlvActivity$7 -> com.example.xinlv.m:
    com.example.xinlv.XinlvActivity this$0 -> a
    com.fox.exercise.newversion.entity.SleepEffect val$sleepEffect -> b
    void run() -> run
com.example.xinlv.XinlvActivity$8 -> com.example.xinlv.n:
    com.example.xinlv.XinlvActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.xinlv.XinlvActivity$TYPE -> com.example.xinlv.o:
    com.example.xinlv.XinlvActivity$TYPE GREEN -> a
    com.example.xinlv.XinlvActivity$TYPE RED -> b
    com.example.xinlv.XinlvActivity$TYPE[] ENUM$VALUES -> c
    com.example.xinlv.XinlvActivity$TYPE[] values() -> values
    com.example.xinlv.XinlvActivity$TYPE valueOf(java.lang.String) -> valueOf
com.example.xinlv.Xinlvcount -> com.example.xinlv.Xinlvcount:
    com.example.xinlv.Xinlvcount$XinlvAdapter adapter2 -> a
    android.widget.ListView lv_xinlv -> b
    cn.ingenic.indroidsync.SportsApp msApp -> c
    java.lang.String aa -> d
    int count -> e
    android.widget.ImageView deleteAll -> f
    android.app.Dialog mLoadProgressDialog -> g
    com.fox.exercise.db.SportContentDB contentDB -> h
    android.app.ActionBar actionBar -> i
    android.widget.ImageView back -> j
    android.app.Dialog dialog -> k
    com.example.xinlv.SleepEffectService sleepEffectService -> l
    java.util.List list -> m
    android.os.Handler xinLvHandler -> n
    android.os.Handler allXinlvHandler -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void initVIew() -> a
    void waitShowDialog(java.lang.String) -> a
    void iv_btnEvent() -> b
    void deleteXinlv() -> c
    void deleteXinlvALL() -> d
    void access$0(com.example.xinlv.Xinlvcount,android.app.Dialog) -> a
    android.app.Dialog access$1(com.example.xinlv.Xinlvcount) -> a
    com.fox.exercise.db.SportContentDB access$2(com.example.xinlv.Xinlvcount) -> b
    void access$3(com.example.xinlv.Xinlvcount,java.lang.String) -> a
    cn.ingenic.indroidsync.SportsApp access$4(com.example.xinlv.Xinlvcount) -> c
    void access$5(com.example.xinlv.Xinlvcount) -> d
    com.example.xinlv.Xinlvcount$XinlvAdapter access$6(com.example.xinlv.Xinlvcount) -> e
    android.app.Dialog access$7(com.example.xinlv.Xinlvcount) -> f
    void access$8(com.example.xinlv.Xinlvcount,java.util.List) -> a
    int access$9(com.example.xinlv.Xinlvcount) -> g
    void access$10(com.example.xinlv.Xinlvcount,int) -> a
    java.util.List access$11(com.example.xinlv.Xinlvcount) -> h
    void access$12(com.example.xinlv.Xinlvcount,com.example.xinlv.Xinlvcount$XinlvAdapter) -> a
    android.widget.ListView access$13(com.example.xinlv.Xinlvcount) -> i
    void access$14(com.example.xinlv.Xinlvcount) -> j
    void access$15(com.example.xinlv.Xinlvcount) -> k
    java.lang.String access$16(com.example.xinlv.Xinlvcount) -> l
    android.os.Handler access$17(com.example.xinlv.Xinlvcount) -> m
    android.os.Handler access$18(com.example.xinlv.Xinlvcount) -> n
com.example.xinlv.Xinlvcount$1 -> com.example.xinlv.p:
    com.example.xinlv.Xinlvcount this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.xinlv.Xinlvcount$2 -> com.example.xinlv.q:
    com.example.xinlv.Xinlvcount this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.xinlv.Xinlvcount$3 -> com.example.xinlv.r:
    com.example.xinlv.Xinlvcount this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.xinlv.Xinlvcount$4 -> com.example.xinlv.s:
    com.example.xinlv.Xinlvcount this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.xinlv.Xinlvcount access$0(com.example.xinlv.Xinlvcount$4) -> a
com.example.xinlv.Xinlvcount$4$1 -> com.example.xinlv.t:
    com.example.xinlv.Xinlvcount$4 this$1 -> a
    void onClick(android.view.View) -> onClick
com.example.xinlv.Xinlvcount$4$2 -> com.example.xinlv.u:
    com.example.xinlv.Xinlvcount$4 this$1 -> a
    void onClick(android.view.View) -> onClick
com.example.xinlv.Xinlvcount$5 -> com.example.xinlv.v:
    com.example.xinlv.Xinlvcount this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.xinlv.Xinlvcount$6 -> com.example.xinlv.w:
    com.example.xinlv.Xinlvcount this$0 -> a
    void run() -> run
com.example.xinlv.Xinlvcount$7 -> com.example.xinlv.x:
    com.example.xinlv.Xinlvcount this$0 -> a
    void run() -> run
com.example.xinlv.Xinlvcount$XinlvAdapter -> com.example.xinlv.y:
    java.util.List list -> b
    android.content.Context context -> c
    com.example.xinlv.Xinlvcount this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void showInfo(int) -> a
    java.util.List access$0(com.example.xinlv.Xinlvcount$XinlvAdapter) -> a
    com.example.xinlv.Xinlvcount access$1(com.example.xinlv.Xinlvcount$XinlvAdapter) -> b
com.example.xinlv.Xinlvcount$XinlvAdapter$1 -> com.example.xinlv.z:
    com.example.xinlv.Xinlvcount$XinlvAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.xinlv.Xinlvcount$XinlvAdapter$2 -> com.example.xinlv.aa:
    com.example.xinlv.Xinlvcount$XinlvAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.example.xinlv.Xinlvcount$XinlvAdapter$3 -> com.example.xinlv.ab:
    com.example.xinlv.Xinlvcount$XinlvAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.xinlv.Xinlvcount$XinlvAdapter$ViewHoder -> com.example.xinlv.ac:
    android.widget.TextView tv1 -> a
    android.widget.TextView tv2 -> b
    android.widget.ImageView btn1 -> c
    com.example.xinlv.Xinlvcount$XinlvAdapter this$1 -> d
com.fox.exercise.About -> com.fox.exercise.About:
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
com.fox.exercise.AbstractBaseActivity -> com.fox.exercise.AbstractBaseActivity:
    java.lang.String TAG -> a
    android.view.ViewGroup m_vContentView -> b
    java.lang.String title -> c
    android.widget.LinearLayout right_btn -> d
    android.widget.ImageButton leftButton -> e
    android.widget.LinearLayout left_ayout -> f
    android.widget.LinearLayout top_title_layout -> g
    android.widget.LinearLayout img_backhome -> h
    android.widget.TextView title_tv -> i
    cn.ingenic.indroidsync.SportsApp mSportsApp -> j
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onStart() -> onStart
    void showRightBtn(android.view.View) -> showRightBtn
    void showBaxkbtn(android.view.View) -> showBaxkbtn
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void showContentView(int) -> a_
    void nullViewDrawablesRecursive(android.view.View) -> a
    void nullViewDrawable(android.view.View) -> b
com.fox.exercise.AbstractBaseActivity$clickListener -> com.fox.exercise.a:
    com.fox.exercise.AbstractBaseActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.AbstractBaseFragment -> com.fox.exercise.b:
    java.lang.String TAG -> a
    android.widget.LinearLayout m_vContentView -> b
    java.lang.String title -> c
    android.widget.LinearLayout l_content -> l
    android.widget.LinearLayout right_btn -> d
    android.widget.LinearLayout top_title_layout -> e
    android.view.View parentView -> f
    android.widget.ImageButton iButton -> g
    android.app.Dialog mLoadProgressDialog -> h
    android.widget.LinearLayout left_ayout -> i
    android.widget.LinearLayout title_newsorguanzhu_layout -> j
    com.fox.exercise.util.RoundedImage userPhoto -> k
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void setContentView(int) -> a
    void setContentViews(android.view.View) -> a
    void showRightBtn(android.view.View) -> b
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void nullViewDrawablesRecursive(android.view.View) -> c
    void nullViewDrawable(android.view.View) -> d
    void waitShow() -> f
    void waitCloset() -> g
    android.app.Dialog onCreateDialog(int,android.os.Bundle) -> a
com.fox.exercise.AbstractBaseFragment$clickListener -> com.fox.exercise.c:
    com.fox.exercise.AbstractBaseFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.AbstractBaseOtherActivity -> com.fox.exercise.AbstractBaseOtherActivity:
    java.lang.String TAG -> n
    android.view.ViewGroup m_vContentView -> o
    java.lang.String title -> p
    android.widget.LinearLayout right_btn -> q
    android.widget.ImageButton leftButton -> r
    android.widget.LinearLayout left_ayout -> s
    android.widget.LinearLayout top_title_layout -> t
    android.widget.TextView title_tv -> u
    cn.ingenic.indroidsync.SportsApp mSportsApp -> v
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onStart() -> onStart
    void showRightBtn(android.view.View) -> showRightBtn
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void showContentView(int) -> a
    void nullViewDrawablesRecursive(android.view.View) -> a
    void nullViewDrawable(android.view.View) -> b
com.fox.exercise.AbstractBaseOtherActivity$clickListener -> com.fox.exercise.d:
    com.fox.exercise.AbstractBaseOtherActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.AbstractBaseOtherFragment -> com.fox.exercise.e:
    java.lang.String TAG -> a
    android.widget.LinearLayout m_vContentView -> b
    java.lang.String title -> c
    android.widget.LinearLayout l_content -> k
    android.widget.LinearLayout right_btn -> d
    android.widget.LinearLayout top_title_layout -> e
    android.view.View parentView -> f
    android.widget.ImageButton iButton -> g
    android.widget.LinearLayout left_ayout -> h
    android.widget.LinearLayout title_newsorguanzhu_layout -> i
    com.fox.exercise.util.RoundedImage userPhoto -> j
    android.os.Handler mBaseHandler -> l
    void beforeInitView(android.os.Bundle) -> a
    void setViewStatus(android.os.Bundle) -> b
    void onPageResume() -> a
    void onPagePause() -> b
    void onPageDestroy() -> c
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void setContentViews(android.view.View) -> a
    void showRightBtn(android.view.View) -> b
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void nullViewDrawablesRecursive(android.view.View) -> c
    void nullViewDrawable(android.view.View) -> d
    android.app.Dialog onCreateDialog(int,android.os.Bundle) -> a
com.fox.exercise.AbstractBaseOtherFragment$clickListener -> com.fox.exercise.f:
    com.fox.exercise.AbstractBaseOtherFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.ActivityInfoWebView -> com.fox.exercise.ActivityInfoWebView:
    com.fox.exercise.FindOtherMoreAdapter sportsfindmoreAdapter -> k
    java.util.List imgItems -> l
    java.lang.String[] imgStr -> m
    java.util.ArrayList mList2 -> n
    int isshow -> o
    android.widget.LinearLayout mContentLayout -> p
    cn.ingenic.indroidsync.SportsApp mSportsApp -> q
    android.widget.TextView apply_bt -> r
    java.lang.String URL -> s
    java.lang.String thrURL -> t
    java.lang.String th -> u
    java.lang.String onclicktime -> v
    long startTimeSeconds -> w
    int mItemHeight -> x
    cn.ingenic.indroidsync.SportsApp msApp -> y
    com.fox.exercise.publish.SendMsgDetail self -> z
    com.fox.exercise.api.entity.UserDetail detail -> A
    java.util.List imgList2 -> B
    java.util.List imgList3 -> C
    java.util.List imgList4 -> D
    java.util.List imgList5 -> E
    java.util.List imgList6 -> F
    java.util.List imgList7 -> G
    java.util.List imgList8 -> H
    java.util.List imgList9 -> I
    android.view.LayoutInflater mInflater -> J
    com.fox.exercise.ImageDownloader mDownloader -> K
    com.fox.exercise.ImageDownloader mDownloader2 -> L
    java.util.List imgurList -> M
    java.lang.String activitytime -> N
    int activityId -> O
    com.fox.exercise.api.entity.ActivityInfo activityDetailInfo -> P
    com.fox.exercise.ImageDownloader mDownload -> Q
    java.util.List mList -> R
    android.widget.TextView content -> S
    android.widget.TextView content2 -> T
    android.widget.TextView contentDetail -> U
    android.widget.TextView contentDetail2 -> V
    android.view.View contentView5 -> W
    android.widget.TextView contentWay -> X
    android.widget.TextView contentWay2 -> Y
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> Z
    android.widget.TextView description -> aa
    android.widget.TextView description2 -> ab
    android.widget.TextView action_url -> ac
    android.widget.ImageView activityDetail_pic -> ad
    java.util.Date curDate -> ae
    java.util.Date activityDate -> af
    java.text.SimpleDateFormat formatter -> ag
    android.widget.ImageView reward_pic -> ah
    com.fox.exercise.view.PullToRefreshListView actiondetailListView -> ai
    android.widget.ListView listView -> aj
    android.widget.FrameLayout fl_view -> ak
    android.widget.FrameLayout fl_view2 -> al
    int times -> am
    android.view.View head_view -> an
    android.view.View weiView -> ao
    java.util.List actionLists -> ap
    java.util.List activityNameList -> aq
    java.util.List activityTimeList -> ar
    java.util.List activityIdList -> as
    java.util.List activitySendId -> at
    java.util.List activityNameSize -> au
    java.util.List list -> av
    android.view.View contentView1 -> aw
    android.view.View contentViewWay -> ax
    android.view.View contentViewDescription -> ay
    com.fox.exercise.widght.expandablelayout.ExpandableLayout itemReward -> az
    android.widget.RelativeLayout rl_joinactivity -> aA
    android.widget.ImageView img_share -> aB
    java.lang.String title_name -> aC
    android.app.Dialog mLoadProgressDialog -> aD
    android.widget.TextView mDialogMessage -> aE
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void waitShowDialog() -> f
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void GetActionData() -> g
    void healthCount() -> h
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.ActivityInfoWebView) -> a
    int access$1(com.fox.exercise.ActivityInfoWebView) -> b
    int access$2(com.fox.exercise.ActivityInfoWebView) -> c
    void access$3(com.fox.exercise.ActivityInfoWebView,com.fox.exercise.api.entity.ActivityInfo) -> a
    com.fox.exercise.api.entity.ActivityInfo access$4(com.fox.exercise.ActivityInfoWebView) -> d
    com.fox.exercise.ImageDownloader access$5(com.fox.exercise.ActivityInfoWebView) -> e
    android.widget.ImageView access$6(com.fox.exercise.ActivityInfoWebView) -> f
    android.widget.TextView access$7(com.fox.exercise.ActivityInfoWebView) -> g
    android.widget.TextView access$8(com.fox.exercise.ActivityInfoWebView) -> h
    android.widget.TextView access$9(com.fox.exercise.ActivityInfoWebView) -> i
    android.widget.TextView access$10(com.fox.exercise.ActivityInfoWebView) -> j
    android.widget.TextView access$11(com.fox.exercise.ActivityInfoWebView) -> k
    android.widget.TextView access$12(com.fox.exercise.ActivityInfoWebView) -> l
    android.widget.ImageView access$13(com.fox.exercise.ActivityInfoWebView) -> m
    android.widget.TextView access$14(com.fox.exercise.ActivityInfoWebView) -> n
    android.widget.TextView access$15(com.fox.exercise.ActivityInfoWebView) -> o
    void access$16(com.fox.exercise.ActivityInfoWebView,int) -> a
    android.view.View access$17(com.fox.exercise.ActivityInfoWebView) -> p
    int access$18(com.fox.exercise.ActivityInfoWebView) -> q
    android.widget.ListView access$19(com.fox.exercise.ActivityInfoWebView) -> r
    java.util.List access$20(com.fox.exercise.ActivityInfoWebView) -> s
    com.fox.exercise.FindOtherMoreAdapter access$21(com.fox.exercise.ActivityInfoWebView) -> t
    com.fox.exercise.view.PullToRefreshListView access$22(com.fox.exercise.ActivityInfoWebView) -> u
    android.app.Dialog access$23(com.fox.exercise.ActivityInfoWebView) -> v
    android.widget.FrameLayout access$24(com.fox.exercise.ActivityInfoWebView) -> w
    java.util.List access$42(com.fox.exercise.ActivityInfoWebView) -> x
    java.util.ArrayList access$45(com.fox.exercise.ActivityInfoWebView) -> y
    java.lang.String access$46(com.fox.exercise.ActivityInfoWebView) -> z
    java.util.Date access$47(com.fox.exercise.ActivityInfoWebView) -> A
    java.util.Date access$48(com.fox.exercise.ActivityInfoWebView) -> B
    void access$49(com.fox.exercise.ActivityInfoWebView,long) -> a
    long access$50(com.fox.exercise.ActivityInfoWebView) -> C
    void access$51(com.fox.exercise.ActivityInfoWebView,java.lang.String) -> a
    void access$52(com.fox.exercise.ActivityInfoWebView) -> D
    void access$53(com.fox.exercise.ActivityInfoWebView,int) -> b
    void access$54(com.fox.exercise.ActivityInfoWebView) -> E
    java.util.List access$55(com.fox.exercise.ActivityInfoWebView) -> F
    cn.ingenic.indroidsync.SportsApp access$58(com.fox.exercise.ActivityInfoWebView) -> G
    java.lang.String access$59(com.fox.exercise.ActivityInfoWebView) -> H
com.fox.exercise.ActivityInfoWebView$1 -> com.fox.exercise.g:
    com.fox.exercise.ActivityInfoWebView this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.ActivityInfoWebView$2 -> com.fox.exercise.h:
    com.fox.exercise.ActivityInfoWebView this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.ActivityInfoWebView$3 -> com.fox.exercise.i:
    com.fox.exercise.ActivityInfoWebView this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.ActivityInfoWebView$8 -> com.fox.exercise.j:
    com.fox.exercise.ActivityInfoWebView this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ActivityInfoWebView$ActionInfoShareLister -> com.fox.exercise.k:
    com.fox.exercise.ActivityInfoWebView this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.ActivityInfoWebView$GetActionDataDetailTask -> com.fox.exercise.l:
    com.fox.exercise.ActivityInfoWebView this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ActivityInfoWebView$GetActionDataTask -> com.fox.exercise.m:
    com.fox.exercise.ActivityInfoWebView this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ActivityInfoWebView$GetActionDataTask2 -> com.fox.exercise.n:
    com.fox.exercise.ActivityInfoWebView this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ActivityInfoWebView$GetActivityInfoTask -> com.fox.exercise.o:
    com.fox.exercise.ActivityInfoWebView this$0 -> a
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ActivityList -> com.fox.exercise.ActivityList:
    com.fox.exercise.view.PullToRefreshListView activitylistView -> l
    android.widget.ListView mListView -> m
    com.fox.exercise.ActivityListAdapter activityAdapter -> n
    java.util.List actionLists -> o
    int times -> p
    android.widget.TextView no_data -> q
    cn.ingenic.indroidsync.SportsApp mSportsApp -> r
    java.lang.String activityTime -> s
    java.text.SimpleDateFormat formatter -> t
    java.util.Date curDate -> u
    java.util.Date activityDate -> v
    android.graphics.ColorMatrix matrix -> w
    android.widget.AdapterView$OnItemClickListener listViewClick -> x
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void Init() -> h
    void GetActionData() -> i
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.ActivityList) -> a
    java.util.List access$1(com.fox.exercise.ActivityList) -> b
    void access$2(com.fox.exercise.ActivityList,java.lang.String) -> a
    java.lang.String access$3(com.fox.exercise.ActivityList) -> c
    java.text.SimpleDateFormat access$4(com.fox.exercise.ActivityList) -> d
    void access$5(com.fox.exercise.ActivityList,java.util.Date) -> a
    java.util.Date access$6(com.fox.exercise.ActivityList) -> e
    java.util.Date access$7(com.fox.exercise.ActivityList) -> f
    int access$8(com.fox.exercise.ActivityList) -> g
    com.fox.exercise.ActivityListAdapter access$9(com.fox.exercise.ActivityList) -> h
    void access$10(com.fox.exercise.ActivityList,com.fox.exercise.ActivityListAdapter) -> a
    android.widget.ListView access$11(com.fox.exercise.ActivityList) -> i
    com.fox.exercise.view.PullToRefreshListView access$12(com.fox.exercise.ActivityList) -> j
    android.widget.TextView access$13(com.fox.exercise.ActivityList) -> k
    void access$14(com.fox.exercise.ActivityList,int) -> a
    void access$15(com.fox.exercise.ActivityList) -> l
com.fox.exercise.ActivityList$1 -> com.fox.exercise.p:
    com.fox.exercise.ActivityList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.ActivityList$2 -> com.fox.exercise.q:
    com.fox.exercise.ActivityList this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.ActivityList$GetActionDataTask -> com.fox.exercise.s:
    com.fox.exercise.ActivityList this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ActivityListAdapter -> com.fox.exercise.t:
    android.view.LayoutInflater mlfInflater -> a
    java.util.List activityEntitys -> b
    com.fox.exercise.ImageDownloader mDownloader -> c
    java.lang.String activityTime -> d
    java.text.SimpleDateFormat formatter -> e
    android.widget.TextView activiti_station -> f
    java.util.Date curDate -> g
    java.util.Date activityDate -> h
    android.graphics.ColorMatrix matrix -> i
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.ActivityListAdapter$ViewHolder -> com.fox.exercise.u:
    android.widget.ImageView mimg -> a
    android.widget.TextView mactivity_name -> b
    android.widget.TextView mactivity_time -> c
    android.widget.TextView mactivity_time_context -> d
    com.fox.exercise.ActivityListAdapter this$0 -> e
com.fox.exercise.ActivityListDetail -> com.fox.exercise.ActivityListDetail:
    android.content.Context mcontext -> n
    android.widget.ImageView mimg -> o
    android.widget.TextView introduction -> p
    android.widget.TextView registration -> q
    android.widget.TextView costs -> r
    android.widget.TextView payment -> s
    android.widget.TextView top_title -> t
    android.support.v4.view.ViewPager activity_viewpager -> u
    java.util.ArrayList fragmentList -> v
    android.widget.TextView[] txViews -> w
    int crrentposition -> x
    android.widget.ImageButton title_left_btn -> y
    android.widget.Button sign_up -> z
    com.fox.exercise.ImageDownloader mDownloader -> A
    int activityId -> B
    com.fox.exercise.api.entity.ActionInfo myactionInfo -> C
    android.support.v4.app.Fragment introductFragment -> D
    com.fox.exercise.api.ApiBack back -> E
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void InitViewPager() -> b
    void onClick(android.view.View) -> onClick
    void init() -> c
    android.widget.TextView[] access$0(com.fox.exercise.ActivityListDetail) -> a
    int access$1(com.fox.exercise.ActivityListDetail) -> b
    void access$2(com.fox.exercise.ActivityListDetail,int) -> a
    android.support.v4.view.ViewPager access$3(com.fox.exercise.ActivityListDetail) -> c
    int access$4(com.fox.exercise.ActivityListDetail) -> d
    void access$5(com.fox.exercise.ActivityListDetail,com.fox.exercise.api.entity.ActionInfo) -> a
    com.fox.exercise.api.entity.ActionInfo access$6(com.fox.exercise.ActivityListDetail) -> e
    android.widget.TextView access$7(com.fox.exercise.ActivityListDetail) -> f
    com.fox.exercise.ImageDownloader access$8(com.fox.exercise.ActivityListDetail) -> g
    android.widget.ImageView access$9(com.fox.exercise.ActivityListDetail) -> h
    void access$10(com.fox.exercise.ActivityListDetail,com.fox.exercise.api.ApiBack) -> a
    android.content.Context access$11(com.fox.exercise.ActivityListDetail) -> i
    com.fox.exercise.api.ApiBack access$12(com.fox.exercise.ActivityListDetail) -> j
com.fox.exercise.ActivityListDetail$GetActionDetail_DataTask -> com.fox.exercise.v:
    com.fox.exercise.ActivityListDetail this$0 -> a
    com.fox.exercise.api.entity.ActionInfo doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.ActionInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ActivityListDetail$GoApplyTask -> com.fox.exercise.w:
    com.fox.exercise.ActivityListDetail this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ActivityListDetail$MyOnPageChangeListener -> com.fox.exercise.x:
    com.fox.exercise.ActivityListDetail this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.fox.exercise.ActivityListDetail$myFragmentPagerAdapter -> com.fox.exercise.y:
    java.util.ArrayList myFragments -> b
    com.fox.exercise.ActivityListDetail this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.fox.exercise.ActivityListDetail$myTextviewListenter -> com.fox.exercise.z:
    int index -> b
    com.fox.exercise.ActivityListDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.ActivityRankFragmentAdaptre -> com.fox.exercise.aa:
    android.content.Context mcontext -> a
    android.view.LayoutInflater mInflater -> b
    java.util.List mActionRankLists -> c
    com.fox.exercise.ImageDownloader mDownloader -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.ActivityRankFragmentAdaptre$ViewHodler -> com.fox.exercise.ab:
    com.fox.exercise.util.RoundedImage cover_user_photo -> a
    android.widget.TextView username -> b
    android.widget.TextView usercal -> c
    android.widget.ImageView ranking -> d
    com.fox.exercise.ActivityRankFragmentAdaptre this$0 -> e
com.fox.exercise.ActivityRankingFragment -> com.fox.exercise.ac:
    int activityId -> b
    boolean isFrist -> c
    com.fox.exercise.view.PullToRefreshListView refreshListView -> d
    android.widget.ListView listView -> e
    com.fox.exercise.ActivityRankFragmentAdaptre rankAdaptre -> f
    android.app.Dialog mLoadProgressDialog -> a
    int times -> g
    java.util.List allActionRankLists -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void GetActionRankListData() -> c
    void waitShow() -> a
    void waitCloset() -> b
    void onDestroy() -> onDestroy
    int access$0(com.fox.exercise.ActivityRankingFragment) -> a
    int access$1(com.fox.exercise.ActivityRankingFragment) -> b
    java.util.List access$2(com.fox.exercise.ActivityRankingFragment) -> c
    com.fox.exercise.ActivityRankFragmentAdaptre access$3(com.fox.exercise.ActivityRankingFragment) -> d
    void access$4(com.fox.exercise.ActivityRankingFragment,com.fox.exercise.ActivityRankFragmentAdaptre) -> a
    android.widget.ListView access$5(com.fox.exercise.ActivityRankingFragment) -> e
    com.fox.exercise.view.PullToRefreshListView access$6(com.fox.exercise.ActivityRankingFragment) -> f
    void access$7(com.fox.exercise.ActivityRankingFragment,int) -> a
    void access$8(com.fox.exercise.ActivityRankingFragment) -> g
com.fox.exercise.ActivityRankingFragment$1 -> com.fox.exercise.ad:
    com.fox.exercise.ActivityRankingFragment this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.ActivityRankingFragment$GetActionRankListTask -> com.fox.exercise.ae:
    java.util.List actionRankLists -> a
    com.fox.exercise.ActivityRankingFragment this$0 -> b
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.AddFriendActivity -> com.fox.exercise.AddFriendActivity:
    android.app.Dialog mLoadProgressDialog -> k
    android.content.Context mcontext -> l
    android.widget.EditText add_friend_edittext -> m
    com.fox.exercise.view.PullToRefreshListView mPullSearchListView -> n
    android.widget.ListView mListView -> o
    com.fox.exercise.AddFriendListViewAdapter addFriendAdapter -> p
    java.util.ArrayList mList -> q
    cn.ingenic.indroidsync.SportsApp mSportsApp -> r
    int mSearchAddFriend -> s
    int SEARCH_BASIC -> t
    int SEARCH_NAME -> u
    int times -> v
    boolean mIsAddTask -> w
    com.fox.exercise.api.entity.UserDetail self -> x
    java.lang.String editname -> y
    int edittextCnt -> z
    boolean mIsRefreshing -> A
    com.fox.exercise.AddFriendActivity$AddFriendTask task -> B
    android.text.TextWatcher add_friend_editchangelistener -> C
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void startAddTask() -> f
    void cancelAndStartTask() -> g
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void init() -> h
    void waitShow() -> i
    android.widget.EditText access$0(com.fox.exercise.AddFriendActivity) -> a
    void access$1(com.fox.exercise.AddFriendActivity,java.lang.String) -> a
    java.lang.String access$2(com.fox.exercise.AddFriendActivity) -> b
    int access$3(com.fox.exercise.AddFriendActivity) -> c
    void access$4(com.fox.exercise.AddFriendActivity,int) -> a
    void access$5(com.fox.exercise.AddFriendActivity,int) -> b
    void access$6(com.fox.exercise.AddFriendActivity,int) -> c
    void access$7(com.fox.exercise.AddFriendActivity) -> d
    int access$8(com.fox.exercise.AddFriendActivity) -> e
    int access$9(com.fox.exercise.AddFriendActivity) -> f
    cn.ingenic.indroidsync.SportsApp access$10(com.fox.exercise.AddFriendActivity) -> g
    com.fox.exercise.api.entity.UserDetail access$11(com.fox.exercise.AddFriendActivity) -> h
    java.util.ArrayList access$12(com.fox.exercise.AddFriendActivity) -> i
    android.widget.ListView access$13(com.fox.exercise.AddFriendActivity) -> j
    android.content.Context access$14(com.fox.exercise.AddFriendActivity) -> k
    void access$15(com.fox.exercise.AddFriendActivity,com.fox.exercise.AddFriendListViewAdapter) -> a
    com.fox.exercise.AddFriendListViewAdapter access$16(com.fox.exercise.AddFriendActivity) -> l
    com.fox.exercise.view.PullToRefreshListView access$17(com.fox.exercise.AddFriendActivity) -> m
    android.app.Dialog access$18(com.fox.exercise.AddFriendActivity) -> n
    void access$19(com.fox.exercise.AddFriendActivity,boolean) -> a
    void access$20(com.fox.exercise.AddFriendActivity,boolean) -> b
    boolean access$21(com.fox.exercise.AddFriendActivity) -> o
com.fox.exercise.AddFriendActivity$1 -> com.fox.exercise.af:
    com.fox.exercise.AddFriendActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.AddFriendActivity$2 -> com.fox.exercise.ag:
    com.fox.exercise.AddFriendActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.AddFriendActivity$3 -> com.fox.exercise.ah:
    com.fox.exercise.AddFriendActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.AddFriendActivity$AddFriendTask -> com.fox.exercise.ai:
    com.fox.exercise.AddFriendActivity this$0 -> a
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.AddFriendListViewAdapter -> com.fox.exercise.aj:
    android.content.Context mContext -> b
    java.util.ArrayList mList -> c
    com.fox.exercise.ImageDownloader mDownloader -> d
    com.fox.exercise.AddFriendListViewAdapter$ViewHolder holder -> a
    android.view.LayoutInflater mInflater -> e
    cn.ingenic.indroidsync.SportsApp mSportsApp -> f
    android.app.Dialog loadProgressDialog -> g
    android.widget.TextView message -> h
    com.fox.exercise.AddFriendListViewAdapter$ChangeHandler mHandler -> i
    android.view.View addView -> j
    int DELETES -> k
    int ADDS -> l
    int addStatus -> m
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.AddFriendListViewAdapter) -> a
    int access$1(com.fox.exercise.AddFriendListViewAdapter) -> b
    com.fox.exercise.AddFriendListViewAdapter$ChangeHandler access$2(com.fox.exercise.AddFriendListViewAdapter) -> c
    android.app.Dialog access$3(com.fox.exercise.AddFriendListViewAdapter) -> d
    android.view.View access$4(com.fox.exercise.AddFriendListViewAdapter) -> e
    android.content.Context access$5(com.fox.exercise.AddFriendListViewAdapter) -> f
    void access$6(com.fox.exercise.AddFriendListViewAdapter,android.view.View) -> a
    void access$7(com.fox.exercise.AddFriendListViewAdapter,int) -> a
    android.widget.TextView access$8(com.fox.exercise.AddFriendListViewAdapter) -> g
    java.util.ArrayList access$9(com.fox.exercise.AddFriendListViewAdapter) -> h
com.fox.exercise.AddFriendListViewAdapter$1 -> com.fox.exercise.ak:
    com.fox.exercise.AddFriendListViewAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.AddFriendListViewAdapter$2 -> com.fox.exercise.al:
    com.fox.exercise.AddFriendListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.AddFriendListViewAdapter$ChangeHandler -> com.fox.exercise.am:
    com.fox.exercise.AddFriendListViewAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.AddFriendListViewAdapter$ChangeThread -> com.fox.exercise.an:
    int uid -> b
    int status -> c
    com.fox.exercise.AddFriendListViewAdapter this$0 -> a
    void run() -> run
com.fox.exercise.AddFriendListViewAdapter$ViewHolder -> com.fox.exercise.ao:
    android.widget.TextView distance -> b
    com.fox.exercise.util.RoundedImage iconImg -> c
    android.widget.TextView nameTxt -> d
    android.widget.Button followBtn -> e
    com.fox.exercise.AddFriendListViewAdapter this$0 -> a
    void access$1(com.fox.exercise.AddFriendListViewAdapter$ViewHolder,android.widget.TextView) -> a
    void access$2(com.fox.exercise.AddFriendListViewAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> a
    void access$3(com.fox.exercise.AddFriendListViewAdapter$ViewHolder,android.widget.TextView) -> b
    void access$4(com.fox.exercise.AddFriendListViewAdapter$ViewHolder,android.widget.Button) -> a
    com.fox.exercise.util.RoundedImage access$5(com.fox.exercise.AddFriendListViewAdapter$ViewHolder) -> a
    android.widget.TextView access$6(com.fox.exercise.AddFriendListViewAdapter$ViewHolder) -> b
    android.widget.TextView access$7(com.fox.exercise.AddFriendListViewAdapter$ViewHolder) -> c
    android.widget.Button access$8(com.fox.exercise.AddFriendListViewAdapter$ViewHolder) -> d
com.fox.exercise.AdviceFeedback -> com.fox.exercise.AdviceFeedback:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onResume() -> onResume
    void onPause() -> onPause
com.fox.exercise.AdviceFeedback$1 -> com.fox.exercise.ap:
    com.fox.exercise.AdviceFeedback this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.AllWeiboInfo -> com.fox.exercise.aq:
    java.lang.String SINA_WEIBO_KEY -> a
    java.lang.String SINA_WEIBO_SECRET -> b
    java.lang.String SINA_WEIBO_REDICT_URL -> c
    java.lang.String SINA_TOKEN_URL -> d
    java.lang.String SINA_AUTH_URL -> e
    java.lang.String SINA_TOKEN_SP -> f
    java.lang.String SINA_TOKEN_SP_EXPIRE_IN -> g
    java.lang.String TENCENT_TOKEN_SP -> h
    java.lang.String TENCENT_TOKEN_SP_TIME -> i
    java.lang.String TENCENT_TOKEN_KEY -> j
    java.lang.String TENCENT_ACCESS_TOKEN_KEY -> k
    java.lang.String TENCENT_ACCESS_TOKEN_SECRET_KEY -> l
    java.lang.String TENCENT_NAME_KEY -> m
    java.lang.String TENCENT_ID_KEY -> n
    java.lang.String TENCENT_REFRESH_URL -> o
    java.lang.String TENCENT_TOKEN_DB_TABLE -> p
    java.lang.String QQZONE_TOKEN_SP -> q
    java.lang.String QQZONE_TOKEN_SP_TIME -> r
    java.lang.String QQZONE_TOKEN -> s
    java.lang.String QQZONE_OPEN_ID -> t
    java.lang.String TENCENT_APPID -> u
    java.lang.String APP_ID -> v
    java.lang.String TENCENT_SCOPE -> w
    java.lang.String TENCENT_QQZONE_PHOTO -> x
    java.lang.String TENCENT_QQZONE_NICK -> y
    java.lang.String TENCENT_QQZONE_NICK_KEY -> z
    java.lang.String TENCENT_QQZONE_OPEN_ID -> A
    java.lang.String TENCENT_QQZONE_TOKEN_SP -> B
    java.lang.String TENCENT_QQZONE_TOKEN_KEY -> C
    java.lang.String TENCENT_QQZONE_TOKEN -> D
    java.lang.String TENCENT_QQZONE_OPEN_ID_KEY -> E
    java.lang.String TENCENT_QQZONE_TOKEN_SP_TIME -> F
    java.lang.String TENCENT_QQZONE_TOKEN_URL_KEY -> G
    java.lang.String TENCENT_QQZONE_EXPIRES_URL_KEY -> H
    java.lang.String TENCENT_QQZONE_SEX -> I
    java.lang.String JDOption_AppKey -> J
    java.lang.String JDOption_AppSecret -> K
    java.lang.String JDOption_AppRedirectUri -> L
    java.lang.String JDOption_OPEN_ID_KEY -> M
    java.lang.String JDOption_OPEN_ID -> N
    java.lang.String JDOption_TOKEN_SP_TIME -> O
    java.lang.String JDOption_TOKEN_SP -> P
    java.lang.String JDOption_TOKEN_URL_KEY -> Q
    java.lang.String JDOption_TOKEN_KEY -> R
    java.lang.String JDOption_TOKEN -> S
    java.lang.String JDOption_TOKEN_URL -> T
    java.lang.String JDOption_EXPIRES_URL_KEY -> U
    java.lang.String JDOption_EXPIRES_URL -> V
    java.lang.String JDOption_NICK -> W
    java.lang.String JDOption_NICK_KEY -> X
com.fox.exercise.AlwaysMarqueeTextView -> com.fox.exercise.AlwaysMarqueeTextView:
    boolean isFocused() -> isFocused
com.fox.exercise.BaseActivity -> com.fox.exercise.BaseActivity:
    android.content.Context mContext -> a
    java.lang.String SDCARD_MNT -> b
    java.lang.String SDCARD -> c
com.fox.exercise.BaseModel -> com.fox.exercise.ar:
com.fox.exercise.BindingDevice -> com.fox.exercise.BindingDevice:
    android.app.Dialog alertDialog -> k
    android.widget.RelativeLayout binding_devices -> l
    android.widget.LinearLayout have_binded -> m
    android.view.View mLine -> n
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void init() -> f
    void showDialog() -> g
    void updateUi() -> h
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    android.app.Dialog access$0(com.fox.exercise.BindingDevice) -> a
com.fox.exercise.BindingDevice$1 -> com.fox.exercise.as:
    com.fox.exercise.BindingDevice this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.BmpItem -> com.fox.exercise.at:
    float preX -> a
    float preY -> b
    float preWidth -> c
    float preHeight -> d
    float width -> e
    float height -> f
    android.graphics.Bitmap pic -> g
    int priority -> h
    android.graphics.Matrix matrix -> i
    float getXY(int) -> a
    android.graphics.Bitmap getPic() -> a
    float getWidth() -> b
    float getHeight() -> c
    void savePreHeight(float) -> a
    float getPreHeight() -> d
    void savePreWidth(float) -> b
    float getPreWidth() -> e
com.fox.exercise.BuildRunCircle -> com.fox.exercise.BuildRunCircle:
    android.widget.GridView gridview_image -> k
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void init() -> f
com.fox.exercise.BuildRunCircle$MyBaseAdapter -> com.fox.exercise.au:
    com.fox.exercise.BuildRunCircle this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.CameraApp -> com.fox.exercise.CameraApp:
    com.fox.exercise.CameraApp$MyOrientationEventListener mOrientationListener -> e
    int mOrientation -> f
    int mStatus -> g
    android.hardware.Camera mCameraDevice -> h
    android.hardware.Camera$Parameters mParameters -> i
    int mNumberOfCameras -> j
    int mCameraId -> k
    boolean mPreviewing -> l
    boolean mPausing -> m
    boolean mStartPreviewFail -> n
    int mPreviewWidth -> o
    int mPreviewHeight -> p
    android.view.SurfaceView mSurfaceView -> q
    android.view.SurfaceHolder mSurfaceHolder -> r
    com.fox.exercise.CameraApp$ErrorCallback mErrorCallback -> s
    com.fox.exercise.CameraApp$ShutterCallback mShutterCallback -> t
    android.widget.ImageButton mCancelButton -> u
    android.widget.ImageButton mFlashmodeButton -> v
    android.widget.ImageButton mSwitchIdButton -> w
    com.fox.exercise.ShutterButton mCaptureButton -> x
    android.widget.Button mAdjustOrientation -> y
    int mPictureCount -> z
    java.lang.String mFlashmode -> A
    boolean mDidRegister -> B
    int mPicturesRemaining -> C
    int mTiming -> D
    android.os.Handler mHandler -> E
    android.util.DisplayMetrics metrics -> a
    android.view.Display display -> b
    boolean bCropImage -> F
    com.fox.exercise.CameraApp$AutoFocusCallback mAutoFocusCallback -> G
    int mFocusState -> H
    int keypresscount -> I
    int keyup -> J
    android.app.Dialog mProgressDialog -> K
    int mZoomState -> L
    boolean mSmoothZoomSupported -> M
    boolean mZoomSupported -> N
    int mZoomValue -> O
    int mZoomMax -> P
    int mTargetZoomValue -> Q
    float[] mInitialZoomRatios -> R
    android.widget.SeekBar mZoomBar -> S
    android.widget.RelativeLayout mZoomBarLayout -> T
    int zoom_step -> U
    int mCurProgress -> V
    boolean mCameraForGiant -> c
    boolean mCameraForHP -> d
    com.fox.exercise.CameraApp$ZoomListener mZoomListener -> W
    com.fox.exercise.OnScreenHint mStorageHint -> X
    com.fox.exercise.PreviewFrameLayout mFrameLayout -> Y
    cn.ingenic.indroidsync.SportsApp sportsApp -> Z
    android.widget.RelativeLayout mPopupLayout -> aa
    android.widget.RelativeLayout mCapturePopupLayout -> ab
    android.widget.RelativeLayout mFinishPopupLayout -> ac
    android.app.Dialog alertDialog -> ad
    int mCameraDegree -> ae
    int mCaptureDegree -> af
    android.content.SharedPreferences mCameraDegreeSharedPreferences -> ag
    android.content.SharedPreferences mCaptureDegreeSharedPreferences -> ah
    boolean isAdjustCaptureOrientation -> ai
    android.widget.ImageView mCaptureView -> aj
    android.graphics.Bitmap mCaptureBmp -> ak
    android.content.Context mContext -> al
    android.widget.RelativeLayout sports_camera_hint -> am
    boolean isForAuth -> an
    android.content.BroadcastReceiver mBatteryInfoReceiver -> ao
    android.content.BroadcastReceiver mReceiver -> ap
    void closeProgressDialog() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onBackPressed() -> onBackPressed
    boolean isCameraIdle() -> e
    void delayedOnResume() -> f
    void loadDegreeFromPref() -> g
    void updateDegreeFromPref(int) -> b
    void initRes() -> h
    void initCameraParameters() -> i
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    int roundOrientation(int) -> a
    void installIntentFilter() -> j
    void onClick(android.view.View) -> onClick
    void DisplayAdjustPrompt(boolean) -> a
    void DisplayCapturePrompt(boolean) -> b
    void AdjustCameraOrietation() -> k
    void AdjustPictureOrietation() -> l
    void FinishAdjustOrientation() -> m
    void autoFocus() -> n
    void cancelAutoFocus() -> o
    void clearFocusState() -> p
    void doFocus(boolean) -> c
    void doSnap() -> a
    void cameraStart() -> b
    void ensureCameraDevice() -> q
    void setPreviewDisplay(android.view.SurfaceHolder) -> a
    void startPreview() -> r
    void stopPreview() -> s
    void closeCamera() -> t
    android.hardware.Camera$Size getOptimalPreviewSize(java.util.List,double) -> a
    void switchCameraId(int) -> c
    void checkStorage() -> u
    int calculatePicturesRemaining() -> v
    void updateStorageHint(int) -> d
    void capture() -> w
    android.graphics.Bitmap justfyImage(java.lang.String,boolean) -> a
    void checkImageExist() -> x
    void gotoCapturePreview(android.net.Uri) -> a
    void showCameraStoppedAndFinish() -> y
    void resetScreenOn() -> z
    void keepScreenOn() -> A
    void switchFlashMode() -> B
    boolean canTakePicture() -> C
    void incrementkeypress() -> D
    int keypressvalue() -> E
    void onShutterButtonFocus(com.fox.exercise.ShutterButton,boolean) -> a
    void onShutterButtonClick(com.fox.exercise.ShutterButton) -> a
    void initializeZoom() -> F
    float[] getZoomRatios() -> G
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onZoomValueChanged(int) -> e
    void updateCameraParametersZoom() -> H
    int zoomClamp(int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void updateHint() -> I
    boolean clearHint() -> c
    android.os.Handler access$0(com.fox.exercise.CameraApp) -> a
    void access$1(com.fox.exercise.CameraApp) -> b
    void access$2(com.fox.exercise.CameraApp) -> c
    void access$3(com.fox.exercise.CameraApp) -> d
    void access$4(com.fox.exercise.CameraApp,int) -> a
    int access$5(com.fox.exercise.CameraApp) -> e
    void access$6(com.fox.exercise.CameraApp,int) -> b
    void access$7(com.fox.exercise.CameraApp) -> f
    boolean access$8(com.fox.exercise.CameraApp) -> g
    boolean access$9(com.fox.exercise.CameraApp) -> h
    android.graphics.Bitmap access$10(com.fox.exercise.CameraApp,java.lang.String,boolean) -> a
    void access$11(com.fox.exercise.CameraApp,android.graphics.Bitmap) -> a
    android.widget.ImageView access$12(com.fox.exercise.CameraApp) -> i
    android.graphics.Bitmap access$13(com.fox.exercise.CameraApp) -> j
    void access$14(com.fox.exercise.CameraApp,boolean) -> a
    void access$15(com.fox.exercise.CameraApp) -> k
    cn.ingenic.indroidsync.SportsApp access$16(com.fox.exercise.CameraApp) -> l
    void access$17(com.fox.exercise.CameraApp,android.net.Uri) -> a
    void access$18(com.fox.exercise.CameraApp) -> m
    void access$19(com.fox.exercise.CameraApp,int) -> c
    android.hardware.Camera$Parameters access$20(com.fox.exercise.CameraApp) -> n
    int access$21(com.fox.exercise.CameraApp) -> o
    int access$22(com.fox.exercise.CameraApp) -> p
    android.hardware.Camera access$23(com.fox.exercise.CameraApp) -> q
    void access$24(com.fox.exercise.CameraApp,int) -> d
com.fox.exercise.CameraApp$1 -> com.fox.exercise.av:
    com.fox.exercise.CameraApp this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.CameraApp$2 -> com.fox.exercise.aw:
    com.fox.exercise.CameraApp this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.CameraApp$3 -> com.fox.exercise.ax:
    com.fox.exercise.CameraApp this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.CameraApp$4 -> com.fox.exercise.ay:
    com.fox.exercise.CameraApp this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.CameraApp$5 -> com.fox.exercise.az:
    com.fox.exercise.CameraApp this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.CameraApp$AutoFocusCallback -> com.fox.exercise.ba:
    com.fox.exercise.CameraApp this$0 -> a
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
com.fox.exercise.CameraApp$ErrorCallback -> com.fox.exercise.bb:
    com.fox.exercise.CameraApp this$0 -> a
    void onError(int,android.hardware.Camera) -> onError
com.fox.exercise.CameraApp$JpegPictureCallback -> com.fox.exercise.bc:
    com.fox.exercise.CameraApp this$0 -> a
    void onPictureTaken(byte[],android.hardware.Camera) -> onPictureTaken
com.fox.exercise.CameraApp$JpegPictureCallback$1 -> com.fox.exercise.bd:
    com.fox.exercise.CameraApp$JpegPictureCallback this$1 -> a
    android.net.Uri val$imageUri -> b
    void run() -> run
com.fox.exercise.CameraApp$MainHandler -> com.fox.exercise.be:
    com.fox.exercise.CameraApp this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.CameraApp$MyOrientationEventListener -> com.fox.exercise.bf:
    com.fox.exercise.CameraApp this$0 -> a
    void onOrientationChanged(int) -> onOrientationChanged
com.fox.exercise.CameraApp$ShutterCallback -> com.fox.exercise.bg:
    com.fox.exercise.CameraApp this$0 -> a
    void onShutter() -> onShutter
com.fox.exercise.CameraApp$ZoomListener -> com.fox.exercise.bh:
    com.fox.exercise.CameraApp this$0 -> a
    void onZoomChange(int,boolean,android.hardware.Camera) -> onZoomChange
com.fox.exercise.CameraHardwareException -> com.fox.exercise.bi:
com.fox.exercise.CapturePreview -> com.fox.exercise.CapturePreview:
    android.widget.ImageView previewImage -> e
    android.widget.ImageView reCaptureImageView -> f
    android.widget.ImageView captureOkImageView -> g
    cn.ingenic.indroidsync.SportsApp mSportsApp -> h
    boolean mSetRegion -> i
    android.graphics.Bitmap bitmap -> j
    android.widget.LinearLayout bottom_layout -> k
    android.widget.TextView reCaptureTextView -> l
    android.widget.TextView captureOkTextView -> m
    java.lang.String imageUri -> n
    android.content.Context mContext -> o
    com.fox.exercise.CapturePreview$MainHandler mHandler -> p
    boolean isAuthentication -> q
    android.app.Dialog uploadProgressDialog -> r
    android.widget.Toast toast -> s
    boolean isFromCamera -> t
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> u
    java.lang.String pointString -> a
    int taskID -> b
    int mediaTypeID -> c
    android.content.DialogInterface$OnClickListener onselect -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initRes() -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void BmpRecycle() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.fox.exercise.CapturePreview$MainHandler access$0(com.fox.exercise.CapturePreview) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.CapturePreview) -> b
    java.lang.String access$2(com.fox.exercise.CapturePreview) -> c
    com.fox.exercise.SportsExceptionHandler access$3(com.fox.exercise.CapturePreview) -> d
    android.app.Dialog access$4(com.fox.exercise.CapturePreview) -> e
    android.widget.Toast access$5(com.fox.exercise.CapturePreview) -> f
    void access$6(com.fox.exercise.CapturePreview,android.widget.Toast) -> a
    void access$7(com.fox.exercise.CapturePreview,android.app.Dialog) -> a
com.fox.exercise.CapturePreview$1 -> com.fox.exercise.bj:
    com.fox.exercise.CapturePreview this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.CapturePreview$MainHandler -> com.fox.exercise.bk:
    com.fox.exercise.CapturePreview this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.CapturePreview$UploadThread -> com.fox.exercise.bl:
    int waitCnt -> b
    com.fox.exercise.CapturePreview this$0 -> a
    void run() -> run
com.fox.exercise.ChineseTextView -> com.fox.exercise.ChineseTextView:
    com.fox.exercise.ChineseTextView$InnerView tfView -> a
    void setText(java.lang.CharSequence) -> setText
com.fox.exercise.ChineseTextView$InnerView -> com.fox.exercise.ChineseTextView$InnerView:
    java.lang.String namespace -> b
    android.graphics.Paint mPaint -> c
    float y -> d
    float textSize -> e
    int lines -> f
    java.lang.String txt -> g
    android.widget.LinearLayout lin -> h
    com.fox.exercise.ChineseTextView this$0 -> a
    void init(android.util.AttributeSet) -> a
    void setText(java.lang.CharSequence) -> setText
    void onDraw(android.graphics.Canvas) -> onDraw
    java.lang.String[] autoSplit(java.lang.String,android.graphics.Paint,float) -> a
    float getRawSize(int,float) -> a
com.fox.exercise.ComboPreferences -> com.fox.exercise.bm:
    android.content.SharedPreferences mPrefGlobal -> a
    android.content.SharedPreferences mPrefLocal -> b
    java.util.concurrent.CopyOnWriteArrayList mListeners -> c
    java.util.WeakHashMap sMap -> d
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    android.content.SharedPreferences access$0(com.fox.exercise.ComboPreferences) -> a
    android.content.SharedPreferences access$1(com.fox.exercise.ComboPreferences) -> b
com.fox.exercise.ComboPreferences$MyEditor -> com.fox.exercise.bn:
    android.content.SharedPreferences$Editor mEditorGlobal -> b
    android.content.SharedPreferences$Editor mEditorLocal -> c
    com.fox.exercise.ComboPreferences this$0 -> a
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor clear() -> clear
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.fox.exercise.CommentListAdapter -> com.fox.exercise.bo:
    android.content.Context mContext -> a
    java.util.List mListData -> b
    com.fox.exercise.ImageDownloader mDownload -> c
    android.widget.ImageView mPic -> d
    android.widget.ImageView mGood -> e
    android.widget.TextView mName -> f
    android.widget.TextView mComment -> g
    android.widget.TextView mTime -> h
    com.fox.exercise.util.RoundedImage mHeadingImg -> i
    cn.ingenic.indroidsync.SportsApp mApp -> j
    android.widget.LinearLayout mAudioLayout -> k
    java.lang.String mSex -> l
    android.view.LayoutInflater xInflater -> m
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    java.util.List getExpressionString(android.content.Context,java.lang.String) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.CommentsActivity -> com.fox.exercise.CommentsActivity:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> a
    android.widget.Button btBack -> b
    android.widget.ListView mListView -> c
    java.util.List listFM -> d
    com.fox.exercise.api.entity.FindMore fm -> e
    java.lang.String findId -> f
    com.fox.exercise.CommentListAdapter mAdapter -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.CommentsActivity) -> a
    void access$1(com.fox.exercise.CommentsActivity,java.util.List) -> a
    java.util.List access$2(com.fox.exercise.CommentsActivity) -> b
    void access$3(com.fox.exercise.CommentsActivity,com.fox.exercise.CommentListAdapter) -> a
    android.widget.ListView access$4(com.fox.exercise.CommentsActivity) -> c
    com.fox.exercise.CommentListAdapter access$5(com.fox.exercise.CommentsActivity) -> d
    java.lang.String access$6(com.fox.exercise.CommentsActivity) -> e
    void access$7(com.fox.exercise.CommentsActivity,com.fox.exercise.api.entity.FindMore) -> a
    com.fox.exercise.api.entity.FindMore access$8(com.fox.exercise.CommentsActivity) -> f
    void access$9(com.fox.exercise.CommentsActivity,java.lang.String) -> a
com.fox.exercise.CommentsActivity$1 -> com.fox.exercise.bp:
    com.fox.exercise.CommentsActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.CommentsActivity$2 -> com.fox.exercise.bq:
    com.fox.exercise.CommentsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.CommentsActivity$GetFindMoreTask -> com.fox.exercise.br:
    com.fox.exercise.CommentsActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.CommentsActivity$GetNewCommnetListTask -> com.fox.exercise.bs:
    com.fox.exercise.CommentsActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.CommentsDetailActivity -> com.fox.exercise.CommentsDetailActivity:
    java.lang.String TAG -> r
    android.content.Context mContext -> s
    android.widget.LinearLayout mContentView -> t
    android.view.LayoutInflater mInflater -> u
    com.fox.exercise.CommentsDetailActivity$ViewHolder holder -> v
    com.fox.exercise.api.entity.UserDetail detail -> w
    com.fox.exercise.ImageDownloader mDownloader -> x
    com.fox.exercise.ImageDownloader mDownloader2 -> y
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> z
    int mItemHeight -> A
    cn.ingenic.indroidsync.SportsApp mSportsApp -> B
    com.fox.exercise.api.entity.FindMore commentItem -> C
    android.app.Dialog alertDialog -> D
    java.lang.String theFirstName -> E
    java.lang.String theSecondName -> F
    java.lang.String theTalkDetils -> G
    java.lang.String thewavComment -> H
    java.lang.String thewavDuration -> I
    java.lang.String newMessageString -> J
    java.util.List firstNameList -> K
    java.util.List commentLayout -> L
    android.view.View newView -> M
    java.lang.String[] imgStr -> N
    java.util.List imgItems -> a
    java.lang.String toNameStr -> O
    java.lang.String find_Id -> P
    java.lang.String to_Id -> Q
    int toNumber -> R
    boolean findBool -> S
    android.widget.LinearLayout findUpcommentText -> T
    android.widget.EditText findUpcommentEdittext -> U
    android.widget.Button findUpcommentSend -> V
    android.widget.Button findUnavailable -> W
    android.widget.RelativeLayout findLayout -> X
    android.widget.RelativeLayout rScrollLayout -> Y
    com.fox.exercise.util.ScrollLayout scrollLayout -> Z
    android.widget.LinearLayout imgLayout -> aa
    android.widget.LinearLayout layoutVoice -> ab
    android.widget.ImageButton findTextBtn -> ac
    android.widget.Button findPressBtn -> ad
    boolean upTypeText -> ae
    android.widget.ImageView findExpressBtn -> af
    java.lang.Boolean isShow -> ag
    int mViewCount -> ah
    int mCurSel -> ai
    int act -> b
    java.lang.String mItemFindId -> c
    int numcom -> aj
    android.widget.Button btBack -> ak
    com.fox.exercise.TitlePopup titlePopup -> al
    java.util.List imgList2 -> d
    java.util.List imgList3 -> e
    java.util.List imgList4 -> f
    java.util.List imgList5 -> g
    java.util.List imgList6 -> h
    java.util.List imgList7 -> i
    java.util.List imgList8 -> j
    java.util.List imgList9 -> k
    boolean isPause -> l
    boolean isStart -> am
    android.media.MediaPlayer mPlayer -> m
    com.fox.exercise.RecordHelper mRecorder -> an
    int currentDuration -> ao
    android.widget.ImageView wavBeginOne -> ap
    android.os.Handler mHandler -> n
    com.fox.exercise.CommentsDetailActivity$OnCheckedChangeCommentListener changeCommentListener -> aq
    com.fox.exercise.CommentsDetailActivity$OnCheckedChangeCommentListener checkListerner -> o
    android.text.TextWatcher mTextWatcher -> p
    android.app.Dialog dialog -> ar
    android.widget.AdapterView$OnItemClickListener listener -> q
    void onCreate(android.os.Bundle) -> onCreate
    void setImageVoid(int,java.lang.String[],java.util.List) -> a
    android.view.View initView(com.fox.exercise.api.entity.FindMore) -> a
    void showdeleteAllDialogs(java.lang.String) -> e
    android.view.View createCommentItemView(com.fox.exercise.api.entity.FindComment) -> a
    void send(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void showDialogs(int,int,java.lang.String) -> b
    void showAdminDialogs(int,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.List getExpressionString(android.content.Context,java.lang.String,int,int,int) -> a
    java.lang.String ToDBC(java.lang.String) -> a
    void initExpressionViews() -> a
    void onItemClick(int,int,java.lang.String) -> a
    void setOnCheckedChangeListener(com.fox.exercise.CommentsDetailActivity$OnCheckedChangeCommentListener) -> a
    void setCurPoint(int) -> a
    void initViews() -> b
    void initView() -> c
    java.lang.String filterEmoji(java.lang.String) -> b
    boolean containsEmoji(java.lang.String) -> c
    boolean isEmojiCharacter(char) -> a
    java.lang.Boolean stringFilter(java.lang.String) -> d
    void showedit() -> d
    void showUIedit() -> e
    void hideedit() -> f
    void delStr(android.widget.EditText) -> a
    void access$0(com.fox.exercise.CommentsDetailActivity,boolean) -> a
    android.content.Context access$1(com.fox.exercise.CommentsDetailActivity) -> a
    void access$2(com.fox.exercise.CommentsDetailActivity,java.lang.String) -> a
    void access$3(com.fox.exercise.CommentsDetailActivity,int) -> a
    void access$4(com.fox.exercise.CommentsDetailActivity,java.lang.String) -> b
    void access$5(com.fox.exercise.CommentsDetailActivity,java.lang.String) -> c
    boolean access$6(com.fox.exercise.CommentsDetailActivity) -> b
    void access$7(com.fox.exercise.CommentsDetailActivity,boolean) -> b
    android.widget.LinearLayout access$8(com.fox.exercise.CommentsDetailActivity) -> c
    void access$9(com.fox.exercise.CommentsDetailActivity) -> d
    android.widget.EditText access$10(com.fox.exercise.CommentsDetailActivity) -> e
    android.widget.RelativeLayout access$11(com.fox.exercise.CommentsDetailActivity) -> f
    void access$12(com.fox.exercise.CommentsDetailActivity) -> g
    android.widget.Button access$13(com.fox.exercise.CommentsDetailActivity) -> h
    android.widget.Button access$14(com.fox.exercise.CommentsDetailActivity) -> i
    void access$15(com.fox.exercise.CommentsDetailActivity,android.widget.EditText) -> a
    void access$16(com.fox.exercise.CommentsDetailActivity,java.lang.String) -> d
    com.fox.exercise.api.entity.UserDetail access$17(com.fox.exercise.CommentsDetailActivity) -> j
    void access$18(com.fox.exercise.CommentsDetailActivity,int,int,java.lang.String) -> a
    cn.ingenic.indroidsync.SportsApp access$19(com.fox.exercise.CommentsDetailActivity) -> k
    void access$20(com.fox.exercise.CommentsDetailActivity,int,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.CommentsDetailActivity$OnCheckedChangeCommentListener access$21(com.fox.exercise.CommentsDetailActivity) -> l
    android.widget.Button access$22(com.fox.exercise.CommentsDetailActivity) -> m
    com.fox.exercise.RecordHelper access$23(com.fox.exercise.CommentsDetailActivity) -> n
    android.app.Dialog access$24(com.fox.exercise.CommentsDetailActivity) -> o
    void access$25(com.fox.exercise.CommentsDetailActivity,android.app.Dialog) -> a
    android.widget.LinearLayout access$26(com.fox.exercise.CommentsDetailActivity) -> p
    java.lang.String access$27(com.fox.exercise.CommentsDetailActivity) -> q
    java.lang.String access$28(com.fox.exercise.CommentsDetailActivity) -> r
    java.lang.String access$29(com.fox.exercise.CommentsDetailActivity) -> s
    java.lang.Boolean access$30(com.fox.exercise.CommentsDetailActivity) -> t
    void access$31(com.fox.exercise.CommentsDetailActivity,java.lang.Boolean) -> a
    android.widget.RelativeLayout access$32(com.fox.exercise.CommentsDetailActivity) -> u
    boolean access$33(com.fox.exercise.CommentsDetailActivity) -> v
    void access$34(com.fox.exercise.CommentsDetailActivity,boolean) -> c
    android.widget.ImageButton access$35(com.fox.exercise.CommentsDetailActivity) -> w
    void access$36(com.fox.exercise.CommentsDetailActivity) -> x
    com.fox.exercise.TitlePopup access$37(com.fox.exercise.CommentsDetailActivity) -> y
    com.fox.exercise.api.entity.FindMore access$38(com.fox.exercise.CommentsDetailActivity) -> z
    android.app.Dialog access$39(com.fox.exercise.CommentsDetailActivity) -> A
    android.widget.ImageView access$40(com.fox.exercise.CommentsDetailActivity) -> B
    void access$41(com.fox.exercise.CommentsDetailActivity,android.widget.ImageView) -> a
    boolean access$42(com.fox.exercise.CommentsDetailActivity) -> C
    void access$43(com.fox.exercise.CommentsDetailActivity,int) -> b
    int access$44(com.fox.exercise.CommentsDetailActivity) -> D
    android.view.View access$45(com.fox.exercise.CommentsDetailActivity) -> E
    com.fox.exercise.CommentsDetailActivity$ViewHolder access$46(com.fox.exercise.CommentsDetailActivity) -> F
    void access$47(com.fox.exercise.CommentsDetailActivity,int) -> c
com.fox.exercise.CommentsDetailActivity$1 -> com.fox.exercise.bt:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.CommentsDetailActivity$10 -> com.fox.exercise.bu:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    java.lang.String val$findID -> b
    java.lang.String val$commentText -> c
    java.lang.String val$commentWav -> d
    java.lang.String val$wavDuration -> e
    java.lang.String val$toID -> f
    java.lang.String val$theFirstName -> g
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.CommentsDetailActivity$11 -> com.fox.exercise.bv:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    java.lang.String val$commentID -> b
    int val$number -> c
    void onClick(android.view.View) -> onClick
    com.fox.exercise.CommentsDetailActivity access$0(com.fox.exercise.CommentsDetailActivity$11) -> a
com.fox.exercise.CommentsDetailActivity$11$1 -> com.fox.exercise.bw:
    com.fox.exercise.CommentsDetailActivity$11 this$1 -> a
    java.lang.String val$commentID -> b
    int val$number -> c
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.CommentsDetailActivity$12 -> com.fox.exercise.bx:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.CommentsDetailActivity$13 -> com.fox.exercise.by:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    java.lang.String val$commentID -> b
    int val$number -> c
    void onClick(android.view.View) -> onClick
    com.fox.exercise.CommentsDetailActivity access$0(com.fox.exercise.CommentsDetailActivity$13) -> a
com.fox.exercise.CommentsDetailActivity$13$1 -> com.fox.exercise.bz:
    com.fox.exercise.CommentsDetailActivity$13 this$1 -> a
    java.lang.String val$commentID -> b
    int val$number -> c
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.CommentsDetailActivity$14 -> com.fox.exercise.ca:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    java.lang.String val$findID -> b
    java.lang.String val$commentID -> c
    java.lang.String val$theFirstName -> d
    void onClick(android.view.View) -> onClick
com.fox.exercise.CommentsDetailActivity$15 -> com.fox.exercise.cb:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    java.lang.String val$findIdString -> b
    int val$theBeforeGoodPeople -> c
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.CommentsDetailActivity$16 -> com.fox.exercise.cc:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void OnViewChange(int) -> a
com.fox.exercise.CommentsDetailActivity$17 -> com.fox.exercise.cd:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.fox.exercise.CommentsDetailActivity$18 -> com.fox.exercise.ce:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void run() -> run
com.fox.exercise.CommentsDetailActivity$2 -> com.fox.exercise.cf:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void OnCheckedChangeListener(java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.CommentsDetailActivity$3 -> com.fox.exercise.cg:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.CommentsDetailActivity$4 -> com.fox.exercise.ch:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.CommentsDetailActivity$5 -> com.fox.exercise.ci:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.CommentsDetailActivity$6 -> com.fox.exercise.cj:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.CommentsDetailActivity$7 -> com.fox.exercise.ck:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    java.lang.String val$findID -> b
    void onClick(android.view.View) -> onClick
    com.fox.exercise.CommentsDetailActivity access$0(com.fox.exercise.CommentsDetailActivity$7) -> a
com.fox.exercise.CommentsDetailActivity$7$1 -> com.fox.exercise.cl:
    com.fox.exercise.CommentsDetailActivity$7 this$1 -> a
    java.lang.String val$findID -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.CommentsDetailActivity$8 -> com.fox.exercise.cm:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.CommentsDetailActivity$9 -> com.fox.exercise.cn:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    java.lang.Object val$lock -> b
    java.lang.String val$mediaPath -> c
    android.widget.ImageView val$wavBegin -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.CommentsDetailActivity access$0(com.fox.exercise.CommentsDetailActivity$9) -> a
com.fox.exercise.CommentsDetailActivity$9$1 -> com.fox.exercise.co:
    com.fox.exercise.CommentsDetailActivity$9 this$1 -> a
    android.widget.ImageView val$wavBegin -> b
    java.lang.String val$mediaPath -> c
    void run() -> run
    com.fox.exercise.CommentsDetailActivity$9 access$0(com.fox.exercise.CommentsDetailActivity$9$1) -> a
com.fox.exercise.CommentsDetailActivity$9$1$1 -> com.fox.exercise.cp:
    com.fox.exercise.CommentsDetailActivity$9$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.CommentsDetailActivity$9$1$2 -> com.fox.exercise.cq:
    com.fox.exercise.CommentsDetailActivity$9$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.CommentsDetailActivity$9$1$3 -> com.fox.exercise.cr:
    com.fox.exercise.CommentsDetailActivity$9$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.CommentsDetailActivity$ExpressionImgAdapter -> com.fox.exercise.cs:
    java.util.List mList -> b
    android.content.Context mContext -> c
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.CommentsDetailActivity$ExpressionImgAdapter$ImgItem -> com.fox.exercise.ct:
    android.widget.ImageView mAppIcon -> a
    com.fox.exercise.CommentsDetailActivity$ExpressionImgAdapter this$1 -> b
com.fox.exercise.CommentsDetailActivity$OnCheckedChangeCommentListener -> com.fox.exercise.cu:
    void OnCheckedChangeListener(java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.CommentsDetailActivity$ViewHolder -> com.fox.exercise.cv:
    com.fox.exercise.util.RoundedImage otherImage -> b
    android.widget.TextView nametext -> c
    android.widget.TextView detils -> d
    android.widget.ImageView img1 -> e
    android.widget.ImageView img2 -> f
    android.widget.ImageView img3 -> g
    android.widget.ImageView img4 -> h
    android.widget.ImageView img5 -> i
    android.widget.ImageView img6 -> j
    android.widget.ImageView img7 -> k
    android.widget.ImageView img8 -> l
    android.widget.ImageView img9 -> m
    android.widget.TextView start_time -> n
    android.widget.TextView deleteText -> o
    android.widget.ImageView goodandtext -> p
    android.widget.TextView goodPeopole -> q
    android.widget.LinearLayout goodLayout -> r
    android.widget.LinearLayout commentLayout -> s
    android.view.View textgoodline -> t
    android.widget.LinearLayout textLayout -> u
    android.widget.TextView textPeopole -> v
    android.widget.LinearLayout talkdetilsLayout -> w
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void access$1(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> a
    void access$2(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> b
    void access$3(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> c
    void access$4(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> d
    void access$5(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> e
    void access$6(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> f
    void access$7(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> g
    void access$8(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> h
    void access$9(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> i
    void access$10(com.fox.exercise.CommentsDetailActivity$ViewHolder,com.fox.exercise.util.RoundedImage) -> a
    void access$11(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.TextView) -> a
    void access$12(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.TextView) -> b
    android.widget.TextView access$13(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> a
    void access$14(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.TextView) -> c
    void access$15(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.TextView) -> d
    void access$16(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.ImageView) -> j
    void access$17(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.LinearLayout) -> a
    void access$18(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.LinearLayout) -> b
    void access$19(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.TextView) -> e
    void access$20(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.view.View) -> a
    void access$21(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.LinearLayout) -> c
    void access$22(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.TextView) -> f
    void access$23(com.fox.exercise.CommentsDetailActivity$ViewHolder,android.widget.LinearLayout) -> d
    android.widget.ImageView access$24(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> b
    android.widget.ImageView access$25(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> c
    android.widget.ImageView access$26(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> d
    android.widget.ImageView access$27(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> e
    android.widget.ImageView access$28(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> f
    android.widget.ImageView access$29(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> g
    android.widget.ImageView access$30(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> h
    android.widget.ImageView access$31(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> i
    android.widget.ImageView access$32(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> j
    android.widget.TextView access$33(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> k
    com.fox.exercise.util.RoundedImage access$34(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> l
    android.widget.TextView access$35(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> m
    android.widget.ImageView access$36(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> n
    android.widget.TextView access$37(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> o
    android.widget.LinearLayout access$38(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> p
    android.widget.LinearLayout access$39(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> q
    android.widget.TextView access$40(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> r
    android.widget.LinearLayout access$41(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> s
    android.widget.TextView access$42(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> t
    android.widget.LinearLayout access$43(com.fox.exercise.CommentsDetailActivity$ViewHolder) -> u
com.fox.exercise.CommentsDetailActivity$commentOnClickListener -> com.fox.exercise.cw:
    int position -> b
    int comment_number -> c
    java.lang.String findID -> d
    java.lang.String commentID -> e
    java.lang.String theFirstName -> f
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.CommentsDetailActivity$deleteListener -> com.fox.exercise.cx:
    java.lang.String find_id -> b
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.CommentsDetailActivity$findClickListener -> com.fox.exercise.cy:
    com.fox.exercise.CommentsDetailActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onLongClick(android.view.View) -> onLongClick
    void onClick(android.view.View) -> onClick
com.fox.exercise.CoolCurrencyRules -> com.fox.exercise.cz:
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
com.fox.exercise.CoolCurrencyRulesActivity -> com.fox.exercise.CoolCurrencyRulesActivity:
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
com.fox.exercise.DaoJiShiSetting -> com.fox.exercise.DaoJiShiSetting:
    android.widget.RadioGroup mRadioGroup -> k
    android.widget.RadioButton djs_close -> l
    android.widget.RadioButton djs_3 -> m
    android.widget.RadioButton djs_5 -> n
    android.widget.RadioButton djs_10 -> o
    android.widget.CheckBox djs_remind -> p
    android.content.SharedPreferences sp -> q
    int bt_num -> r
    boolean cb_sel -> s
    android.widget.ImageButton iButton -> t
    void init() -> f
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    android.content.SharedPreferences access$0(com.fox.exercise.DaoJiShiSetting) -> a
    int access$1(com.fox.exercise.DaoJiShiSetting) -> b
    boolean access$2(com.fox.exercise.DaoJiShiSetting) -> c
    void access$3(com.fox.exercise.DaoJiShiSetting,int) -> a
    void access$4(com.fox.exercise.DaoJiShiSetting,boolean) -> a
com.fox.exercise.DaoJiShiSetting$1 -> com.fox.exercise.da:
    com.fox.exercise.DaoJiShiSetting this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.DaoJiShiSetting$2 -> com.fox.exercise.db:
    com.fox.exercise.DaoJiShiSetting this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.DaoJiShiSetting$3 -> com.fox.exercise.dc:
    com.fox.exercise.DaoJiShiSetting this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.fox.exercise.DaoJiShiSetting$4 -> com.fox.exercise.dd:
    com.fox.exercise.DaoJiShiSetting this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.fox.exercise.DingWeiList -> com.fox.exercise.DingWeiList:
    android.widget.TextView no_address -> d
    android.widget.TextView now_city -> e
    android.content.Intent mIntent -> a
    java.lang.String city -> b
    java.lang.String no_city -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.fox.exercise.DingWeiList$AddressClicklister -> com.fox.exercise.de:
    com.fox.exercise.DingWeiList this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.DingWeiList$NowAddressClicklister -> com.fox.exercise.df:
    com.fox.exercise.DingWeiList this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.DownloadBigPicTask -> com.fox.exercise.dg:
    android.content.Context mContext -> a
    java.lang.String mUrl -> b
    android.app.Dialog mDialog -> c
    void onPostExecute(java.lang.Boolean) -> a
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.DrawCardView -> com.fox.exercise.DrawCardView:
    android.graphics.Bitmap canvasBitmap -> q
    com.fox.exercise.BmpItem tempBitmap -> r
    android.graphics.Canvas canvas -> s
    float X -> t
    float Y -> u
    int mode -> a
    com.fox.exercise.BmpItem pic -> v
    float CX -> w
    float CY -> x
    boolean Begin -> y
    float[] rotalC -> b
    float[] rotalP -> c
    float[] rotalP_2 -> d
    int twoPoint -> e
    int screenW -> f
    int screenH -> g
    float preLength -> z
    float length -> A
    float preCos -> B
    float cos -> C
    boolean bool -> D
    boolean mNoCard -> E
    boolean mNoFrame -> F
    boolean canDrawText -> h
    boolean canDrag -> i
    boolean initial -> j
    android.graphics.Canvas preCanvas -> k
    com.fox.exercise.BmpItem bmp -> l
    com.fox.exercise.TextUtil textUtil -> G
    android.graphics.Bitmap mBitmapSrc -> m
    android.graphics.Bitmap mBitmapCard -> n
    java.lang.String mText -> o
    float mDensity -> H
    float mPaddingX -> I
    float mPaddingY -> J
    java.lang.String orientation -> p
    void drawCardAndText() -> a
    void setBmpSrc(android.graphics.Bitmap) -> setBmpSrc
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.graphics.Bitmap getResultBitmap() -> getResultBitmap
    float[] getT(float,float,float,float,android.graphics.Matrix) -> a
    float[] getT2(float,float,float,float,android.graphics.Matrix) -> b
    void scale(float,float,float,float,android.graphics.Matrix) -> c
    void setToO(android.graphics.Matrix) -> setToO
    float[] rotalPoint(float[],float,float,float,float,android.graphics.Matrix) -> a
    float spacing(android.view.MotionEvent) -> a
    float cos(android.view.MotionEvent) -> b
com.fox.exercise.FansAdapter -> com.fox.exercise.dh:
    android.content.Context mContext -> b
    java.util.ArrayList mFanList -> c
    android.view.LayoutInflater mInflater -> d
    com.fox.exercise.FansAdapter$ViewHolder holder -> a
    com.fox.exercise.ImageDownloader mDownloader -> e
    int DELETES -> f
    int ADDS -> g
    com.fox.exercise.FansAdapter$ChangeHandler mHandler -> h
    android.app.Dialog loadProgressDialog -> i
    android.widget.TextView message -> j
    cn.ingenic.indroidsync.SportsApp mSportsApp -> k
    android.view.View addView -> l
    int addStatus -> m
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.FansAdapter) -> a
    int access$1(com.fox.exercise.FansAdapter) -> b
    com.fox.exercise.FansAdapter$ChangeHandler access$2(com.fox.exercise.FansAdapter) -> c
    android.app.Dialog access$3(com.fox.exercise.FansAdapter) -> d
    android.view.View access$4(com.fox.exercise.FansAdapter) -> e
    android.content.Context access$5(com.fox.exercise.FansAdapter) -> f
    void access$6(com.fox.exercise.FansAdapter,android.view.View) -> a
    void access$7(com.fox.exercise.FansAdapter,int) -> a
    android.widget.TextView access$8(com.fox.exercise.FansAdapter) -> g
    java.util.ArrayList access$9(com.fox.exercise.FansAdapter) -> h
com.fox.exercise.FansAdapter$1 -> com.fox.exercise.di:
    com.fox.exercise.FansAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.FansAdapter$ChangeHandler -> com.fox.exercise.dj:
    com.fox.exercise.FansAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.FansAdapter$ChangeThread -> com.fox.exercise.dk:
    int uid -> b
    int status -> c
    com.fox.exercise.FansAdapter this$0 -> a
    void run() -> run
com.fox.exercise.FansAdapter$ViewHolder -> com.fox.exercise.dl:
    com.fox.exercise.util.RoundedImage iconImg -> b
    android.widget.TextView nameTxt -> c
    android.widget.Button followBtn -> d
    com.fox.exercise.FansAdapter this$0 -> a
    void access$1(com.fox.exercise.FansAdapter$ViewHolder,android.widget.TextView) -> a
    void access$2(com.fox.exercise.FansAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> a
    void access$3(com.fox.exercise.FansAdapter$ViewHolder,android.widget.Button) -> a
    com.fox.exercise.util.RoundedImage access$4(com.fox.exercise.FansAdapter$ViewHolder) -> a
    android.widget.TextView access$5(com.fox.exercise.FansAdapter$ViewHolder) -> b
    android.widget.Button access$6(com.fox.exercise.FansAdapter$ViewHolder) -> c
com.fox.exercise.FansListActivity -> com.fox.exercise.FansListActivity:
    com.fox.exercise.view.PullToRefreshListView mPullRefreshListView -> k
    boolean startAddMore -> l
    android.widget.ListView mFanListView -> m
    android.content.Context context -> n
    com.fox.exercise.FansAdapter mListAdapter -> o
    android.app.Dialog loadProgressDialog -> p
    int mNumber -> q
    int type -> r
    boolean mIsFresh -> s
    java.util.ArrayList mBuffList -> t
    java.util.ArrayList mList -> u
    int times -> v
    com.fox.exercise.FansListActivity$FansListHandler mHandler -> w
    int userID -> x
    int total -> y
    cn.ingenic.indroidsync.SportsApp mSportsApp -> z
    long preTime -> A
    android.widget.AdapterView$OnItemClickListener listViewClick -> B
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void onStart() -> onStart
    void initViews() -> f
    void initdata() -> g
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.FansListActivity) -> a
    android.content.Context access$1(com.fox.exercise.FansListActivity) -> b
    java.util.ArrayList access$2(com.fox.exercise.FansListActivity) -> c
    int access$3(com.fox.exercise.FansListActivity) -> d
    int access$4(com.fox.exercise.FansListActivity) -> e
    void access$5(com.fox.exercise.FansListActivity,int) -> a
    boolean access$6(com.fox.exercise.FansListActivity) -> f
    void access$7(com.fox.exercise.FansListActivity,java.util.ArrayList) -> a
    java.util.ArrayList access$8(com.fox.exercise.FansListActivity) -> g
    com.fox.exercise.FansListActivity$FansListHandler access$9(com.fox.exercise.FansListActivity) -> h
    boolean access$10(com.fox.exercise.FansListActivity) -> i
    com.fox.exercise.FansAdapter access$11(com.fox.exercise.FansListActivity) -> j
    com.fox.exercise.view.PullToRefreshListView access$12(com.fox.exercise.FansListActivity) -> k
    void access$13(com.fox.exercise.FansListActivity,boolean) -> a
    void access$14(com.fox.exercise.FansListActivity,com.fox.exercise.FansAdapter) -> a
    android.widget.ListView access$15(com.fox.exercise.FansListActivity) -> l
    void access$16(com.fox.exercise.FansListActivity,boolean) -> b
    android.app.Dialog access$17(com.fox.exercise.FansListActivity) -> m
    int access$18(com.fox.exercise.FansListActivity) -> n
    void access$19(com.fox.exercise.FansListActivity,int) -> b
    int access$20(com.fox.exercise.FansListActivity) -> o
com.fox.exercise.FansListActivity$1 -> com.fox.exercise.dm:
    com.fox.exercise.FansListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.FansListActivity$2 -> com.fox.exercise.dn:
    com.fox.exercise.FansListActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.FansListActivity$FansListHandler -> com.fox.exercise.do:
    com.fox.exercise.FansListActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.FansListActivity$GetListThread -> com.fox.exercise.dp:
    int times -> b
    int uid -> c
    com.fox.exercise.FansListActivity this$0 -> a
    void run() -> run
com.fox.exercise.FileCache -> com.fox.exercise.dq:
    java.lang.String LOG_TAG -> a
    java.io.File cacheDir -> b
    java.io.File getFromFileCache(java.lang.String) -> a
    java.lang.String urlToFileName(java.lang.String) -> b
com.fox.exercise.FindFriendsSendMsg -> com.fox.exercise.FindFriendsSendMsg:
    java.util.List actionLists -> p
    java.util.List actionLists_all -> q
    java.util.List activityNameList -> r
    java.util.List activitySendId -> s
    java.util.List activityIdList -> t
    java.util.List title_action -> u
    java.lang.StringBuilder sb -> v
    java.lang.StringBuilder sb5 -> w
    java.lang.String sb_1 -> x
    java.lang.String sb_5 -> y
    cn.ingenic.indroidsync.SportsApp mSportsApp -> z
    android.app.Activity mContext -> A
    android.widget.GridView gridview_send_image -> B
    android.widget.MultiAutoCompleteTextView et_send_mean -> C
    android.widget.TextView tv_city_send -> D
    android.content.SharedPreferences spf -> E
    android.widget.LinearLayout myView -> F
    android.widget.PopupWindow myWindow -> G
    android.widget.RelativeLayout pop_menu_background -> H
    android.widget.LinearLayout ll_auto -> I
    java.util.ArrayList list_bitmap_path_upload -> J
    java.lang.String method_str -> K
    java.lang.String city_name -> L
    com.fox.exercise.FindFriendsSendMsg$GridAdapter adapter -> M
    int width -> k
    int height -> l
    android.widget.GridView mGridView -> N
    int FRESH_LIST -> O
    int FRESH_FAILED -> P
    int FRESH_NULL -> Q
    java.util.List lCats -> R
    com.fox.exercise.FindFriendsSendMsg$MyAdapter myAdapter -> S
    java.util.Map topiccatMap -> T
    android.widget.TextView message -> U
    android.widget.RadioButton qq_share_checkbox -> V
    android.widget.RadioButton weixin_share_checkbox -> W
    android.widget.RadioButton weixinfriends_share_checkbox -> X
    com.tencent.tauth.Tencent mTencent -> Y
    com.tencent.mm.sdk.openapi.IWXAPI api -> Z
    com.fox.exercise.ImageDownloader mDownloader -> aa
    com.fox.exercise.api.entity.AddFindItem back -> ab
    java.lang.String[] result_about_a -> m
    android.os.Handler pHandler -> ac
    java.lang.String title_name -> ad
    boolean isUpLoad -> ae
    java.lang.Runnable r -> n
    android.os.Handler mHandler -> af
    android.app.Dialog mLoadProgressDialog -> o
    java.lang.String path -> ag
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void init() -> i
    void onClick(android.view.View) -> onClick
    void shotSelectImages() -> f
    void onDismiss() -> onDismiss
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showDialog(java.lang.String) -> b
    void onRestart() -> onRestart
    void photo() -> g
    void onClickQQShare(com.fox.exercise.api.entity.AddFindItem) -> a
    void shareToWeixin(int,com.fox.exercise.api.entity.AddFindItem) -> a
    void share2weixin(int,com.fox.exercise.api.entity.AddFindItem) -> b
    void onCancel() -> h
    void onComplete(java.lang.Object) -> a
    void onError(com.tencent.tauth.UiError) -> a
    void ToShare(com.fox.exercise.api.entity.AddFindItem) -> b
    int getActivityId(java.lang.String) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.os.Handler access$0(com.fox.exercise.FindFriendsSendMsg) -> a
    void access$1(com.fox.exercise.FindFriendsSendMsg,boolean) -> a
    void access$2(com.fox.exercise.FindFriendsSendMsg,com.fox.exercise.api.entity.AddFindItem) -> a
    com.fox.exercise.api.entity.AddFindItem access$3(com.fox.exercise.FindFriendsSendMsg) -> b
    java.lang.String access$4(com.fox.exercise.FindFriendsSendMsg) -> c
    java.util.Map access$5(com.fox.exercise.FindFriendsSendMsg) -> d
    java.util.List access$6(com.fox.exercise.FindFriendsSendMsg) -> e
    android.widget.TextView access$7(com.fox.exercise.FindFriendsSendMsg) -> f
    cn.ingenic.indroidsync.SportsApp access$8(com.fox.exercise.FindFriendsSendMsg) -> g
    java.util.ArrayList access$9(com.fox.exercise.FindFriendsSendMsg) -> h
    void access$10(com.fox.exercise.FindFriendsSendMsg,com.fox.exercise.api.entity.AddFindItem) -> b
    void access$11(com.fox.exercise.FindFriendsSendMsg,java.util.List) -> a
    com.fox.exercise.FindFriendsSendMsg$MyAdapter access$12(com.fox.exercise.FindFriendsSendMsg) -> i
    android.app.Activity access$13(com.fox.exercise.FindFriendsSendMsg) -> j
    java.util.List access$14(com.fox.exercise.FindFriendsSendMsg) -> k
    java.util.List access$15(com.fox.exercise.FindFriendsSendMsg) -> l
    java.util.List access$16(com.fox.exercise.FindFriendsSendMsg) -> m
    java.lang.String access$17(com.fox.exercise.FindFriendsSendMsg) -> n
    com.fox.exercise.FindFriendsSendMsg$GridAdapter access$18(com.fox.exercise.FindFriendsSendMsg) -> o
    android.os.Handler access$19(com.fox.exercise.FindFriendsSendMsg) -> p
    java.lang.String access$20(com.fox.exercise.FindFriendsSendMsg) -> q
    java.lang.String access$21(com.fox.exercise.FindFriendsSendMsg) -> r
    void access$22(com.fox.exercise.FindFriendsSendMsg,java.lang.String) -> a
    void access$23(com.fox.exercise.FindFriendsSendMsg,int,com.fox.exercise.api.entity.AddFindItem) -> a
com.fox.exercise.FindFriendsSendMsg$1 -> com.fox.exercise.dr:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    void run() -> run
com.fox.exercise.FindFriendsSendMsg$10 -> com.fox.exercise.ds:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    com.fox.exercise.api.entity.AddFindItem val$back -> b
    void run() -> run
com.fox.exercise.FindFriendsSendMsg$2 -> com.fox.exercise.dt:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.FindFriendsSendMsg$3 -> com.fox.exercise.du:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.FindFriendsSendMsg$4 -> com.fox.exercise.dv:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.FindFriendsSendMsg$5 -> com.fox.exercise.dw:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    java.lang.StringBuffer val$topiccat -> b
    void run() -> run
com.fox.exercise.FindFriendsSendMsg$6 -> com.fox.exercise.dx:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    java.lang.StringBuffer val$topiccat -> b
    void run() -> run
com.fox.exercise.FindFriendsSendMsg$7 -> com.fox.exercise.dy:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    java.lang.StringBuffer val$topiccat -> b
    void run() -> run
com.fox.exercise.FindFriendsSendMsg$8 -> com.fox.exercise.dz:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.FindFriendsSendMsg$9 -> com.fox.exercise.ea:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    com.fox.exercise.api.entity.AddFindItem val$back -> b
    void run() -> run
com.fox.exercise.FindFriendsSendMsg$DingWeiLister -> com.fox.exercise.eb:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindFriendsSendMsg$GetActionDataTask -> com.fox.exercise.ec:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindFriendsSendMsg$GetActionDataTask2 -> com.fox.exercise.ed:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindFriendsSendMsg$GetActionDataTask3 -> com.fox.exercise.ee:
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindFriendsSendMsg$GridAdapter -> com.fox.exercise.ef:
    android.view.LayoutInflater inflater -> c
    int selectedPosition -> d
    android.os.Handler handler -> a
    com.fox.exercise.FindFriendsSendMsg this$0 -> b
    void update() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void loading() -> b
    com.fox.exercise.FindFriendsSendMsg access$0(com.fox.exercise.FindFriendsSendMsg$GridAdapter) -> a
com.fox.exercise.FindFriendsSendMsg$GridAdapter$1 -> com.fox.exercise.eg:
    com.fox.exercise.FindFriendsSendMsg$GridAdapter this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.FindFriendsSendMsg$GridAdapter$2 -> com.fox.exercise.eh:
    com.fox.exercise.FindFriendsSendMsg$GridAdapter this$1 -> a
    void run() -> run
com.fox.exercise.FindFriendsSendMsg$GridAdapter$ViewHolder -> com.fox.exercise.ei:
    android.widget.ImageView image -> a
    com.fox.exercise.FindFriendsSendMsg$GridAdapter this$1 -> b
com.fox.exercise.FindFriendsSendMsg$MyAdapter -> com.fox.exercise.ej:
    android.content.Context context -> b
    com.fox.exercise.FindFriendsSendMsg this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.FindFriendsSendMsg$MyCheckedChangeListener -> com.fox.exercise.ek:
    int position -> a
    java.lang.String content -> b
    com.fox.exercise.FindFriendsSendMsg this$0 -> c
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.fox.exercise.FindMeActivity -> com.fox.exercise.FindMeActivity:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> n
    com.fox.exercise.view.PullToRefreshListView mPullSearchListView -> o
    android.widget.ListView mListView -> p
    android.app.Dialog mLoadProgressDialog -> q
    android.app.Dialog dialog -> r
    android.widget.TextView mDialogMessage -> s
    int FRESH_LIST -> t
    int FRESH_FAILED -> u
    int FRESH_DONE -> v
    int FRESH_NULL -> w
    int times -> x
    com.fox.exercise.FindMeAdapter sportsfindmeAdapter -> y
    java.util.ArrayList mList -> z
    java.util.ArrayList mNewList -> A
    android.widget.ImageView img_background -> B
    android.widget.LinearLayout roundimg_layout -> C
    com.fox.exercise.FindMeActivity$SportsFindMeHandler msportsFindMeHandler -> k
    android.widget.TextView myNameText -> D
    com.fox.exercise.util.RoundedImage userPhoto -> E
    com.fox.exercise.pedometer.ImageWorkManager mImageWorkerMan_Icon -> F
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker_Icon -> G
    com.fox.exercise.api.entity.UserDetail detail -> H
    android.widget.ImageButton iView -> I
    int iViewId -> J
    com.fox.exercise.RecordHelper mRecorder -> K
    android.widget.ImageButton findTextBtn -> L
    android.widget.Button findPressBtn -> M
    boolean upTypeText -> N
    android.widget.LinearLayout layoutVoice -> O
    android.widget.RelativeLayout findLayout -> P
    android.widget.RelativeLayout rScrollLayout -> Q
    com.fox.exercise.util.ScrollLayout scrollLayout -> R
    android.widget.LinearLayout imgLayout -> S
    android.widget.ImageView findExpressBtn -> T
    java.util.List imgItems -> U
    int mViewCount -> V
    int mCurSel -> W
    java.lang.String[] imgStr -> X
    java.lang.Boolean isShow -> Y
    android.widget.LinearLayout findUpcommentText -> Z
    android.widget.EditText findUpcommentEdittext -> aa
    android.widget.Button findUpcommentSend -> ab
    android.widget.Button findUnavailable -> ac
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> ad
    int listPosition -> ae
    int toNumber -> af
    java.lang.String toNameStr -> ag
    java.lang.String find_Id -> ah
    java.lang.String to_Id -> ai
    boolean findBool -> aj
    com.fox.exercise.publish.SendMsgDetail self -> ak
    int bg_width -> al
    int bg_height -> am
    int screen_width -> an
    int screen_height -> ao
    com.fox.exercise.ImageDownloader bg_Downloader -> ap
    java.lang.String bg_urlString -> aq
    android.app.Dialog waitProgressDialog -> ar
    int marknumber -> as
    android.content.Context context -> at
    java.lang.String FACE_PATH -> au
    android.widget.LinearLayout myView -> av
    android.widget.PopupWindow myWindow -> aw
    android.widget.RelativeLayout pop_menu_background -> ax
    android.widget.LinearLayout messageLinearLayout -> ay
    android.text.TextWatcher mTextWatcher -> l
    android.widget.AdapterView$OnItemClickListener listener -> m
    android.graphics.drawable.BitmapDrawable drawable -> az
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void init() -> j
    void initPortrait() -> k
    void setViewStatus() -> b
    void showedit() -> l
    void showUIedit() -> m
    void hideedit() -> n
    java.lang.Boolean stringFilter(java.lang.String) -> a
    java.lang.String filterEmoji(java.lang.String) -> b
    boolean containsEmoji(java.lang.String) -> c
    boolean isEmojiCharacter(char) -> a
    void initViews() -> f
    void initViewExpression() -> g
    void setCurPoint(int) -> b
    void delStr(android.widget.EditText) -> a
    void showWaitDialog(java.lang.String) -> d
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    android.view.View getViewByPosition(int,android.widget.ListView) -> a
    void scrollVertical(int) -> c
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void shotSelectImages() -> h
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri) -> a
    void getImageToView(android.content.Intent) -> b
    android.graphics.Bitmap decodeUriAsBitmap(android.net.Uri) -> b
    void waitShowDialog() -> o
    void onDismiss() -> onDismiss
    android.widget.EditText access$0(com.fox.exercise.FindMeActivity) -> a
    android.widget.Button access$1(com.fox.exercise.FindMeActivity) -> b
    android.widget.Button access$2(com.fox.exercise.FindMeActivity) -> c
    void access$3(com.fox.exercise.FindMeActivity,android.widget.EditText) -> a
    android.widget.Button access$4(com.fox.exercise.FindMeActivity) -> d
    com.fox.exercise.RecordHelper access$5(com.fox.exercise.FindMeActivity) -> e
    android.app.Dialog access$6(com.fox.exercise.FindMeActivity) -> f
    void access$7(com.fox.exercise.FindMeActivity,android.app.Dialog) -> a
    android.widget.LinearLayout access$8(com.fox.exercise.FindMeActivity) -> g
    com.fox.exercise.FindMeAdapter access$9(com.fox.exercise.FindMeActivity) -> h
    int access$10(com.fox.exercise.FindMeActivity) -> i
    java.lang.String access$11(com.fox.exercise.FindMeActivity) -> j
    java.lang.String access$12(com.fox.exercise.FindMeActivity) -> k
    java.lang.String access$13(com.fox.exercise.FindMeActivity) -> l
    android.widget.LinearLayout access$14(com.fox.exercise.FindMeActivity) -> m
    void access$15(com.fox.exercise.FindMeActivity) -> n
    java.lang.Boolean access$16(com.fox.exercise.FindMeActivity) -> o
    void access$17(com.fox.exercise.FindMeActivity,java.lang.Boolean) -> a
    android.widget.RelativeLayout access$18(com.fox.exercise.FindMeActivity) -> p
    boolean access$19(com.fox.exercise.FindMeActivity) -> q
    void access$20(com.fox.exercise.FindMeActivity,boolean) -> a
    android.widget.ImageButton access$21(com.fox.exercise.FindMeActivity) -> r
    void access$22(com.fox.exercise.FindMeActivity) -> s
    android.widget.RelativeLayout access$23(com.fox.exercise.FindMeActivity) -> t
    int access$24(com.fox.exercise.FindMeActivity) -> u
    android.widget.ListView access$25(com.fox.exercise.FindMeActivity) -> v
    android.content.Context access$26(com.fox.exercise.FindMeActivity) -> w
    java.util.ArrayList access$27(com.fox.exercise.FindMeActivity) -> x
    cn.ingenic.indroidsync.SportsApp access$28(com.fox.exercise.FindMeActivity) -> y
    java.util.List access$29(com.fox.exercise.FindMeActivity) -> z
    void access$30(com.fox.exercise.FindMeActivity,com.fox.exercise.FindMeAdapter) -> a
    void access$31(com.fox.exercise.FindMeActivity,int) -> a
    void access$32(com.fox.exercise.FindMeActivity,java.lang.String) -> a
    void access$33(com.fox.exercise.FindMeActivity,int) -> b
    void access$34(com.fox.exercise.FindMeActivity,java.lang.String) -> b
    void access$35(com.fox.exercise.FindMeActivity,java.lang.String) -> c
    boolean access$36(com.fox.exercise.FindMeActivity) -> A
    void access$37(com.fox.exercise.FindMeActivity,boolean) -> b
    void access$38(com.fox.exercise.FindMeActivity) -> B
    com.fox.exercise.view.PullToRefreshListView access$39(com.fox.exercise.FindMeActivity) -> C
    android.app.Dialog access$40(com.fox.exercise.FindMeActivity) -> D
    android.view.View access$41(com.fox.exercise.FindMeActivity,int,android.widget.ListView) -> a
    void access$42(com.fox.exercise.FindMeActivity,int) -> c
    com.fox.exercise.api.entity.UserDetail access$43(com.fox.exercise.FindMeActivity) -> E
    void access$44(com.fox.exercise.FindMeActivity,int) -> d
    void access$45(com.fox.exercise.FindMeActivity,int) -> e
    java.lang.Object access$46(com.fox.exercise.FindMeActivity,java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
    java.lang.String access$47() -> i
    android.app.Dialog access$48(com.fox.exercise.FindMeActivity) -> F
    void access$49(com.fox.exercise.FindMeActivity,android.graphics.drawable.BitmapDrawable) -> a
    android.widget.ImageView access$50(com.fox.exercise.FindMeActivity) -> G
    android.graphics.drawable.BitmapDrawable access$51(com.fox.exercise.FindMeActivity) -> H
com.fox.exercise.FindMeActivity$1 -> com.fox.exercise.el:
    com.fox.exercise.FindMeActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.FindMeActivity$10 -> com.fox.exercise.em:
    com.fox.exercise.FindMeActivity this$0 -> a
    android.graphics.Bitmap val$bitmap -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindMeActivity$2 -> com.fox.exercise.en:
    com.fox.exercise.FindMeActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.FindMeActivity$3 -> com.fox.exercise.eo:
    com.fox.exercise.FindMeActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.FindMeActivity$4 -> com.fox.exercise.ep:
    com.fox.exercise.FindMeActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.fox.exercise.FindMeActivity$5 -> com.fox.exercise.eq:
    com.fox.exercise.FindMeActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.FindMeActivity$6 -> com.fox.exercise.er:
    com.fox.exercise.FindMeActivity this$0 -> a
    void run() -> run
com.fox.exercise.FindMeActivity$7 -> com.fox.exercise.es:
    com.fox.exercise.FindMeActivity this$0 -> a
    void OnViewChange(int) -> a
com.fox.exercise.FindMeActivity$8 -> com.fox.exercise.et:
    com.fox.exercise.FindMeActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.fox.exercise.FindMeActivity$9 -> com.fox.exercise.eu:
    com.fox.exercise.FindMeActivity this$0 -> a
    int val$y -> b
    void run() -> run
com.fox.exercise.FindMeActivity$ExpressionImgAdapter -> com.fox.exercise.ev:
    java.util.List mList -> b
    android.content.Context mContext -> c
    com.fox.exercise.FindMeActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.FindMeActivity$ExpressionImgAdapter$ImgItem -> com.fox.exercise.ew:
    android.widget.ImageView mAppIcon -> a
    com.fox.exercise.FindMeActivity$ExpressionImgAdapter this$1 -> b
com.fox.exercise.FindMeActivity$SportsFindMeHandler -> com.fox.exercise.ex:
    com.fox.exercise.FindMeActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void scrollToComment(int) -> a
    void access$0(com.fox.exercise.FindMeActivity$SportsFindMeHandler,int) -> a
    com.fox.exercise.FindMeActivity access$1(com.fox.exercise.FindMeActivity$SportsFindMeHandler) -> a
com.fox.exercise.FindMeActivity$SportsFindMeHandler$1 -> com.fox.exercise.ey:
    com.fox.exercise.FindMeActivity$SportsFindMeHandler this$1 -> a
    void OnCheckedChangeListener(int,java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.FindMeActivity$SportsFindMeHandler$2 -> com.fox.exercise.ez:
    com.fox.exercise.FindMeActivity$SportsFindMeHandler this$1 -> a
    void OnCheckedChangeListener(int,java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.FindMeActivity$SportsFindMeHandler$3 -> com.fox.exercise.fa:
    com.fox.exercise.FindMeActivity$SportsFindMeHandler this$1 -> a
    android.graphics.Rect val$mrect -> b
    void run() -> run
com.fox.exercise.FindMeActivity$SportsFindMeThread -> com.fox.exercise.fb:
    long startTime -> b
    com.fox.exercise.FindMeActivity this$0 -> a
    void run() -> run
com.fox.exercise.FindMeActivity$findClickListener -> com.fox.exercise.fc:
    com.fox.exercise.FindMeActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onLongClick(android.view.View) -> onLongClick
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindMeAdapter -> com.fox.exercise.fd:
    android.app.Dialog waitProgressDialog -> p
    com.fox.exercise.FindMeAdapter$ViewHolder holder -> a
    android.content.Context mContext -> q
    android.os.Handler findmHandler -> r
    java.util.ArrayList mList -> s
    cn.ingenic.indroidsync.SportsApp mSportsApp -> t
    android.view.LayoutInflater mInflater -> u
    com.fox.exercise.ImageDownloader mDownloader -> v
    com.fox.exercise.ImageDownloader mDownloader2 -> w
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> x
    int mItemHeight -> y
    android.app.Dialog loadProgressDialog -> z
    android.widget.TextView message -> A
    java.util.List imgList2 -> b
    java.util.List imgList3 -> c
    java.util.List imgList4 -> d
    java.util.List imgList5 -> e
    java.util.List imgList6 -> f
    java.util.List imgList7 -> g
    java.util.List imgList8 -> h
    java.util.List imgList9 -> i
    int type -> j
    java.lang.String[] urls -> k
    android.app.Dialog alertDialog -> B
    com.fox.exercise.api.entity.UserDetail detail -> C
    java.lang.String masterName -> D
    android.widget.PopupWindow mPopWindow -> l
    com.fox.exercise.TitlePopup titlePopup -> E
    android.widget.ImageView wavBeginOne -> F
    java.lang.String theFirstName -> G
    java.lang.String theSecondName -> H
    java.lang.String theTalkDetils -> I
    java.lang.String thewavComment -> J
    java.lang.String thewavDuration -> K
    java.lang.String newMessageString -> L
    java.util.List firstNameList -> M
    java.util.List commentLayout -> N
    android.view.View newView -> O
    android.view.LayoutInflater xInflater -> P
    java.util.List imgItems -> Q
    int numcom -> R
    boolean isPause -> m
    boolean isStart -> S
    android.media.MediaPlayer mPlayer -> n
    com.fox.exercise.RecordHelper mRecorder -> T
    int currentDuration -> U
    com.fox.exercise.FindMeAdapter$OnCheckedChangeCommentListener changeCommentListener -> V
    android.os.Handler mHandler -> o
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void showWaitDialog(java.lang.String) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setImageVoid(int,int,java.util.List) -> a
    void send(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void showdeleteAllDialogs(java.lang.String,int) -> a
    void showDialogs(int,int,java.lang.String) -> b
    void onItemClick(int,int,java.lang.String) -> a
    void setOnCheckedChangeListener(com.fox.exercise.FindMeAdapter$OnCheckedChangeCommentListener) -> a
    java.util.List getExpressionString(android.content.Context,java.lang.String,int,int,int) -> a
    void access$0(com.fox.exercise.FindMeAdapter,boolean) -> a
    android.content.Context access$1(com.fox.exercise.FindMeAdapter) -> a
    cn.ingenic.indroidsync.SportsApp access$2(com.fox.exercise.FindMeAdapter) -> b
    com.fox.exercise.api.entity.UserDetail access$3(com.fox.exercise.FindMeAdapter) -> c
    void access$4(com.fox.exercise.FindMeAdapter,int,int,java.lang.String) -> a
    com.fox.exercise.FindMeAdapter$OnCheckedChangeCommentListener access$5(com.fox.exercise.FindMeAdapter) -> d
    java.util.ArrayList access$6(com.fox.exercise.FindMeAdapter) -> e
    void access$7(com.fox.exercise.FindMeAdapter,java.lang.String,int) -> a
    android.os.Handler access$8(com.fox.exercise.FindMeAdapter) -> f
    com.fox.exercise.TitlePopup access$9(com.fox.exercise.FindMeAdapter) -> g
    android.widget.ImageView access$10(com.fox.exercise.FindMeAdapter) -> h
    void access$11(com.fox.exercise.FindMeAdapter,android.widget.ImageView) -> a
    boolean access$12(com.fox.exercise.FindMeAdapter) -> i
    com.fox.exercise.RecordHelper access$13(com.fox.exercise.FindMeAdapter) -> j
    void access$14(com.fox.exercise.FindMeAdapter,int) -> a
    int access$15(com.fox.exercise.FindMeAdapter) -> k
    android.app.Dialog access$16(com.fox.exercise.FindMeAdapter) -> l
    android.app.Dialog access$17(com.fox.exercise.FindMeAdapter) -> m
    void access$18(com.fox.exercise.FindMeAdapter,java.lang.String) -> a
com.fox.exercise.FindMeAdapter$1 -> com.fox.exercise.fe:
    com.fox.exercise.FindMeAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.FindMeAdapter$2 -> com.fox.exercise.ff:
    com.fox.exercise.FindMeAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindMeAdapter$3 -> com.fox.exercise.fg:
    com.fox.exercise.FindMeAdapter this$0 -> a
    java.lang.Object val$lock -> b
    java.lang.String val$mediaPath -> c
    android.widget.ImageView val$wavBegin -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindMeAdapter access$0(com.fox.exercise.FindMeAdapter$3) -> a
com.fox.exercise.FindMeAdapter$3$1 -> com.fox.exercise.fh:
    com.fox.exercise.FindMeAdapter$3 this$1 -> a
    android.widget.ImageView val$wavBegin -> b
    java.lang.String val$mediaPath -> c
    void run() -> run
    com.fox.exercise.FindMeAdapter$3 access$0(com.fox.exercise.FindMeAdapter$3$1) -> a
com.fox.exercise.FindMeAdapter$3$1$1 -> com.fox.exercise.fi:
    com.fox.exercise.FindMeAdapter$3$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.FindMeAdapter$3$1$2 -> com.fox.exercise.fj:
    com.fox.exercise.FindMeAdapter$3$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.FindMeAdapter$3$1$3 -> com.fox.exercise.fk:
    com.fox.exercise.FindMeAdapter$3$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.FindMeAdapter$4 -> com.fox.exercise.fl:
    com.fox.exercise.FindMeAdapter this$0 -> a
    java.lang.String val$findID -> b
    java.lang.String val$commentText -> c
    java.lang.String val$commentWav -> d
    java.lang.String val$wavDuration -> e
    java.lang.String val$toID -> f
    java.lang.String val$theFirstName -> g
    int val$position -> h
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindMeAdapter$5 -> com.fox.exercise.fm:
    com.fox.exercise.FindMeAdapter this$0 -> a
    java.lang.String val$findID -> b
    int val$list_position -> c
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindMeAdapter access$0(com.fox.exercise.FindMeAdapter$5) -> a
com.fox.exercise.FindMeAdapter$5$1 -> com.fox.exercise.fn:
    com.fox.exercise.FindMeAdapter$5 this$1 -> a
    java.lang.String val$findID -> b
    int val$list_position -> c
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindMeAdapter$6 -> com.fox.exercise.fo:
    com.fox.exercise.FindMeAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindMeAdapter$7 -> com.fox.exercise.fp:
    com.fox.exercise.FindMeAdapter this$0 -> a
    java.lang.String val$commentID -> b
    int val$position -> c
    int val$number -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindMeAdapter access$0(com.fox.exercise.FindMeAdapter$7) -> a
com.fox.exercise.FindMeAdapter$7$1 -> com.fox.exercise.fq:
    com.fox.exercise.FindMeAdapter$7 this$1 -> a
    java.lang.String val$commentID -> b
    int val$position -> c
    int val$number -> d
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindMeAdapter$8 -> com.fox.exercise.fr:
    com.fox.exercise.FindMeAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindMeAdapter$9 -> com.fox.exercise.fs:
    com.fox.exercise.FindMeAdapter this$0 -> a
    int val$list_positon -> b
    java.lang.String val$findIdString -> c
    int val$theBeforeGoodPeople -> d
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindMeAdapter$OnCheckedChangeCommentListener -> com.fox.exercise.ft:
    void OnCheckedChangeListener(int,java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.FindMeAdapter$ViewHolder -> com.fox.exercise.fu:
    com.fox.exercise.util.RoundedImage otherImage -> b
    android.widget.TextView nametext -> c
    android.widget.TextView detils -> d
    android.widget.ImageView img1 -> e
    android.widget.ImageView img2 -> f
    android.widget.ImageView img3 -> g
    android.widget.ImageView img4 -> h
    android.widget.ImageView img5 -> i
    android.widget.ImageView img6 -> j
    android.widget.ImageView img7 -> k
    android.widget.ImageView img8 -> l
    android.widget.ImageView img9 -> m
    android.widget.TextView start_time -> n
    android.widget.TextView deleteText -> o
    android.widget.ImageView goodandtext -> p
    android.widget.TextView goodPeopole -> q
    android.widget.LinearLayout goodLayout -> r
    android.widget.LinearLayout commentLayout -> s
    android.view.View textgoodline -> t
    android.widget.LinearLayout textLayout -> u
    android.widget.TextView textPeopole -> v
    android.widget.LinearLayout talkdetilsLayout -> w
    com.fox.exercise.FindMeAdapter this$0 -> a
    void access$1(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$2(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> b
    void access$3(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> c
    void access$4(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> d
    void access$5(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> e
    void access$6(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> f
    void access$7(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> g
    void access$8(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> h
    void access$9(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> i
    void access$10(com.fox.exercise.FindMeAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> a
    void access$11(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.TextView) -> a
    void access$12(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.TextView) -> b
    android.widget.TextView access$13(com.fox.exercise.FindMeAdapter$ViewHolder) -> a
    void access$14(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.TextView) -> c
    void access$15(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.TextView) -> d
    void access$16(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.ImageView) -> j
    void access$17(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.LinearLayout) -> a
    void access$18(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.LinearLayout) -> b
    void access$19(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.TextView) -> e
    void access$20(com.fox.exercise.FindMeAdapter$ViewHolder,android.view.View) -> a
    void access$21(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.LinearLayout) -> c
    void access$22(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.TextView) -> f
    void access$23(com.fox.exercise.FindMeAdapter$ViewHolder,android.widget.LinearLayout) -> d
    android.widget.LinearLayout access$24(com.fox.exercise.FindMeAdapter$ViewHolder) -> b
    android.widget.ImageView access$25(com.fox.exercise.FindMeAdapter$ViewHolder) -> c
    android.widget.ImageView access$26(com.fox.exercise.FindMeAdapter$ViewHolder) -> d
    android.widget.ImageView access$27(com.fox.exercise.FindMeAdapter$ViewHolder) -> e
    android.widget.ImageView access$28(com.fox.exercise.FindMeAdapter$ViewHolder) -> f
    android.widget.ImageView access$29(com.fox.exercise.FindMeAdapter$ViewHolder) -> g
    android.widget.ImageView access$30(com.fox.exercise.FindMeAdapter$ViewHolder) -> h
    android.widget.ImageView access$31(com.fox.exercise.FindMeAdapter$ViewHolder) -> i
    android.widget.ImageView access$32(com.fox.exercise.FindMeAdapter$ViewHolder) -> j
    android.widget.ImageView access$33(com.fox.exercise.FindMeAdapter$ViewHolder) -> k
    android.widget.TextView access$34(com.fox.exercise.FindMeAdapter$ViewHolder) -> l
    com.fox.exercise.util.RoundedImage access$35(com.fox.exercise.FindMeAdapter$ViewHolder) -> m
    android.widget.TextView access$36(com.fox.exercise.FindMeAdapter$ViewHolder) -> n
    android.widget.ImageView access$37(com.fox.exercise.FindMeAdapter$ViewHolder) -> o
    android.widget.TextView access$38(com.fox.exercise.FindMeAdapter$ViewHolder) -> p
    android.widget.LinearLayout access$39(com.fox.exercise.FindMeAdapter$ViewHolder) -> q
    android.widget.LinearLayout access$40(com.fox.exercise.FindMeAdapter$ViewHolder) -> r
    android.widget.TextView access$41(com.fox.exercise.FindMeAdapter$ViewHolder) -> s
    android.widget.LinearLayout access$42(com.fox.exercise.FindMeAdapter$ViewHolder) -> t
    android.widget.TextView access$43(com.fox.exercise.FindMeAdapter$ViewHolder) -> u
com.fox.exercise.FindMeAdapter$commentOnClickListener -> com.fox.exercise.fv:
    int position -> b
    int comment_number -> c
    java.lang.String findID -> d
    java.lang.String commentID -> e
    java.lang.String theFirstName -> f
    com.fox.exercise.FindMeAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindMeAdapter$deleteListener -> com.fox.exercise.fw:
    java.lang.String find_id -> b
    int position -> c
    com.fox.exercise.FindMeAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindMeAdapter$imgOnClickListener -> com.fox.exercise.fx:
    int index -> b
    java.lang.String[] urlString -> c
    com.fox.exercise.FindMeAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindMeAdapter$personalInformationOnClickListener -> com.fox.exercise.fy:
    int userId -> b
    com.fox.exercise.FindMeAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherFragment -> com.fox.exercise.fz:
    java.util.List actionLists -> p
    java.util.List activityNameList -> q
    java.util.List activityIdList -> r
    cn.ingenic.indroidsync.SportsApp mSportsApp -> s
    com.fox.exercise.view.PullToRefreshListView mPullSearchListView -> t
    android.widget.ListView mListView -> u
    android.app.Dialog mLoadProgressDialog -> v
    android.app.Dialog dialog -> w
    android.widget.TextView mDialogMessage -> x
    int times -> y
    com.fox.exercise.FindOtherMoreAdapter sportsfindmoreAdapter -> z
    java.util.ArrayList mList -> A
    java.util.ArrayList mList_top -> B
    android.widget.ImageView img_background -> C
    android.widget.LinearLayout roundimg_layout -> D
    com.fox.exercise.FindOtherFragment$SportsFindMoreHandler msportsFindMoreHandler -> l
    android.widget.TextView myNameText -> E
    android.widget.TextView commentsNotify -> F
    android.widget.ImageView commentsImg -> G
    android.widget.LinearLayout messageLinearLayout -> H
    com.fox.exercise.util.RoundedImage userPhoto -> I
    com.fox.exercise.pedometer.ImageWorkManager mImageWorkerMan_Icon -> J
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker_Icon -> K
    com.fox.exercise.api.entity.UserDetail detail -> L
    android.widget.ImageButton iView -> M
    com.fox.exercise.RecordHelper mRecorder -> N
    android.widget.ImageButton findTextBtn -> O
    android.widget.Button findPressBtn -> P
    boolean upTypeText -> Q
    android.widget.LinearLayout layoutVoice -> R
    android.widget.RelativeLayout findLayout -> S
    int findnumber -> T
    android.widget.RelativeLayout rScrollLayout -> U
    com.fox.exercise.util.ScrollLayout scrollLayout -> V
    android.widget.LinearLayout imgLayout -> W
    android.widget.ImageView findExpressBtn -> X
    java.util.List imgItems -> m
    int mViewCount -> Y
    int mCurSel -> Z
    java.lang.String[] imgStr -> aa
    java.lang.Boolean isShow -> ab
    android.widget.LinearLayout findUpcommentText -> ac
    android.widget.EditText findUpcommentEdittext -> ad
    android.widget.Button findUpcommentSend -> ae
    android.widget.Button findUnavailable -> af
    int FRESH_LIST -> ag
    int FRESH_FAILED -> ah
    int FRESH_DONE -> ai
    int FRESH_NULL -> aj
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> ak
    int listPosition -> al
    int toNumber -> am
    java.lang.String toNameStr -> an
    java.lang.String find_Id -> ao
    java.lang.String to_Id -> ap
    boolean findBool -> aq
    com.fox.exercise.publish.SendMsgDetail self -> ar
    int bg_width -> as
    int bg_height -> at
    int screen_width -> au
    int screen_height -> av
    com.fox.exercise.ImageDownloader bg_Downloader -> aw
    java.lang.String bg_urlString -> ax
    android.app.Dialog waitProgressDialog -> ay
    int marknumber -> az
    android.view.View head_view -> aA
    com.fox.exercise.ResideMenu resideMenu -> aB
    android.view.View view -> aC
    android.text.TextWatcher mTextWatcher -> n
    android.widget.AdapterView$OnItemClickListener listener -> o
    android.widget.LinearLayout myView -> aD
    android.widget.PopupWindow myWindow -> aE
    android.widget.RelativeLayout pop_menu_background -> aF
    java.lang.String FACE_PATH -> aG
    android.graphics.drawable.BitmapDrawable drawable -> aH
    void beforeInitView() -> a
    void showWaitDialog(java.lang.String) -> d
    void setViewStatus() -> b
    void initView() -> h
    void showUIedit() -> l
    void hideedit() -> m
    java.lang.Boolean stringFilter(java.lang.String) -> a
    java.lang.String filterEmoji(java.lang.String) -> b
    boolean containsEmoji(java.lang.String) -> c
    boolean isEmojiCharacter(char) -> a
    void initViews() -> i
    void delStr(android.widget.EditText) -> a
    void setCurPoint(int) -> b
    void onStart() -> onStart
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void initPortrait() -> n
    void init() -> o
    void waitShowDialog() -> p
    android.view.View getViewByPosition(int,android.widget.ListView) -> a
    void scrollVertical(int) -> c
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
    void shotSelectImages() -> j
    void onDismiss() -> onDismiss
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri) -> a
    void getImageToView(android.content.Intent) -> a
    android.graphics.Bitmap decodeUriAsBitmap(android.content.Intent) -> b
    android.widget.EditText access$0(com.fox.exercise.FindOtherFragment) -> a
    android.widget.Button access$1(com.fox.exercise.FindOtherFragment) -> b
    android.widget.Button access$2(com.fox.exercise.FindOtherFragment) -> c
    void access$3(com.fox.exercise.FindOtherFragment,android.widget.EditText) -> a
    android.widget.Button access$4(com.fox.exercise.FindOtherFragment) -> d
    com.fox.exercise.RecordHelper access$5(com.fox.exercise.FindOtherFragment) -> e
    android.app.Dialog access$6(com.fox.exercise.FindOtherFragment) -> f
    void access$7(com.fox.exercise.FindOtherFragment,android.app.Dialog) -> a
    android.widget.LinearLayout access$8(com.fox.exercise.FindOtherFragment) -> g
    com.fox.exercise.FindOtherMoreAdapter access$9(com.fox.exercise.FindOtherFragment) -> h
    int access$10(com.fox.exercise.FindOtherFragment) -> i
    java.lang.String access$11(com.fox.exercise.FindOtherFragment) -> j
    java.lang.String access$12(com.fox.exercise.FindOtherFragment) -> k
    java.lang.String access$13(com.fox.exercise.FindOtherFragment) -> l
    android.widget.LinearLayout access$14(com.fox.exercise.FindOtherFragment) -> m
    void access$15(com.fox.exercise.FindOtherFragment) -> n
    java.lang.Boolean access$16(com.fox.exercise.FindOtherFragment) -> o
    void access$17(com.fox.exercise.FindOtherFragment,java.lang.Boolean) -> a
    android.widget.RelativeLayout access$18(com.fox.exercise.FindOtherFragment) -> p
    boolean access$19(com.fox.exercise.FindOtherFragment) -> q
    void access$20(com.fox.exercise.FindOtherFragment,boolean) -> a
    android.widget.ImageButton access$21(com.fox.exercise.FindOtherFragment) -> r
    android.widget.RelativeLayout access$22(com.fox.exercise.FindOtherFragment) -> s
    int access$23(com.fox.exercise.FindOtherFragment) -> t
    com.fox.exercise.ResideMenu access$24(com.fox.exercise.FindOtherFragment) -> u
    void access$25(com.fox.exercise.FindOtherFragment,int) -> a
    void access$26(com.fox.exercise.FindOtherFragment,boolean) -> b
    void access$27(com.fox.exercise.FindOtherFragment,int) -> b
    cn.ingenic.indroidsync.SportsApp access$28(com.fox.exercise.FindOtherFragment) -> v
    android.widget.ListView access$29(com.fox.exercise.FindOtherFragment) -> w
    com.fox.exercise.view.PullToRefreshListView access$30(com.fox.exercise.FindOtherFragment) -> x
    android.app.Dialog access$31(com.fox.exercise.FindOtherFragment) -> y
    int access$32(com.fox.exercise.FindOtherFragment) -> z
    java.util.ArrayList access$33(com.fox.exercise.FindOtherFragment) -> A
    java.util.List access$34(com.fox.exercise.FindOtherFragment) -> B
    void access$35(com.fox.exercise.FindOtherFragment,com.fox.exercise.FindOtherMoreAdapter) -> a
    void access$36(com.fox.exercise.FindOtherFragment,int) -> c
    void access$37(com.fox.exercise.FindOtherFragment,java.lang.String) -> a
    void access$38(com.fox.exercise.FindOtherFragment,int) -> d
    void access$39(com.fox.exercise.FindOtherFragment,java.lang.String) -> b
    void access$40(com.fox.exercise.FindOtherFragment,java.lang.String) -> c
    boolean access$41(com.fox.exercise.FindOtherFragment) -> C
    void access$42(com.fox.exercise.FindOtherFragment) -> D
    java.util.ArrayList access$43(com.fox.exercise.FindOtherFragment) -> E
    void access$44(com.fox.exercise.FindOtherFragment) -> F
    void access$45(com.fox.exercise.FindOtherFragment) -> G
    android.widget.TextView access$46(com.fox.exercise.FindOtherFragment) -> H
    android.view.View access$47(com.fox.exercise.FindOtherFragment,int,android.widget.ListView) -> a
    void access$48(com.fox.exercise.FindOtherFragment,int) -> e
    android.widget.LinearLayout access$49(com.fox.exercise.FindOtherFragment) -> I
    android.widget.TextView access$50(com.fox.exercise.FindOtherFragment) -> J
    com.fox.exercise.ImageDownloader access$51(com.fox.exercise.FindOtherFragment) -> K
    android.widget.ImageView access$52(com.fox.exercise.FindOtherFragment) -> L
    void access$53(com.fox.exercise.FindOtherFragment,int) -> f
    java.lang.Object access$54(com.fox.exercise.FindOtherFragment,java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
    java.lang.String access$55() -> k
    android.app.Dialog access$56(com.fox.exercise.FindOtherFragment) -> M
    void access$57(com.fox.exercise.FindOtherFragment,android.graphics.drawable.BitmapDrawable) -> a
    android.widget.ImageView access$58(com.fox.exercise.FindOtherFragment) -> N
    android.graphics.drawable.BitmapDrawable access$59(com.fox.exercise.FindOtherFragment) -> O
com.fox.exercise.FindOtherFragment$1 -> com.fox.exercise.ga:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.FindOtherFragment$10 -> com.fox.exercise.gb:
    com.fox.exercise.FindOtherFragment this$0 -> a
    android.graphics.Bitmap val$bitmap -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherFragment$2 -> com.fox.exercise.gc:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.FindOtherFragment$3 -> com.fox.exercise.gd:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.FindOtherFragment$4 -> com.fox.exercise.ge:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.fox.exercise.FindOtherFragment$5 -> com.fox.exercise.gf:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.FindOtherFragment$6 -> com.fox.exercise.gg:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void OnViewChange(int) -> a
com.fox.exercise.FindOtherFragment$7 -> com.fox.exercise.gh:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.fox.exercise.FindOtherFragment$8 -> com.fox.exercise.gi:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void run() -> run
com.fox.exercise.FindOtherFragment$9 -> com.fox.exercise.gj:
    com.fox.exercise.FindOtherFragment this$0 -> a
    int val$y -> b
    void run() -> run
com.fox.exercise.FindOtherFragment$ExpressionImgAdapter -> com.fox.exercise.gk:
    java.util.List mList -> b
    android.content.Context mContext -> c
    com.fox.exercise.FindOtherFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.FindOtherFragment$ExpressionImgAdapter$ImgItem -> com.fox.exercise.gl:
    android.widget.ImageView mAppIcon -> a
    com.fox.exercise.FindOtherFragment$ExpressionImgAdapter this$1 -> b
com.fox.exercise.FindOtherFragment$GetActionDataTask -> com.fox.exercise.gm:
    com.fox.exercise.FindOtherFragment this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherFragment$GetActionDataTask2 -> com.fox.exercise.gn:
    com.fox.exercise.FindOtherFragment this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherFragment$GetNewCommnetCountTask -> com.fox.exercise.go:
    com.fox.exercise.api.entity.NewCommentInfo commentInfo -> b
    com.fox.exercise.FindOtherFragment this$0 -> a
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherFragment$SportsFindMoreHandler -> com.fox.exercise.gp:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void scrollToComment(int) -> a
    void access$0(com.fox.exercise.FindOtherFragment$SportsFindMoreHandler,int) -> a
    com.fox.exercise.FindOtherFragment access$1(com.fox.exercise.FindOtherFragment$SportsFindMoreHandler) -> a
com.fox.exercise.FindOtherFragment$SportsFindMoreHandler$1 -> com.fox.exercise.gq:
    com.fox.exercise.FindOtherFragment$SportsFindMoreHandler this$1 -> a
    void OnCheckedChangeListener(int,java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.FindOtherFragment$SportsFindMoreHandler$2 -> com.fox.exercise.gr:
    com.fox.exercise.FindOtherFragment$SportsFindMoreHandler this$1 -> a
    void OnCheckedChangeListener(int,java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.FindOtherFragment$SportsFindMoreHandler$3 -> com.fox.exercise.gs:
    com.fox.exercise.FindOtherFragment$SportsFindMoreHandler this$1 -> a
    android.graphics.Rect val$mrect -> b
    void run() -> run
com.fox.exercise.FindOtherFragment$SportsFindMoreThread -> com.fox.exercise.gt:
    long startTime -> b
    com.fox.exercise.FindOtherFragment this$0 -> a
    void run() -> run
com.fox.exercise.FindOtherFragment$SportsFindMoreThread_top -> com.fox.exercise.gu:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void run() -> run
com.fox.exercise.FindOtherFragment$findClickListener -> com.fox.exercise.gv:
    com.fox.exercise.FindOtherFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onLongClick(android.view.View) -> onLongClick
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherFragment$rightOnClickListener -> com.fox.exercise.gw:
    com.fox.exercise.FindOtherFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter -> com.fox.exercise.gx:
    java.lang.String activityTime_2 -> p
    java.lang.String topTime -> q
    java.util.List actionLists -> r
    java.util.List activityNameList -> s
    java.util.List activityURLList -> t
    java.util.List activityIdList -> u
    java.util.List activitySendId -> v
    java.util.List activityNameSize -> w
    android.app.Dialog waitProgressDialog -> x
    com.fox.exercise.FindOtherMoreAdapter$ViewHolder holder -> a
    android.content.Context mContext -> y
    java.util.ArrayList mList -> z
    cn.ingenic.indroidsync.SportsApp mSportsApp -> A
    android.view.LayoutInflater mInflater -> B
    com.fox.exercise.ImageDownloader mDownloader -> C
    com.fox.exercise.ImageDownloader mDownloader2 -> D
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> E
    int mItemHeight -> F
    android.app.Dialog loadProgressDialog -> G
    android.widget.TextView message -> H
    java.util.List imgList2 -> b
    java.util.List imgList3 -> c
    java.util.List imgList4 -> d
    java.util.List imgList5 -> e
    java.util.List imgList6 -> f
    java.util.List imgList7 -> g
    java.util.List imgList8 -> h
    java.util.List imgList9 -> i
    int type -> j
    java.lang.String[] urls -> k
    android.app.Dialog alertDialog -> I
    com.fox.exercise.api.entity.UserDetail detail -> J
    java.lang.String masterName -> K
    android.widget.PopupWindow mPopWindow -> l
    com.fox.exercise.TitlePopup titlePopup -> L
    java.lang.String theFirstName -> M
    java.lang.String theSecondName -> N
    java.lang.String theTalkDetils -> O
    java.lang.String thewavComment -> P
    java.lang.String thewavDuration -> Q
    java.lang.String newNameString -> R
    java.lang.String newMessageString -> S
    java.util.List firstNameList -> T
    java.util.List commentLayout -> U
    android.view.View newView -> V
    android.view.LayoutInflater xInflater -> W
    java.util.List imgItems -> X
    int numcom -> Y
    boolean isPause -> m
    boolean isStart -> Z
    android.media.MediaPlayer mPlayer -> n
    com.fox.exercise.RecordHelper mRecorder -> aa
    int currentDuration -> ab
    android.widget.ImageView wavBeginOne -> ac
    int DELETES -> ad
    int ADDS -> ae
    int FALSE -> af
    int addStatus -> ag
    android.view.animation.Animation animation -> ah
    boolean isPersonal -> ai
    int toFlag -> aj
    com.fox.exercise.FindOtherMoreAdapter$DelItem delItem -> ak
    android.graphics.drawable.Drawable drawable1 -> al
    android.graphics.drawable.Drawable drawable2 -> am
    int adapter_type -> an
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker_Icon -> ao
    com.fox.exercise.pedometer.ImageWorkManager mImageWorkerMan_Icon -> ap
    int commentsize -> aq
    com.fox.exercise.FindOtherMoreAdapter$OnCheckedChangeCommentListener changeCommentListener -> ar
    android.os.Handler mHandler -> o
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void showWaitDialog(java.lang.String) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setImageVoid(int,int,java.util.List) -> a
    void send(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void showtopAllDialogs(java.lang.String,int) -> a
    void showDialogs(int,int,java.lang.String) -> b
    void onItemClick(int,int,java.lang.String) -> a
    void setOnCheckedChangeListener(com.fox.exercise.FindOtherMoreAdapter$OnCheckedChangeCommentListener) -> a
    java.util.List getExpressionString(android.content.Context,java.lang.String,int,int,int) -> a
    java.lang.String ToDBC(java.lang.String) -> a
    void showAdminDialogs(int,int,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.FindOtherMoreAdapter$DelItem getDelItem() -> a
    void setDelItem(com.fox.exercise.FindOtherMoreAdapter$DelItem) -> a
    java.lang.String formatDisplayTime(java.lang.String,java.lang.String) -> a
    int getActivityId(java.lang.String) -> b
    void showdeleteAllDialogs(java.lang.String,int) -> b
    void showdeletetopAllDialogs(java.lang.String,int) -> c
    void showZanImage(java.util.ArrayList,int) -> a
    void setRoudImage(java.lang.String,android.widget.ImageView,java.lang.String) -> a
    java.util.List getNameString(android.content.Context,java.lang.String,int,int,int) -> b
    java.util.List getContentString(android.content.Context,java.lang.String,int) -> a
    void access$0(com.fox.exercise.FindOtherMoreAdapter,boolean) -> a
    android.content.Context access$1(com.fox.exercise.FindOtherMoreAdapter) -> a
    java.util.ArrayList access$2(com.fox.exercise.FindOtherMoreAdapter) -> b
    cn.ingenic.indroidsync.SportsApp access$3(com.fox.exercise.FindOtherMoreAdapter) -> c
    com.fox.exercise.api.entity.UserDetail access$4(com.fox.exercise.FindOtherMoreAdapter) -> d
    android.view.animation.Animation access$5(com.fox.exercise.FindOtherMoreAdapter) -> e
    android.graphics.drawable.Drawable access$6(com.fox.exercise.FindOtherMoreAdapter) -> f
    android.graphics.drawable.Drawable access$7(com.fox.exercise.FindOtherMoreAdapter) -> g
    void access$8(com.fox.exercise.FindOtherMoreAdapter,java.util.ArrayList,int) -> a
    void access$9(com.fox.exercise.FindOtherMoreAdapter,java.lang.String,android.widget.ImageView,java.lang.String) -> a
    void access$10(com.fox.exercise.FindOtherMoreAdapter,int,int,java.lang.String) -> a
    void access$11(com.fox.exercise.FindOtherMoreAdapter,int,int,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.FindOtherMoreAdapter$OnCheckedChangeCommentListener access$12(com.fox.exercise.FindOtherMoreAdapter) -> h
    void access$13(com.fox.exercise.FindOtherMoreAdapter,java.lang.String,int) -> a
    void access$14(com.fox.exercise.FindOtherMoreAdapter,java.lang.String,int) -> b
    void access$15(com.fox.exercise.FindOtherMoreAdapter,java.lang.String,int) -> c
    java.util.List access$16(com.fox.exercise.FindOtherMoreAdapter) -> i
    java.util.List access$17(com.fox.exercise.FindOtherMoreAdapter) -> j
    java.util.List access$18(com.fox.exercise.FindOtherMoreAdapter) -> k
    java.util.List access$19(com.fox.exercise.FindOtherMoreAdapter) -> l
    java.util.List access$20(com.fox.exercise.FindOtherMoreAdapter) -> m
    void access$21(com.fox.exercise.FindOtherMoreAdapter,java.lang.String) -> a
    java.lang.String access$22(com.fox.exercise.FindOtherMoreAdapter) -> n
    int access$23(com.fox.exercise.FindOtherMoreAdapter) -> o
    android.widget.ImageView access$24(com.fox.exercise.FindOtherMoreAdapter) -> p
    void access$25(com.fox.exercise.FindOtherMoreAdapter,android.widget.ImageView) -> a
    boolean access$26(com.fox.exercise.FindOtherMoreAdapter) -> q
    com.fox.exercise.RecordHelper access$27(com.fox.exercise.FindOtherMoreAdapter) -> r
    void access$28(com.fox.exercise.FindOtherMoreAdapter,int) -> a
    int access$29(com.fox.exercise.FindOtherMoreAdapter) -> s
    android.app.Dialog access$30(com.fox.exercise.FindOtherMoreAdapter) -> t
    void access$31(com.fox.exercise.FindOtherMoreAdapter,java.lang.String) -> b
    android.app.Dialog access$32(com.fox.exercise.FindOtherMoreAdapter) -> u
    void access$33(com.fox.exercise.FindOtherMoreAdapter,java.lang.String) -> c
    java.lang.String access$34(com.fox.exercise.FindOtherMoreAdapter) -> v
    com.fox.exercise.FindOtherMoreAdapter$DelItem access$35(com.fox.exercise.FindOtherMoreAdapter) -> w
com.fox.exercise.FindOtherMoreAdapter$1 -> com.fox.exercise.gy:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.FindOtherMoreAdapter$10 -> com.fox.exercise.gz:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$findID -> b
    java.lang.String val$commentText -> c
    java.lang.String val$commentWav -> d
    java.lang.String val$wavDuration -> e
    java.lang.String val$toID -> f
    java.lang.String val$theFirstName -> g
    int val$position -> h
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherMoreAdapter$11 -> com.fox.exercise.ha:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String[] val$aa -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.fox.exercise.FindOtherMoreAdapter$12 -> com.fox.exercise.hb:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$findID -> b
    int val$list_position -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindOtherMoreAdapter access$0(com.fox.exercise.FindOtherMoreAdapter$12) -> a
com.fox.exercise.FindOtherMoreAdapter$12$1 -> com.fox.exercise.hc:
    com.fox.exercise.FindOtherMoreAdapter$12 this$1 -> a
    java.lang.String val$findID -> b
    int val$list_position -> c
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherMoreAdapter$12$2 -> com.fox.exercise.hd:
    com.fox.exercise.FindOtherMoreAdapter$12 this$1 -> a
    int val$position -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherMoreAdapter$13 -> com.fox.exercise.he:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$14 -> com.fox.exercise.hf:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$commentID -> b
    int val$position -> c
    int val$number -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindOtherMoreAdapter access$0(com.fox.exercise.FindOtherMoreAdapter$14) -> a
com.fox.exercise.FindOtherMoreAdapter$14$1 -> com.fox.exercise.hg:
    com.fox.exercise.FindOtherMoreAdapter$14 this$1 -> a
    java.lang.String val$commentID -> b
    int val$position -> c
    int val$number -> d
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherMoreAdapter$15 -> com.fox.exercise.hh:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$16 -> com.fox.exercise.hi:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    int val$list_positon -> b
    java.lang.String val$findIdString -> c
    int val$theBeforeGoodPeople -> d
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherMoreAdapter$17 -> com.fox.exercise.hj:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$commentID -> b
    int val$position -> c
    int val$number -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindOtherMoreAdapter access$0(com.fox.exercise.FindOtherMoreAdapter$17) -> a
com.fox.exercise.FindOtherMoreAdapter$17$1 -> com.fox.exercise.hk:
    com.fox.exercise.FindOtherMoreAdapter$17 this$1 -> a
    java.lang.String val$commentID -> b
    int val$position -> c
    int val$number -> d
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherMoreAdapter$18 -> com.fox.exercise.hl:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    int val$position -> b
    java.lang.String val$findID -> c
    java.lang.String val$commentID -> d
    java.lang.String val$theFirstName -> e
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$19 -> com.fox.exercise.hm:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$findID -> b
    int val$list_position -> c
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindOtherMoreAdapter access$0(com.fox.exercise.FindOtherMoreAdapter$19) -> a
com.fox.exercise.FindOtherMoreAdapter$19$1 -> com.fox.exercise.hn:
    com.fox.exercise.FindOtherMoreAdapter$19 this$1 -> a
    java.lang.String val$findID -> b
    int val$list_position -> c
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherMoreAdapter$2 -> com.fox.exercise.ho:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$20 -> com.fox.exercise.hp:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$21 -> com.fox.exercise.hq:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$findID -> b
    int val$list_position -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindOtherMoreAdapter access$0(com.fox.exercise.FindOtherMoreAdapter$21) -> a
com.fox.exercise.FindOtherMoreAdapter$21$1 -> com.fox.exercise.hr:
    com.fox.exercise.FindOtherMoreAdapter$21 this$1 -> a
    java.lang.String val$findID -> b
    int val$list_position -> c
    int val$position -> d
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FindOtherMoreAdapter$22 -> com.fox.exercise.hs:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$23 -> com.fox.exercise.ht:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$3 -> com.fox.exercise.hu:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$4 -> com.fox.exercise.hv:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.Object val$lock -> b
    java.lang.String val$mediaPath -> c
    android.widget.ImageView val$wavBegin -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindOtherMoreAdapter access$0(com.fox.exercise.FindOtherMoreAdapter$4) -> a
com.fox.exercise.FindOtherMoreAdapter$4$1 -> com.fox.exercise.hw:
    com.fox.exercise.FindOtherMoreAdapter$4 this$1 -> a
    android.widget.ImageView val$wavBegin -> b
    java.lang.String val$mediaPath -> c
    void run() -> run
    com.fox.exercise.FindOtherMoreAdapter$4 access$0(com.fox.exercise.FindOtherMoreAdapter$4$1) -> a
com.fox.exercise.FindOtherMoreAdapter$4$1$1 -> com.fox.exercise.hx:
    com.fox.exercise.FindOtherMoreAdapter$4$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.FindOtherMoreAdapter$4$1$2 -> com.fox.exercise.hy:
    com.fox.exercise.FindOtherMoreAdapter$4$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.FindOtherMoreAdapter$4$1$3 -> com.fox.exercise.hz:
    com.fox.exercise.FindOtherMoreAdapter$4$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.FindOtherMoreAdapter$5 -> com.fox.exercise.ia:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$6 -> com.fox.exercise.ib:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$name -> b
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.fox.exercise.FindOtherMoreAdapter$7 -> com.fox.exercise.ic:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$name -> b
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.fox.exercise.FindOtherMoreAdapter$8 -> com.fox.exercise.id:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$name -> b
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.fox.exercise.FindOtherMoreAdapter$9 -> com.fox.exercise.ie:
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    java.lang.String val$name -> b
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.fox.exercise.FindOtherMoreAdapter$AddAnimian -> com.fox.exercise.if:
    android.view.View view -> b
    int position -> c
    android.widget.TextView goodTextView -> d
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
    int access$0(com.fox.exercise.FindOtherMoreAdapter$AddAnimian) -> a
    android.view.View access$1(com.fox.exercise.FindOtherMoreAdapter$AddAnimian) -> b
    android.widget.TextView access$2(com.fox.exercise.FindOtherMoreAdapter$AddAnimian) -> c
    com.fox.exercise.FindOtherMoreAdapter access$3(com.fox.exercise.FindOtherMoreAdapter$AddAnimian) -> d
com.fox.exercise.FindOtherMoreAdapter$AddAnimian$1 -> com.fox.exercise.ig:
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian this$1 -> a
    android.widget.TextView val$textView -> b
    int val$theBeforeGoodPeople -> c
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian access$2(com.fox.exercise.FindOtherMoreAdapter$AddAnimian$1) -> a
com.fox.exercise.FindOtherMoreAdapter$AddAnimian$1$1 -> com.fox.exercise.ih:
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian$1 this$2 -> a
    void run() -> run
com.fox.exercise.FindOtherMoreAdapter$AddAnimian$2 -> com.fox.exercise.ii:
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian this$1 -> a
    android.view.View val$v -> b
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian access$2(com.fox.exercise.FindOtherMoreAdapter$AddAnimian$2) -> a
com.fox.exercise.FindOtherMoreAdapter$AddAnimian$2$1 -> com.fox.exercise.ij:
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian$2 this$2 -> a
    android.view.View val$v -> b
    void run() -> run
com.fox.exercise.FindOtherMoreAdapter$AddAnimian2 -> com.fox.exercise.ik:
    android.view.View view -> b
    int position -> c
    android.widget.TextView goodTextView -> d
    com.fox.exercise.util.RoundedImage otherImage -> e
    com.fox.exercise.util.RoundedImage dianzan_one -> f
    com.fox.exercise.util.RoundedImage dianzan_two -> g
    com.fox.exercise.util.RoundedImage dianzan_three -> h
    com.fox.exercise.util.RoundedImage dianzan_four -> i
    com.fox.exercise.util.RoundedImage dianzan_five -> j
    com.fox.exercise.util.RoundedImage dianzan_six -> k
    android.widget.ImageView zan_more_icon -> l
    android.widget.RelativeLayout activity_zan_layout -> m
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
    int access$0(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> a
    android.view.View access$1(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> b
    android.widget.RelativeLayout access$2(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> c
    android.widget.TextView access$3(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> d
    com.fox.exercise.util.RoundedImage access$4(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> e
    com.fox.exercise.util.RoundedImage access$5(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> f
    com.fox.exercise.util.RoundedImage access$6(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> g
    com.fox.exercise.util.RoundedImage access$7(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> h
    com.fox.exercise.util.RoundedImage access$8(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> i
    com.fox.exercise.util.RoundedImage access$9(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> j
    android.widget.ImageView access$10(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> k
    com.fox.exercise.FindOtherMoreAdapter access$11(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2) -> l
com.fox.exercise.FindOtherMoreAdapter$AddAnimian2$1 -> com.fox.exercise.il:
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian2 this$1 -> a
    android.widget.TextView val$textView -> b
    int val$theBeforeGoodPeople -> c
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian2 access$2(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2$1) -> a
com.fox.exercise.FindOtherMoreAdapter$AddAnimian2$1$1 -> com.fox.exercise.im:
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian2$1 this$2 -> a
    void run() -> run
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian2$1 access$0(com.fox.exercise.FindOtherMoreAdapter$AddAnimian2$1$1) -> a
com.fox.exercise.FindOtherMoreAdapter$AddAnimian2$1$1$1 -> com.fox.exercise.in:
    com.fox.exercise.FindOtherMoreAdapter$AddAnimian2$1$1 this$3 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$AllContent -> com.fox.exercise.io:
    int position -> b
    android.widget.TextView mTextView -> c
    android.widget.TextView mTextView2 -> d
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
    com.fox.exercise.FindOtherMoreAdapter access$0(com.fox.exercise.FindOtherMoreAdapter$AllContent) -> a
com.fox.exercise.FindOtherMoreAdapter$AllContent$1 -> com.fox.exercise.ip:
    com.fox.exercise.FindOtherMoreAdapter$AllContent this$1 -> a
    java.lang.String val$name -> b
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.fox.exercise.FindOtherMoreAdapter$AllContent$2 -> com.fox.exercise.iq:
    com.fox.exercise.FindOtherMoreAdapter$AllContent this$1 -> a
    java.lang.String val$name -> b
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.fox.exercise.FindOtherMoreAdapter$DelItem -> com.fox.exercise.ir:
    void returnFindid(java.lang.String) -> a
com.fox.exercise.FindOtherMoreAdapter$OnCheckedChangeCommentListener -> com.fox.exercise.is:
    void OnCheckedChangeListener(int,java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.FindOtherMoreAdapter$ShareClickListener -> com.fox.exercise.it:
    com.fox.exercise.newversion.entity.FindGroup findGroup -> b
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$ViewHolder -> com.fox.exercise.iu:
    com.fox.exercise.util.RoundedImage otherImage -> b
    com.fox.exercise.util.RoundedImage dianzan_one -> c
    com.fox.exercise.util.RoundedImage dianzan_two -> d
    com.fox.exercise.util.RoundedImage dianzan_three -> e
    com.fox.exercise.util.RoundedImage dianzan_four -> f
    com.fox.exercise.util.RoundedImage dianzan_five -> g
    com.fox.exercise.util.RoundedImage dianzan_six -> h
    android.widget.ImageView zan_more_icon -> i
    android.widget.TextView nametext -> j
    android.widget.TextView detils -> k
    android.widget.ImageView img1 -> l
    android.widget.ImageView img2 -> m
    android.widget.ImageView img3 -> n
    android.widget.ImageView img4 -> o
    android.widget.ImageView img5 -> p
    android.widget.ImageView img6 -> q
    android.widget.ImageView img7 -> r
    android.widget.ImageView img8 -> s
    android.widget.ImageView img9 -> t
    android.widget.TextView start_time -> u
    android.widget.TextView goodandtext -> v
    android.widget.TextView goodPeopole -> w
    android.widget.TextView textPeopole -> x
    android.widget.LinearLayout commentLayout -> y
    android.view.View textgoodline -> z
    android.widget.LinearLayout textLayout -> A
    android.widget.LinearLayout talkdetilsLayout -> B
    android.widget.Button list_user_guanzhu -> C
    android.widget.TextView list_user_guanzhu_addone -> D
    android.widget.TextView list_user_fenxiang -> E
    android.widget.TextView tx_sport_address -> F
    android.widget.TextView tx_sport_huodong -> G
    android.widget.TextView tx_sport_days -> H
    android.widget.TextView list_user_zan_addone -> I
    android.widget.ImageView is_manorwomen_icon -> J
    android.widget.TextView tx_sport_del -> K
    android.widget.TextView tx_sport_toplist -> L
    android.widget.TextView tx_sport_removetop -> M
    android.widget.TextView tx_xianshiquanbu -> N
    android.widget.ImageView iv_zhiding -> O
    android.widget.TextView dianzan_nums -> P
    android.widget.LinearLayout ll_comment_zan_shaer -> Q
    android.widget.RelativeLayout activity_zan_layout -> R
    android.widget.RelativeLayout list_user_zan_layout -> S
    android.widget.RelativeLayout list_user_fenxiang_layout -> T
    android.widget.TextView list_user_pinglun_layout -> U
    android.widget.ImageView sportshow_shaer -> V
    android.widget.LinearLayout ll_dianzanimage -> W
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    android.widget.TextView access$0(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> a
    void access$2(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$3(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.ImageView) -> b
    void access$4(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.ImageView) -> c
    void access$5(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.ImageView) -> d
    void access$6(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> a
    void access$7(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> b
    void access$8(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> c
    void access$9(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> d
    void access$10(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> e
    void access$11(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> f
    void access$12(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> g
    void access$13(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.ImageView) -> e
    void access$14(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.RelativeLayout) -> a
    void access$15(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> a
    void access$16(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> b
    void access$17(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> c
    void access$18(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> d
    void access$19(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.LinearLayout) -> a
    void access$20(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> e
    void access$21(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.view.View) -> a
    void access$22(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.LinearLayout) -> b
    void access$23(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> f
    void access$24(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.LinearLayout) -> c
    void access$25(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.LinearLayout) -> d
    android.widget.LinearLayout access$26(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> b
    void access$27(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> g
    void access$28(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.RelativeLayout) -> b
    void access$29(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.RelativeLayout) -> c
    void access$30(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.Button) -> a
    void access$31(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> h
    void access$32(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> i
    void access$33(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> j
    void access$34(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> k
    void access$35(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> l
    void access$36(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> m
    void access$37(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> n
    void access$38(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.ImageView) -> f
    void access$39(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> o
    void access$40(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> p
    void access$41(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> q
    void access$42(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.TextView) -> r
    void access$43(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.ImageView) -> g
    void access$44(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.ImageView) -> h
    void access$45(com.fox.exercise.FindOtherMoreAdapter$ViewHolder,android.widget.LinearLayout) -> e
    android.widget.LinearLayout access$46(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> c
    android.widget.ImageView access$47(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> d
    android.widget.ImageView access$48(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> e
    android.widget.ImageView access$49(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> f
    android.widget.ImageView access$50(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> g
    android.widget.ImageView access$51(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> h
    android.widget.ImageView access$52(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> i
    android.widget.ImageView access$53(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> j
    android.widget.ImageView access$54(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> k
    android.widget.ImageView access$55(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> l
    android.widget.TextView access$56(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> m
    com.fox.exercise.util.RoundedImage access$57(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> n
    android.widget.TextView access$58(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> o
    android.widget.TextView access$59(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> p
    android.widget.ImageView access$60(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> q
    android.widget.TextView access$61(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> r
    android.widget.RelativeLayout access$62(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> s
    com.fox.exercise.util.RoundedImage access$63(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> t
    com.fox.exercise.util.RoundedImage access$64(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> u
    com.fox.exercise.util.RoundedImage access$65(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> v
    com.fox.exercise.util.RoundedImage access$66(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> w
    com.fox.exercise.util.RoundedImage access$67(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> x
    com.fox.exercise.util.RoundedImage access$68(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> y
    android.widget.TextView access$69(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> z
    android.widget.LinearLayout access$70(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> A
    android.widget.TextView access$71(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> B
    android.widget.ImageView access$72(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> C
    android.widget.RelativeLayout access$73(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> D
    android.widget.TextView access$74(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> E
    android.widget.ImageView access$75(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> F
    android.widget.TextView access$76(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> G
    android.widget.ImageView access$77(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> H
    android.widget.TextView access$78(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> I
    android.widget.TextView access$79(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> J
    android.widget.TextView access$80(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> K
    android.widget.Button access$81(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> L
    android.widget.TextView access$82(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> M
    android.widget.TextView access$83(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> N
    android.widget.TextView access$84(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> O
    android.widget.TextView access$85(com.fox.exercise.FindOtherMoreAdapter$ViewHolder) -> P
com.fox.exercise.FindOtherMoreAdapter$commentOnClickListener -> com.fox.exercise.iv:
    int position -> b
    int comment_number -> c
    java.lang.String findID -> d
    java.lang.String commentID -> e
    java.lang.String theFirstName -> f
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$deleteListener -> com.fox.exercise.iw:
    java.lang.String find_id -> b
    int position -> c
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$deltopListener -> com.fox.exercise.ix:
    java.lang.String find_id -> b
    int position -> c
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$imgOnClickListener -> com.fox.exercise.iy:
    int index -> b
    java.lang.String[] urlString -> c
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$personalInformationOnClickListener -> com.fox.exercise.iz:
    int userId -> b
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$personalOnClickListener -> com.fox.exercise.ja:
    int userId -> b
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FindOtherMoreAdapter$topListener -> com.fox.exercise.jb:
    java.lang.String find_id -> b
    int position -> c
    com.fox.exercise.FindOtherMoreAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FollowAndFun -> com.fox.exercise.jc:
    int uid -> a
    int status -> b
    java.lang.String oppoFollow -> c
    int position -> d
    int getUid() -> a
com.fox.exercise.FoxSportsFocus -> com.fox.exercise.FoxSportsFocus:
    android.app.Dialog mProgressDialog -> k
    android.widget.ListView listView -> l
    com.fox.exercise.view.PullToRefreshListView mPullListView -> m
    android.widget.ListView mListView -> n
    com.fox.exercise.SlimFrendAdapter mAdapter -> o
    java.util.HashSet mSet -> p
    java.util.ArrayList mList -> q
    com.fox.exercise.FoxSportsFocus$UploadHandler mHandler -> r
    int mTimes -> s
    int userID -> t
    boolean mIsRefresh -> u
    cn.ingenic.indroidsync.SportsApp mSportsApp -> v
    android.content.Context context -> w
    long preTime -> x
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void initProgressDialog() -> f
    void initLoading() -> g
    boolean access$0(com.fox.exercise.FoxSportsFocus) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.FoxSportsFocus) -> b
    void access$2(com.fox.exercise.FoxSportsFocus,boolean) -> a
    java.util.HashSet access$3(com.fox.exercise.FoxSportsFocus) -> c
    java.util.ArrayList access$4(com.fox.exercise.FoxSportsFocus) -> d
    com.fox.exercise.SlimFrendAdapter access$5(com.fox.exercise.FoxSportsFocus) -> e
    int access$6(com.fox.exercise.FoxSportsFocus) -> f
    void access$7(com.fox.exercise.FoxSportsFocus,int) -> a
    com.fox.exercise.FoxSportsFocus$UploadHandler access$8(com.fox.exercise.FoxSportsFocus) -> g
    void access$9(com.fox.exercise.FoxSportsFocus,com.fox.exercise.SlimFrendAdapter) -> a
    android.widget.ListView access$10(com.fox.exercise.FoxSportsFocus) -> h
    android.app.Dialog access$11(com.fox.exercise.FoxSportsFocus) -> i
    com.fox.exercise.view.PullToRefreshListView access$12(com.fox.exercise.FoxSportsFocus) -> j
    int access$13(com.fox.exercise.FoxSportsFocus) -> k
    android.content.Context access$14(com.fox.exercise.FoxSportsFocus) -> l
com.fox.exercise.FoxSportsFocus$1 -> com.fox.exercise.jd:
    com.fox.exercise.FoxSportsFocus this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.FoxSportsFocus$2 -> com.fox.exercise.je:
    com.fox.exercise.FoxSportsFocus this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.FoxSportsFocus$GetUploadThread -> com.fox.exercise.jf:
    int uid -> b
    com.fox.exercise.FoxSportsFocus this$0 -> a
    void run() -> run
com.fox.exercise.FoxSportsFocus$UploadHandler -> com.fox.exercise.jg:
    com.fox.exercise.FoxSportsFocus this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.FoxSportsGoal -> com.fox.exercise.FoxSportsGoal:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> c
    android.widget.EditText editStep -> d
    android.widget.EditText editCalories -> e
    int numberStep -> f
    int numberCalories -> g
    int num -> h
    android.content.SharedPreferences sp -> i
    int kllMultiple -> j
    android.text.TextWatcher editSteplistener -> a
    android.text.TextWatcher editCaloriesListener -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void init() -> a
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    double KALULIMultiple(int) -> a
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.FoxSportsGoal) -> a
    void access$1(com.fox.exercise.FoxSportsGoal,android.content.SharedPreferences) -> a
    android.content.SharedPreferences access$2(com.fox.exercise.FoxSportsGoal) -> b
    android.widget.EditText access$3(com.fox.exercise.FoxSportsGoal) -> c
    int access$4(com.fox.exercise.FoxSportsGoal) -> d
    void access$5(com.fox.exercise.FoxSportsGoal,int) -> a
    void access$6(com.fox.exercise.FoxSportsGoal,int) -> b
    android.widget.EditText access$7(com.fox.exercise.FoxSportsGoal) -> e
    int access$8(com.fox.exercise.FoxSportsGoal) -> f
com.fox.exercise.FoxSportsGoal$1 -> com.fox.exercise.jh:
    com.fox.exercise.FoxSportsGoal this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.FoxSportsGoal$2 -> com.fox.exercise.ji:
    com.fox.exercise.FoxSportsGoal this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.FoxSportsSetting -> com.fox.exercise.FoxSportsSetting:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> m
    android.content.SharedPreferences foxSportSetting -> n
    android.content.SharedPreferences download_map_SharedPre -> o
    java.lang.Boolean isOpen -> p
    java.lang.Boolean isVoiceON -> q
    int mMap -> r
    android.widget.ImageView go_lockscreen -> s
    android.widget.ImageView go_readsound -> t
    android.widget.TextView tipNum -> u
    android.widget.PopupWindow window -> v
    android.widget.LinearLayout mview -> w
    android.widget.RelativeLayout mPopMenuBack -> x
    android.widget.TextView download_default_map -> y
    long preTime -> z
    android.widget.TextView now_version -> A
    android.widget.TextView defaultMap -> B
    android.app.Dialog alertDialog -> C
    android.widget.RelativeLayout relativelayout_about -> D
    android.widget.RelativeLayout relativelayout_four -> E
    android.widget.RelativeLayout personal_settings -> F
    int tempMap -> G
    android.os.Handler fHandler -> l
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void init() -> i
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void updateTipnum() -> j
    void setMsgbox(int) -> b
    void shot() -> h
    void onDismiss() -> onDismiss
    void SelectMapDialog(android.content.Context) -> a
    void selectDownloadMap() -> k
    void access$0(com.fox.exercise.FoxSportsSetting,int) -> a
    void access$1(com.fox.exercise.FoxSportsSetting) -> a
    void access$2(com.fox.exercise.FoxSportsSetting,int) -> b
    cn.ingenic.indroidsync.SportsApp access$3(com.fox.exercise.FoxSportsSetting) -> b
    android.widget.TextView access$4(com.fox.exercise.FoxSportsSetting) -> c
    int access$5(com.fox.exercise.FoxSportsSetting) -> d
    android.content.SharedPreferences access$6(com.fox.exercise.FoxSportsSetting) -> e
    android.app.Dialog access$7(com.fox.exercise.FoxSportsSetting) -> f
com.fox.exercise.FoxSportsSetting$1 -> com.fox.exercise.jj:
    com.fox.exercise.FoxSportsSetting this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.FoxSportsSetting$2 -> com.fox.exercise.jk:
    com.fox.exercise.FoxSportsSetting this$0 -> a
    android.widget.RadioButton val$baiduButton -> b
    android.widget.RadioButton val$gaodeButton -> c
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.fox.exercise.FoxSportsSetting$3 -> com.fox.exercise.jl:
    com.fox.exercise.FoxSportsSetting this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.FoxSportsState -> com.fox.exercise.FoxSportsState:
    int foucsTotals -> w
    android.widget.ListView msgbox_lv -> x
    java.util.ArrayList al -> y
    com.fox.exercise.newversion.adapter.MsgboxNewAdapter ma -> z
    com.fox.exercise.api.entity.UserDetail ud -> A
    android.content.SharedPreferences spf -> B
    long preTime -> C
    android.view.View message_top_view -> D
    android.view.View message_bottom_view -> E
    cn.ingenic.indroidsync.SportsApp mSportsApp -> F
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void gotoFans() -> i
    void gotoVisitor() -> j
    void gotoSysmsg() -> k
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setFragment(android.support.v4.app.Fragment,android.os.Bundle) -> a
    void setGone() -> g
    void setViewVisible() -> h
    void access$0(com.fox.exercise.FoxSportsState) -> a
    void access$1(com.fox.exercise.FoxSportsState) -> b
    void access$2(com.fox.exercise.FoxSportsState) -> c
com.fox.exercise.FoxSportsState$mListener -> com.fox.exercise.jm:
    com.fox.exercise.FoxSportsState this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.FriendFragment -> com.fox.exercise.jn:
    com.fox.exercise.view.PullToRefreshGridView friendPulltoListView -> a
    android.widget.GridView friendlListView -> b
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> c
    cn.ingenic.indroidsync.SportsApp sportsApp -> d
    com.fox.exercise.GridViewAdapter gridViewAdapter -> e
    com.fox.exercise.SportExceptionHandler mExceptionHandler -> f
    android.app.Dialog mProgressDialog -> g
    int times -> h
    java.util.List allUserRanks -> i
    android.widget.TextView tv_refresh -> j
    boolean isFirst -> k
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void initProgressDialog() -> a
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    int access$0(com.fox.exercise.FriendFragment) -> a
    void access$1(com.fox.exercise.FriendFragment,int) -> a
    com.fox.exercise.SportExceptionHandler access$2(com.fox.exercise.FriendFragment) -> b
    android.widget.GridView access$3(com.fox.exercise.FriendFragment) -> c
    com.fox.exercise.view.PullToRefreshGridView access$4(com.fox.exercise.FriendFragment) -> d
    android.widget.TextView access$5(com.fox.exercise.FriendFragment) -> e
    java.util.List access$6(com.fox.exercise.FriendFragment) -> f
    com.fox.exercise.GridViewAdapter access$7(com.fox.exercise.FriendFragment) -> g
    com.fox.exercise.bitmap.util.ImageResizer access$8(com.fox.exercise.FriendFragment) -> h
    void access$9(com.fox.exercise.FriendFragment,com.fox.exercise.GridViewAdapter) -> a
    android.app.Dialog access$10(com.fox.exercise.FriendFragment) -> i
    cn.ingenic.indroidsync.SportsApp access$11(com.fox.exercise.FriendFragment) -> j
com.fox.exercise.FriendFragment$1 -> com.fox.exercise.jo:
    com.fox.exercise.FriendFragment this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.FriendFragment$GetDataTask -> com.fox.exercise.jp:
    int pullToRefresh -> b
    com.fox.exercise.FriendFragment this$0 -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    java.util.List loadData(java.lang.String) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FriendsFragment -> com.fox.exercise.jq:
    android.app.Dialog mLoadProgressDialog -> d
    com.fox.exercise.view.PullToRefreshListView mPullSearchListView -> e
    android.widget.ListView mListView -> f
    com.fox.exercise.MyFriendsAdapter addFriendAdapter -> g
    java.util.ArrayList mList -> h
    cn.ingenic.indroidsync.SportsApp mSportsApp -> i
    int mSearchAddFriend -> j
    int SEARCH_BASIC -> k
    int SEARCH_NAME -> l
    int times -> m
    com.fox.exercise.api.entity.UserDetail self -> n
    java.lang.String editname -> o
    int edittextCnt -> p
    boolean isFirst -> q
    android.widget.EditText add_friend_edittext -> a
    android.widget.TextView mDialogMessage -> r
    boolean mIsFriendsTask -> s
    com.fox.exercise.FriendsFragment$FriendsTask task -> t
    boolean isLocation -> b
    boolean locationFinish -> c
    com.fox.exercise.FriendsFragment$LocationTask lTask -> u
    boolean uploadLocSuccess -> v
    android.text.TextWatcher add_friend_editchangelistener -> w
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initData() -> b
    void startFriendsTask() -> c
    void dismissDialog() -> a
    void cancelAndStartTask() -> d
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void init() -> e
    void waitShow() -> f
    void hideedit() -> g
    void access$0(com.fox.exercise.FriendsFragment,java.lang.String) -> a
    java.lang.String access$1(com.fox.exercise.FriendsFragment) -> a
    int access$2(com.fox.exercise.FriendsFragment) -> b
    void access$3(com.fox.exercise.FriendsFragment,int) -> a
    void access$4(com.fox.exercise.FriendsFragment,int) -> b
    void access$5(com.fox.exercise.FriendsFragment,int) -> c
    void access$6(com.fox.exercise.FriendsFragment) -> c
    boolean access$7(com.fox.exercise.FriendsFragment) -> d
    cn.ingenic.indroidsync.SportsApp access$8(com.fox.exercise.FriendsFragment) -> e
    void access$9(com.fox.exercise.FriendsFragment,boolean) -> a
    android.widget.TextView access$10(com.fox.exercise.FriendsFragment) -> f
    void access$11(com.fox.exercise.FriendsFragment) -> g
    int access$12(com.fox.exercise.FriendsFragment) -> h
    int access$13(com.fox.exercise.FriendsFragment) -> i
    java.util.ArrayList access$14(com.fox.exercise.FriendsFragment) -> j
    android.widget.ListView access$15(com.fox.exercise.FriendsFragment) -> k
    void access$16(com.fox.exercise.FriendsFragment,com.fox.exercise.MyFriendsAdapter) -> a
    com.fox.exercise.MyFriendsAdapter access$17(com.fox.exercise.FriendsFragment) -> l
    com.fox.exercise.view.PullToRefreshListView access$18(com.fox.exercise.FriendsFragment) -> m
    void access$19(com.fox.exercise.FriendsFragment,boolean) -> b
    com.fox.exercise.FriendsFragment$LocationTask access$20(com.fox.exercise.FriendsFragment) -> n
    void access$21(com.fox.exercise.FriendsFragment,com.fox.exercise.FriendsFragment$LocationTask) -> a
com.fox.exercise.FriendsFragment$1 -> com.fox.exercise.jr:
    com.fox.exercise.FriendsFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.FriendsFragment$2 -> com.fox.exercise.js:
    com.fox.exercise.FriendsFragment this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.FriendsFragment$FriendsTask -> com.fox.exercise.jt:
    com.fox.exercise.FriendsFragment this$0 -> a
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.FriendsFragment$LocationTask -> com.fox.exercise.ju:
    com.fox.exercise.FriendsFragment this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.fox.exercise.GridViewAdapter -> com.fox.exercise.jv:
    android.content.Context context -> b
    java.util.List userRankList -> c
    android.view.LayoutInflater mInflater -> d
    float px -> e
    android.content.res.Resources r -> a
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> f
    void clear() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.fox.exercise.GridViewAdapter) -> a
com.fox.exercise.GridViewAdapter$1 -> com.fox.exercise.jw:
    com.fox.exercise.GridViewAdapter this$0 -> a
    com.fox.exercise.api.entity.UserRank val$item -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.GridViewAdapter$ViewHolder -> com.fox.exercise.jx:
    android.widget.RelativeLayout alllayout -> a
    android.widget.ImageView rankTextView -> b
    com.fox.exercise.util.RoundedImage cover_user_photo -> c
    android.widget.TextView nameTextView -> d
    android.widget.TextView numTextView -> e
com.fox.exercise.HistoryAllActivity -> com.fox.exercise.HistoryAllActivity:
    android.app.Dialog mProgressDialog -> k
    android.widget.ListView listView -> l
    android.widget.TextView no_history -> m
    com.fox.exercise.view.PullToRefreshListView mPullListView -> n
    com.fox.exercise.HistorySportAdpter mAdapter -> o
    java.util.ArrayList mList -> p
    com.fox.exercise.HistoryAllActivity$HistoryHandler mHandler -> q
    int userID -> r
    int curUserID -> s
    boolean mIsRefresh -> t
    cn.ingenic.indroidsync.SportsApp mSportsApp -> u
    java.lang.String sessionId -> v
    int lastPosition -> w
    long preTime -> x
    com.fox.exercise.db.SportSubTaskDB db -> y
    android.view.View head_view -> z
    android.widget.TextView yundong_cishu -> A
    android.widget.TextView yundong_laluli -> B
    android.widget.TextView yundong_di_day -> C
    int mTimes -> D
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void initProgressDialog() -> f
    void InitView() -> g
    void onClick(android.view.View) -> onClick
    void launchSportDetail(int) -> b
    void saveDate2DB(com.fox.exercise.pedometer.SportContionTaskDetail) -> a
    void initLoading() -> h
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean access$0(com.fox.exercise.HistoryAllActivity) -> a
    int access$1(com.fox.exercise.HistoryAllActivity) -> b
    int access$2(com.fox.exercise.HistoryAllActivity) -> c
    int access$3(com.fox.exercise.HistoryAllActivity) -> d
    void access$4(com.fox.exercise.HistoryAllActivity,int) -> a
    cn.ingenic.indroidsync.SportsApp access$5(com.fox.exercise.HistoryAllActivity) -> e
    java.lang.String access$6(com.fox.exercise.HistoryAllActivity) -> f
    void access$7(com.fox.exercise.HistoryAllActivity,com.fox.exercise.pedometer.SportContionTaskDetail) -> a
    com.fox.exercise.HistoryAllActivity$HistoryHandler access$8(com.fox.exercise.HistoryAllActivity) -> g
    java.util.ArrayList access$9(com.fox.exercise.HistoryAllActivity) -> h
    android.widget.TextView access$10(com.fox.exercise.HistoryAllActivity) -> i
    com.fox.exercise.HistorySportAdpter access$11(com.fox.exercise.HistoryAllActivity) -> j
    void access$12(com.fox.exercise.HistoryAllActivity,com.fox.exercise.HistorySportAdpter) -> a
    android.widget.ListView access$13(com.fox.exercise.HistoryAllActivity) -> k
    android.app.Dialog access$14(com.fox.exercise.HistoryAllActivity) -> l
    com.fox.exercise.view.PullToRefreshListView access$15(com.fox.exercise.HistoryAllActivity) -> m
    void access$16(com.fox.exercise.HistoryAllActivity,boolean) -> a
    android.widget.TextView access$17(com.fox.exercise.HistoryAllActivity) -> n
    android.widget.TextView access$18(com.fox.exercise.HistoryAllActivity) -> o
    android.widget.TextView access$19(com.fox.exercise.HistoryAllActivity) -> p
    void access$20(com.fox.exercise.HistoryAllActivity,int) -> b
    void access$21(com.fox.exercise.HistoryAllActivity,int) -> c
com.fox.exercise.HistoryAllActivity$1 -> com.fox.exercise.jy:
    com.fox.exercise.HistoryAllActivity this$0 -> a
    com.fox.exercise.api.entity.UserDetail doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.UserDetail) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.HistoryAllActivity$2 -> com.fox.exercise.jz:
    com.fox.exercise.HistoryAllActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.HistoryAllActivity$3 -> com.fox.exercise.ka:
    com.fox.exercise.HistoryAllActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.HistoryAllActivity$GetUploadThread -> com.fox.exercise.kb:
    com.fox.exercise.HistoryAllActivity this$0 -> a
    void run() -> run
com.fox.exercise.HistoryAllActivity$HistoryHandler -> com.fox.exercise.kc:
    com.fox.exercise.HistoryAllActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.HistorySportAdpter -> com.fox.exercise.kd:
    java.util.ArrayList mList -> e
    android.content.Context mContext -> f
    android.view.LayoutInflater mInflater -> g
    int curUid -> h
    int uid -> i
    int time -> j
    double speed -> k
    cn.ingenic.indroidsync.SportsApp mSportsApp -> l
    com.fox.exercise.ImageDownloader mDownloader -> m
    com.fox.exercise.ImageDownloader mIconDownloader -> n
    int num -> o
    android.widget.TextView sport_distance -> p
    android.widget.TextView sports_time -> q
    android.widget.TextView burn_calories -> r
    android.widget.TextView average_speed -> s
    android.widget.TextView title_time -> t
    android.widget.TextView step_counter -> u
    android.widget.TextView title_sport_num -> v
    android.widget.TextView average_history -> w
    android.widget.TextView Combustion_history -> x
    android.widget.TextView time_history -> y
    android.widget.TextView Distance_history -> z
    android.widget.TextView sport_type -> A
    android.widget.TextView sports_calors -> B
    java.lang.String cutten_data -> a
    java.lang.String next_data -> b
    java.util.ArrayList sport_nums -> c
    java.util.HashMap sportnum -> d
    int[] sportTypeId -> C
    int[] swimTypeId -> D
    int j -> E
    java.lang.String[] name_sports_type -> F
    void prepareTitles() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int CalcStepCounter(int,int) -> a
    boolean needTitle(int) -> a
    void historyColor() -> b
com.fox.exercise.ImageDownloader -> com.fox.exercise.ke:
    int IMAGE_DEFAULT_WIDTH -> b
    int IMAGE_DEFAULT_HEIGHT -> c
    int type -> d
    com.fox.exercise.FileCache fileCache -> a
    com.fox.exercise.ImageDownloader mInstance -> e
    com.fox.exercise.ImageDownloader getInstance() -> a
    void setSize(int,int) -> a
    void setType(int) -> a
    void download(java.lang.String,android.widget.ImageView,android.widget.ProgressBar) -> a
    void forceDownload(java.lang.String,android.widget.ImageView,android.widget.ProgressBar) -> b
    boolean cancelPotentialDownload(java.lang.String,android.widget.ImageView) -> a
    android.graphics.Bitmap getLocalBitmap(java.lang.String) -> a
    android.graphics.Bitmap downloadBitmap(java.lang.String) -> b
    com.fox.exercise.ImageDownloader$BitmapDownloaderTask getBitmapDownloaderTask(android.widget.ImageView) -> b
    android.graphics.Bitmap decodeFile(java.lang.String) -> c
    com.fox.exercise.ImageDownloader$BitmapDownloaderTask access$0(android.widget.ImageView) -> a
    int access$1(com.fox.exercise.ImageDownloader) -> a
com.fox.exercise.ImageDownloader$BitmapDownloaderTask -> com.fox.exercise.kf:
    java.lang.String url -> b
    java.lang.ref.WeakReference imageViewWeakReference -> c
    android.widget.ProgressBar mProgressBar -> d
    com.fox.exercise.ImageDownloader this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$2(com.fox.exercise.ImageDownloader$BitmapDownloaderTask) -> a
com.fox.exercise.ImageDownloader$DownloadedDrawable -> com.fox.exercise.kg:
    java.lang.ref.WeakReference bitmapDownloaderTaskReference -> a
    com.fox.exercise.ImageDownloader$BitmapDownloaderTask getBitmapDownloaderTask() -> a
com.fox.exercise.ImageHandler -> com.fox.exercise.kh:
    android.net.Uri imageUri -> a
    float mLumValue -> x
    float mSaturationValue -> y
    float mHueValue -> z
    java.util.ArrayList mBmpItems -> b
    java.util.ArrayList mBmpItems_with_border -> c
    java.util.ArrayList mBmpItemsThumb -> d
    java.util.ArrayList mImagePathList -> e
    android.graphics.Bitmap mBitmapSrc -> f
    int mCurProgressSkin -> g
    int mCurProgressWhiten -> h
    int mCurProgressDetails -> i
    int mCurProgressTemperature -> j
    int mPreProgressSkin -> k
    int mPreProgressWhiten -> l
    int mPreProgressDetails -> m
    int mPreProgressTemperature -> n
    float mCurWhiteGain -> A
    float mCurWhiteBias -> B
    float mCurDetailsAmount -> C
    float mCurTemperature -> D
    float mFinalWhiteGain -> E
    float mFinalWhiteBias -> F
    float mFinalDetailsAmount -> G
    float mFinalTemperature -> H
    int mCurProgressEyeRange -> o
    int mCurProgressEyeStrength -> p
    int mCurProgressLiquidRange -> q
    int mCurProgressLiquidStrength -> r
    float mCurLiquidRange -> s
    float mCurLiquidStrength -> t
    float mCurFisheyeRange -> u
    float mCurFisheyeStrength -> v
    float[] red_color -> w
    int pixelSize -> I
    android.graphics.Bitmap reverseBitmap(android.graphics.Bitmap,int) -> a
com.fox.exercise.ImageManager -> com.fox.exercise.ImageManager:
    android.net.Uri STORAGE_URI -> c
    java.lang.String CAMERA_IMAGE_BUCKET_NAME -> a
    java.lang.String CAMERA_IMAGE_BUCKET_ID -> b
    java.lang.String getBucketId(java.lang.String) -> a
com.fox.exercise.ImageManager$DataLocation -> com.fox.exercise.ki:
    com.fox.exercise.ImageManager$DataLocation NONE -> a
    com.fox.exercise.ImageManager$DataLocation INTERNAL -> b
    com.fox.exercise.ImageManager$DataLocation EXTERNAL -> c
    com.fox.exercise.ImageManager$DataLocation ALL -> d
    com.fox.exercise.ImageManager$DataLocation[] ENUM$VALUES -> e
    com.fox.exercise.ImageManager$DataLocation[] values() -> values
    com.fox.exercise.ImageManager$DataLocation valueOf(java.lang.String) -> valueOf
com.fox.exercise.ImageManager$ImageListParam -> com.fox.exercise.ImageManager$ImageListParam:
    com.fox.exercise.ImageManager$DataLocation mLocation -> a
    int mInclusion -> b
    int mSort -> c
    java.lang.String mBucketId -> d
    android.net.Uri mSingleImageUri -> e
    boolean mIsEmptyImageList -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
com.fox.exercise.ImageManager$ImageListParam$1 -> com.fox.exercise.kj:
    com.fox.exercise.ImageManager$ImageListParam createFromParcel(android.os.Parcel) -> a
    com.fox.exercise.ImageManager$ImageListParam[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.fox.exercise.IntroductFragment -> com.fox.exercise.kk:
    android.widget.TextView action_time -> c
    android.widget.TextView action_rules -> d
    com.fox.exercise.api.entity.ActionInfo introductActionInfo -> e
    android.app.Dialog mLoadProgressDialog -> a
    android.widget.ImageView activity_detail_content -> f
    com.fox.exercise.ImageDownloader mDownloader -> g
    android.os.Handler myHandler -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void waitShow() -> a
    void waitCloset() -> b
    void access$0(com.fox.exercise.IntroductFragment,com.fox.exercise.api.entity.ActionInfo) -> a
    com.fox.exercise.api.entity.ActionInfo access$1(com.fox.exercise.IntroductFragment) -> a
    android.widget.TextView access$2(com.fox.exercise.IntroductFragment) -> b
    android.widget.TextView access$3(com.fox.exercise.IntroductFragment) -> c
    com.fox.exercise.ImageDownloader access$4(com.fox.exercise.IntroductFragment) -> d
    android.widget.ImageView access$5(com.fox.exercise.IntroductFragment) -> e
com.fox.exercise.IntroductFragment$1 -> com.fox.exercise.kl:
    com.fox.exercise.IntroductFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.InviteSportsActivity -> com.fox.exercise.InviteSportsActivity:
    android.content.Context context -> l
    com.fox.exercise.view.PullToRefreshListView mPullListView -> m
    com.fox.exercise.InviteSportsActivity$InviteSportsAdapter mAdapter -> n
    android.widget.ListView mListView -> o
    java.util.ArrayList mList -> p
    android.app.Dialog loadProgressDialog -> q
    cn.ingenic.indroidsync.SportsApp mSportsApp -> r
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> s
    boolean isRefresh -> t
    int times -> u
    long preTime -> v
    android.os.Handler handler -> k
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void initViews() -> f
    void switchDialog(boolean) -> a
    com.fox.exercise.InviteSportsActivity$InviteSportsAdapter access$0(com.fox.exercise.InviteSportsActivity) -> a
    java.util.ArrayList access$1(com.fox.exercise.InviteSportsActivity) -> b
    android.content.Context access$2(com.fox.exercise.InviteSportsActivity) -> c
    void access$3(com.fox.exercise.InviteSportsActivity,com.fox.exercise.InviteSportsActivity$InviteSportsAdapter) -> a
    android.widget.ListView access$4(com.fox.exercise.InviteSportsActivity) -> d
    boolean access$5(com.fox.exercise.InviteSportsActivity) -> e
    com.fox.exercise.view.PullToRefreshListView access$6(com.fox.exercise.InviteSportsActivity) -> f
    void access$7(com.fox.exercise.InviteSportsActivity,int) -> a
    cn.ingenic.indroidsync.SportsApp access$8(com.fox.exercise.InviteSportsActivity) -> g
    int access$9(com.fox.exercise.InviteSportsActivity) -> h
    com.fox.exercise.SportsExceptionHandler access$10(com.fox.exercise.InviteSportsActivity) -> i
    void access$11(com.fox.exercise.InviteSportsActivity,boolean) -> a
com.fox.exercise.InviteSportsActivity$1 -> com.fox.exercise.km:
    com.fox.exercise.InviteSportsActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.InviteSportsActivity$1$1 -> com.fox.exercise.kn:
    com.fox.exercise.InviteSportsActivity$1 this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.InviteSportsActivity$2 -> com.fox.exercise.ko:
    com.fox.exercise.InviteSportsActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.InviteSportsActivity$3 -> com.fox.exercise.kp:
    com.fox.exercise.InviteSportsActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.InviteSportsActivity$GetInviteSportThread -> com.fox.exercise.kq:
    com.fox.exercise.InviteSportsActivity this$0 -> a
    void run() -> run
com.fox.exercise.InviteSportsActivity$InviteSportsAdapter -> com.fox.exercise.kr:
    java.util.ArrayList mList -> b
    android.content.Context mContext -> c
    android.view.LayoutInflater mInflater -> d
    int indexGL -> e
    int indexRZ -> f
    com.fox.exercise.ImageDownloader mIconDownloader -> g
    com.fox.exercise.InviteSportsActivity this$0 -> a
    int getCount() -> getCount
    com.fox.exercise.api.entity.InviteUser getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    com.fox.exercise.InviteSportsActivity access$1(com.fox.exercise.InviteSportsActivity$InviteSportsAdapter) -> a
com.fox.exercise.InviteSportsActivity$InviteSportsAdapter$1 -> com.fox.exercise.ks:
    com.fox.exercise.InviteSportsActivity$InviteSportsAdapter this$1 -> a
    com.fox.exercise.api.entity.InviteUser val$inviteUser -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.InviteSportsActivity$InviteSportsAdapter$ViewHolder -> com.fox.exercise.kt:
    com.fox.exercise.util.RoundedImage icon -> b
    android.widget.TextView timeTxt -> c
    com.fox.exercise.InviteSportsActivity$InviteSportsAdapter this$1 -> a
    void access$1(com.fox.exercise.InviteSportsActivity$InviteSportsAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> a
    void access$2(com.fox.exercise.InviteSportsActivity$InviteSportsAdapter$ViewHolder,android.widget.TextView) -> a
    com.fox.exercise.util.RoundedImage access$3(com.fox.exercise.InviteSportsActivity$InviteSportsAdapter$ViewHolder) -> a
    android.widget.TextView access$4(com.fox.exercise.InviteSportsActivity$InviteSportsAdapter$ViewHolder) -> b
com.fox.exercise.LocationInfo -> com.fox.exercise.ku:
    java.lang.String latitude -> a
    java.lang.String longitude -> b
    java.lang.String spName -> c
    java.lang.String spAuto -> d
    java.lang.String spNotice -> e
com.fox.exercise.MainFragmentActivity -> com.fox.exercise.MainFragmentActivity:
    android.widget.Toast toastnet -> D
    com.fox.exercise.api.entity.UserDetail detail -> E
    com.fox.exercise.ResideMenu resideMenu -> F
    com.fox.exercise.MainFragmentActivity mContext -> G
    com.fox.exercise.ResideMenuItem itemMySports -> H
    com.fox.exercise.ResideMenuItem itemRank -> I
    com.fox.exercise.ResideMenuItem itemNear -> J
    com.fox.exercise.ResideMenuItem itemFriend -> K
    com.fox.exercise.ResideMenuItem itemFindOther -> L
    com.fox.exercise.ResideMenuItem itemPeiJian -> M
    com.fox.exercise.ResideMenuItem itemCollMall -> N
    java.util.List itemList -> n
    android.support.v4.app.FragmentManager fragmentManager -> O
    android.widget.LinearLayout ssLayout -> P
    android.widget.LinearLayout ruleLayout -> Q
    android.widget.TextView nameText -> R
    android.widget.ImageView userSex -> S
    android.widget.TextView sports_money -> T
    android.widget.TextView photo_msg_count -> U
    android.widget.TextView ruleTextView -> V
    com.fox.exercise.util.RoundedImage userPhoto -> W
    com.fox.exercise.pedometer.ImageWorkManager mImageWorkerMan_Icon -> X
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker_Icon -> Y
    int photo_view -> Z
    int itemMySports_view -> aa
    int itemRank_view -> ab
    int itemNear_view -> ac
    int itemFriend_view -> ad
    int itemHealthTest_view -> ae
    int itemPlan_view -> af
    int itemCollMall_view -> ag
    int itemRule_view -> ah
    int itemFindOther_view -> ai
    int itemPeiJian_view -> aj
    int rule_layout_view -> ak
    com.fox.exercise.CoolCurrencyRules coolCurrencyRules -> o
    com.fox.exercise.StateActivity stateActivity -> p
    com.fox.exercise.FoxSportsSetting foxSportsSetting -> q
    com.fox.exercise.YunHuWebViewActivity sportsShopMall -> r
    com.fox.exercise.ActivityList activityList -> s
    com.fox.exercise.SportsGroup sportsGroup -> t
    com.fox.exercise.FindOtherFragment findOtherFragment -> u
    java.lang.String mSessionID -> al
    int mUid -> am
    cn.ingenic.indroidsync.SportsApp app -> an
    android.app.NotificationManager mNotifMan -> ao
    boolean m_bKeyRight -> v
    android.app.Dialog alertDialog -> ap
    boolean mErrorExist -> w
    boolean mAfterLogin -> x
    java.util.List itemLists -> y
    com.fox.exercise.MainFragmentActivity$SDKReceiver mReceiver -> aq
    int mMap -> ar
    android.content.SharedPreferences foxSportSettingMap -> as
    int coins -> at
    boolean isRegist -> au
    android.widget.LinearLayout mysport_layout -> av
    android.widget.LinearLayout start_sport_layout -> aw
    android.widget.LinearLayout sports_group_layout -> ax
    android.widget.LinearLayout sports_health_layout -> ay
    android.widget.ImageView mysport_image -> az
    android.widget.ImageView start_sport_image -> aA
    android.widget.ImageView sports_group_image -> aB
    android.widget.ImageView sports_health_image -> aC
    android.widget.TextView mysport_text -> aD
    android.widget.TextView start_sport_text -> aE
    android.widget.TextView sports_group_text -> aF
    android.widget.TextView sports_health_text -> aG
    com.fox.exercise.newversion.act.MyFirstSportFragment myFirstSportFragment -> z
    com.fox.exercise.newversion.act.SportCircleMainFragment sportCircleMainFragment -> A
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment startSportFirstGaoDeFragment -> B
    int isIndexTouch -> C
    android.widget.RelativeLayout mPopMenuBack -> aH
    android.widget.RelativeLayout mainLL -> aI
    android.content.SharedPreferences msharedPreferences -> aJ
    android.app.Dialog mLoadProgressDialog -> aK
    android.widget.TextView mDialogMessage -> aL
    android.widget.PopupWindow myWindow -> aM
    android.widget.LinearLayout myView -> aN
    com.fox.exercise.newversion.act.IndexHealthFrg indexHealthFragment -> aO
    com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg indexTrainPlanFragment -> aP
    android.os.Handler mainHandler -> aQ
    com.fox.exercise.api.WatchService wService -> aR
    android.content.ServiceConnection wConnection -> aS
    com.fox.exercise.newversion.FirstStepService mService -> aT
    android.content.ServiceConnection mConnection -> aU
    com.fox.exercise.newversion.FirstStepService$ICallback mCallback -> aV
    void setOtherViewBackground(android.view.View) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onStart() -> onStart
    void onPause() -> onPause
    void initFragments() -> c
    void setUpMenu() -> d
    void initPortrait() -> e
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onClick(android.view.View) -> onClick
    void onAttachedToWindow() -> onAttachedToWindow
    void setSelection(int) -> a
    void hideFragments(android.support.v4.app.FragmentTransaction) -> a
    com.fox.exercise.ResideMenu getResideMenu() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void exitPopWindow(java.lang.String) -> b
    int CalcStepCounter() -> f
    java.lang.String getTodayDate() -> g
    android.app.Dialog onCreateDialog(int,android.os.Bundle) -> onCreateDialog
    boolean isOPen(android.content.Context) -> a
    void UpdateApp() -> h
    void clearSelection() -> i
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDismiss() -> onDismiss
    void waitShowDialog() -> j
    com.fox.exercise.ResideMenuItem access$1(com.fox.exercise.MainFragmentActivity) -> a
    int access$2(com.fox.exercise.MainFragmentActivity) -> b
    void access$3(com.fox.exercise.MainFragmentActivity,int) -> a
    android.widget.TextView access$4(com.fox.exercise.MainFragmentActivity) -> c
    void access$5(com.fox.exercise.MainFragmentActivity) -> d
    android.widget.TextView access$6(com.fox.exercise.MainFragmentActivity) -> e
    void access$7(com.fox.exercise.MainFragmentActivity,com.fox.exercise.api.entity.UserDetail) -> a
    com.fox.exercise.api.entity.UserDetail access$8(com.fox.exercise.MainFragmentActivity) -> f
    android.widget.ImageView access$9(com.fox.exercise.MainFragmentActivity) -> g
    void access$10(com.fox.exercise.MainFragmentActivity,boolean) -> a
    void access$11(com.fox.exercise.MainFragmentActivity) -> h
    void access$12(com.fox.exercise.MainFragmentActivity,int) -> b
    void access$13(com.fox.exercise.MainFragmentActivity,com.fox.exercise.newversion.act.IndexHealthFrg) -> a
    void access$14(com.fox.exercise.MainFragmentActivity,com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> a
    void access$15(com.fox.exercise.MainFragmentActivity,com.fox.exercise.api.WatchService) -> a
    com.fox.exercise.api.WatchService access$16(com.fox.exercise.MainFragmentActivity) -> i
    void access$17(com.fox.exercise.MainFragmentActivity,com.fox.exercise.newversion.FirstStepService) -> a
    com.fox.exercise.newversion.FirstStepService access$18(com.fox.exercise.MainFragmentActivity) -> j
    com.fox.exercise.newversion.FirstStepService$ICallback access$19(com.fox.exercise.MainFragmentActivity) -> k
    cn.ingenic.indroidsync.SportsApp access$20(com.fox.exercise.MainFragmentActivity) -> l
    int access$21(com.fox.exercise.MainFragmentActivity) -> m
    android.app.Dialog access$22(com.fox.exercise.MainFragmentActivity) -> n
    android.widget.PopupWindow access$23(com.fox.exercise.MainFragmentActivity) -> o
    android.widget.LinearLayout access$24(com.fox.exercise.MainFragmentActivity) -> p
    android.widget.RelativeLayout access$25(com.fox.exercise.MainFragmentActivity) -> q
    void access$26(com.fox.exercise.MainFragmentActivity) -> r
    android.app.NotificationManager access$27(com.fox.exercise.MainFragmentActivity) -> s
com.fox.exercise.MainFragmentActivity$1 -> com.fox.exercise.kv:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.MainFragmentActivity$2 -> com.fox.exercise.kw:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fox.exercise.MainFragmentActivity$3 -> com.fox.exercise.kx:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fox.exercise.MainFragmentActivity$4 -> com.fox.exercise.ky:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    void stepsChanged(int) -> a
    void caloriesChanged(float) -> a
com.fox.exercise.MainFragmentActivity$5 -> com.fox.exercise.kz:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    android.content.SharedPreferences$Editor val$edit -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.MainFragmentActivity$6 -> com.fox.exercise.la:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    android.content.SharedPreferences$Editor val$edit -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.MainFragmentActivity$7 -> com.fox.exercise.lb:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.MainFragmentActivity$8 -> com.fox.exercise.lc:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.MainFragmentActivity$ExitClick -> com.fox.exercise.ld:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.MainFragmentActivity$SDKReceiver -> com.fox.exercise.MainFragmentActivity$SDKReceiver:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.MainFragmentActivity$UpLoadTempTask -> com.fox.exercise.le:
    com.fox.exercise.MainFragmentActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.MapGaodeActivity -> com.fox.exercise.MapGaodeActivity:
    android.support.v4.view.ViewPager mPager -> n
    java.util.ArrayList fragmentList -> o
    com.fox.exercise.view.MoffMapSwitchView mapSwitchView -> p
    boolean isSwith -> q
    cn.ingenic.indroidsync.SportsApp mSportsApp -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void InitViewPager() -> b
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onPause() -> onPause
    boolean access$0(com.fox.exercise.MapGaodeActivity) -> a
    void access$1(com.fox.exercise.MapGaodeActivity,boolean) -> a
    com.fox.exercise.view.MoffMapSwitchView access$2(com.fox.exercise.MapGaodeActivity) -> b
    android.support.v4.view.ViewPager access$3(com.fox.exercise.MapGaodeActivity) -> c
com.fox.exercise.MapGaodeActivity$1 -> com.fox.exercise.lf:
    com.fox.exercise.MapGaodeActivity this$0 -> a
    void onCheckedChanged(boolean) -> a
com.fox.exercise.MapGaodeActivity$2 -> com.fox.exercise.lg:
    com.fox.exercise.MapGaodeActivity this$0 -> a
    void onCheckedPage() -> a
com.fox.exercise.MapGaodeActivity$MyFragmentPagerAdapter -> com.fox.exercise.lh:
    java.util.ArrayList list -> a
    com.fox.exercise.MapGaodeActivity this$0 -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.fox.exercise.MapGaodeActivity$MyOnPageChangeListener -> com.fox.exercise.li:
    com.fox.exercise.MapGaodeActivity this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageSelected(int) -> onPageSelected
com.fox.exercise.MofflineExpand -> com.fox.exercise.lj:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> a
    android.widget.ExpandableListView expandableListView -> b
    com.baidu.mapapi.map.offline.MKOfflineMap mofflineMap -> c
    java.util.List city -> d
    android.content.SharedPreferences spf -> e
    com.fox.exercise.MofflineMapPage mapPage -> f
    com.fox.exercise.MofflineExpand$onCheckedPageListener onCheckedPageListener -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onResume() -> onResume
    void onPause() -> onPause
    void init() -> a
    java.lang.String formatDataSize(int) -> a
    void setPageListener(com.fox.exercise.MofflineExpand$onCheckedPageListener) -> a
    void onDestroy() -> onDestroy
    com.baidu.mapapi.map.offline.MKOfflineMap access$0(com.fox.exercise.MofflineExpand) -> a
    android.widget.ExpandableListView access$1(com.fox.exercise.MofflineExpand) -> b
    java.util.List access$2(com.fox.exercise.MofflineExpand) -> c
    cn.ingenic.indroidsync.SportsApp access$3(com.fox.exercise.MofflineExpand) -> d
    com.fox.exercise.MofflineExpand$onCheckedPageListener access$4(com.fox.exercise.MofflineExpand) -> e
com.fox.exercise.MofflineExpand$1 -> com.fox.exercise.lk:
    com.fox.exercise.MofflineExpand this$0 -> a
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.fox.exercise.MofflineExpand$2 -> com.fox.exercise.ll:
    com.fox.exercise.MofflineExpand this$0 -> a
    java.util.List val$Province -> b
    void onGroupExpand(int) -> onGroupExpand
com.fox.exercise.MofflineExpand$3 -> com.fox.exercise.lm:
    com.fox.exercise.MofflineExpand this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.fox.exercise.MofflineExpand$MyExpandableListAdapter -> com.fox.exercise.ln:
    android.view.LayoutInflater listContainer -> b
    android.content.Context context -> c
    java.util.List city -> d
    java.util.List Province -> e
    com.fox.exercise.MofflineExpand this$0 -> a
    int getGroupCount() -> getGroupCount
    java.lang.Object getGroup(int) -> getGroup
    long getGroupId(int) -> getGroupId
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
    void onGroupCollapsed(int) -> onGroupCollapsed
    void onGroupExpanded(int) -> onGroupExpanded
com.fox.exercise.MofflineExpand$onCheckedPageListener -> com.fox.exercise.lo:
    void onCheckedPage() -> a
com.fox.exercise.MofflineGaodeExpand -> com.fox.exercise.lp:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> c
    java.util.List provinceList -> d
    java.util.HashMap cityMap -> e
    com.amap.api.maps.MapView mapView -> f
    com.amap.api.maps.offlinemap.OfflineMapManager amapManager -> g
    boolean isStart -> h
    boolean[] isOpen -> i
    com.fox.exercise.MofflineGaodeExpand$onCheckedPageGaodeListener onCheckedPageListener -> j
    int i -> a
    android.widget.ExpandableListAdapter adapter -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onResume() -> onResume
    void onPause() -> onPause
    void init() -> a
    com.amap.api.maps.offlinemap.OfflineMapCity getCicy(com.amap.api.maps.offlinemap.OfflineMapProvince) -> a
    void setPageGaodeListener(com.fox.exercise.MofflineGaodeExpand$onCheckedPageGaodeListener) -> a
    java.util.List access$0(com.fox.exercise.MofflineGaodeExpand) -> a
    java.util.HashMap access$1(com.fox.exercise.MofflineGaodeExpand) -> b
    boolean[] access$2(com.fox.exercise.MofflineGaodeExpand) -> c
    cn.ingenic.indroidsync.SportsApp access$3(com.fox.exercise.MofflineGaodeExpand) -> d
    com.fox.exercise.MofflineGaodeExpand$onCheckedPageGaodeListener access$4(com.fox.exercise.MofflineGaodeExpand) -> e
com.fox.exercise.MofflineGaodeExpand$1 -> com.fox.exercise.lq:
    com.fox.exercise.MofflineGaodeExpand this$0 -> a
    int getGroupCount() -> getGroupCount
    java.lang.Object getGroup(int) -> getGroup
    long getGroupId(int) -> getGroupId
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
com.fox.exercise.MofflineGaodeExpand$1$ViewHolder -> com.fox.exercise.lr:
    android.widget.TextView cityName -> a
    android.widget.TextView citySize -> b
    android.widget.ImageView imageView -> c
    com.fox.exercise.MofflineGaodeExpand$1 this$1 -> d
com.fox.exercise.MofflineGaodeExpand$2 -> com.fox.exercise.ls:
    com.fox.exercise.MofflineGaodeExpand this$0 -> a
    void onDownload(int,int,java.lang.String) -> onDownload
    void onCheckUpdate(boolean,java.lang.String) -> onCheckUpdate
    void onRemove(boolean,java.lang.String,java.lang.String) -> onRemove
com.fox.exercise.MofflineGaodeExpand$3 -> com.fox.exercise.lt:
    com.fox.exercise.MofflineGaodeExpand this$0 -> a
    android.widget.ExpandableListView val$expandableListView -> b
    void onGroupExpand(int) -> onGroupExpand
com.fox.exercise.MofflineGaodeExpand$4 -> com.fox.exercise.lu:
    com.fox.exercise.MofflineGaodeExpand this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.fox.exercise.MofflineGaodeExpand$onCheckedPageGaodeListener -> com.fox.exercise.lv:
    void onCheckedPage() -> a
com.fox.exercise.MofflineListGaodeView -> com.fox.exercise.lw:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> d
    com.baidu.mapapi.map.MapView mapView -> e
    com.amap.api.maps.offlinemap.OfflineMapManager amapManager -> f
    com.fox.exercise.MofflineListGaodeView$LocalMapAdapter lAdapter -> g
    java.util.ArrayList localMapList -> h
    java.util.ArrayList localMapListpProvinces -> i
    java.util.List mList -> j
    int completeCode -> k
    boolean bool -> a
    android.os.Handler handler -> b
    android.os.Handler moffHandler -> c
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void init() -> a
    void updateView() -> b
    void onDestroy() -> onDestroy
    java.util.List access$0(com.fox.exercise.MofflineListGaodeView) -> a
    com.amap.api.maps.offlinemap.OfflineMapManager access$1(com.fox.exercise.MofflineListGaodeView) -> b
    int access$2(com.fox.exercise.MofflineListGaodeView) -> c
    java.util.ArrayList access$3(com.fox.exercise.MofflineListGaodeView) -> d
    void access$4(com.fox.exercise.MofflineListGaodeView,java.util.ArrayList) -> a
    java.util.ArrayList access$5(com.fox.exercise.MofflineListGaodeView) -> e
    void access$6(com.fox.exercise.MofflineListGaodeView,java.util.ArrayList) -> b
com.fox.exercise.MofflineListGaodeView$1 -> com.fox.exercise.lx:
    com.fox.exercise.MofflineListGaodeView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.MofflineListGaodeView$2 -> com.fox.exercise.ly:
    com.fox.exercise.MofflineListGaodeView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.MofflineListGaodeView$3 -> com.fox.exercise.lz:
    com.fox.exercise.MofflineListGaodeView this$0 -> a
    void onDownload(int,int,java.lang.String) -> onDownload
    void onCheckUpdate(boolean,java.lang.String) -> onCheckUpdate
    void onRemove(boolean,java.lang.String,java.lang.String) -> onRemove
com.fox.exercise.MofflineListGaodeView$LocalMapAdapter -> com.fox.exercise.ma:
    com.fox.exercise.MofflineListGaodeView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.fox.exercise.MofflineListGaodeView access$0(com.fox.exercise.MofflineListGaodeView$LocalMapAdapter) -> a
com.fox.exercise.MofflineListGaodeView$LocalMapAdapter$1 -> com.fox.exercise.mb:
    com.fox.exercise.MofflineListGaodeView$LocalMapAdapter this$1 -> a
    int val$item -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.MofflineListGaodeView$MoffGaodeThred -> com.fox.exercise.mc:
    com.fox.exercise.MofflineListGaodeView this$0 -> a
    void run() -> run
com.fox.exercise.MofflineListView -> com.fox.exercise.md:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> a
    com.baidu.mapapi.map.offline.MKOfflineMap mofflineMap -> b
    java.util.ArrayList localMapList -> c
    com.fox.exercise.MofflineListView$LocalMapAdapter lAdapter -> d
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onResume() -> onResume
    void onPause() -> onPause
    void init() -> a
    void updateView() -> b
    void onDestroy() -> onDestroy
    java.util.ArrayList access$0(com.fox.exercise.MofflineListView) -> a
    com.baidu.mapapi.map.offline.MKOfflineMap access$1(com.fox.exercise.MofflineListView) -> b
com.fox.exercise.MofflineListView$1 -> com.fox.exercise.me:
    com.fox.exercise.MofflineListView this$0 -> a
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.fox.exercise.MofflineListView$LocalMapAdapter -> com.fox.exercise.mf:
    com.fox.exercise.MofflineListView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.fox.exercise.MofflineListView access$0(com.fox.exercise.MofflineListView$LocalMapAdapter) -> a
com.fox.exercise.MofflineListView$LocalMapAdapter$1 -> com.fox.exercise.mg:
    com.fox.exercise.MofflineListView$LocalMapAdapter this$1 -> a
    com.baidu.mapapi.map.offline.MKOLUpdateElement val$e -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.MofflineMap -> com.fox.exercise.MofflineMap:
    android.widget.LinearLayout cityLinear -> m
    android.widget.LinearLayout DownloadLinear -> n
    java.util.List city -> o
    com.baidu.mapapi.map.offline.MKOfflineMap mofflineMap -> p
    com.baidu.mapapi.map.MapView mapView -> q
    java.util.ArrayList localMapList -> r
    com.fox.exercise.MofflineMap$LocalMapAdapter lAdapter -> s
    android.content.SharedPreferences spf -> t
    com.baidu.location.LocationClient mLocationClient -> k
    com.baidu.mapapi.map.offline.MKOLUpdateElement currentE -> u
    cn.ingenic.indroidsync.SportsApp mSportsApp -> v
    com.fox.exercise.view.MoffMapSwitchView moff_MAIN -> l
    android.app.Activity mContext -> w
    long preTime -> x
    void init() -> f
    void updateView() -> g
    java.lang.String formatDataSize(int) -> b
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    com.baidu.mapapi.map.offline.MKOfflineMap access$0(com.fox.exercise.MofflineMap) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.MofflineMap) -> b
    android.app.Activity access$2(com.fox.exercise.MofflineMap) -> c
    android.widget.LinearLayout access$3(com.fox.exercise.MofflineMap) -> d
    android.widget.LinearLayout access$4(com.fox.exercise.MofflineMap) -> e
    java.util.ArrayList access$5(com.fox.exercise.MofflineMap) -> f
    java.util.List access$6(com.fox.exercise.MofflineMap) -> g
com.fox.exercise.MofflineMap$1 -> com.fox.exercise.mh:
    com.fox.exercise.MofflineMap this$0 -> a
    void onCheckedChanged(boolean) -> a
com.fox.exercise.MofflineMap$2 -> com.fox.exercise.mi:
    com.fox.exercise.MofflineMap this$0 -> a
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.fox.exercise.MofflineMap$3 -> com.fox.exercise.mj:
    com.fox.exercise.MofflineMap this$0 -> a
    java.util.List val$Province -> b
    android.widget.ExpandableListView val$expandableListView -> c
    void onGroupExpand(int) -> onGroupExpand
com.fox.exercise.MofflineMap$4 -> com.fox.exercise.mk:
    com.fox.exercise.MofflineMap this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.fox.exercise.MofflineMap$LocalMapAdapter -> com.fox.exercise.ml:
    com.fox.exercise.MofflineMap this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.fox.exercise.MofflineMap access$0(com.fox.exercise.MofflineMap$LocalMapAdapter) -> a
com.fox.exercise.MofflineMap$LocalMapAdapter$1 -> com.fox.exercise.mm:
    com.fox.exercise.MofflineMap$LocalMapAdapter this$1 -> a
    com.baidu.mapapi.map.offline.MKOLUpdateElement val$e -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.MofflineMap$MyExpandableListAdapter -> com.fox.exercise.mn:
    android.view.LayoutInflater listContainer -> b
    android.content.Context context -> c
    java.util.List city -> d
    java.util.List Province -> e
    com.fox.exercise.MofflineMap this$0 -> a
    int getGroupCount() -> getGroupCount
    java.lang.Object getGroup(int) -> getGroup
    long getGroupId(int) -> getGroupId
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
    void onGroupCollapsed(int) -> onGroupCollapsed
    void onGroupExpanded(int) -> onGroupExpanded
com.fox.exercise.MofflineMapPage -> com.fox.exercise.MofflineMapPage:
    android.support.v4.view.ViewPager mPager -> n
    java.util.ArrayList fragmentList -> o
    com.fox.exercise.view.MoffMapSwitchView mapSwitchView -> p
    boolean isSwith -> q
    long preTime -> r
    cn.ingenic.indroidsync.SportsApp mSportsApp -> s
    void onCreate(android.os.Bundle) -> onCreate
    void InitViewPager() -> b
    void onResume() -> onResume
    void onPause() -> onPause
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    boolean access$0(com.fox.exercise.MofflineMapPage) -> a
    void access$1(com.fox.exercise.MofflineMapPage,boolean) -> a
    com.fox.exercise.view.MoffMapSwitchView access$2(com.fox.exercise.MofflineMapPage) -> b
    android.support.v4.view.ViewPager access$3(com.fox.exercise.MofflineMapPage) -> c
com.fox.exercise.MofflineMapPage$1 -> com.fox.exercise.mo:
    com.fox.exercise.MofflineMapPage this$0 -> a
    void onCheckedChanged(boolean) -> a
com.fox.exercise.MofflineMapPage$2 -> com.fox.exercise.mp:
    com.fox.exercise.MofflineMapPage this$0 -> a
    void onCheckedPage() -> a
com.fox.exercise.MofflineMapPage$MyFragmentPagerAdapter -> com.fox.exercise.mq:
    java.util.ArrayList list -> a
    com.fox.exercise.MofflineMapPage this$0 -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.fox.exercise.MofflineMapPage$MyOnPageChangeListener -> com.fox.exercise.mr:
    com.fox.exercise.MofflineMapPage this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageSelected(int) -> onPageSelected
com.fox.exercise.MyDevice -> com.fox.exercise.MyDevice:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onPause() -> onPause
com.fox.exercise.MyFriendsAdapter -> com.fox.exercise.ms:
    android.content.Context mContext -> a
    java.util.ArrayList mList -> b
    com.fox.exercise.ImageDownloader mDownloader -> c
    android.view.LayoutInflater mInflater -> d
    cn.ingenic.indroidsync.SportsApp mSportsApp -> e
    android.app.Dialog loadProgressDialog -> f
    android.widget.TextView message -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.MyFriendsAdapter) -> a
    android.content.Context access$1(com.fox.exercise.MyFriendsAdapter) -> b
    java.util.ArrayList access$2(com.fox.exercise.MyFriendsAdapter) -> c
com.fox.exercise.MyFriendsAdapter$1 -> com.fox.exercise.mt:
    com.fox.exercise.MyFriendsAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.MyFriendsAdapter$ViewHolder -> com.fox.exercise.mu:
    android.widget.TextView distance -> b
    com.fox.exercise.util.RoundedImage iconImg -> c
    android.widget.TextView nameTxt -> d
    com.fox.exercise.MyFriendsAdapter this$0 -> a
    void access$1(com.fox.exercise.MyFriendsAdapter$ViewHolder,android.widget.TextView) -> a
    void access$2(com.fox.exercise.MyFriendsAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> a
    void access$3(com.fox.exercise.MyFriendsAdapter$ViewHolder,android.widget.TextView) -> b
    com.fox.exercise.util.RoundedImage access$4(com.fox.exercise.MyFriendsAdapter$ViewHolder) -> a
    android.widget.TextView access$5(com.fox.exercise.MyFriendsAdapter$ViewHolder) -> b
    android.widget.TextView access$6(com.fox.exercise.MyFriendsAdapter$ViewHolder) -> c
com.fox.exercise.MyPagerAdapter -> com.fox.exercise.mv:
    java.util.List viewList -> a
    int getCount() -> getCount
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
com.fox.exercise.NearByListViewAdapter -> com.fox.exercise.mw:
    android.content.Context mContext -> a
    java.util.ArrayList mList -> b
    com.fox.exercise.ImageDownloader mDownloader -> c
    android.view.LayoutInflater mInflater -> d
    android.widget.ImageView followBtn -> e
    int position_new -> f
    cn.ingenic.indroidsync.SportsApp mSportsApp -> g
    android.view.View$OnClickListener clicklisten -> h
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.NearByListViewAdapter) -> a
    android.content.Context access$1(com.fox.exercise.NearByListViewAdapter) -> b
com.fox.exercise.NearByListViewAdapter$1 -> com.fox.exercise.mx:
    com.fox.exercise.NearByListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.NearByListViewAdapter$2 -> com.fox.exercise.my:
    com.fox.exercise.NearByListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.NewHuoDongActivity -> com.fox.exercise.NewHuoDongActivity:
    com.fox.exercise.view.PullToRefreshListView activitylistView -> x
    android.widget.ListView mListView -> y
    com.fox.exercise.ActivityListAdapter activityAdapter -> z
    java.util.List actionLists -> A
    int times -> B
    android.widget.TextView no_data -> C
    cn.ingenic.indroidsync.SportsApp mSportsApp -> D
    java.lang.String activityTime -> E
    java.text.SimpleDateFormat formatter -> F
    java.util.Date curDate -> G
    java.util.Date activityDate -> H
    android.graphics.ColorMatrix matrix -> I
    android.graphics.ColorMatrixColorFilter filter -> J
    android.content.Context mContext -> K
    android.app.Dialog mLoadProgressDialog -> w
    android.widget.AdapterView$OnItemClickListener listViewClick -> L
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void Init() -> i
    void GetActionData() -> j
    void waitShow() -> g
    void waitCloset() -> h
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.NewHuoDongActivity) -> a
    java.util.List access$1(com.fox.exercise.NewHuoDongActivity) -> b
    void access$2(com.fox.exercise.NewHuoDongActivity,java.lang.String) -> a
    java.lang.String access$3(com.fox.exercise.NewHuoDongActivity) -> c
    java.text.SimpleDateFormat access$4(com.fox.exercise.NewHuoDongActivity) -> d
    void access$5(com.fox.exercise.NewHuoDongActivity,java.util.Date) -> a
    java.util.Date access$6(com.fox.exercise.NewHuoDongActivity) -> e
    java.util.Date access$7(com.fox.exercise.NewHuoDongActivity) -> f
    android.content.Context access$8(com.fox.exercise.NewHuoDongActivity) -> g
    int access$9(com.fox.exercise.NewHuoDongActivity) -> h
    com.fox.exercise.ActivityListAdapter access$10(com.fox.exercise.NewHuoDongActivity) -> i
    void access$11(com.fox.exercise.NewHuoDongActivity,com.fox.exercise.ActivityListAdapter) -> a
    android.widget.ListView access$12(com.fox.exercise.NewHuoDongActivity) -> j
    com.fox.exercise.view.PullToRefreshListView access$13(com.fox.exercise.NewHuoDongActivity) -> k
    android.widget.TextView access$14(com.fox.exercise.NewHuoDongActivity) -> l
    void access$15(com.fox.exercise.NewHuoDongActivity,int) -> a
    void access$16(com.fox.exercise.NewHuoDongActivity) -> m
com.fox.exercise.NewHuoDongActivity$1 -> com.fox.exercise.mz:
    com.fox.exercise.NewHuoDongActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.NewHuoDongActivity$2 -> com.fox.exercise.na:
    com.fox.exercise.NewHuoDongActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.NewHuoDongActivity$GetActionDataTask -> com.fox.exercise.nb:
    com.fox.exercise.NewHuoDongActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.OnScreenHint -> com.fox.exercise.nc:
    int mGravity -> a
    int mX -> b
    int mY -> c
    float mHorizontalMargin -> d
    float mVerticalMargin -> e
    android.view.View mView -> f
    android.view.View mNextView -> g
    android.view.WindowManager$LayoutParams mParams -> h
    android.view.WindowManager mWM -> i
    android.os.Handler mHandler -> j
    java.lang.Runnable mShow -> k
    java.lang.Runnable mHide -> l
    void show() -> a
    void cancel() -> b
    com.fox.exercise.OnScreenHint makeText(android.content.Context,java.lang.CharSequence) -> a
    void setText(java.lang.CharSequence) -> a
    void handleShow() -> c
    void handleHide() -> d
    void access$0(com.fox.exercise.OnScreenHint) -> a
    void access$1(com.fox.exercise.OnScreenHint) -> b
com.fox.exercise.OnScreenHint$1 -> com.fox.exercise.nd:
    com.fox.exercise.OnScreenHint this$0 -> a
    void run() -> run
com.fox.exercise.OnScreenHint$2 -> com.fox.exercise.ne:
    com.fox.exercise.OnScreenHint this$0 -> a
    void run() -> run
com.fox.exercise.OnlineAction -> com.fox.exercise.nf:
    int actionId -> a
    java.lang.String title -> b
    java.lang.String actionTime -> c
    void setActionId(int) -> a
    void setActionTime(java.lang.String) -> a
    java.lang.String getTitle() -> a
    void setTitle(java.lang.String) -> b
com.fox.exercise.PaymentFragment -> com.fox.exercise.ng:
    int activityId -> b
    java.lang.Boolean isFirst -> c
    android.app.Dialog mLoadProgressDialog -> a
    android.widget.TextView pay -> d
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void GetPayInfoData() -> c
    void waitShow() -> a
    void waitCloset() -> b
    int access$0(com.fox.exercise.PaymentFragment) -> a
    android.widget.TextView access$1(com.fox.exercise.PaymentFragment) -> b
com.fox.exercise.PaymentFragment$GetPayInfoTask -> com.fox.exercise.nh:
    java.lang.String payInfoString -> a
    com.fox.exercise.PaymentFragment this$0 -> b
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.PreviewFrameLayout -> com.fox.exercise.PreviewFrameLayout:
    double mAspectRatio -> a
    android.widget.FrameLayout mFrame -> b
    boolean initFlag -> c
    com.fox.exercise.PreviewFrameLayout$OnSizeChangedListener mSizeListener -> d
    android.util.DisplayMetrics mMetrics -> e
    int actualWidth -> f
    int actualHeight -> g
    void setOnSizeChangedListener(com.fox.exercise.PreviewFrameLayout$OnSizeChangedListener) -> setOnSizeChangedListener
    void onFinishInflate() -> onFinishInflate
    void setAspectRatio(double) -> setAspectRatio
    int getActualWidth() -> getActualWidth
    int getActualHeight() -> getActualHeight
    void onLayout(boolean,int,int,int,int) -> onLayout
com.fox.exercise.PreviewFrameLayout$OnSizeChangedListener -> com.fox.exercise.ni:
    void onSizeChanged() -> a
com.fox.exercise.PrivateMessageMyAdapter -> com.fox.exercise.nj:
    java.util.ArrayList mList -> a
    android.content.Context mContext -> b
    android.view.LayoutInflater mInflater -> c
    int indexGL -> d
    int indexRZ -> e
    com.fox.exercise.ImageDownloader mDownloader -> f
    com.fox.exercise.ImageDownloader mIconDownloader -> g
    cn.ingenic.indroidsync.SportsApp mSportsApp -> h
    int getCount() -> getCount
    com.fox.exercise.api.entity.PrivateMsgStatus getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    java.util.ArrayList access$1(com.fox.exercise.PrivateMessageMyAdapter) -> a
    cn.ingenic.indroidsync.SportsApp access$2(com.fox.exercise.PrivateMessageMyAdapter) -> b
    android.content.Context access$3(com.fox.exercise.PrivateMessageMyAdapter) -> c
com.fox.exercise.PrivateMessageMyAdapter$1 -> com.fox.exercise.nk:
    com.fox.exercise.PrivateMessageMyAdapter this$0 -> a
    int val$position -> b
    com.fox.exercise.api.entity.UserPrimsgAll val$userPrimsgAll -> c
    void onClick(android.view.View) -> onClick
com.fox.exercise.PrivateMsgFragment -> com.fox.exercise.nl:
    com.fox.exercise.view.PullToRefreshListView mPullListView -> c
    android.widget.ListView mListView -> d
    com.fox.exercise.PrivateMessageMyAdapter mAdapter -> e
    android.app.Dialog loadProgressDialog -> f
    android.app.Dialog alertDialog -> g
    java.util.HashSet mSet -> h
    java.util.ArrayList mList -> i
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> j
    com.fox.exercise.PrivateMsgFragment$GiftsHandler mHandler -> k
    boolean isRefresh -> l
    boolean isFlag -> a
    boolean flag -> m
    int userID -> n
    cn.ingenic.indroidsync.SportsApp mSportsApp -> o
    int currentPosition -> p
    boolean needUpdateMsgStatus -> q
    java.lang.String mSendName -> r
    long preTime -> s
    com.fox.exercise.db.PrimsgDeleteDb db -> t
    com.fox.exercise.FoxSportsState mFoxSportsState -> u
    com.fox.exercise.api.WatchService wService -> v
    android.content.ServiceConnection wConnection -> w
    int page -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initData() -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void updateMessageStatus() -> b
    void initViews() -> c
    void onClick(android.view.View) -> onClick
    void showDialogs(android.content.Context,com.fox.exercise.api.entity.UserPrimsgAll,int) -> a
    void onDestroy() -> onDestroy
    void access$0(com.fox.exercise.PrivateMsgFragment,com.fox.exercise.api.WatchService) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.PrivateMsgFragment) -> a
    com.fox.exercise.SportsExceptionHandler access$2(com.fox.exercise.PrivateMsgFragment) -> b
    int access$3(com.fox.exercise.PrivateMsgFragment) -> c
    boolean access$4(com.fox.exercise.PrivateMsgFragment) -> d
    java.util.ArrayList access$5(com.fox.exercise.PrivateMsgFragment) -> e
    boolean access$6(com.fox.exercise.PrivateMsgFragment) -> f
    com.fox.exercise.PrivateMsgFragment$GiftsHandler access$7(com.fox.exercise.PrivateMsgFragment) -> g
    com.fox.exercise.PrivateMessageMyAdapter access$8(com.fox.exercise.PrivateMsgFragment) -> h
    com.fox.exercise.FoxSportsState access$9(com.fox.exercise.PrivateMsgFragment) -> i
    void access$10(com.fox.exercise.PrivateMsgFragment,com.fox.exercise.PrivateMessageMyAdapter) -> a
    android.widget.ListView access$11(com.fox.exercise.PrivateMsgFragment) -> j
    void access$12(com.fox.exercise.PrivateMsgFragment,android.content.Context,com.fox.exercise.api.entity.UserPrimsgAll,int) -> a
    void access$13(com.fox.exercise.PrivateMsgFragment,boolean) -> a
    void access$14(com.fox.exercise.PrivateMsgFragment,int) -> a
    int access$15(com.fox.exercise.PrivateMsgFragment) -> k
    void access$16(com.fox.exercise.PrivateMsgFragment,java.lang.String) -> a
    android.app.Dialog access$17(com.fox.exercise.PrivateMsgFragment) -> l
    com.fox.exercise.view.PullToRefreshListView access$18(com.fox.exercise.PrivateMsgFragment) -> m
    void access$19(com.fox.exercise.PrivateMsgFragment,boolean) -> b
    void access$20(com.fox.exercise.PrivateMsgFragment,boolean) -> c
    android.app.Dialog access$21(com.fox.exercise.PrivateMsgFragment) -> n
    com.fox.exercise.api.WatchService access$22(com.fox.exercise.PrivateMsgFragment) -> o
    com.fox.exercise.db.PrimsgDeleteDb access$23(com.fox.exercise.PrivateMsgFragment) -> p
com.fox.exercise.PrivateMsgFragment$1 -> com.fox.exercise.nm:
    com.fox.exercise.PrivateMsgFragment this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fox.exercise.PrivateMsgFragment$2 -> com.fox.exercise.nn:
    com.fox.exercise.PrivateMsgFragment this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.PrivateMsgFragment$3 -> com.fox.exercise.no:
    com.fox.exercise.PrivateMsgFragment this$0 -> a
    com.fox.exercise.api.entity.UserPrimsgAll val$userPrimsgAll -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.fox.exercise.PrivateMsgFragment$GetGiftsThread -> com.fox.exercise.np:
    int uid -> b
    com.fox.exercise.PrivateMsgFragment this$0 -> a
    void run() -> run
com.fox.exercise.PrivateMsgFragment$GiftsHandler -> com.fox.exercise.nq:
    com.fox.exercise.PrivateMsgFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.PrivateMsgFragment access$0(com.fox.exercise.PrivateMsgFragment$GiftsHandler) -> a
com.fox.exercise.PrivateMsgFragment$GiftsHandler$1 -> com.fox.exercise.nr:
    com.fox.exercise.PrivateMsgFragment$GiftsHandler this$1 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.fox.exercise.PrivateMsgFragment$GiftsHandler$2 -> com.fox.exercise.ns:
    com.fox.exercise.PrivateMsgFragment$GiftsHandler this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.QQOAuthActivity -> com.fox.exercise.QQOAuthActivity:
    android.webkit.WebView mLoginWebView -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initWebView() -> a
com.fox.exercise.QQOAuthActivity$1 -> com.fox.exercise.nt:
    com.fox.exercise.QQOAuthActivity this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    boolean onJsTimeout() -> onJsTimeout
com.fox.exercise.QQOAuthActivity$1$1 -> com.fox.exercise.nu:
    com.fox.exercise.QQOAuthActivity$1 this$1 -> a
    android.webkit.JsResult val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.QQOAuthActivity$1$2 -> com.fox.exercise.nv:
    com.fox.exercise.QQOAuthActivity$1 this$1 -> a
    android.webkit.JsResult val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.QQOAuthActivity$1$3 -> com.fox.exercise.nw:
    com.fox.exercise.QQOAuthActivity$1 this$1 -> a
    android.webkit.JsResult val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.QQOAuthActivity$1$4 -> com.fox.exercise.nx:
    com.fox.exercise.QQOAuthActivity$1 this$1 -> a
    android.webkit.JsResult val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.QQOAuthActivity$1$5 -> com.fox.exercise.ny:
    com.fox.exercise.QQOAuthActivity$1 this$1 -> a
    android.webkit.JsPromptResult val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.QQOAuthActivity$1$6 -> com.fox.exercise.nz:
    com.fox.exercise.QQOAuthActivity$1 this$1 -> a
    android.webkit.JsPromptResult val$result -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.QQOAuthActivity$LoginWebViewClient -> com.fox.exercise.oa:
    com.fox.exercise.QQOAuthActivity this$0 -> a
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
com.fox.exercise.QQzoneActivity -> com.fox.exercise.QQzoneActivity:
    java.lang.String mAppid -> a
    java.lang.String CALLBACK -> b
    java.lang.String scope -> c
    void onCreate(android.os.Bundle) -> onCreate
com.fox.exercise.R -> com.fox.exercise.R:
com.fox.exercise.R$anim -> com.fox.exercise.R$anim:
    int add_one -> add_one
    int animate -> animate
    int avatar_animation_right_in -> avatar_animation_right_in
    int avatar_animation_right_out -> avatar_animation_right_out
    int bounce_interpolator -> bounce_interpolator
    int click_down_anim -> click_down_anim
    int click_up_anim -> click_up_anim
    int frame -> frame
    int loading -> loading
    int on_screen_hint_enter -> on_screen_hint_enter
    int on_screen_hint_exit -> on_screen_hint_exit
    int record_loading -> record_loading
    int record_run -> record_run
    int slide_in_from_bottom -> slide_in_from_bottom
    int slide_left_in -> slide_left_in
    int slide_left_out -> slide_left_out
    int slide_out_to_bottom -> slide_out_to_bottom
    int slide_right_in -> slide_right_in
    int slide_right_out -> slide_right_out
    int sreach_anim -> sreach_anim
    int warn_anim -> warn_anim
com.fox.exercise.R$array -> com.fox.exercise.R$array:
    int first_page_content -> first_page_content
    int imageStr_array -> imageStr_array
    int mode_entries -> mode_entries
    int mode_entry_values -> mode_entry_values
    int month_english -> month_english
    int name_newsports_type -> name_newsports_type
    int name_sports_othertype -> name_sports_othertype
    int name_sports_type -> name_sports_type
    int share_content_arrs -> share_content_arrs
    int sleep_page_content -> sleep_page_content
com.fox.exercise.R$attr -> com.fox.exercise.R$attr:
    int activeColor -> activeColor
    int activeRadius -> activeRadius
    int activeType -> activeType
    int adapterViewBackground -> adapterViewBackground
    int animationDuration -> animationDuration
    int cellHeight -> cellHeight
    int cellWidth -> cellWidth
    int centered -> centered
    int circleSeparation -> circleSeparation
    int closedHandle -> closedHandle
    int content -> content
    int defaultScreen -> defaultScreen
    int defaultValue -> defaultValue
    int direction -> direction
    int el_contentLayout -> el_contentLayout
    int el_duration -> el_duration
    int el_headerLayout -> el_headerLayout
    int entries -> entries
    int entryValues -> entryValues
    int fadeOut -> fadeOut
    int handle -> handle
    int headerBackground -> headerBackground
    int headerTextColor -> headerTextColor
    int ignoreZone -> ignoreZone
    int inactiveColor -> inactiveColor
    int inactiveType -> inactiveType
    int isEnable -> isEnable
    int itemNumber -> itemNumber
    int key -> key
    int lineColor -> lineColor
    int linearFlying -> linearFlying
    int longAxisCells -> longAxisCells
    int longAxisEndPadding -> longAxisEndPadding
    int longAxisStartPadding -> longAxisStartPadding
    int maskHight -> maskHight
    int max -> max
    int mode -> mode
    int noEmpty -> noEmpty
    int normalTextColor -> normalTextColor
    int normalTextSize -> normalTextSize
    int openedHandle -> openedHandle
    int position -> position
    int radius -> radius
    int roundColor -> roundColor
    int roundProgressColor -> roundProgressColor
    int roundWidth -> roundWidth
    int selecredTextColor -> selecredTextColor
    int selecredTextSize -> selecredTextSize
    int shortAxisCells -> shortAxisCells
    int shortAxisEndPadding -> shortAxisEndPadding
    int shortAxisStartPadding -> shortAxisStartPadding
    int sidebuffer -> sidebuffer
    int style -> style
    int textColor -> textColor
    int textIsDisplayable -> textIsDisplayable
    int textSize -> textSize
    int title -> title
    int unitHight -> unitHight
    int weight -> weight
com.fox.exercise.R$color -> com.fox.exercise.R$color:
    int background_transparent -> background_transparent
    int black -> black
    int bubble_dark_background -> bubble_dark_background
    int button_login -> button_login
    int celebration_color -> celebration_color
    int celebration_popbg_color -> celebration_popbg_color
    int comment_color -> comment_color
    int cool_color -> cool_color
    int djs -> djs
    int fengexian -> fengexian
    int gray -> gray
    int gray_litter -> gray_litter
    int hint_login -> hint_login
    int listitem_color -> listitem_color
    int listitem_del_color -> listitem_del_color
    int new_black -> new_black
    int photo_background -> photo_background
    int re_bgcolor -> re_bgcolor
    int red -> red
    int remind -> remind
    int seek_hui -> seek_hui
    int sleep_yellow -> sleep_yellow
    int sports_background_transparent -> sports_background_transparent
    int sports_bt_gray -> sports_bt_gray
    int sports_gray -> sports_gray
    int sports_help_info -> sports_help_info
    int sports_popular_title_normal -> sports_popular_title_normal
    int sports_popular_title_selected -> sports_popular_title_selected
    int sports_popular_titles_normal -> sports_popular_titles_normal
    int sports_time_color -> sports_time_color
    int sports_value -> sports_value
    int text_login -> text_login
    int text_moffmap -> text_moffmap
    int text_step -> text_step
    int title_text_color -> title_text_color
    int train_playnum -> train_playnum
    int translucent -> translucent
    int transparent -> transparent
    int transparent_background -> transparent_background
    int white -> white
    int yellow -> yellow
com.fox.exercise.R$dimen -> com.fox.exercise.R$dimen:
    int dialog_bottom_margin -> dialog_bottom_margin
    int dialog_left_margin -> dialog_left_margin
    int dialog_right_margin -> dialog_right_margin
    int dialog_top_margin -> dialog_top_margin
    int djs -> djs
    int djs_text -> djs_text
    int hint_y_offset -> hint_y_offset
    int sleep_text -> sleep_text
    int sleep_text1 -> sleep_text1
    int sleep_text2 -> sleep_text2
    int sleep_text3 -> sleep_text3
com.fox.exercise.R$drawable -> com.fox.exercise.R$drawable:
    int about -> about
    int access -> access
    int activity_back -> activity_back
    int activity_round_bg -> activity_round_bg
    int activity_round_header_bg -> activity_round_header_bg
    int activityinfo_join -> activityinfo_join
    int activityt_title_bg -> activityt_title_bg
    int add -> add
    int add_new_friends -> add_new_friends
    int addfriend_bg -> addfriend_bg
    int addimages -> addimages
    int already_guanzhu_icon -> already_guanzhu_icon
    int already_zan_icon -> already_zan_icon
    int audio_ani_1 -> audio_ani_1
    int audio_ani_2 -> audio_ani_2
    int audio_ani_3 -> audio_ani_3
    int audio_ani_4 -> audio_ani_4
    int audio_load_ani_1 -> audio_load_ani_1
    int audio_load_ani_2 -> audio_load_ani_2
    int audio_load_ani_3 -> audio_load_ani_3
    int audio_load_ani_4 -> audio_load_ani_4
    int audio_play -> audio_play
    int back_home -> back_home
    int backg_tip -> backg_tip
    int background_yunsport -> background_yunsport
    int bg_22 -> bg_22
    int bg_231 -> bg_231
    int bg_491 -> bg_491
    int bgd_relatly_line -> bgd_relatly_line
    int biaoge_cal -> biaoge_cal
    int biaoge_km -> biaoge_km
    int biaoqian_checkbox_selector -> biaoqian_checkbox_selector
    int biaoqian_checked -> biaoqian_checked
    int biaoqian_unchecked -> biaoqian_unchecked
    int biaoqing_010 -> biaoqing_010
    int biaoqing_011 -> biaoqing_011
    int biaoqing_012 -> biaoqing_012
    int biaoqing_013 -> biaoqing_013
    int biaoqing_014 -> biaoqing_014
    int biaoqing_015 -> biaoqing_015
    int biaoqing_016 -> biaoqing_016
    int biaoqing_017 -> biaoqing_017
    int biaoqing_018 -> biaoqing_018
    int biaoqing_019 -> biaoqing_019
    int biaoqing_020 -> biaoqing_020
    int biaoqing_021 -> biaoqing_021
    int biaoqing_022 -> biaoqing_022
    int biaoqing_023 -> biaoqing_023
    int biaoqing_024 -> biaoqing_024
    int biaoqing_025 -> biaoqing_025
    int biaoqing_026 -> biaoqing_026
    int biaoqing_027 -> biaoqing_027
    int biaoqing_028 -> biaoqing_028
    int biaoqing_029 -> biaoqing_029
    int biaoqing_030 -> biaoqing_030
    int biaoqing_031 -> biaoqing_031
    int biaoqing_032 -> biaoqing_032
    int biaoqing_033 -> biaoqing_033
    int biaoqing_034 -> biaoqing_034
    int biaoqing_035 -> biaoqing_035
    int biaoqing_036 -> biaoqing_036
    int biaoqing_037 -> biaoqing_037
    int biaoqing_038 -> biaoqing_038
    int biaoqing_039 -> biaoqing_039
    int biaoqing_040 -> biaoqing_040
    int biaoqing_041 -> biaoqing_041
    int biaoqing_042 -> biaoqing_042
    int biaoqing_043 -> biaoqing_043
    int biaoqing_044 -> biaoqing_044
    int biaoqing_045 -> biaoqing_045
    int biaoqing_046 -> biaoqing_046
    int biaoqing_047 -> biaoqing_047
    int biaoqing_048 -> biaoqing_048
    int biaoqing_049 -> biaoqing_049
    int bind_device_xingxing -> bind_device_xingxing
    int bownload_bg -> bownload_bg
    int browse_bg2 -> browse_bg2
    int btn_border -> btn_border
    int btn_shape_select -> btn_shape_select
    int btnshape -> btnshape
    int burn_loading -> burn_loading
    int bushutongji_fenxiang -> bushutongji_fenxiang
    int bushutongji_juli -> bushutongji_juli
    int bushutongji_licheng -> bushutongji_licheng
    int bushutongji_reliang -> bushutongji_reliang
    int bushutongji_share_background -> bushutongji_share_background
    int bushutongji_yuanhuan -> bushutongji_yuanhuan
    int bushutongji_yuedengyu -> bushutongji_yuedengyu
    int button4 -> button4
    int button4_click -> button4_click
    int buxing_black -> buxing_black
    int camera_close_preview_window -> camera_close_preview_window
    int camera_navi1 -> camera_navi1
    int camera_navi2 -> camera_navi2
    int cancle_click -> cancle_click
    int cancle_unclick -> cancle_unclick
    int capture_ok_btn -> capture_ok_btn
    int cebian_daohang_into -> cebian_daohang_into
    int cebian_friends -> cebian_friends
    int cebian_huodong -> cebian_huodong
    int cebian_new_bg -> cebian_new_bg
    int cebian_paihang -> cebian_paihang
    int cebian_setting -> cebian_setting
    int cebian_sex_man -> cebian_sex_man
    int cebian_sex_women -> cebian_sex_women
    int cebian_shangcheng -> cebian_shangcheng
    int cebian_yuepao -> cebian_yuepao
    int chatfrom_bg -> chatfrom_bg
    int chatto_bg -> chatto_bg
    int close -> close
    int color_radiobutton -> color_radiobutton
    int common_back -> common_back
    int custom_info_bubble -> custom_info_bubble
    int delete_xinlv -> delete_xinlv
    int deleteall_xinlv -> deleteall_xinlv
    int dengshan -> dengshan
    int dengshan_black -> dengshan_black
    int dengshan_black2 -> dengshan_black2
    int details -> details
    int dieyong -> dieyong
    int divider -> divider
    int djs_1 -> djs_1
    int djs_10 -> djs_10
    int djs_2 -> djs_2
    int djs_3 -> djs_3
    int djs_4 -> djs_4
    int djs_5 -> djs_5
    int djs_6 -> djs_6
    int djs_7 -> djs_7
    int djs_8 -> djs_8
    int djs_9 -> djs_9
    int djs_go -> djs_go
    int dongtai_dingwei_icon2 -> dongtai_dingwei_icon2
    int dongtai_fenxiang_biaoqian -> dongtai_fenxiang_biaoqian
    int dot_focused -> dot_focused
    int dot_normal -> dot_normal
    int download_progressbar_style -> download_progressbar_style
    int fenge_line -> fenge_line
    int fenxiang_qq -> fenxiang_qq
    int fenxiang_weixin -> fenxiang_weixin
    int fenxiang_weixin_friends -> fenxiang_weixin_friends
    int find_comment_layout -> find_comment_layout
    int find_good_and_text -> find_good_and_text
    int finish -> finish
    int finish_button -> finish_button
    int finish_button2_click -> finish_button2_click
    int friends_group_sexman -> friends_group_sexman
    int friends_group_sexwomen -> friends_group_sexwomen
    int gaoerfu -> gaoerfu
    int giveup_click -> giveup_click
    int giveup_unclick -> giveup_unclick
    int gps_g01 -> gps_g01
    int gps_g02 -> gps_g02
    int gps_g03 -> gps_g03
    int gps_g04 -> gps_g04
    int gps_g05 -> gps_g05
    int gps_tishi_icon -> gps_tishi_icon
    int haiba -> haiba
    int hanbao -> hanbao
    int history_haoshi_icon -> history_haoshi_icon
    int history_item_bg -> history_item_bg
    int history_reliang_icon -> history_reliang_icon
    int histroy_title_bg -> histroy_title_bg
    int huachuan -> huachuan
    int huodong_biaoqian_icon -> huodong_biaoqian_icon
    int ic_launcher -> ic_launcher
    int icon -> icon
    int icon44 -> icon44
    int icon_addpic_unfocused -> icon_addpic_unfocused
    int icon_data_select -> icon_data_select
    int index_sleep_bg1 -> index_sleep_bg1
    int index_xinlv_bg1 -> index_xinlv_bg1
    int iv_ding -> iv_ding
    int jdy01 -> jdy01
    int jibu_model_icon -> jibu_model_icon
    int jiesuo_bg -> jiesuo_bg
    int jiesuo_button -> jiesuo_button
    int jingzou -> jingzou
    int jitui -> jitui
    int list_item_bg -> list_item_bg
    int liubing -> liubing
    int loading_01 -> loading_01
    int loading_02 -> loading_02
    int loading_03 -> loading_03
    int loading_04 -> loading_04
    int lunhua -> lunhua
    int main_start_loading -> main_start_loading
    int map_location -> map_location
    int map_middle -> map_middle
    int map_start -> map_start
    int meidia_view_bg -> meidia_view_bg
    int model_toast -> model_toast
    int moff_down_arrow -> moff_down_arrow
    int moff_top_arrow -> moff_top_arrow
    int moffline_delete -> moffline_delete
    int moffline_download -> moffline_download
    int multiselect -> multiselect
    int multiselect_bg -> multiselect_bg
    int mysports_badminton -> mysports_badminton
    int mysports_climbing -> mysports_climbing
    int mysports_cycling -> mysports_cycling
    int mysports_dieyong -> mysports_dieyong
    int mysports_football -> mysports_football
    int mysports_golf -> mysports_golf
    int mysports_invite_btn2 -> mysports_invite_btn2
    int mysports_roller_skating -> mysports_roller_skating
    int mysports_rowing -> mysports_rowing
    int mysports_running -> mysports_running
    int mysports_skating -> mysports_skating
    int mysports_swim -> mysports_swim
    int mysports_table_tennis -> mysports_table_tennis
    int mysports_tennis -> mysports_tennis
    int mysports_walk -> mysports_walk
    int mysports_walk_race -> mysports_walk_race
    int mysports_wayong -> mysports_wayong
    int mysports_yangyong -> mysports_yangyong
    int mysports_ziyouyong -> mysports_ziyouyong
    int nearby_news_bg -> nearby_news_bg
    int new_sports_finish_btn_click -> new_sports_finish_btn_click
    int new_sports_pause_btn_click -> new_sports_pause_btn_click
    int new_sports_start_btn_click -> new_sports_start_btn_click
    int new_sports_suoding_btn_click -> new_sports_suoding_btn_click
    int new_start_sport -> new_start_sport
    int newmessage_bg -> newmessage_bg
    int notification_icon -> notification_icon
    int on_screen_hint_frame -> on_screen_hint_frame
    int online -> online
    int open -> open
    int othersports_type_climbing -> othersports_type_climbing
    int othersports_type_dieyong -> othersports_type_dieyong
    int othersports_type_golf -> othersports_type_golf
    int othersports_type_huachuan -> othersports_type_huachuan
    int othersports_type_jingzou -> othersports_type_jingzou
    int othersports_type_liubing -> othersports_type_liubing
    int othersports_type_lunhua -> othersports_type_lunhua
    int othersports_type_pingpangqiu -> othersports_type_pingpangqiu
    int othersports_type_qixing -> othersports_type_qixing
    int othersports_type_running -> othersports_type_running
    int othersports_type_walking -> othersports_type_walking
    int othersports_type_wangqiu -> othersports_type_wangqiu
    int othersports_type_wayong -> othersports_type_wayong
    int othersports_type_yangyong -> othersports_type_yangyong
    int othersports_type_yumaoqiu -> othersports_type_yumaoqiu
    int othersports_type_ziyouyong -> othersports_type_ziyouyong
    int othersports_type_zuqiu -> othersports_type_zuqiu
    int page -> page
    int page_focus -> page_focus
    int paobu -> paobu
    int paobu_black -> paobu_black
    int paobu_black2 -> paobu_black2
    int paobu_yellow -> paobu_yellow
    int pay_btnUnclick -> pay_btnUnclick
    int pay_btnclick -> pay_btnclick
    int per_guanzhu_btn_icon -> per_guanzhu_btn_icon
    int per_xinbtn_icon -> per_xinbtn_icon
    int per_yuepao_btn_icon -> per_yuepao_btn_icon
    int pingpangqiu -> pingpangqiu
    int popwindowbackground -> popwindowbackground
    int private_msg_bg -> private_msg_bg
    int private_msg_read -> private_msg_read
    int private_msg_receiver -> private_msg_receiver
    int private_msg_sender -> private_msg_sender
    int private_msg_unread -> private_msg_unread
    int progressbar -> progressbar
    int pulltorefresh_down_arrow -> pulltorefresh_down_arrow
    int pulltorefresh_up_arrow -> pulltorefresh_up_arrow
    int qita_biaoqing_00 -> qita_biaoqing_00
    int qita_biaoqing_01 -> qita_biaoqing_01
    int qita_biaoqing_02 -> qita_biaoqing_02
    int qita_biaoqing_03 -> qita_biaoqing_03
    int qita_biaoqing_04 -> qita_biaoqing_04
    int qixing -> qixing
    int qixing_black -> qixing_black
    int qixing_black2 -> qixing_black2
    int qixing_yellow -> qixing_yellow
    int qiya -> qiya
    int qq_2 -> qq_2
    int radio -> radio
    int rank_bg -> rank_bg
    int rank_fen -> rank_fen
    int rank_one -> rank_one
    int rank_three -> rank_three
    int rank_two -> rank_two
    int recapture_btn -> recapture_btn
    int recoding -> recoding
    int recodmain_bg -> recodmain_bg
    int residemenu_onclick -> residemenu_onclick
    int runcircle_image -> runcircle_image
    int search_bg -> search_bg
    int search_btn -> search_btn
    int search_img -> search_img
    int send_find_popup_icon -> send_find_popup_icon
    int send_shareqq_click -> send_shareqq_click
    int send_shareweixin_click -> send_shareweixin_click
    int send_shareweixin_friends_click -> send_shareweixin_friends_click
    int sex_boy -> sex_boy
    int sex_girl -> sex_girl
    int share_icon -> share_icon
    int share_qq_click_icon -> share_qq_click_icon
    int share_qq_unclick_icon -> share_qq_unclick_icon
    int share_there -> share_there
    int share_to_tengxun -> share_to_tengxun
    int share_to_xinlang -> share_to_xinlang
    int share_weixin_click_icon -> share_weixin_click_icon
    int share_weixin_friends_click_icon -> share_weixin_friends_click_icon
    int share_weixin_friends_unclick_icon -> share_weixin_friends_unclick_icon
    int share_weixin_unclick_icon -> share_weixin_unclick_icon
    int shoushi -> shoushi
    int sk2text -> sk2text
    int sk2voice -> sk2voice
    int sk_button -> sk_button
    int sk_button_click -> sk_button_click
    int sk_button_unavailable -> sk_button_unavailable
    int sk_focus -> sk_focus
    int sk_health_focus -> sk_health_focus
    int sk_health_normal -> sk_health_normal
    int sk_mysport_focus -> sk_mysport_focus
    int sk_mysport_normal -> sk_mysport_normal
    int sk_slipswitch -> sk_slipswitch
    int sk_slipswitch_but -> sk_slipswitch_but
    int sk_sportcircle_focus -> sk_sportcircle_focus
    int sk_sportcircle_normal -> sk_sportcircle_normal
    int sk_start -> sk_start
    int sk_start_or_stop -> sk_start_or_stop
    int sk_startsport_focus -> sk_startsport_focus
    int sk_startsport_normal -> sk_startsport_normal
    int sk_stop -> sk_stop
    int sk_trainplay_focus -> sk_trainplay_focus
    int sk_trainplay_normal -> sk_trainplay_normal
    int skip -> skip
    int sleep_baogao_button -> sleep_baogao_button
    int sleep_button -> sleep_button
    int sleep_click -> sleep_click
    int sleep_day_focus -> sleep_day_focus
    int sleep_day_normal -> sleep_day_normal
    int sleep_example -> sleep_example
    int sleep_night_focus -> sleep_night_focus
    int sleep_night_normal -> sleep_night_normal
    int sleep_quxian_bg -> sleep_quxian_bg
    int sleep_record_bg -> sleep_record_bg
    int sleep_record_biao_bg -> sleep_record_biao_bg
    int sleep_record_day_btn_click -> sleep_record_day_btn_click
    int sleep_record_night_btn_click -> sleep_record_night_btn_click
    int sleep_righttitle -> sleep_righttitle
    int sleep_timelayout_click -> sleep_timelayout_click
    int sleep_tip -> sleep_tip
    int sleep_unclick -> sleep_unclick
    int slim_sel -> slim_sel
    int slim_unsel -> slim_unsel
    int slimgirl_progressbar_mini -> slimgirl_progressbar_mini
    int slimgirl_time_bg -> slimgirl_time_bg
    int slimgirl_upload_edit_bg -> slimgirl_upload_edit_bg
    int slimgirl_upvoice_bg -> slimgirl_upvoice_bg
    int slimgirl_upvoiceclick_l -> slimgirl_upvoiceclick_l
    int slimgirl_upvoiceclick_r -> slimgirl_upvoiceclick_r
    int slimgirl_voice_begin -> slimgirl_voice_begin
    int slimgirl_voice_click_l -> slimgirl_voice_click_l
    int slimgirl_voice_click_r -> slimgirl_voice_click_r
    int slimgirl_voice_delete -> slimgirl_voice_delete
    int slimgirl_voice_normal_l -> slimgirl_voice_normal_l
    int slimgirl_voice_normal_r -> slimgirl_voice_normal_r
    int smart_equipment_icon -> smart_equipment_icon
    int spend_time -> spend_time
    int spinner_menu_bg -> spinner_menu_bg
    int spinner_menu_bgline -> spinner_menu_bgline
    int sport_change_minus -> sport_change_minus
    int sport_change_plus -> sport_change_plus
    int sport_cishu -> sport_cishu
    int sport_detail_share_icon -> sport_detail_share_icon
    int sport_forstpage -> sport_forstpage
    int sport_mark -> sport_mark
    int sport_minus_btn -> sport_minus_btn
    int sport_photobtn -> sport_photobtn
    int sport_plus_btn -> sport_plus_btn
    int sport_reliang -> sport_reliang
    int sport_sudu -> sport_sudu
    int sport_task -> sport_task
    int sport_title_back_selector -> sport_title_back_selector
    int sport_title_ok_selector -> sport_title_ok_selector
    int sport_un_upload -> sport_un_upload
    int sport_videobtn -> sport_videobtn
    int sport_voicebtn -> sport_voicebtn
    int sportdetail_con -> sportdetail_con
    int sportdetail_dis -> sportdetail_dis
    int sportdetail_distance_bg -> sportdetail_distance_bg
    int sportdetail_pace -> sportdetail_pace
    int sportdetail_speed -> sportdetail_speed
    int sportdetail_time_bg -> sportdetail_time_bg
    int sportfirst_paobu -> sportfirst_paobu
    int sports_barzoom -> sports_barzoom
    int sports_bg -> sports_bg
    int sports_bg2 -> sports_bg2
    int sports_bg_line -> sports_bg_line
    int sports_bg_menu -> sports_bg_menu
    int sports_btn_gray -> sports_btn_gray
    int sports_btn_gray1 -> sports_btn_gray1
    int sports_btn_gray2 -> sports_btn_gray2
    int sports_btn_strip_trans_middle -> sports_btn_strip_trans_middle
    int sports_button_gray -> sports_button_gray
    int sports_button_gray_click -> sports_button_gray_click
    int sports_button_login -> sports_button_login
    int sports_button_login_click -> sports_button_login_click
    int sports_button_small -> sports_button_small
    int sports_button_small_click -> sports_button_small_click
    int sports_capture_title_back -> sports_capture_title_back
    int sports_capture_title_flash -> sports_capture_title_flash
    int sports_capture_title_noflash -> sports_capture_title_noflash
    int sports_capture_title_switch -> sports_capture_title_switch
    int sports_capture_zomm_bg -> sports_capture_zomm_bg
    int sports_capture_zoom_bar -> sports_capture_zoom_bar
    int sports_complete_point -> sports_complete_point
    int sports_complete_rate -> sports_complete_rate
    int sports_fans_box -> sports_fans_box
    int sports_finish_btn -> sports_finish_btn
    int sports_finish_btn_click -> sports_finish_btn_click
    int sports_focus_box -> sports_focus_box
    int sports_forget_selector -> sports_forget_selector
    int sports_goal_bg -> sports_goal_bg
    int sports_goal_divider -> sports_goal_divider
    int sports_goal_down -> sports_goal_down
    int sports_goal_finish -> sports_goal_finish
    int sports_login_btn_click -> sports_login_btn_click
    int sports_popup_bg -> sports_popup_bg
    int sports_popwindow_good_imgview -> sports_popwindow_good_imgview
    int sports_primsg_bg -> sports_primsg_bg
    int sports_private_send_click -> sports_private_send_click
    int sports_residemenu_man -> sports_residemenu_man
    int sports_residemenu_woman -> sports_residemenu_woman
    int sports_scrollbar_bar -> sports_scrollbar_bar
    int sports_scrollbar_bg -> sports_scrollbar_bg
    int sports_select_bt -> sports_select_bt
    int sports_sk3_capture_click -> sports_sk3_capture_click
    int sports_sk3_capture_normal -> sports_sk3_capture_normal
    int sports_sk3_ok_click -> sports_sk3_ok_click
    int sports_sk3_ok_normal -> sports_sk3_ok_normal
    int sports_sk3_retake_click -> sports_sk3_retake_click
    int sports_sk3_retake_normal -> sports_sk3_retake_normal
    int sports_sk_faxian -> sports_sk_faxian
    int sports_sk_mysport -> sports_sk_mysport
    int sports_slim_btn_click -> sports_slim_btn_click
    int sports_slim_btn_click1 -> sports_slim_btn_click1
    int sports_smallbt_selector -> sports_smallbt_selector
    int sports_sys_message_box -> sports_sys_message_box
    int sports_title_bg -> sports_title_bg
    int sports_title_photo -> sports_title_photo
    int sports_up_sk_bg -> sports_up_sk_bg
    int sports_up_text_click -> sports_up_text_click
    int sports_up_text_noclick -> sports_up_text_noclick
    int sports_up_voice_nocilick -> sports_up_voice_nocilick
    int sports_up_voice_yescilick -> sports_up_voice_yescilick
    int sports_user_edit_portrait -> sports_user_edit_portrait
    int sports_user_edit_portrait_male -> sports_user_edit_portrait_male
    int sports_visitors_box -> sports_visitors_box
    int sportshow_alreadyzan -> sportshow_alreadyzan
    int sportshow_background -> sportshow_background
    int sportshow_guanzhu -> sportshow_guanzhu
    int sportshow_more -> sportshow_more
    int sportshow_sent -> sportshow_sent
    int sportshow_shaer -> sportshow_shaer
    int sportshow_zan -> sportshow_zan
    int sportshow_zan_black -> sportshow_zan_black
    int sportstyle_dengshan -> sportstyle_dengshan
    int sportstyle_jianzou -> sportstyle_jianzou
    int sportstyle_paobu -> sportstyle_paobu
    int sportstyle_qixing -> sportstyle_qixing
    int star_sel -> star_sel
    int star_unsel -> star_unsel
    int start_1 -> start_1
    int start_2 -> start_2
    int start_3 -> start_3
    int start_button_click -> start_button_click
    int start_new_shouqi -> start_new_shouqi
    int start_new_zhankai -> start_new_zhankai
    int start_sports_bg -> start_sports_bg
    int startest_xinlv -> startest_xinlv
    int startsport_medle_check -> startsport_medle_check
    int startsport_medle_uncheck -> startsport_medle_uncheck
    int startsport_set_bg -> startsport_set_bg
    int startsport_type_bg -> startsport_type_bg
    int stop_button -> stop_button
    int stop_button_click -> stop_button_click
    int stoptest_xinlv -> stoptest_xinlv
    int stroke_cancle_click_background -> stroke_cancle_click_background
    int stroke_cancle_unclick_background -> stroke_cancle_unclick_background
    int stroke_cicle_gray_background -> stroke_cicle_gray_background
    int stroke_cicle_whrite_background -> stroke_cicle_whrite_background
    int stroke_cicle_yellow_background -> stroke_cicle_yellow_background
    int stroke_guanzhu_btn_background -> stroke_guanzhu_btn_background
    int stroke_halfcicle_yellow_background -> stroke_halfcicle_yellow_background
    int stroke_linecicle_yellow_background -> stroke_linecicle_yellow_background
    int stroke_nocicle_gray_background -> stroke_nocicle_gray_background
    int stroke_nocicle_guangchanggray_background -> stroke_nocicle_guangchanggray_background
    int stroke_nocicle_personal_background -> stroke_nocicle_personal_background
    int stroke_nocicle_yellow_background -> stroke_nocicle_yellow_background
    int stroke_okclick_yellow_background -> stroke_okclick_yellow_background
    int stroke_okunclick_yellow_background -> stroke_okunclick_yellow_background
    int submit_click -> submit_click
    int submit_unclick -> submit_unclick
    int suoding_button -> suoding_button
    int suoding_button_click -> suoding_button_click
    int syc_guanli -> syc_guanli
    int tab2_bg -> tab2_bg
    int tab2_focus -> tab2_focus
    int tab_2 -> tab_2
    int tab_bar_focus -> tab_bar_focus
    int tanchu_close_btn -> tanchu_close_btn
    int tanchu_close_line -> tanchu_close_line
    int tengxun -> tengxun
    int time -> time
    int tip_bg -> tip_bg
    int tip_bg2 -> tip_bg2
    int tip_bg3 -> tip_bg3
    int title2_bg -> title2_bg
    int title_add_friends -> title_add_friends
    int title_back_xinlv -> title_back_xinlv
    int title_badminton -> title_badminton
    int title_bownload -> title_bownload
    int title_climb -> title_climb
    int title_cycling -> title_cycling
    int title_del -> title_del
    int title_dieyong -> title_dieyong
    int title_football -> title_football
    int title_golf -> title_golf
    int title_hortory_icon -> title_hortory_icon
    int title_left_new_icon -> title_left_new_icon
    int title_menu -> title_menu
    int title_no_voice -> title_no_voice
    int title_right_new_message -> title_right_new_message
    int title_roller_skating -> title_roller_skating
    int title_rowing -> title_rowing
    int title_run -> title_run
    int title_send -> title_send
    int title_skating -> title_skating
    int title_sports_creat -> title_sports_creat
    int title_swim -> title_swim
    int title_table_tennis -> title_table_tennis
    int title_tennis -> title_tennis
    int title_unupload -> title_unupload
    int title_voice -> title_voice
    int title_walk -> title_walk
    int title_walk_race -> title_walk_race
    int title_wayong -> title_wayong
    int title_yangyong -> title_yangyong
    int toplist -> toplist
    int train_action_bg -> train_action_bg
    int train_action_btn -> train_action_btn
    int train_complete_bg -> train_complete_bg
    int train_complete_icon -> train_complete_icon
    int train_music_bg -> train_music_bg
    int train_music_big -> train_music_big
    int train_music_seekbg -> train_music_seekbg
    int train_music_small -> train_music_small
    int train_nomusic_bg -> train_nomusic_bg
    int train_play_curpositon -> train_play_curpositon
    int train_play_nextpositon -> train_play_nextpositon
    int train_playlast -> train_playlast
    int train_playnext -> train_playnext
    int train_playpause -> train_playpause
    int train_playreturn -> train_playreturn
    int train_playstart -> train_playstart
    int train_record_alarm -> train_record_alarm
    int train_record_bg1 -> train_record_bg1
    int train_record_bg2 -> train_record_bg2
    int train_record_fresh -> train_record_fresh
    int train_startplay_btn -> train_startplay_btn
    int traincomplete_share_seleter -> traincomplete_share_seleter
    int traincomplete_submit_seleter -> traincomplete_submit_seleter
    int trainmusic_bg_close -> trainmusic_bg_close
    int trainmusic_btn_bar -> trainmusic_btn_bar
    int trainmusic_btn_close -> trainmusic_btn_close
    int trainmusic_btn_open -> trainmusic_btn_open
    int trainmusic_checkbox_selector -> trainmusic_checkbox_selector
    int tuijian_time -> tuijian_time
    int tuijian_zan -> tuijian_zan
    int unmultiselect -> unmultiselect
    int up_send_primsg_edit -> up_send_primsg_edit
    int user_dongtai_fenxiang -> user_dongtai_fenxiang
    int user_dongtai_huifu -> user_dongtai_huifu
    int user_dongtai_zan -> user_dongtai_zan
    int videoplay_progressbar -> videoplay_progressbar
    int voice_begin -> voice_begin
    int voice_stop -> voice_stop
    int w0 -> w0
    int w1 -> w1
    int w10 -> w10
    int w11 -> w11
    int w12 -> w12
    int w13 -> w13
    int w14 -> w14
    int w15 -> w15
    int w16 -> w16
    int w17 -> w17
    int w18 -> w18
    int w19 -> w19
    int w2 -> w2
    int w20 -> w20
    int w21 -> w21
    int w3 -> w3
    int w4 -> w4
    int w5 -> w5
    int w6 -> w6
    int w7 -> w7
    int w8 -> w8
    int w9 -> w9
    int wangqiu -> wangqiu
    int warn_button -> warn_button
    int warn_button_click -> warn_button_click
    int warn_img1 -> warn_img1
    int warn_img2 -> warn_img2
    int warn_img3 -> warn_img3
    int warn_img4 -> warn_img4
    int watch_img -> watch_img
    int wayong -> wayong
    int weixin -> weixin
    int weixin_login -> weixin_login
    int wheel_val -> wheel_val
    int wristwatch -> wristwatch
    int wxpay_btn_click -> wxpay_btn_click
    int xin -> xin
    int xinlang -> xinlang
    int xinlv_01 -> xinlv_01
    int xinlv_02 -> xinlv_02
    int xinlv_03 -> xinlv_03
    int xinlv_04 -> xinlv_04
    int xinlv_05 -> xinlv_05
    int xinlv_06 -> xinlv_06
    int xinlv_07 -> xinlv_07
    int xinlv_08 -> xinlv_08
    int xinlv_09 -> xinlv_09
    int xinlv_10 -> xinlv_10
    int xinlv_11 -> xinlv_11
    int xinlv_12 -> xinlv_12
    int xinlv_13 -> xinlv_13
    int xinlv_14 -> xinlv_14
    int xinlv_15 -> xinlv_15
    int xinlv_16 -> xinlv_16
    int xinlv_17 -> xinlv_17
    int xinlv_18 -> xinlv_18
    int xinlv_19 -> xinlv_19
    int xinlv_20 -> xinlv_20
    int xinlv_21 -> xinlv_21
    int xinlv_22 -> xinlv_22
    int xinlv_23 -> xinlv_23
    int xinlv_24 -> xinlv_24
    int xinlv_25 -> xinlv_25
    int xinlv_26 -> xinlv_26
    int xinlv_27 -> xinlv_27
    int xinlv_28 -> xinlv_28
    int xinlv_29 -> xinlv_29
    int xinlv_30 -> xinlv_30
    int xinlv_31 -> xinlv_31
    int xinlv_32 -> xinlv_32
    int xinlv_33 -> xinlv_33
    int xinlv_34 -> xinlv_34
    int xinlv_35 -> xinlv_35
    int xinlv_36 -> xinlv_36
    int xinlv_37 -> xinlv_37
    int xinlv_38 -> xinlv_38
    int xinlv_39 -> xinlv_39
    int xinlv_40 -> xinlv_40
    int xinlv_41 -> xinlv_41
    int xinlv_42 -> xinlv_42
    int xinlv_43 -> xinlv_43
    int xinlv_44 -> xinlv_44
    int xinlv_45 -> xinlv_45
    int xinlv_46 -> xinlv_46
    int xinlv_47 -> xinlv_47
    int xinlv_48 -> xinlv_48
    int xinlv_49 -> xinlv_49
    int xinlv_50 -> xinlv_50
    int xinlv_51 -> xinlv_51
    int xinlv_52 -> xinlv_52
    int xinlv_53 -> xinlv_53
    int xinlv_54 -> xinlv_54
    int xinlv_55 -> xinlv_55
    int xinlv_56 -> xinlv_56
    int xinlv_57 -> xinlv_57
    int xinlv_58 -> xinlv_58
    int xinlv_59 -> xinlv_59
    int xinlv_60 -> xinlv_60
    int xinlvtongji_icon -> xinlvtongji_icon
    int xunlianchengji -> xunlianchengji
    int yangrouchuan -> yangrouchuan
    int yangyong -> yangyong
    int yumaoqiu -> yumaoqiu
    int zan_more -> zan_more
    int zhishidangao -> zhishidangao
    int ziyouyong -> ziyouyong
    int zoulu -> zoulu
    int zoulu_black -> zoulu_black
    int zoulu_black2 -> zoulu_black2
    int zoulu_yellow -> zoulu_yellow
    int zuqiu -> zuqiu
com.fox.exercise.R$id -> com.fox.exercise.R$id:
    int Combustion_history -> Combustion_history
    int Combustion_history_unit -> Combustion_history_unit
    int Distance_history -> Distance_history
    int Distance_history_unit -> Distance_history_unit
    int Download_linear -> Download_linear
    int FILL -> FILL
    int ImgView -> ImgView
    int ItemText -> ItemText
    int RelativeLayout1 -> RelativeLayout1
    int RelativeLayout2 -> RelativeLayout2
    int STROKE -> STROKE
    int ScrollLayouFound -> ScrollLayouFound
    int ScrollLayoutTest -> ScrollLayoutTest
    int TextView1 -> TextView1
    int TextView3 -> TextView3
    int abandon -> abandon
    int about -> about
    int action_rules -> action_rules
    int action_settings -> action_settings
    int action_time -> action_time
    int activity_detail_content -> activity_detail_content
    int activity_image_icon -> activity_image_icon
    int activity_image_yuyinicon -> activity_image_yuyinicon
    int activity_list -> activity_list
    int activity_name -> activity_name
    int activity_pic -> activity_pic
    int activity_pic_layout -> activity_pic_layout
    int activity_pinglun_layout -> activity_pinglun_layout
    int activity_scrollview -> activity_scrollview
    int activity_station -> activity_station
    int activity_submit_address -> activity_submit_address
    int activity_submit_content -> activity_submit_content
    int activity_submit_name -> activity_submit_name
    int activity_submit_pinglun -> activity_submit_pinglun
    int activity_submit_pinglun_num -> activity_submit_pinglun_num
    int activity_submit_time -> activity_submit_time
    int activity_time -> activity_time
    int activity_time_context -> activity_time_context
    int activity_title_layout0 -> activity_title_layout0
    int activity_title_layout1 -> activity_title_layout1
    int activity_title_layout2 -> activity_title_layout2
    int activity_title_layout3 -> activity_title_layout3
    int activity_title_layout4 -> activity_title_layout4
    int activity_title_layout5 -> activity_title_layout5
    int activity_title_layout6 -> activity_title_layout6
    int activity_title_layout7 -> activity_title_layout7
    int activity_title_layout8 -> activity_title_layout8
    int activity_title_layout9 -> activity_title_layout9
    int activity_viewpager -> activity_viewpager
    int activity_zan_layout -> activity_zan_layout
    int ad_img -> ad_img
    int ad_layout -> ad_layout
    int add -> add
    int add_friend_edittext -> add_friend_edittext
    int add_friend_pull_refresh_list -> add_friend_pull_refresh_list
    int addressName -> addressName
    int adjustorientationbutton -> adjustorientationbutton
    int advice_back -> advice_back
    int all_distanc -> all_distanc
    int all_good -> all_good
    int all_text -> all_text
    int all_time -> all_time
    int all_tuijian_icon -> all_tuijian_icon
    int all_tuijian_txt -> all_tuijian_txt
    int animation_top_right -> animation_top_right
    int any_data -> any_data
    int area_data -> area_data
    int audio_layout -> audio_layout
    int avatar -> avatar
    int average_history -> average_history
    int average_history_unit -> average_history_unit
    int average_speed -> average_speed
    int backButton -> backButton
    int back_btn -> back_btn
    int background_sleeptime -> background_sleeptime
    int background_train_action_cruname -> background_train_action_cruname
    int background_train_action_nextname -> background_train_action_nextname
    int baidu_map -> baidu_map
    int bamoViewRalative -> bamoViewRalative
    int bgID -> bgID
    int bg_image -> bg_image
    int biaoge -> biaoge
    int bigBtn -> bigBtn
    int binding_devices -> binding_devices
    int bmapView -> bmapView
    int bmi_content -> bmi_content
    int bmi_num -> bmi_num
    int both -> both
    int botom_layout -> botom_layout
    int bottom -> bottom
    int bottomLayout -> bottomLayout
    int boxtxt -> boxtxt
    int bt_QQ -> bt_QQ
    int bt_add1 -> bt_add1
    int bt_add2 -> bt_add2
    int bt_back -> bt_back
    int bt_cancel -> bt_cancel
    int bt_del1 -> bt_del1
    int bt_del2 -> bt_del2
    int bt_follow -> bt_follow
    int bt_giveup -> bt_giveup
    int bt_jdoption -> bt_jdoption
    int bt_ok -> bt_ok
    int bt_pwd_edit -> bt_pwd_edit
    int bt_qqzone -> bt_qqzone
    int bt_reg -> bt_reg
    int bt_submit -> bt_submit
    int bt_txweibo -> bt_txweibo
    int bt_weixin -> bt_weixin
    int bt_xinlang -> bt_xinlang
    int bt_yz -> bt_yz
    int btn_before -> btn_before
    int btn_buildruncircle -> btn_buildruncircle
    int btn_cancel_download -> btn_cancel_download
    int btn_cancle -> btn_cancle
    int btn_check_now -> btn_check_now
    int btn_complete -> btn_complete
    int btn_delete -> btn_delete
    int btn_later -> btn_later
    int btn_next -> btn_next
    int btn_ok -> btn_ok
    int btn_paizhao -> btn_paizhao
    int btn_select_pic -> btn_select_pic
    int btn_train_task_list -> btn_train_task_list
    int btn_version_selected -> btn_version_selected
    int burn_calories -> burn_calories
    int button_adjust_ok -> button_adjust_ok
    int button_capture_ok -> button_capture_ok
    int button_capture_rotate -> button_capture_rotate
    int button_ok -> button_ok
    int button_rotate -> button_rotate
    int button_scan -> button_scan
    int button_sendto -> button_sendto
    int button_share_cancel -> button_share_cancel
    int cal_1 -> cal_1
    int cal_2 -> cal_2
    int cal_3 -> cal_3
    int cal_4 -> cal_4
    int cal_5 -> cal_5
    int cal_6 -> cal_6
    int cal_7 -> cal_7
    int camera -> camera
    int cameraBtn -> cameraBtn
    int camera_frame -> camera_frame
    int camera_preview -> camera_preview
    int cancelbutton -> cancelbutton
    int capture_popup_imageview -> capture_popup_imageview
    int capture_popup_layout -> capture_popup_layout
    int capture_popup_layout_content -> capture_popup_layout_content
    int capturebutton -> capturebutton
    int cb_pic_clear -> cb_pic_clear
    int cb_video_clear -> cb_video_clear
    int cbt_cancel -> cbt_cancel
    int cbt_ok -> cbt_ok
    int ccuntdown -> ccuntdown
    int ccuntdown_settings -> ccuntdown_settings
    int centerMarkerImg -> centerMarkerImg
    int centerPoint -> centerPoint
    int centerView -> centerView
    int chaomo_bt_login -> chaomo_bt_login
    int chaomo_layout_password -> chaomo_layout_password
    int chaomo_layout_user -> chaomo_layout_user
    int chaomo_password -> chaomo_password
    int chaomo_tx_forget -> chaomo_tx_forget
    int chaomo_zhanghao -> chaomo_zhanghao
    int check_update_img -> check_update_img
    int check_update_txt -> check_update_txt
    int chronometerId -> chronometerId
    int cishu_dan -> cishu_dan
    int city -> city
    int city_linear -> city_linear
    int city_name -> city_name
    int city_size -> city_size
    int citypicker -> citypicker
    int close_set_music -> close_set_music
    int close_tanchu_btn -> close_tanchu_btn
    int close_yuyin -> close_yuyin
    int collaps_txtview -> collaps_txtview
    int comment_detail_find_bottom -> comment_detail_find_bottom
    int complete_cal -> complete_cal
    int complete_time -> complete_time
    int conImg -> conImg
    int conKey -> conKey
    int conLayout -> conLayout
    int conValue -> conValue
    int conValue_title -> conValue_title
    int content -> content
    int contentTextView -> contentTextView
    int content_layout_commentlist -> content_layout_commentlist
    int content_text -> content_text
    int costs -> costs
    int count -> count
    int couny -> couny
    int cover_user_photo -> cover_user_photo
    int cover_user_photo2 -> cover_user_photo2
    int cover_user_photo3 -> cover_user_photo3
    int cursor_sports_group -> cursor_sports_group
    int data -> data
    int date_four -> date_four
    int date_one -> date_one
    int date_three -> date_three
    int day1 -> day1
    int day2 -> day2
    int day3 -> day3
    int day4 -> day4
    int day5 -> day5
    int day6 -> day6
    int day7 -> day7
    int day_wheel -> day_wheel
    int default_bg -> default_bg
    int default_map -> default_map
    int delete_all -> delete_all
    int desc_op_tv -> desc_op_tv
    int desc_tv -> desc_tv
    int description -> description
    int detail_date -> detail_date
    int detail_pic -> detail_pic
    int detils_img -> detils_img
    int detils_img_eight -> detils_img_eight
    int detils_img_five -> detils_img_five
    int detils_img_four -> detils_img_four
    int detils_img_nine -> detils_img_nine
    int detils_img_one -> detils_img_one
    int detils_img_seven -> detils_img_seven
    int detils_img_six -> detils_img_six
    int detils_img_three -> detils_img_three
    int detils_img_two -> detils_img_two
    int detils_text -> detils_text
    int device_info -> device_info
    int device_layout -> device_layout
    int device_layout1 -> device_layout1
    int device_name -> device_name
    int diandianfuli -> diandianfuli
    int dianzan_five -> dianzan_five
    int dianzan_four -> dianzan_four
    int dianzan_nums -> dianzan_nums
    int dianzan_one -> dianzan_one
    int dianzan_six -> dianzan_six
    int dianzan_three -> dianzan_three
    int dianzan_two -> dianzan_two
    int dingwei_dizhi -> dingwei_dizhi
    int dingwei_list -> dingwei_list
    int dingwei_name -> dingwei_name
    int disImg -> disImg
    int disKey -> disKey
    int disLayout -> disLayout
    int disValue -> disValue
    int dis_dan -> dis_dan
    int dis_relative -> dis_relative
    int dis_xiao_1 -> dis_xiao_1
    int dis_xiao_2 -> dis_xiao_2
    int dis_zheng -> dis_zheng
    int divider -> divider
    int divider_comments_botton -> divider_comments_botton
    int djs_10 -> djs_10
    int djs_3 -> djs_3
    int djs_5 -> djs_5
    int djs_close -> djs_close
    int djs_image -> djs_image
    int djs_layout -> djs_layout
    int djs_remind -> djs_remind
    int dongtai -> dongtai
    int doubi_img -> doubi_img
    int doubi_lin -> doubi_lin
    int doubi_list -> doubi_list
    int doubi_time -> doubi_time
    int doubi_title -> doubi_title
    int download_bar -> download_bar
    int download_default_map -> download_default_map
    int download_label -> download_label
    int download_map -> download_map
    int ed_confirmpwd -> ed_confirmpwd
    int ed_email -> ed_email
    int ed_gexing_qianming -> ed_gexing_qianming
    int ed_height -> ed_height
    int ed_height1 -> ed_height1
    int ed_mail -> ed_mail
    int ed_newpwd -> ed_newpwd
    int ed_nickname -> ed_nickname
    int ed_password -> ed_password
    int ed_passwordss -> ed_passwordss
    int ed_phone -> ed_phone
    int ed_weight -> ed_weight
    int ed_yz -> ed_yz
    int edit_calories -> edit_calories
    int edit_step -> edit_step
    int edit_text_layout -> edit_text_layout
    int edtxt_check_newpwd -> edtxt_check_newpwd
    int edtxt_newpwd -> edtxt_newpwd
    int et_label -> et_label
    int et_send_mean -> et_send_mean
    int et_sports_name -> et_sports_name
    int exit -> exit
    int exit_cancel -> exit_cancel
    int exit_login -> exit_login
    int exit_msg -> exit_msg
    int expand_gaode_img -> expand_gaode_img
    int expand_img -> expand_img
    int expand_txt -> expand_txt
    int expandableListView -> expandableListView
    int expression_text_btn -> expression_text_btn
    int faxian -> faxian
    int faxian_layout -> faxian_layout
    int female_radio -> female_radio
    int fengexian -> fengexian
    int fensi_nums -> fensi_nums
    int fill -> fill
    int find_background_img -> find_background_img
    int find_bottom -> find_bottom
    int find_expression_text_btn -> find_expression_text_btn
    int find_expression_text_btn_sportshow -> find_expression_text_btn_sportshow
    int find_good_num_layout -> find_good_num_layout
    int find_head_icon -> find_head_icon
    int find_myname -> find_myname
    int find_press_btn -> find_press_btn
    int find_qushi_icon -> find_qushi_icon
    int find_talk_detils_text -> find_talk_detils_text
    int find_talk_detils_text_name -> find_talk_detils_text_name
    int find_text_btn -> find_text_btn
    int find_text_num_layout -> find_text_num_layout
    int find_unavailable -> find_unavailable
    int find_upcomment_edittext -> find_upcomment_edittext
    int find_upcomment_send -> find_upcomment_send
    int find_upcomment_text -> find_upcomment_text
    int findbottomLayout -> findbottomLayout
    int finish_popup_imageview -> finish_popup_imageview
    int finish_popup_layout -> finish_popup_layout
    int finish_popup_layout_content -> finish_popup_layout_content
    int fl_view -> fl_view
    int fl_view2 -> fl_view2
    int flashmodebutton -> flashmodebutton
    int focusText -> focusText
    int focus_image_icon -> focus_image_icon
    int focus_layout_icon -> focus_layout_icon
    int focus_name_txt -> focus_name_txt
    int focus_time_txt -> focus_time_txt
    int focus_txt -> focus_txt
    int follow_btn -> follow_btn
    int fragment_container -> fragment_container
    int frame_layout -> frame_layout
    int fuli1 -> fuli1
    int fuli2 -> fuli2
    int fuli3 -> fuli3
    int fuli4 -> fuli4
    int gallery_layout -> gallery_layout
    int gao_watch_2 -> gao_watch_2
    int gaode_map -> gaode_map
    int getxing_qianming -> getxing_qianming
    int gifts_nums -> gifts_nums
    int gifts_pull_refresh_list -> gifts_pull_refresh_list
    int go_about -> go_about
    int go_ccuntdown -> go_ccuntdown
    int go_downloadmap -> go_downloadmap
    int go_gride -> go_gride
    int go_history -> go_history
    int go_lockscreen -> go_lockscreen
    int go_messages -> go_messages
    int go_mydevice -> go_mydevice
    int go_opinion -> go_opinion
    int go_personal_set -> go_personal_set
    int go_personal_sport_target -> go_personal_sport_target
    int go_read_sound -> go_read_sound
    int go_selectmap -> go_selectmap
    int go_sport_target -> go_sport_target
    int go_sports_parts -> go_sports_parts
    int goal_cal -> goal_cal
    int goal_caluli -> goal_caluli
    int goal_dis -> goal_dis
    int goal_gongli -> goal_gongli
    int goal_layout -> goal_layout
    int goal_text -> goal_text
    int good_and_text -> good_and_text
    int good_people -> good_people
    int good_text_detils_layout -> good_text_detils_layout
    int gotomall -> gotomall
    int gps_content_txt -> gps_content_txt
    int gps_tishi_tx -> gps_tishi_tx
    int gps_txt -> gps_txt
    int grid -> grid
    int gride -> gride
    int gridview -> gridview
    int gridview_image -> gridview_image
    int gridview_send_image -> gridview_send_image
    int group_image -> group_image
    int group_text -> group_text
    int guanzhu_numbers -> guanzhu_numbers
    int have_binded -> have_binded
    int head_arrowImageView -> head_arrowImageView
    int head_progressBar -> head_progressBar
    int header_text -> header_text
    int health_sleep_bolayout -> health_sleep_bolayout
    int history -> history
    int history_detail_content -> history_detail_content
    int history_detail_go -> history_detail_go
    int history_detail_logo -> history_detail_logo
    int history_item -> history_item
    int horizontal -> horizontal
    int horizontal_line -> horizontal_line
    int huati_gridview -> huati_gridview
    int ib_fenge -> ib_fenge
    int ib_xunlianchengji -> ib_xunlianchengji
    int id_index_gallery_item_image -> id_index_gallery_item_image
    int image -> image
    int imageLayot -> imageLayot
    int imageView_capture_view -> imageView_capture_view
    int image_bg -> image_bg
    int image_biao_yuan -> image_biao_yuan
    int image_ddfu1 -> image_ddfu1
    int image_ddfu2 -> image_ddfu2
    int image_ddfu3 -> image_ddfu3
    int image_ddfu4 -> image_ddfu4
    int image_headphoto -> image_headphoto
    int image_headphoto2 -> image_headphoto2
    int image_icon -> image_icon
    int image_icon1 -> image_icon1
    int image_into_icon -> image_into_icon
    int image_layout -> image_layout
    int image_line -> image_line
    int image_run_circle -> image_run_circle
    int image_shenshunjian1 -> image_shenshunjian1
    int image_shenshunjian2 -> image_shenshunjian2
    int image_shenshunjian3 -> image_shenshunjian3
    int image_shenshunjian4 -> image_shenshunjian4
    int image_sports_complete -> image_sports_complete
    int image_sports_complete_content -> image_sports_complete_content
    int image_sports_complete_layout -> image_sports_complete_layout
    int image_sports_complete_point -> image_sports_complete_point
    int image_sports_complete_rate -> image_sports_complete_rate
    int image_xing -> image_xing
    int image_zhu_yuan -> image_zhu_yuan
    int imageview_gps -> imageview_gps
    int imageview_image -> imageview_image
    int imageview_jibu -> imageview_jibu
    int img -> img
    int imgID -> imgID
    int imgLayout -> imgLayout
    int imgView -> imgView
    int img_bt -> img_bt
    int img_good -> img_good
    int img_headingimg -> img_headingimg
    int img_icon -> img_icon
    int img_newcommenter -> img_newcommenter
    int img_pic -> img_pic
    int img_sex -> img_sex
    int img_status -> img_status
    int imput_time -> imput_time
    int index_sport_caculate -> index_sport_caculate
    int inner_share_layout -> inner_share_layout
    int install -> install
    int install_later -> install_later
    int install_now -> install_now
    int introduce -> introduce
    int introduction -> introduction
    int is_manorwomen_icon -> is_manorwomen_icon
    int is_shihe_sport -> is_shihe_sport
    int is_upload -> is_upload
    int isselected -> isselected
    int item_image_grid_text -> item_image_grid_text
    int item_img -> item_img
    int ivAppIcon -> ivAppIcon
    int iv_authpic -> iv_authpic
    int iv_back_xinlv -> iv_back_xinlv
    int iv_background -> iv_background
    int iv_beishu -> iv_beishu
    int iv_bg -> iv_bg
    int iv_fenge -> iv_fenge
    int iv_historyallbtn -> iv_historyallbtn
    int iv_icon -> iv_icon
    int iv_left -> iv_left
    int iv_shoushi_xinlv -> iv_shoushi_xinlv
    int iv_sportstyle -> iv_sportstyle
    int iv_star1 -> iv_star1
    int iv_star2 -> iv_star2
    int iv_star3 -> iv_star3
    int iv_star4 -> iv_star4
    int iv_star5 -> iv_star5
    int iv_startest_xinlv -> iv_startest_xinlv
    int iv_switch_cursor -> iv_switch_cursor
    int iv_tongji_xinlv -> iv_tongji_xinlv
    int iv_train_video_cache -> iv_train_video_cache
    int iv_tubiao -> iv_tubiao
    int iv_userhead -> iv_userhead
    int iv_xinlv -> iv_xinlv
    int iv_yuanhuan -> iv_yuanhuan
    int iv_zhiding -> iv_zhiding
    int ivcebian_into_icon -> ivcebian_into_icon
    int ka -> ka
    int kaluli_dan -> kaluli_dan
    int km_1 -> km_1
    int km_2 -> km_2
    int km_3 -> km_3
    int km_4 -> km_4
    int km_5 -> km_5
    int km_6 -> km_6
    int km_7 -> km_7
    int lanyan_lian -> lanyan_lian
    int last_btn -> last_btn
    int lay -> lay
    int lay_nearby_cover -> lay_nearby_cover
    int layoutVoice -> layoutVoice
    int layout_address -> layout_address
    int layout_birthday -> layout_birthday
    int layout_bmi -> layout_bmi
    int layout_bottom -> layout_bottom
    int layout_button -> layout_button
    int layout_confirmpwd -> layout_confirmpwd
    int layout_date -> layout_date
    int layout_device -> layout_device
    int layout_edit_calories -> layout_edit_calories
    int layout_edit_step -> layout_edit_step
    int layout_email -> layout_email
    int layout_fourway -> layout_fourway
    int layout_gexing_qianming -> layout_gexing_qianming
    int layout_headphoto -> layout_headphoto
    int layout_height -> layout_height
    int layout_icon -> layout_icon
    int layout_left_menu -> layout_left_menu
    int layout_letf -> layout_letf
    int layout_line -> layout_line
    int layout_mail -> layout_mail
    int layout_mall -> layout_mall
    int layout_newpwd -> layout_newpwd
    int layout_nickname -> layout_nickname
    int layout_one_number -> layout_one_number
    int layout_other -> layout_other
    int layout_password -> layout_password
    int layout_phone -> layout_phone
    int layout_sex -> layout_sex
    int layout_talk_text -> layout_talk_text
    int layout_title -> layout_title
    int layout_weight -> layout_weight
    int layout_yanum -> layout_yanum
    int left -> left
    int lin_shuaxin -> lin_shuaxin
    int line -> line
    int line1 -> line1
    int line2 -> line2
    int line_o -> line_o
    int linearLayout1 -> linearLayout1
    int linearLayout1_xinlv -> linearLayout1_xinlv
    int linearLayout2 -> linearLayout2
    int linearLayout_capture -> linearLayout_capture
    int linearLayout_comments_show -> linearLayout_comments_show
    int linear_detail -> linear_detail
    int linear_image -> linear_image
    int linear_top -> linear_top
    int linearlayout_content -> linearlayout_content
    int linearlayout_forgetpwd_checknewpwd -> linearlayout_forgetpwd_checknewpwd
    int linearlayout_forgetpwd_newpwd -> linearlayout_forgetpwd_newpwd
    int liner_backhome -> liner_backhome
    int list -> list
    int listSize -> listSize
    int list_help_info -> list_help_info
    int list_user_fenxiang -> list_user_fenxiang
    int list_user_fenxiang_layout -> list_user_fenxiang_layout
    int list_user_guanzhu -> list_user_guanzhu
    int list_user_guanzhu_addone -> list_user_guanzhu_addone
    int list_user_pinglun -> list_user_pinglun
    int list_user_pinglun_layout -> list_user_pinglun_layout
    int list_user_pinglun_layout2 -> list_user_pinglun_layout2
    int list_user_pingluns -> list_user_pingluns
    int list_user_sixin_imagview -> list_user_sixin_imagview
    int list_user_yuepao_imagview -> list_user_yuepao_imagview
    int list_user_zan -> list_user_zan
    int list_user_zan1 -> list_user_zan1
    int list_user_zan_addone -> list_user_zan_addone
    int list_user_zan_addone1 -> list_user_zan_addone1
    int list_user_zan_addones -> list_user_zan_addones
    int list_user_zan_layout -> list_user_zan_layout
    int list_user_zan_layout1 -> list_user_zan_layout1
    int list_user_zans -> list_user_zans
    int listview -> listview
    int ll -> ll
    int ll_auto -> ll_auto
    int ll_comment_zan_shaer -> ll_comment_zan_shaer
    int ll_daren -> ll_daren
    int ll_dianzanimage -> ll_dianzanimage
    int ll_huxileixing -> ll_huxileixing
    int ll_personl -> ll_personl
    int ll_zhangzishi -> ll_zhangzishi
    int ll_zonglicheng -> ll_zonglicheng
    int load_title -> load_title
    int loadingProgressBar -> loadingProgressBar
    int loading_layout -> loading_layout
    int loading_process_dialog_progressBar -> loading_process_dialog_progressBar
    int loading_title_textview -> loading_title_textview
    int localmaplist -> localmaplist
    int lock_screen -> lock_screen
    int lockscreen -> lockscreen
    int login_zan -> login_zan
    int look_history_sportrecord -> look_history_sportrecord
    int lv_comments_show -> lv_comments_show
    int lv_xinlv -> lv_xinlv
    int mCalKm -> mCalKm
    int mRadioGroup -> mRadioGroup
    int mSleep_time1 -> mSleep_time1
    int mSleep_time2 -> mSleep_time2
    int mSleep_time3 -> mSleep_time3
    int mSleep_time4 -> mSleep_time4
    int mSleep_time5 -> mSleep_time5
    int mSleep_time6 -> mSleep_time6
    int mSleep_time7 -> mSleep_time7
    int mSleep_time_layout -> mSleep_time_layout
    int main_content -> main_content
    int main_dialog -> main_dialog
    int main_fragment -> main_fragment
    int main_videoview -> main_videoview
    int mainmenu_layout -> mainmenu_layout
    int male_radio -> male_radio
    int map -> map
    int mapText -> mapText
    int map_baidu -> map_baidu
    int map_gaode -> map_gaode
    int message -> message
    int message1 -> message1
    int message_bottom_view -> message_bottom_view
    int message_layout -> message_layout
    int message_top_view -> message_top_view
    int messages -> messages
    int mls_pay -> mls_pay
    int mls_pay_btn -> mls_pay_btn
    int moff_cityButton -> moff_cityButton
    int moff_localButton -> moff_localButton
    int moff_viewpager -> moff_viewpager
    int month -> month
    int month_english -> month_english
    int month_num -> month_num
    int month_wheel -> month_wheel
    int mscrollview -> mscrollview
    int msg_count -> msg_count
    int msgbox_lv -> msgbox_lv
    int mubiao_content -> mubiao_content
    int mubiao_content_layout -> mubiao_content_layout
    int mubiao_content_title -> mubiao_content_title
    int music_btn -> music_btn
    int myDate -> myDate
    int mySeekBar1 -> mySeekBar1
    int my_cursor_bar -> my_cursor_bar
    int my_device -> my_device
    int myfind_gridview -> myfind_gridview
    int myframe -> myframe
    int mylayout -> mylayout
    int myprogress -> myprogress
    int mysport_image -> mysport_image
    int mysport_layout -> mysport_layout
    int mysport_text -> mysport_text
    int mysport_zong_layout -> mysport_zong_layout
    int mywatch -> mywatch
    int name -> name
    int name_and_money -> name_and_money
    int name_layout -> name_layout
    int name_txt -> name_txt
    int navigation -> navigation
    int nearbyActivity_baidu -> nearbyActivity_baidu
    int nearbyActivity_gaode -> nearbyActivity_gaode
    int nearby_cover_img -> nearby_cover_img
    int nearby_gaode_map -> nearby_gaode_map
    int nearby_map -> nearby_map
    int nearby_pull_refresh_list -> nearby_pull_refresh_list
    int nearby_pull_refresh_list_baidu -> nearby_pull_refresh_list_baidu
    int new_devices -> new_devices
    int new_start_poplayout -> new_start_poplayout
    int next_btn -> next_btn
    int no_data -> no_data
    int no_dizhi -> no_dizhi
    int no_history -> no_history
    int no_jilu_txt -> no_jilu_txt
    int no_trainuser_txt -> no_trainuser_txt
    int notice_msg -> notice_msg
    int now_city -> now_city
    int now_version -> now_version
    int num_train -> num_train
    int ok -> ok
    int ok_button -> ok_button
    int opinion -> opinion
    int otherLayout -> otherLayout
    int other_personal_page_headview -> other_personal_page_headview
    int paceImg -> paceImg
    int paceValue -> paceValue
    int paired_devices -> paired_devices
    int pastTimeText -> pastTimeText
    int pauseBtn -> pauseBtn
    int pause_btn -> pause_btn
    int pause_menu_background -> pause_menu_background
    int pay -> pay
    int pay_btn -> pay_btn
    int pay_text -> pay_text
    int payment -> payment
    int pcaeKey -> pcaeKey
    int peiValue -> peiValue
    int peiValue_title -> peiValue_title
    int perfect_bt_ok -> perfect_bt_ok
    int perfect_edit_name -> perfect_edit_name
    int perfect_image_icon -> perfect_image_icon
    int personal_address -> personal_address
    int personal_page_headview -> personal_page_headview
    int personal_page_refresh_list -> personal_page_refresh_list
    int personal_set -> personal_set
    int personal_settings -> personal_settings
    int personal_sport_days -> personal_sport_days
    int personal_sport_nums -> personal_sport_nums
    int phoneText -> phoneText
    int phone_number_notify1 -> phone_number_notify1
    int phone_number_notify2 -> phone_number_notify2
    int photo_msg_count -> photo_msg_count
    int pic_1 -> pic_1
    int pic_2 -> pic_2
    int pic_3 -> pic_3
    int playImage -> playImage
    int play_detailinfo -> play_detailinfo
    int points_say_content -> points_say_content
    int points_say_icon -> points_say_icon
    int points_say_time -> points_say_time
    int points_say_title -> points_say_title
    int pop_chronometerId -> pop_chronometerId
    int pop_imageview_image -> pop_imageview_image
    int pop_listview -> pop_listview
    int pop_menu_background -> pop_menu_background
    int popu_comment -> popu_comment
    int popu_praise -> popu_praise
    int popup_imageview -> popup_imageview
    int popup_layout -> popup_layout
    int popup_layout_content -> popup_layout_content
    int positionBtn -> positionBtn
    int preview -> preview
    int preview_image -> preview_image
    int preview_image_bottom_layout -> preview_image_bottom_layout
    int preview_image_ok -> preview_image_ok
    int preview_image_recapture -> preview_image_recapture
    int progress -> progress
    int progressBarItemImageLoading -> progressBarItemImageLoading
    int progressId -> progressId
    int progress_viewid -> progress_viewid
    int progress_wav -> progress_wav
    int prompt -> prompt
    int province -> province
    int pullDownFromTop -> pullDownFromTop
    int pullUpFromBottom -> pullUpFromBottom
    int pull_refresh_grid -> pull_refresh_grid
    int pull_refresh_list -> pull_refresh_list
    int pull_to_refresh_image -> pull_to_refresh_image
    int pull_to_refresh_progress -> pull_to_refresh_progress
    int pull_to_refresh_text -> pull_to_refresh_text
    int qq_healthy_toast -> qq_healthy_toast
    int qq_layout -> qq_layout
    int qq_oauth_webView -> qq_oauth_webView
    int qq_share_checkbox -> qq_share_checkbox
    int qushi_all_layout -> qushi_all_layout
    int qushi_all_line -> qushi_all_line
    int qushi_all_tv -> qushi_all_tv
    int qushi_tuijian__line -> qushi_tuijian__line
    int qushi_tuijian_layout -> qushi_tuijian_layout
    int qushi_tuijian_tv -> qushi_tuijian_tv
    int rScrollLayout -> rScrollLayout
    int radioGroup1 -> radioGroup1
    int rankLinearLayout -> rankLinearLayout
    int ranking -> ranking
    int ratio -> ratio
    int re_nodizhi -> re_nodizhi
    int re_nowcity -> re_nowcity
    int re_payview -> re_payview
    int read_sound_layout -> read_sound_layout
    int read_sound_text -> read_sound_text
    int recapture -> recapture
    int recapture_button -> recapture_button
    int recoding_click -> recoding_click
    int recoding_click_find -> recoding_click_find
    int refresh_hint -> refresh_hint
    int refresh_root -> refresh_root
    int refresh_time -> refresh_time
    int regist_mail -> regist_mail
    int registrat_refresh_grid -> registrat_refresh_grid
    int registration -> registration
    int rela_o -> rela_o
    int relativeLayout1 -> relativeLayout1
    int relative_voice -> relative_voice
    int relativelayout_about -> relativelayout_about
    int relativelayout_download_map -> relativelayout_download_map
    int relativelayout_eight -> relativelayout_eight
    int relativelayout_five -> relativelayout_five
    int relativelayout_four -> relativelayout_four
    int relativelayout_one -> relativelayout_one
    int relativelayout_select_map -> relativelayout_select_map
    int relativelayout_seven -> relativelayout_seven
    int relativelayout_six -> relativelayout_six
    int relativelayout_three -> relativelayout_three
    int relativelayout_two -> relativelayout_two
    int remove -> remove
    int residemenu_item -> residemenu_item
    int return_layout -> return_layout
    int reward_img -> reward_img
    int rg_version_list -> rg_version_list
    int right -> right
    int rigist_agreement -> rigist_agreement
    int rl_bottom -> rl_bottom
    int rl_bushu -> rl_bushu
    int rl_content -> rl_content
    int rl_findfriends -> rl_findfriends
    int rl_infowebview -> rl_infowebview
    int rl_left -> rl_left
    int rl_list -> rl_list
    int rl_right -> rl_right
    int rl_startsport_first -> rl_startsport_first
    int rl_train_video_cache -> rl_train_video_cache
    int rl_xin -> rl_xin
    int rl_xinlv -> rl_xinlv
    int rl_yuanhuan -> rl_yuanhuan
    int root -> root
    int root_sports_group_all -> root_sports_group_all
    int root_sports_group_me -> root_sports_group_me
    int roundProgressBar1 -> roundProgressBar1
    int roundimage_icon -> roundimage_icon
    int rule_layout -> rule_layout
    int scheduled_check -> scheduled_check
    int scrollLayout -> scrollLayout
    int scrollView1 -> scrollView1
    int select_map -> select_map
    int send_menu_background -> send_menu_background
    int send_share_layout -> send_share_layout
    int set_menu_background -> set_menu_background
    int set_music_background -> set_music_background
    int set_txt -> set_txt
    int setting_title -> setting_title
    int shareLayout -> shareLayout
    int shareLinearLayout -> shareLinearLayout
    int share_button_layout -> share_button_layout
    int share_cacle_txt -> share_cacle_txt
    int share_dialog_gridview -> share_dialog_gridview
    int share_icon -> share_icon
    int share_image -> share_image
    int share_image_layout -> share_image_layout
    int share_image_title -> share_image_title
    int share_layout -> share_layout
    int share_tengxun_btn -> share_tengxun_btn
    int share_text -> share_text
    int share_weibo_btn -> share_weibo_btn
    int share_weixin_btn -> share_weixin_btn
    int share_yundong_btn -> share_yundong_btn
    int shareto -> shareto
    int shareto_edittext -> shareto_edittext
    int shareto_tenxun_button -> shareto_tenxun_button
    int shareto_weixin_button -> shareto_weixin_button
    int shareto_xinlang_button -> shareto_xinlang_button
    int shengshunjian -> shengshunjian
    int show_request_progress_bar -> show_request_progress_bar
    int sign_up -> sign_up
    int sign_up_layout -> sign_up_layout
    int sk2_press_btn -> sk2_press_btn
    int sk2_text_btn -> sk2_text_btn
    int sleep_day_btn -> sleep_day_btn
    int sleep_day_radiogroup -> sleep_day_radiogroup
    int sleep_hint -> sleep_hint
    int sleep_layout -> sleep_layout
    int sleep_night_btn -> sleep_night_btn
    int sleep_record -> sleep_record
    int sleep_record_layout -> sleep_record_layout
    int sleep_tip -> sleep_tip
    int sleep_tip_content -> sleep_tip_content
    int slider_icon -> slider_icon
    int slider_layout -> slider_layout
    int slim_settings_one -> slim_settings_one
    int slim_settings_two -> slim_settings_two
    int sp_settime -> sp_settime
    int speed -> speed
    int speedImg -> speedImg
    int speedKey -> speedKey
    int speedLayout -> speedLayout
    int speedValue -> speedValue
    int speedValue_title -> speedValue_title
    int sportState -> sportState
    int sportState3 -> sportState3
    int sportStateLayout -> sportStateLayout
    int sportTime -> sportTime
    int sport_area -> sport_area
    int sport_cal_drawimage -> sport_cal_drawimage
    int sport_calories_layout -> sport_calories_layout
    int sport_circle_main_viewpager -> sport_circle_main_viewpager
    int sport_cishu -> sport_cishu
    int sport_detail_share -> sport_detail_share
    int sport_dis -> sport_dis
    int sport_dis_layout -> sport_dis_layout
    int sport_dis_relative -> sport_dis_relative
    int sport_dis_xiao_1 -> sport_dis_xiao_1
    int sport_dis_xiao_2 -> sport_dis_xiao_2
    int sport_distance -> sport_distance
    int sport_distance_icon -> sport_distance_icon
    int sport_header_layout -> sport_header_layout
    int sport_map_back -> sport_map_back
    int sport_map_del -> sport_map_del
    int sport_map_finish -> sport_map_finish
    int sport_map_upload -> sport_map_upload
    int sport_media_back -> sport_media_back
    int sport_media_clear -> sport_media_clear
    int sport_personal_target_num -> sport_personal_target_num
    int sport_personal_target_txt -> sport_personal_target_txt
    int sport_pm -> sport_pm
    int sport_reliang -> sport_reliang
    int sport_step_drawimage -> sport_step_drawimage
    int sport_step_layout -> sport_step_layout
    int sport_sudu -> sport_sudu
    int sport_target_num -> sport_target_num
    int sport_target_txt -> sport_target_txt
    int sport_topTitle -> sport_topTitle
    int sport_type -> sport_type
    int sport_type_icon -> sport_type_icon
    int sport_type_layout -> sport_type_layout
    int sport_type_txt -> sport_type_txt
    int sport_type_txtlayout -> sport_type_txtlayout
    int sport_weather_degree -> sport_weather_degree
    int sport_week -> sport_week
    int sporting_sport_peiPace -> sporting_sport_peiPace
    int sporting_sport_pingjunSpeed -> sporting_sport_pingjunSpeed
    int sporting_sportxiaohao -> sporting_sportxiaohao
    int sportmark -> sportmark
    int sports_cal -> sports_cal
    int sports_cal2 -> sports_cal2
    int sports_cal_relative -> sports_cal_relative
    int sports_calors -> sports_calors
    int sports_cals -> sports_cals
    int sports_camera_album_hint -> sports_camera_album_hint
    int sports_camera_correct_hint -> sports_camera_correct_hint
    int sports_camera_nav_hint -> sports_camera_nav_hint
    int sports_camera_switch_hint -> sports_camera_switch_hint
    int sports_cishu_data -> sports_cishu_data
    int sports_date_title -> sports_date_title
    int sports_dis -> sports_dis
    int sports_find_goodfriends_refresh_list -> sports_find_goodfriends_refresh_list
    int sports_find_othername1 -> sports_find_othername1
    int sports_find_refresh_list -> sports_find_refresh_list
    int sports_goal_back -> sports_goal_back
    int sports_goal_layout -> sports_goal_layout
    int sports_goal_ok -> sports_goal_ok
    int sports_goal_title -> sports_goal_title
    int sports_group_image -> sports_group_image
    int sports_group_layout -> sports_group_layout
    int sports_group_me_detils -> sports_group_me_detils
    int sports_group_me_img -> sports_group_me_img
    int sports_group_me_pull_refresh_list -> sports_group_me_pull_refresh_list
    int sports_group_me_title -> sports_group_me_title
    int sports_group_text -> sports_group_text
    int sports_groupall_edittext -> sports_groupall_edittext
    int sports_groupall_pull_refresh_list -> sports_groupall_pull_refresh_list
    int sports_health_image -> sports_health_image
    int sports_health_layout -> sports_health_layout
    int sports_health_text -> sports_health_text
    int sports_history_detail -> sports_history_detail
    int sports_kaluli_data -> sports_kaluli_data
    int sports_level -> sports_level
    int sports_mainlayout -> sports_mainlayout
    int sports_map_id -> sports_map_id
    int sports_money -> sports_money
    int sports_money_layout -> sports_money_layout
    int sports_money_rule -> sports_money_rule
    int sports_nearby_search_bg -> sports_nearby_search_bg
    int sports_parts_settings -> sports_parts_settings
    int sports_parts_txt -> sports_parts_txt
    int sports_personal_target_settings -> sports_personal_target_settings
    int sports_start_state -> sports_start_state
    int sports_sudu_data -> sports_sudu_data
    int sports_sync_set -> sports_sync_set
    int sports_target_settings -> sports_target_settings
    int sports_time -> sports_time
    int sports_times -> sports_times
    int sports_type -> sports_type
    int sports_upload_finish_button -> sports_upload_finish_button
    int sports_upload_heading_edittext -> sports_upload_heading_edittext
    int sports_upload_heading_textview -> sports_upload_heading_textview
    int sports_user_icon -> sports_user_icon
    int sportscircle_find_refresh_gridview -> sportscircle_find_refresh_gridview
    int sportscircle_find_refresh_list -> sportscircle_find_refresh_list
    int sportshow_sent -> sportshow_sent
    int sportshow_shaer -> sportshow_shaer
    int sreachImg -> sreachImg
    int ssj_item1 -> ssj_item1
    int ssj_item2 -> ssj_item2
    int ssj_item3 -> ssj_item3
    int ssj_item4 -> ssj_item4
    int startBtn -> startBtn
    int startLayout1 -> startLayout1
    int start_btn -> start_btn
    int start_play_layout -> start_play_layout
    int start_sport_image -> start_sport_image
    int start_sport_layout -> start_sport_layout
    int start_sport_text -> start_sport_text
    int start_sports -> start_sports
    int start_stop_but -> start_stop_but
    int start_time_txt -> start_time_txt
    int startingLayout -> startingLayout
    int startplay_btn -> startplay_btn
    int startplay_probar -> startplay_probar
    int startsport -> startsport
    int startsport_english -> startsport_english
    int startsport_gaode_layout -> startsport_gaode_layout
    int startsport_record_tx -> startsport_record_tx
    int startsport_set_tx -> startsport_set_tx
    int startsports_btn -> startsports_btn
    int startsports_type_icon -> startsports_type_icon
    int state_activity_layout_id -> state_activity_layout_id
    int step_counter -> step_counter
    int stopBtn -> stopBtn
    int stopWatchView -> stopWatchView
    int stopWatchView_time -> stopWatchView_time
    int stroke -> stroke
    int submit_content -> submit_content
    int sudu_dan -> sudu_dan
    int suodingBtn -> suodingBtn
    int surface_view -> surface_view
    int surfaceview -> surfaceview
    int sv_container -> sv_container
    int sv_left_menu -> sv_left_menu
    int sv_left_menu1 -> sv_left_menu1
    int sv_moff_container -> sv_moff_container
    int switch_moff -> switch_moff
    int switch_text_false -> switch_text_false
    int switch_text_true -> switch_text_true
    int switchcameraidbutton -> switchcameraidbutton
    int sync_set_content -> sync_set_content
    int sync_set_content_go -> sync_set_content_go
    int sync_set_logo -> sync_set_logo
    int tab_layout -> tab_layout
    int tab_moff_focus -> tab_moff_focus
    int tab_sixin -> tab_sixin
    int tab_sports_group -> tab_sports_group
    int tab_sports_group_me -> tab_sports_group_me
    int tabhost_layout -> tabhost_layout
    int tainplan_index_refresh_list -> tainplan_index_refresh_list
    int tanchu_img -> tanchu_img
    int tanchu_line -> tanchu_line
    int tarinuser_infolist -> tarinuser_infolist
    int tencent_layout -> tencent_layout
    int tengxun -> tengxun
    int tengxun_layout -> tengxun_layout
    int text -> text
    int text4 -> text4
    int text5 -> text5
    int textView1 -> textView1
    int textView2 -> textView2
    int textView_capture1 -> textView_capture1
    int textView_capture2 -> textView_capture2
    int textView_finish -> textView_finish
    int text_content -> text_content
    int text_ddfuli1 -> text_ddfuli1
    int text_ddfuli2 -> text_ddfuli2
    int text_ddfuli3 -> text_ddfuli3
    int text_ddfuli4 -> text_ddfuli4
    int text_frame -> text_frame
    int text_good_bgline -> text_good_bgline
    int text_people -> text_people
    int text_shenshunjian1 -> text_shenshunjian1
    int text_shenshunjian2 -> text_shenshunjian2
    int text_shenshunjian3 -> text_shenshunjian3
    int text_shenshunjian4 -> text_shenshunjian4
    int text_tengxun -> text_tengxun
    int text_weixin -> text_weixin
    int text_xinlang -> text_xinlang
    int textview_haiba -> textview_haiba
    int textview_headtxt -> textview_headtxt
    int textview_qiya -> textview_qiya
    int textview_stepnum -> textview_stepnum
    int tianqi_content -> tianqi_content
    int tianqi_content_num -> tianqi_content_num
    int timeLayout -> timeLayout
    int timeList -> timeList
    int time_disValue -> time_disValue
    int time_distance_layout -> time_distance_layout
    int time_history -> time_history
    int time_history_unit -> time_history_unit
    int time_layout -> time_layout
    int time_train -> time_train
    int time_txt -> time_txt
    int tip_num -> tip_num
    int title -> title
    int titleLayout -> titleLayout
    int title_FrameLayout -> title_FrameLayout
    int title_activity -> title_activity
    int title_charming -> title_charming
    int title_faxian_news -> title_faxian_news
    int title_guanzhu_news -> title_guanzhu_news
    int title_huodong_line -> title_huodong_line
    int title_huodong_msg -> title_huodong_msg
    int title_huodong_news -> title_huodong_news
    int title_layout -> title_layout
    int title_left_btn -> title_left_btn
    int title_left_layout -> title_left_layout
    int title_month -> title_month
    int title_name -> title_name
    int title_new_devices -> title_new_devices
    int title_news -> title_news
    int title_news_faxian_line -> title_news_faxian_line
    int title_news_faxian_msg -> title_news_faxian_msg
    int title_news_guanzhu_line -> title_news_guanzhu_line
    int title_news_guanzhu_msg -> title_news_guanzhu_msg
    int title_news_line -> title_news_line
    int title_news_msg -> title_news_msg
    int title_newsorguanzhu_layout -> title_newsorguanzhu_layout
    int title_paired_devices -> title_paired_devices
    int title_right_btn -> title_right_btn
    int title_sport_num -> title_sport_num
    int title_time -> title_time
    int title_tuijian -> title_tuijian
    int title_tuijian_line -> title_tuijian_line
    int title_tuijian_msg -> title_tuijian_msg
    int title_tuijianorall_layout -> title_tuijianorall_layout
    int title_week -> title_week
    int top -> top
    int top_title -> top_title
    int top_title_layout -> top_title_layout
    int totalTimeText -> totalTimeText
    int train_action_nextname -> train_action_nextname
    int train_actionname -> train_actionname
    int train_actionnum -> train_actionnum
    int train_bt_ok -> train_bt_ok
    int train_cal -> train_cal
    int train_isclose_tbtn -> train_isclose_tbtn
    int train_planimg -> train_planimg
    int train_playname -> train_playname
    int train_posion -> train_posion
    int train_sleep_layout -> train_sleep_layout
    int train_task_list_pull_refresh_list -> train_task_list_pull_refresh_list
    int train_time -> train_time
    int train_userNum -> train_userNum
    int train_usergrid -> train_usergrid
    int trainback_btn -> trainback_btn
    int traincount -> traincount
    int trainicon_gridlayout -> trainicon_gridlayout
    int trainlist_img -> trainlist_img
    int trainplan_name -> trainplan_name
    int trainplan_time -> trainplan_time
    int try_to_login -> try_to_login
    int tuijian_gridview1 -> tuijian_gridview1
    int tuijian_gridview2 -> tuijian_gridview2
    int tuijian_gridview3 -> tuijian_gridview3
    int tuijian_gridview4 -> tuijian_gridview4
    int tuijian_img -> tuijian_img
    int tuijian_time -> tuijian_time
    int tuijian_txt -> tuijian_txt
    int tuijian_zan -> tuijian_zan
    int tv -> tv
    int tv_action -> tv_action
    int tv_action_grade -> tv_action_grade
    int tv_action_info -> tv_action_info
    int tv_action_name -> tv_action_name
    int tv_actiondetail1 -> tv_actiondetail1
    int tv_actiondetail2 -> tv_actiondetail2
    int tv_android_version -> tv_android_version
    int tv_bg -> tv_bg
    int tv_bu -> tv_bu
    int tv_bushu -> tv_bushu
    int tv_chatcontent -> tv_chatcontent
    int tv_city_send -> tv_city_send
    int tv_content -> tv_content
    int tv_current_action -> tv_current_action
    int tv_fenge -> tv_fenge
    int tv_fenzhong -> tv_fenzhong
    int tv_fenzhong_value -> tv_fenzhong_value
    int tv_hint -> tv_hint
    int tv_huodongurl -> tv_huodongurl
    int tv_jinri -> tv_jinri
    int tv_join -> tv_join
    int tv_juli -> tv_juli
    int tv_juli_content -> tv_juli_content
    int tv_kaluli -> tv_kaluli
    int tv_kaluli_content -> tv_kaluli_content
    int tv_label -> tv_label
    int tv_left -> tv_left
    int tv_leijixunlian -> tv_leijixunlian
    int tv_list_date -> tv_list_date
    int tv_list_name -> tv_list_name
    int tv_list_shichang -> tv_list_shichang
    int tv_list_shichang_value -> tv_list_shichang_value
    int tv_list_time -> tv_list_time
    int tv_list_tip -> tv_list_tip
    int tv_list_tipicon -> tv_list_tipicon
    int tv_list_xiaohao -> tv_list_xiaohao
    int tv_list_xiaohao_value -> tv_list_xiaohao_value
    int tv_message_count -> tv_message_count
    int tv_more_one -> tv_more_one
    int tv_more_three -> tv_more_three
    int tv_more_two -> tv_more_two
    int tv_mytitle -> tv_mytitle
    int tv_name -> tv_name
    int tv_pic_clear -> tv_pic_clear
    int tv_pic_clear_cache -> tv_pic_clear_cache
    int tv_product -> tv_product
    int tv_refresh -> tv_refresh
    int tv_refresh_my -> tv_refresh_my
    int tv_reliang -> tv_reliang
    int tv_reliang_content -> tv_reliang_content
    int tv_sendtime -> tv_sendtime
    int tv_steps -> tv_steps
    int tv_steps_content -> tv_steps_content
    int tv_system_version -> tv_system_version
    int tv_textview1 -> tv_textview1
    int tv_time -> tv_time
    int tv_title -> tv_title
    int tv_total_action -> tv_total_action
    int tv_total_fenzhong -> tv_total_fenzhong
    int tv_total_xiaoshi -> tv_total_xiaoshi
    int tv_total_xiaoshi1 -> tv_total_xiaoshi1
    int tv_totalnum_layout -> tv_totalnum_layout
    int tv_totaltime_layout -> tv_totaltime_layout
    int tv_train_cal -> tv_train_cal
    int tv_train_dates -> tv_train_dates
    int tv_train_diandian -> tv_train_diandian
    int tv_train_times -> tv_train_times
    int tv_train_video_cache -> tv_train_video_cache
    int tv_username -> tv_username
    int tv_vardate -> tv_vardate
    int tv_video_clear -> tv_video_clear
    int tv_video_clear_cache -> tv_video_clear_cache
    int tv_wuyang -> tv_wuyang
    int tv_xianshiquanbu -> tv_xianshiquanbu
    int tv_xiaohao -> tv_xiaohao
    int tv_xiaoshi -> tv_xiaoshi
    int tv_xiaoshi_value -> tv_xiaoshi_value
    int tv_xiegang -> tv_xiegang
    int tv_xinlv_average -> tv_xinlv_average
    int tv_yuedengyu -> tv_yuedengyu
    int tv_zuijia -> tv_zuijia
    int tx_age -> tx_age
    int tx_birthday -> tx_birthday
    int tx_cover_Distance -> tx_cover_Distance
    int tx_cover_image -> tx_cover_image
    int tx_cover_name -> tx_cover_name
    int tx_day_juli -> tx_day_juli
    int tx_delete_find -> tx_delete_find
    int tx_detils1 -> tx_detils1
    int tx_distance -> tx_distance
    int tx_message -> tx_message
    int tx_name -> tx_name
    int tx_sexs -> tx_sexs
    int tx_shezhiheadphoto -> tx_shezhiheadphoto
    int tx_sport_address -> tx_sport_address
    int tx_sport_days -> tx_sport_days
    int tx_sport_del -> tx_sport_del
    int tx_sport_huodong -> tx_sport_huodong
    int tx_sport_removetop -> tx_sport_removetop
    int tx_sport_toplist -> tx_sport_toplist
    int tx_start_times -> tx_start_times
    int tx_suozai_city -> tx_suozai_city
    int tx_suozai_couny -> tx_suozai_couny
    int tx_suozai_points -> tx_suozai_points
    int tx_time -> tx_time
    int tx_title -> tx_title
    int tx_xianshiquanbu -> tx_xianshiquanbu
    int txt_title -> txt_title
    int upcomment_edittext -> upcomment_edittext
    int upcomment_send -> upcomment_send
    int upcomment_text -> upcomment_text
    int update_info -> update_info
    int upload_image_icon -> upload_image_icon
    int upvoice_linear -> upvoice_linear
    int upvoice_time -> upvoice_time
    int user_allsport_layout -> user_allsport_layout
    int user_allsport_licheng -> user_allsport_licheng
    int user_layout -> user_layout
    int user_money -> user_money
    int user_name -> user_name
    int user_name2 -> user_name2
    int user_sex_icon -> user_sex_icon
    int usercal -> usercal
    int userlayout -> userlayout
    int usermainactivitysclView -> usermainactivitysclView
    int username -> username
    int vPager -> vPager
    int v_dot0 -> v_dot0
    int v_dot1 -> v_dot1
    int v_dot2 -> v_dot2
    int v_dot3 -> v_dot3
    int v_dot4 -> v_dot4
    int version_info -> version_info
    int version_list -> version_list
    int vertical -> vertical
    int videoBtn -> videoBtn
    int view1 -> view1
    int view_expandable_contentLayout -> view_expandable_contentLayout
    int view_expandable_headerlayout -> view_expandable_headerlayout
    int viewpager -> viewpager
    int viewpager_biaozhu -> viewpager_biaozhu
    int viewpager_sportsgroup -> viewpager_sportsgroup
    int voiceBtn -> voiceBtn
    int voice_delete -> voice_delete
    int voice_start -> voice_start
    int vp -> vp
    int vv_video -> vv_video
    int warn_anim -> warn_anim
    int watch_2 -> watch_2
    int wav_begin -> wav_begin
    int wav_begin_find -> wav_begin_find
    int wav_durations -> wav_durations
    int wav_durations_find -> wav_durations_find
    int weather_data -> weather_data
    int weather_icon -> weather_icon
    int weather_layout -> weather_layout
    int weather_txt -> weather_txt
    int weather_txt_num -> weather_txt_num
    int web -> web
    int web_train -> web_train
    int webview -> webview
    int weixin -> weixin
    int weixin_layout -> weixin_layout
    int weixin_pengyouquan_layout -> weixin_pengyouquan_layout
    int weixin_share_checkbox -> weixin_share_checkbox
    int weixinfriends_share_checkbox -> weixinfriends_share_checkbox
    int whole_pull_refresh_grid -> whole_pull_refresh_grid
    int wifi_only -> wifi_only
    int wv_auth -> wv_auth
    int xiaohao -> xiaohao
    int xinlang -> xinlang
    int xinlang_layout -> xinlang_layout
    int xinlv_layout -> xinlv_layout
    int year_wheel -> year_wheel
    int yundong_cishu -> yundong_cishu
    int yundong_cishu_2 -> yundong_cishu_2
    int yundong_di_day -> yundong_di_day
    int yundong_di_day_2 -> yundong_di_day_2
    int yundong_laluli -> yundong_laluli
    int yundong_laluli_2 -> yundong_laluli_2
    int yundong_reliang -> yundong_reliang
    int yundong_sudu -> yundong_sudu
    int zan_more_icon -> zan_more_icon
    int zhangzishi1 -> zhangzishi1
    int zhangzishi2 -> zhangzishi2
    int zhangzishi3 -> zhangzishi3
    int zhangzishi4 -> zhangzishi4
    int zhangzishi_text1 -> zhangzishi_text1
    int zhangzishi_text2 -> zhangzishi_text2
    int zhangzishi_text3 -> zhangzishi_text3
    int zhangzishi_text4 -> zhangzishi_text4
    int zhangzisi -> zhangzisi
    int zhiding_001 -> zhiding_001
    int zhuye_image_icon1 -> zhuye_image_icon1
    int zhuzhuang_layout -> zhuzhuang_layout
    int zong_activity_layout -> zong_activity_layout
    int zong_li_txt -> zong_li_txt
    int zong_li_txt_layout -> zong_li_txt_layout
    int zoom -> zoom
    int zoom_bar_background -> zoom_bar_background
    int zoom_bar_layout -> zoom_bar_layout
    int zzs_image1 -> zzs_image1
    int zzs_image2 -> zzs_image2
    int zzs_image3 -> zzs_image3
    int zzs_image4 -> zzs_image4
com.fox.exercise.R$integer -> com.fox.exercise.R$integer:
    int coin_gift -> coin_gift
    int config_allAppsFadeInTime -> config_allAppsFadeInTime
    int config_allAppsFadeOutTime -> config_allAppsFadeOutTime
    int config_create_shortcut -> config_create_shortcut
    int config_enter_bestgirl -> config_enter_bestgirl
    int config_enter_sports -> config_enter_sports
    int config_gameworld_on -> config_gameworld_on
    int config_phone_specialchars -> config_phone_specialchars
    int config_qqhealthy_on -> config_qqhealthy_on
    int config_recommend_on -> config_recommend_on
    int config_uploaderror -> config_uploaderror
    int config_withsync -> config_withsync
com.fox.exercise.R$layout -> com.fox.exercise.R$layout:
    int about -> about
    int activity -> activity
    int activity_bushutongji_barchart -> activity_bushutongji_barchart
    int activity_bushutongji_viewitem -> activity_bushutongji_viewitem
    int activity_celebration_main -> activity_celebration_main
    int activity_clear_train_video_cache -> activity_clear_train_video_cache
    int activity_comments -> activity_comments
    int activity_comments_details -> activity_comments_details
    int activity_file_download -> activity_file_download
    int activity_image_bucket -> activity_image_bucket
    int activity_image_grid -> activity_image_grid
    int activity_index_gallery_item -> activity_index_gallery_item
    int activity_index_traingride_item -> activity_index_traingride_item
    int activity_index_trainlist_item -> activity_index_trainlist_item
    int activity_infowebview -> activity_infowebview
    int activity_jd_auth -> activity_jd_auth
    int activity_list_detail -> activity_list_detail
    int activity_list_item -> activity_list_item
    int activity_listview -> activity_listview
    int activity_perfect_main -> activity_perfect_main
    int activity_personal_page_main -> activity_personal_page_main
    int activity_photo -> activity_photo
    int activity_points_say_main -> activity_points_say_main
    int activity_recommend -> activity_recommend
    int activity_recommend1 -> activity_recommend1
    int activity_share_select -> activity_share_select
    int activity_sleep_history -> activity_sleep_history
    int activity_sleep_main -> activity_sleep_main
    int activity_sport_circle_find_event -> activity_sport_circle_find_event
    int activity_train_complete -> activity_train_complete
    int activity_train_plan_main -> activity_train_plan_main
    int activity_train_task_list -> activity_train_task_list
    int activity_training_action -> activity_training_action
    int activity_update_check -> activity_update_check
    int activity_update_download -> activity_update_download
    int activity_update_install -> activity_update_install
    int activity_user_activity_main -> activity_user_activity_main
    int activity_user_set_main -> activity_user_set_main
    int activity_video_view_main -> activity_video_view_main
    int activity_wei -> activity_wei
    int activityrankdetail -> activityrankdetail
    int activityrankingfragment -> activityrankingfragment
    int adapter_comments -> adapter_comments
    int adapter_get_train_action_list -> adapter_get_train_action_list
    int adshow_play -> adshow_play
    int advice_feedback -> advice_feedback
    int app_item -> app_item
    int app_item_img -> app_item_img
    int auto_item -> auto_item
    int auto_item2 -> auto_item2
    int auto_item3 -> auto_item3
    int base_activity_details_eight_layout -> base_activity_details_eight_layout
    int base_activity_details_five_layout -> base_activity_details_five_layout
    int base_activity_details_four_detail_layout -> base_activity_details_four_detail_layout
    int base_activity_details_four_layout -> base_activity_details_four_layout
    int base_activity_details_nine_layout -> base_activity_details_nine_layout
    int base_activity_details_one_detail_layout -> base_activity_details_one_detail_layout
    int base_activity_details_one_layout -> base_activity_details_one_layout
    int base_activity_details_seven_layout -> base_activity_details_seven_layout
    int base_activity_details_six_layout -> base_activity_details_six_layout
    int base_activity_details_three_1_detail_layout -> base_activity_details_three_1_detail_layout
    int base_activity_details_three_1_layout -> base_activity_details_three_1_layout
    int base_activity_details_three_layout -> base_activity_details_three_layout
    int base_activity_details_two_detail_layout -> base_activity_details_two_detail_layout
    int base_activity_details_two_layout -> base_activity_details_two_layout
    int base_activity_details_zero_detail_layout -> base_activity_details_zero_detail_layout
    int base_activity_details_zero_layout -> base_activity_details_zero_layout
    int base_fragment -> base_fragment
    int base_fragment1 -> base_fragment1
    int bestgirl_progressdialog -> bestgirl_progressdialog
    int biaopantu -> biaopantu
    int bind_device -> bind_device
    int capture_preview -> capture_preview
    int chatting_item_msg_text_left -> chatting_item_msg_text_left
    int chatting_item_msg_text_right -> chatting_item_msg_text_right
    int circle_find_listitem -> circle_find_listitem
    int circle_findevent_grid_headview -> circle_findevent_grid_headview
    int city_picker -> city_picker
    int citypicker_dialog -> citypicker_dialog
    int coins_dialog -> coins_dialog
    int collapsible_textview -> collapsible_textview
    int content_activity -> content_activity
    int cool_currency_rules -> cool_currency_rules
    int datepicker_dialog -> datepicker_dialog
    int device -> device
    int device_info_screen -> device_info_screen
    int device_list -> device_list
    int dialog_bushutongji_share -> dialog_bushutongji_share
    int dialog_download_cancel -> dialog_download_cancel
    int diandianfuli_item -> diandianfuli_item
    int dingwei_item -> dingwei_item
    int dingwei_listview -> dingwei_listview
    int djs_setting -> djs_setting
    int dongtai_activity -> dongtai_activity
    int doubi_activity -> doubi_activity
    int doubi_item -> doubi_item
    int exit_login -> exit_login
    int expand_item -> expand_item
    int find_gridview_item -> find_gridview_item
    int findfriends_sendmsg -> findfriends_sendmsg
    int first_imageview -> first_imageview
    int firstloginlayout -> firstloginlayout
    int fox_sports_goal -> fox_sports_goal
    int friends_list_front_view -> friends_list_front_view
    int from_qq_dialog -> from_qq_dialog
    int history_headview -> history_headview
    int huodongurl -> huodongurl
    int huodongxiangqing_activity -> huodongxiangqing_activity
    int index_tanchu_layout -> index_tanchu_layout
    int introductfragment -> introductfragment
    int invitesports_item -> invitesports_item
    int invitesports_layout -> invitesports_layout
    int item_image_bucket -> item_image_bucket
    int item_image_grid -> item_image_grid
    int item_xinlvcount -> item_xinlvcount
    int jd_main_title -> jd_main_title
    int load_offline -> load_offline
    int lockscreen -> lockscreen
    int main -> main
    int media_player_video -> media_player_video
    int mediapoint_map_gaode -> mediapoint_map_gaode
    int moffline_expand -> moffline_expand
    int moffline_gaode_mlistview -> moffline_gaode_mlistview
    int moffline_map -> moffline_map
    int moffline_mlistview -> moffline_mlistview
    int msgbox_item -> msgbox_item
    int msgbox_new_item -> msgbox_new_item
    int msgbox_new_other_item -> msgbox_new_other_item
    int mydevice -> mydevice
    int mysport_first_frag2 -> mysport_first_frag2
    int notices_activity -> notices_activity
    int offlinemap_gaode -> offlinemap_gaode
    int offlinemap_gaode_child -> offlinemap_gaode_child
    int offlinemap_gaode_group -> offlinemap_gaode_group
    int on_screen_hint -> on_screen_hint
    int pay_activity -> pay_activity
    int paymentfragment -> paymentfragment
    int personal_msg -> personal_msg
    int pop_sport_list -> pop_sport_list
    int pop_sport_listitem -> pop_sport_listitem
    int preview_window -> preview_window
    int privatemsg_fragment -> privatemsg_fragment
    int pull_to_refresh_header -> pull_to_refresh_header
    int qq_oauth_activity_layout -> qq_oauth_activity_layout
    int recommend_banner -> recommend_banner
    int refresh_top_item -> refresh_top_item
    int registrat_fragment_item -> registrat_fragment_item
    int registratfragment -> registratfragment
    int residemenu -> residemenu
    int residemenu_item -> residemenu_item
    int runcircle -> runcircle
    int runcircle_image -> runcircle_image
    int select_images_from_local -> select_images_from_local
    int select_images_from_local1 -> select_images_from_local1
    int sendmsg_image -> sendmsg_image
    int setting_height_layout -> setting_height_layout
    int setting_sex_layout -> setting_sex_layout
    int setting_weight_layout -> setting_weight_layout
    int share_grid_layout -> share_grid_layout
    int share_gride_list_item -> share_gride_list_item
    int shareto_weibo -> shareto_weibo
    int shenshunjian_item -> shenshunjian_item
    int sleepexample -> sleepexample
    int slim_frend_adapter -> slim_frend_adapter
    int slim_friend_state -> slim_friend_state
    int slim_setting -> slim_setting
    int splash_screen -> splash_screen
    int sport_circle_find_frg -> sport_circle_find_frg
    int sport_circle_findheadview -> sport_circle_findheadview
    int sport_dialog_for_newtask -> sport_dialog_for_newtask
    int sport_dialog_for_task -> sport_dialog_for_task
    int sport_main_fragment_layout -> sport_main_fragment_layout
    int sport_rank_layout -> sport_rank_layout
    int sport_upload -> sport_upload
    int sportcondition -> sportcondition
    int sportcondition_device_name -> sportcondition_device_name
    int sportdetail_map_gaode1 -> sportdetail_map_gaode1
    int sporting_map -> sporting_map
    int sporting_map_gaode -> sporting_map_gaode
    int sports_addfriend -> sports_addfriend
    int sports_addfriend_list_item -> sports_addfriend_list_item
    int sports_addfriends_item -> sports_addfriends_item
    int sports_all_history -> sports_all_history
    int sports_camera -> sports_camera
    int sports_camera_main_content -> sports_camera_main_content
    int sports_circle_main_frg -> sports_circle_main_frg
    int sports_detail -> sports_detail
    int sports_dialog -> sports_dialog
    int sports_dialog1 -> sports_dialog1
    int sports_dialog2 -> sports_dialog2
    int sports_dialog3 -> sports_dialog3
    int sports_dialog4 -> sports_dialog4
    int sports_dialog_2 -> sports_dialog_2
    int sports_download_map_type -> sports_download_map_type
    int sports_fans_list -> sports_fans_list
    int sports_fans_list_item -> sports_fans_list_item
    int sports_fans_my_ltem -> sports_fans_my_ltem
    int sports_fansorme -> sports_fansorme
    int sports_find_fragment -> sports_find_fragment
    int sports_find_goodfriends_fragment -> sports_find_goodfriends_fragment
    int sports_find_headview -> sports_find_headview
    int sports_find_other_list_item -> sports_find_other_list_item
    int sports_find_other_list_item_eight -> sports_find_other_list_item_eight
    int sports_find_other_list_item_five -> sports_find_other_list_item_five
    int sports_find_other_list_item_four -> sports_find_other_list_item_four
    int sports_find_other_list_item_nine -> sports_find_other_list_item_nine
    int sports_find_other_list_item_seven -> sports_find_other_list_item_seven
    int sports_find_other_list_item_six -> sports_find_other_list_item_six
    int sports_find_other_list_item_three -> sports_find_other_list_item_three
    int sports_find_other_list_item_two -> sports_find_other_list_item_two
    int sports_find_talk_detils -> sports_find_talk_detils
    int sports_find_talk_wav_detiles -> sports_find_talk_wav_detiles
    int sports_focus_list -> sports_focus_list
    int sports_forgetpwd -> sports_forgetpwd
    int sports_friend_found_img -> sports_friend_found_img
    int sports_goal_newlayout -> sports_goal_newlayout
    int sports_group_all -> sports_group_all
    int sports_group_all_list_item -> sports_group_all_list_item
    int sports_group_me -> sports_group_me
    int sports_group_me_item_list -> sports_group_me_item_list
    int sports_group_title -> sports_group_title
    int sports_gz_upload -> sports_gz_upload
    int sports_health_layout -> sports_health_layout
    int sports_help_info -> sports_help_info
    int sports_history_adpter_item -> sports_history_adpter_item
    int sports_history_adpter_newitem -> sports_history_adpter_newitem
    int sports_login -> sports_login
    int sports_message_box -> sports_message_box
    int sports_moff_friends -> sports_moff_friends
    int sports_nearby -> sports_nearby
    int sports_nearby_cover -> sports_nearby_cover
    int sports_nearby_gaode -> sports_nearby_gaode
    int sports_nearby_list_item -> sports_nearby_list_item
    int sports_page_friends -> sports_page_friends
    int sports_page_group -> sports_page_group
    int sports_popular_gridview -> sports_popular_gridview
    int sports_popular_whole_gridview -> sports_popular_whole_gridview
    int sports_private_msg -> sports_private_msg
    int sports_privatemsg_my_item -> sports_privatemsg_my_item
    int sports_progressdialog -> sports_progressdialog
    int sports_pwd_edit -> sports_pwd_edit
    int sports_radio_dialog -> sports_radio_dialog
    int sports_rank_content -> sports_rank_content
    int sports_regist -> sports_regist
    int sports_share_image -> sports_share_image
    int sports_shareto_weibo -> sports_shareto_weibo
    int sports_sys_message -> sports_sys_message
    int sports_user_edit -> sports_user_edit
    int sports_zanlist_item -> sports_zanlist_item
    int sportsing_data_poplayout -> sportsing_data_poplayout
    int sporttask_mediadetail -> sporttask_mediadetail
    int sporttask_mediadetail_adapter -> sporttask_mediadetail_adapter
    int sporttask_mediadetail_adapter_wav -> sporttask_mediadetail_adapter_wav
    int sreach_device -> sreach_device
    int startsport_rightbtn_layout -> startsport_rightbtn_layout
    int startsporting_map_gaode -> startsporting_map_gaode
    int startsports_slim_setting -> startsports_slim_setting
    int switch_moff_map -> switch_moff_map
    int switch_view -> switch_view
    int tencent_webview -> tencent_webview
    int text_and_good_popwindow -> text_and_good_popwindow
    int toast_layout -> toast_layout
    int train_index_headview -> train_index_headview
    int trainplan_index_frg -> trainplan_index_frg
    int trainplan_list_item -> trainplan_list_item
    int tran_webview -> tran_webview
    int tuijian_grid_item -> tuijian_grid_item
    int user_activity_pinglun_layout -> user_activity_pinglun_layout
    int user_activity_sys_pinglun_layout -> user_activity_sys_pinglun_layout
    int user_activity_yuyin_pinglun_layout -> user_activity_yuyin_pinglun_layout
    int user_main_head_layout -> user_main_head_layout
    int user_other_permain_head_layout -> user_other_permain_head_layout
    int user_permain_head_layout -> user_permain_head_layout
    int version_info_screen -> version_info_screen
    int version_list_view -> version_list_view
    int view_content -> view_content
    int view_content_picture -> view_content_picture
    int view_expandable -> view_expandable
    int view_header -> view_header
    int warn_view -> warn_view
    int xianshiquanbu -> xianshiquanbu
    int xinlang_webview -> xinlang_webview
    int xinlvactivity -> xinlvactivity
    int xinlvcount -> xinlvcount
    int yunhu_webview_only -> yunhu_webview_only
    int yunhu_webview_shop -> yunhu_webview_shop
    int zhangzishi_item -> zhangzishi_item
    int zhuzhuangtu -> zhuzhuangtu
com.fox.exercise.R$menu -> com.fox.exercise.R$menu:
    int main -> main
com.fox.exercise.R$string -> com.fox.exercise.R$string:
    int PayInfo -> PayInfo
    int abandon -> abandon
    int about -> about
    int about_run -> about_run
    int about_runing -> about_runing
    int access_sd_fail -> access_sd_fail
    int acess_server_error -> acess_server_error
    int action_settings -> action_settings
    int activities_summary -> activities_summary
    int activity -> activity
    int activity_end -> activity_end
    int activity_ranking -> activity_ranking
    int activity_rules -> activity_rules
    int activity_time -> activity_time
    int add_friend -> add_friend
    int add_friend_search_hint -> add_friend_search_hint
    int add_label -> add_label
    int addnewimage -> addnewimage
    int all_distanc -> all_distanc
    int all_sport_time -> all_sport_time
    int already_newest -> already_newest
    int android_version -> android_version
    int anonymous -> anonymous
    int app_name -> app_name
    int app_sina_consumer_key -> app_sina_consumer_key
    int app_sina_consumer_secret -> app_sina_consumer_secret
    int app_tencent_consumer_key -> app_tencent_consumer_key
    int app_tencent_consumer_secret -> app_tencent_consumer_secret
    int attention -> attention
    int average_speed -> average_speed
    int badminton -> badminton
    int battery_low -> battery_low
    int benci_train -> benci_train
    int benci_train_fail -> benci_train_fail
    int benci_train_success -> benci_train_success
    int bestgirl_wait -> bestgirl_wait
    int bestgirl_wait_upload -> bestgirl_wait_upload
    int bind_bluetooth -> bind_bluetooth
    int bind_device -> bind_device
    int bluetooth_bonding -> bluetooth_bonding
    int bluetooth_pairing -> bluetooth_pairing
    int bluetooth_preference_bonded_devices -> bluetooth_preference_bonded_devices
    int bluetooth_preference_devices -> bluetooth_preference_devices
    int bluetooth_preference_paired_devices -> bluetooth_preference_paired_devices
    int bluetooth_preference_paired_devices_bond -> bluetooth_preference_paired_devices_bond
    int bmi_fat -> bmi_fat
    int bmi_little_fat -> bmi_little_fat
    int bmi_nomole -> bmi_nomole
    int bmi_shou -> bmi_shou
    int bond -> bond
    int bond_message -> bond_message
    int bond_request -> bond_request
    int bond_request_message -> bond_request_message
    int break_out -> break_out
    int bt_cancel_text -> bt_cancel_text
    int bt_follow_text -> bt_follow_text
    int bt_ok_text -> bt_ok_text
    int bt_ok_text1 -> bt_ok_text1
    int build_cicle -> build_cicle
    int button_adjust_orientation -> button_adjust_orientation
    int button_cancel -> button_cancel
    int button_ok -> button_ok
    int button_scan -> button_scan
    int button_send -> button_send
    int button_share_to -> button_share_to
    int button_upload -> button_upload
    int cal -> cal
    int calories -> calories
    int calories_text -> calories_text
    int caltaida -> caltaida
    int camera_application_stopped -> camera_application_stopped
    int camera_driver_needs_reset -> camera_driver_needs_reset
    int camera_window_summary -> camera_window_summary
    int camera_window_title -> camera_window_title
    int can_not_find_version_name -> can_not_find_version_name
    int cancel -> cancel
    int cancel_followed_fail -> cancel_followed_fail
    int cancel_followed_successed -> cancel_followed_successed
    int cancel_wait -> cancel_wait
    int capture_cancel -> capture_cancel
    int capture_ok -> capture_ok
    int ccuntdown_settings -> ccuntdown_settings
    int chang_qq_msg -> chang_qq_msg
    int change_photo_background -> change_photo_background
    int check_now -> check_now
    int check_update -> check_update
    int checking -> checking
    int chronometerId_text -> chronometerId_text
    int class_introduce -> class_introduce
    int clear_date -> clear_date
    int clear_date_again -> clear_date_again
    int clear_message -> clear_message
    int clear_settings -> clear_settings
    int clear_settings_sum -> clear_settings_sum
    int close -> close
    int code_send_failed -> code_send_failed
    int code_send_successed -> code_send_successed
    int coll_mall_now_status -> coll_mall_now_status
    int comment_wait -> comment_wait
    int complete_info -> complete_info
    int complete_info_1 -> complete_info_1
    int config_game_id -> config_game_id
    int config_version_url -> config_version_url
    int confirm_exit -> confirm_exit
    int confirm_exit1 -> confirm_exit1
    int confirm_exit_title -> confirm_exit_title
    int confirm_to_binding_qq -> confirm_to_binding_qq
    int confirm_to_binding_tengxun -> confirm_to_binding_tengxun
    int confirm_to_binding_xinlang -> confirm_to_binding_xinlang
    int confirm_to_cancle -> confirm_to_cancle
    int confirm_to_start_adjut -> confirm_to_start_adjut
    int conn_smart_device -> conn_smart_device
    int connect_to_watch -> connect_to_watch
    int contactslite_midtable_authority -> contactslite_midtable_authority
    int continue_action -> continue_action
    int cool_coins_new -> cool_coins_new
    int cool_coins_rules -> cool_coins_rules
    int cool_get_coins_app -> cool_get_coins_app
    int cool_get_coins_app_rules -> cool_get_coins_app_rules
    int cool_get_coins_channel -> cool_get_coins_channel
    int cool_get_coins_channel_rules -> cool_get_coins_channel_rules
    int cool_get_coins_exercise -> cool_get_coins_exercise
    int cool_get_coins_exercise_rules -> cool_get_coins_exercise_rules
    int cool_get_coins_login -> cool_get_coins_login
    int cool_get_coins_random -> cool_get_coins_random
    int cool_get_coins_random_rules -> cool_get_coins_random_rules
    int cool_get_coins_rules -> cool_get_coins_rules
    int cool_get_coins_share -> cool_get_coins_share
    int cool_get_coins_share_rules -> cool_get_coins_share_rules
    int copy -> copy
    int copy_success -> copy_success
    int create_preview_channel_fail -> create_preview_channel_fail
    int current_version_ps -> current_version_ps
    int cycling -> cycling
    int daily_awards -> daily_awards
    int date_error -> date_error
    int day_date -> day_date
    int del_pic -> del_pic
    int delete_all -> delete_all
    int desc_shrinkup -> desc_shrinkup
    int desc_spread -> desc_spread
    int description -> description
    int detail_delete -> detail_delete
    int detail_text -> detail_text
    int details_ok -> details_ok
    int dialog_button_cancel -> dialog_button_cancel
    int dialog_button_commit -> dialog_button_commit
    int dialog_button_giveup -> dialog_button_giveup
    int dingwei_send -> dingwei_send
    int dis_title -> dis_title
    int disable_bt -> disable_bt
    int distance -> distance
    int djs_10 -> djs_10
    int djs_3 -> djs_3
    int djs_5 -> djs_5
    int djs_close -> djs_close
    int djs_remind -> djs_remind
    int does_not_this_input -> does_not_this_input
    int don_not_enter_spaces -> don_not_enter_spaces
    int doubi -> doubi
    int download_any_data -> download_any_data
    int download_apk_failed -> download_apk_failed
    int download_description -> download_description
    int download_finished -> download_finished
    int download_only_wifi -> download_only_wifi
    int download_tab_title_activities -> download_tab_title_activities
    int download_title -> download_title
    int downloading -> downloading
    int downloading_new_version -> downloading_new_version
    int edit_content_limit -> edit_content_limit
    int end_action -> end_action
    int end_sleep -> end_sleep
    int enter_number_outindex -> enter_number_outindex
    int enter_security_code -> enter_security_code
    int enter_verification_code -> enter_verification_code
    int error_cannot_access_net -> error_cannot_access_net
    int error_key -> error_key
    int error_network -> error_network
    int error_other -> error_other
    int et_send_mean -> et_send_mean
    int exception_session_out -> exception_session_out
    int exchange -> exchange
    int exit_message -> exit_message
    int exit_msg -> exit_msg
    int fail_to_bond -> fail_to_bond
    int fankui -> fankui
    int fans_str -> fans_str
    int fast_break -> fast_break
    int fastest_speed -> fastest_speed
    int female -> female
    int file_size -> file_size
    int find_qushi -> find_qushi
    int fire -> fire
    int focus_time_txt_text -> focus_time_txt_text
    int football -> football
    int football_calories -> football_calories
    int football_distance -> football_distance
    int football_pause -> football_pause
    int football_pitch -> football_pitch
    int football_stop -> football_stop
    int forgetpwd_changepwd_wait -> forgetpwd_changepwd_wait
    int forgetpwd_checknumber_get -> forgetpwd_checknumber_get
    int forgetpwd_confirm_newpwd -> forgetpwd_confirm_newpwd
    int forgetpwd_confirm_newpwd_somuch -> forgetpwd_confirm_newpwd_somuch
    int forgetpwd_confirm_newpwd_soquickly -> forgetpwd_confirm_newpwd_soquickly
    int forgetpwd_newpwd -> forgetpwd_newpwd
    int fox_sprots_title -> fox_sprots_title
    int fox_swim_protect -> fox_swim_protect
    int friday -> friday
    int friends_away_me -> friends_away_me
    int friends_tab_faxian -> friends_tab_faxian
    int friends_tab_haoyou -> friends_tab_haoyou
    int friends_tab_my_faxian -> friends_tab_my_faxian
    int friends_tab_sixin -> friends_tab_sixin
    int get_failed_tryother -> get_failed_tryother
    int get_friends -> get_friends
    int get_label -> get_label
    int get_list_failure -> get_list_failure
    int get_mingcheng -> get_mingcheng
    int get_power_failed -> get_power_failed
    int get_power_sucess -> get_power_sucess
    int get_watch_failed -> get_watch_failed
    int get_watch_info -> get_watch_info
    int getting_updateinfo -> getting_updateinfo
    int golf -> golf
    int gride -> gride
    int guangchang -> guangchang
    int guangchang_more -> guangchang_more
    int guanzhu_people -> guanzhu_people
    int half_time -> half_time
    int halftime_continue -> halftime_continue
    int halftime_exchange -> halftime_exchange
    int healthsport_text -> healthsport_text
    int healthy_qq_toast -> healthy_qq_toast
    int height_limit_warning_one -> height_limit_warning_one
    int height_limit_warning_two -> height_limit_warning_two
    int height_setting -> height_setting
    int hello_world -> hello_world
    int hint_unlock -> hint_unlock
    int his_jilu -> his_jilu
    int history -> history
    int history_sports_cal -> history_sports_cal
    int history_sports_dis -> history_sports_dis
    int history_sports_speed -> history_sports_speed
    int history_sports_time -> history_sports_time
    int history_sports_times -> history_sports_times
    int hot_comments -> hot_comments
    int hot_comments_say -> hot_comments_say
    int image_file_name_format -> image_file_name_format
    int image_gallery_NoImageView_text -> image_gallery_NoImageView_text
    int in_gps_locating -> in_gps_locating
    int install -> install
    int install_notices -> install_notices
    int invite_msg -> invite_msg
    int invite_sport -> invite_sport
    int is_force_update -> is_force_update
    int jianchi_success -> jianchi_success
    int jintian -> jintian
    int juli_noshuru -> juli_noshuru
    int julichao -> julichao
    int juliorcal -> juliorcal
    int ka -> ka
    int km -> km
    int later -> later
    int listSize_text -> listSize_text
    int loading -> loading
    int location_fail -> location_fail
    int location_gps_weak -> location_gps_weak
    int lock_screen -> lock_screen
    int lock_screen_open -> lock_screen_open
    int lock_screen_shutdown -> lock_screen_shutdown
    int login_coins -> login_coins
    int login_invite_cancel -> login_invite_cancel
    int login_now -> login_now
    int make_sure_will_delete -> make_sure_will_delete
    int make_sure_will_deltop -> make_sure_will_deltop
    int make_sure_will_top -> make_sure_will_top
    int male -> male
    int meitu_gallery_title -> meitu_gallery_title
    int menu_scan_title -> menu_scan_title
    int menu_scanning -> menu_scanning
    int menu_setting -> menu_setting
    int mes_remind -> mes_remind
    int message_adjust_camera_orientation -> message_adjust_camera_orientation
    int message_camera_adjust_title -> message_camera_adjust_title
    int message_from -> message_from
    int message_step_1_content -> message_step_1_content
    int message_step_1_sk1 -> message_step_1_sk1
    int message_step_1_sk2 -> message_step_1_sk2
    int message_step_1_title -> message_step_1_title
    int message_step_2_content -> message_step_2_content
    int message_step_2_title -> message_step_2_title
    int message_step_3_content -> message_step_3_content
    int message_text -> message_text
    int mms_settings -> mms_settings
    int mms_settings_sum -> mms_settings_sum
    int mode_settings -> mode_settings
    int mode_settings_sum -> mode_settings_sum
    int modified_failed_message -> modified_failed_message
    int monday -> monday
    int month_date -> month_date
    int month_yue -> month_yue
    int mountain -> mountain
    int mubiao_content_title -> mubiao_content_title
    int multi_comment_tip_target -> multi_comment_tip_target
    int my_device -> my_device
    int my_visitor -> my_visitor
    int name_rules -> name_rules
    int nearbylist -> nearbylist
    int network_not_avaliable -> network_not_avaliable
    int new_friends -> new_friends
    int newwork_not_connected -> newwork_not_connected
    int nickname_ont_be_empty -> nickname_ont_be_empty
    int no -> no
    int no_android_market -> no_android_market
    int no_data -> no_data
    int no_result -> no_result
    int no_storage -> no_storage
    int nogive_up_train -> nogive_up_train
    int nogive_up_train1 -> nogive_up_train1
    int none_found -> none_found
    int none_paired -> none_paired
    int normal_account_max -> normal_account_max
    int not_enough_space -> not_enough_space
    int not_friends_tab_faxian -> not_friends_tab_faxian
    int notice_sports_type -> notice_sports_type
    int notification_message -> notification_message
    int notification_summary_settings -> notification_summary_settings
    int notification_title_settings -> notification_title_settings
    int now_version -> now_version
    int ok -> ok
    int open_camera_fail -> open_camera_fail
    int opinion -> opinion
    int ota_update -> ota_update
    int ota_update_sum -> ota_update_sum
    int paceValue_text -> paceValue_text
    int paceValue_texts -> paceValue_texts
    int password_rules -> password_rules
    int pastTimeText_text -> pastTimeText_text
    int pauseBtn_text -> pauseBtn_text
    int pay_btn -> pay_btn
    int pay_result_callback_msg -> pay_result_callback_msg
    int payment_method -> payment_method
    int person_set -> person_set
    int personal_info -> personal_info
    int personalrecord_text -> personalrecord_text
    int phone_number_format_wrong -> phone_number_format_wrong
    int phone_number_not_empty -> phone_number_not_empty
    int phone_number_notify1 -> phone_number_notify1
    int phone_number_notify2 -> phone_number_notify2
    int phone_password_message -> phone_password_message
    int phone_sport -> phone_sport
    int picture_num_limit -> picture_num_limit
    int picture_path_message -> picture_path_message
    int please_choose_version -> please_choose_version
    int please_login -> please_login
    int points_say -> points_say
    int praise_cancel_success -> praise_cancel_success
    int praise_successed -> praise_successed
    int praise_wait -> praise_wait
    int preparing_sd -> preparing_sd
    int primsg_empty -> primsg_empty
    int product -> product
    int progress_capturing -> progress_capturing
    int progress_loading_wait -> progress_loading_wait
    int progress_saving_type -> progress_saving_type
    int progress_searching_server -> progress_searching_server
    int progress_server_connecting_error -> progress_server_connecting_error
    int progress_switching -> progress_switching
    int pull_to_loadmore_loading_label -> pull_to_loadmore_loading_label
    int pull_to_loadmore_pull_label -> pull_to_loadmore_pull_label
    int pull_to_loadmore_release_label -> pull_to_loadmore_release_label
    int pull_to_refresh_pull_label -> pull_to_refresh_pull_label
    int pull_to_refresh_refreshing_label -> pull_to_refresh_refreshing_label
    int pull_to_refresh_release_label -> pull_to_refresh_release_label
    int pwd_edit_hint -> pwd_edit_hint
    int qiandao -> qiandao
    int qq_login -> qq_login
    int random_coins -> random_coins
    int rankboard_all -> rankboard_all
    int rankboard_friend -> rankboard_friend
    int read_sound -> read_sound
    int registration_list -> registration_list
    int remote_finishTxt -> remote_finishTxt
    int remote_ring_msg -> remote_ring_msg
    int remote_ring_title -> remote_ring_title
    int remote_startTxt -> remote_startTxt
    int remote_warntext -> remote_warntext
    int reply_delete -> reply_delete
    int respond_via_sms_canned_response_1 -> respond_via_sms_canned_response_1
    int respond_via_sms_canned_response_2 -> respond_via_sms_canned_response_2
    int respond_via_sms_canned_response_3 -> respond_via_sms_canned_response_3
    int respond_via_sms_canned_response_4 -> respond_via_sms_canned_response_4
    int respond_via_sms_edittext_dialog_title -> respond_via_sms_edittext_dialog_title
    int respond_via_sms_setting_title_2 -> respond_via_sms_setting_title_2
    int retrieve_password_message -> retrieve_password_message
    int retry_connect -> retry_connect
    int retry_connect_failed -> retry_connect_failed
    int retry_connect_failed_with_no_address -> retry_connect_failed_with_no_address
    int retry_connect_success -> retry_connect_success
    int rollback_to_version -> rollback_to_version
    int roller_skating -> roller_skating
    int rowing -> rowing
    int run_gps -> run_gps
    int saturday -> saturday
    int save_goal -> save_goal
    int save_mulu -> save_mulu
    int save_sd -> save_sd
    int scanning -> scanning
    int scheduled_check -> scheduled_check
    int screen_unlock_success -> screen_unlock_success
    int sd_card_is_invalid -> sd_card_is_invalid
    int sdcard_not_avaliable -> sdcard_not_avaliable
    int search_device -> search_device
    int select_device -> select_device
    int select_images_four -> select_images_four
    int select_images_nine -> select_images_nine
    int send -> send
    int send_failed -> send_failed
    int send_sucess -> send_sucess
    int sendchenggong -> sendchenggong
    int sendmsg_radio -> sendmsg_radio
    int sendshibai -> sendshibai
    int sendshuoshuo -> sendshuoshuo
    int sendshuoshuo1 -> sendshuoshuo1
    int service_get_message_from_watch -> service_get_message_from_watch
    int service_new_direct_message -> service_new_direct_message
    int service_num_new_message -> service_num_new_message
    int service_only_new_direct_message -> service_only_new_direct_message
    int service_system_message -> service_system_message
    int service_to_see -> service_to_see
    int service_you_have -> service_you_have
    int service_you_now_have -> service_you_now_have
    int set -> set
    int set_fengmian -> set_fengmian
    int set_mingcheng -> set_mingcheng
    int setting_exit -> setting_exit
    int setting_weibo_select_change -> setting_weibo_select_change
    int setting_weibo_select_delete -> setting_weibo_select_delete
    int setting_weibo_select_title -> setting_weibo_select_title
    int sex_setting -> sex_setting
    int share_dialog_title -> share_dialog_title
    int share_history -> share_history
    int share_message -> share_message
    int share_web_loading -> share_web_loading
    int shared_beyond_10times -> shared_beyond_10times
    int shared_failed -> shared_failed
    int shared_success -> shared_success
    int shared_success_add_coins -> shared_success_add_coins
    int shareto_hint -> shareto_hint
    int sharing -> sharing
    int sign_up -> sign_up
    int size -> size
    int skating -> skating
    int sleep_guanjia -> sleep_guanjia
    int sleep_loading -> sleep_loading
    int sleep_record -> sleep_record
    int sleep_record_time -> sleep_record_time
    int sleep_tip -> sleep_tip
    int sleep_toast -> sleep_toast
    int sleep_toast1 -> sleep_toast1
    int sleep_try_to_login -> sleep_try_to_login
    int sleep_xiaolv -> sleep_xiaolv
    int sleep_xinlv_tip -> sleep_xinlv_tip
    int slimgirl_sort -> slimgirl_sort
    int smart_device -> smart_device
    int software_updates -> software_updates
    int soprts_limit_warning_one -> soprts_limit_warning_one
    int soprts_limit_warning_two -> soprts_limit_warning_two
    int speedValue_text -> speedValue_text
    int speedValue_texts -> speedValue_texts
    int spors_confirm_stopandsave -> spors_confirm_stopandsave
    int spors_media_disable -> spors_media_disable
    int spors_media_no_trail -> spors_media_no_trail
    int sport_condition -> sport_condition
    int sport_height_cm -> sport_height_cm
    int sport_height_kg -> sport_height_kg
    int sport_invite_failure -> sport_invite_failure
    int sport_invite_success -> sport_invite_success
    int sport_step -> sport_step
    int sport_user_name_text -> sport_user_name_text
    int sport_user_name_text_float -> sport_user_name_text_float
    int sportdetail_start_text -> sportdetail_start_text
    int sporting_calnum -> sporting_calnum
    int sporting_kmnum -> sporting_kmnum
    int sporting_speednum -> sporting_speednum
    int sporting_sportConsume -> sporting_sportConsume
    int sporting_sportDistance -> sporting_sportDistance
    int sporting_sportPace -> sporting_sportPace
    int sporting_sportSpeed -> sporting_sportSpeed
    int sporting_sport_peiPace -> sporting_sport_peiPace
    int sporting_sport_pingjunSpeed -> sporting_sport_pingjunSpeed
    int sporting_sportxiaohao -> sporting_sportxiaohao
    int sports_access_timeout -> sports_access_timeout
    int sports_action -> sports_action
    int sports_added -> sports_added
    int sports_adding -> sports_adding
    int sports_address_set -> sports_address_set
    int sports_age_unkonw -> sports_age_unkonw
    int sports_alertdialog_title -> sports_alertdialog_title
    int sports_attention -> sports_attention
    int sports_authentication_uploading -> sports_authentication_uploading
    int sports_auto_login_fail -> sports_auto_login_fail
    int sports_beyond_limit -> sports_beyond_limit
    int sports_birthday -> sports_birthday
    int sports_birthday1 -> sports_birthday1
    int sports_birthday_hint -> sports_birthday_hint
    int sports_birthday_set -> sports_birthday_set
    int sports_camera -> sports_camera
    int sports_cancel -> sports_cancel
    int sports_cishu -> sports_cishu
    int sports_cishu_dan -> sports_cishu_dan
    int sports_city_list -> sports_city_list
    int sports_coins -> sports_coins
    int sports_coins_limit_fail -> sports_coins_limit_fail
    int sports_coins_limit_sucess -> sports_coins_limit_sucess
    int sports_comment_neterror -> sports_comment_neterror
    int sports_comment_not_connected -> sports_comment_not_connected
    int sports_comments -> sports_comments
    int sports_confirm_delete_data -> sports_confirm_delete_data
    int sports_confirm_pwd -> sports_confirm_pwd
    int sports_confirm_qq_data -> sports_confirm_qq_data
    int sports_confirm_upload_data -> sports_confirm_upload_data
    int sports_coolmall -> sports_coolmall
    int sports_current_pwd -> sports_current_pwd
    int sports_data_load_failed -> sports_data_load_failed
    int sports_data_load_more_null -> sports_data_load_more_null
    int sports_delete_current -> sports_delete_current
    int sports_delete_failed -> sports_delete_failed
    int sports_delete_successed -> sports_delete_successed
    int sports_deleting -> sports_deleting
    int sports_deltop_failed -> sports_deltop_failed
    int sports_deltop_successed -> sports_deltop_successed
    int sports_detail -> sports_detail
    int sports_detail_download_fail -> sports_detail_download_fail
    int sports_detail_download_finish -> sports_detail_download_finish
    int sports_detail_downloading -> sports_detail_downloading
    int sports_dialog_deleteing -> sports_dialog_deleteing
    int sports_dialog_deltoping -> sports_dialog_deltoping
    int sports_dialog_modifying -> sports_dialog_modifying
    int sports_dialog_toping -> sports_dialog_toping
    int sports_dianzan -> sports_dianzan
    int sports_download_manager -> sports_download_manager
    int sports_download_map -> sports_download_map
    int sports_edit -> sports_edit
    int sports_em_help -> sports_em_help
    int sports_email -> sports_email
    int sports_email_hint -> sports_email_hint
    int sports_except_data_one -> sports_except_data_one
    int sports_except_data_two -> sports_except_data_two
    int sports_exercise -> sports_exercise
    int sports_face -> sports_face
    int sports_face1 -> sports_face1
    int sports_failed_list -> sports_failed_list
    int sports_findgood_error -> sports_findgood_error
    int sports_finish -> sports_finish
    int sports_follow_fail -> sports_follow_fail
    int sports_follow_successed -> sports_follow_successed
    int sports_following -> sports_following
    int sports_forget_pwd -> sports_forget_pwd
    int sports_forget_pwd2 -> sports_forget_pwd2
    int sports_fromphotos -> sports_fromphotos
    int sports_fromphotos1 -> sports_fromphotos1
    int sports_get_data_fail -> sports_get_data_fail
    int sports_get_list_failed -> sports_get_list_failed
    int sports_get_list_failed1 -> sports_get_list_failed1
    int sports_get_yz -> sports_get_yz
    int sports_goal -> sports_goal
    int sports_goal_text -> sports_goal_text
    int sports_good -> sports_good
    int sports_goto_login -> sports_goto_login
    int sports_group -> sports_group
    int sports_group_creat -> sports_group_creat
    int sports_group_me -> sports_group_me
    int sports_health -> sports_health
    int sports_health_sleep -> sports_health_sleep
    int sports_height -> sports_height
    int sports_height1 -> sports_height1
    int sports_history -> sports_history
    int sports_input_regist_phone -> sports_input_regist_phone
    int sports_inputnewpwd -> sports_inputnewpwd
    int sports_inputnewpwd_again -> sports_inputnewpwd_again
    int sports_inputphone -> sports_inputphone
    int sports_inputpwd -> sports_inputpwd
    int sports_kilometers -> sports_kilometers
    int sports_location_wait -> sports_location_wait
    int sports_login -> sports_login
    int sports_login_otherway -> sports_login_otherway
    int sports_logining -> sports_logining
    int sports_logout -> sports_logout
    int sports_love_title -> sports_love_title
    int sports_mailornickname -> sports_mailornickname
    int sports_map_baidu -> sports_map_baidu
    int sports_map_gaode -> sports_map_gaode
    int sports_market_gift -> sports_market_gift
    int sports_message_box -> sports_message_box
    int sports_meters -> sports_meters
    int sports_mima -> sports_mima
    int sports_modify_failed -> sports_modify_failed
    int sports_modify_failed_for_error_psd -> sports_modify_failed_for_error_psd
    int sports_modify_successed -> sports_modify_successed
    int sports_modifypwd -> sports_modifypwd
    int sports_money_rule -> sports_money_rule
    int sports_msg_pic_not_exist -> sports_msg_pic_not_exist
    int sports_name -> sports_name
    int sports_new_pwd -> sports_new_pwd
    int sports_nickname -> sports_nickname
    int sports_nickname1 -> sports_nickname1
    int sports_nickname_toolong -> sports_nickname_toolong
    int sports_no_history -> sports_no_history
    int sports_no_login_play -> sports_no_login_play
    int sports_no_net_play -> sports_no_net_play
    int sports_no_trajectory -> sports_no_trajectory
    int sports_no_trajectory_to_save -> sports_no_trajectory_to_save
    int sports_offline_notice -> sports_offline_notice
    int sports_offline_notice_detils -> sports_offline_notice_detils
    int sports_otherway -> sports_otherway
    int sports_phone -> sports_phone
    int sports_photo -> sports_photo
    int sports_private_msg_not_empty -> sports_private_msg_not_empty
    int sports_private_msg_press_recoding -> sports_private_msg_press_recoding
    int sports_private_msg_send_successfully -> sports_private_msg_send_successfully
    int sports_private_msg_sending -> sports_private_msg_sending
    int sports_private_msg_text_hint -> sports_private_msg_text_hint
    int sports_private_msg_texts_hint -> sports_private_msg_texts_hint
    int sports_pwd -> sports_pwd
    int sports_qq -> sports_qq
    int sports_qqhealth -> sports_qqhealth
    int sports_qqhealth_fail -> sports_qqhealth_fail
    int sports_record_fail -> sports_record_fail
    int sports_reg -> sports_reg
    int sports_regist -> sports_regist
    int sports_register_error -> sports_register_error
    int sports_registing -> sports_registing
    int sports_reliang -> sports_reliang
    int sports_reliang_dan -> sports_reliang_dan
    int sports_request -> sports_request
    int sports_resume -> sports_resume
    int sports_save_local_failed -> sports_save_local_failed
    int sports_save_local_success -> sports_save_local_success
    int sports_second_loading -> sports_second_loading
    int sports_select_map -> sports_select_map
    int sports_server_error -> sports_server_error
    int sports_set_faceimage -> sports_set_faceimage
    int sports_setface -> sports_setface
    int sports_setting -> sports_setting
    int sports_sex -> sports_sex
    int sports_sex1 -> sports_sex1
    int sports_shareing -> sports_shareing
    int sports_shareto_weixin_no_weixin -> sports_shareto_weixin_no_weixin
    int sports_shareto_weixin_wrong_version -> sports_shareto_weixin_wrong_version
    int sports_show -> sports_show
    int sports_submit -> sports_submit
    int sports_submiting -> sports_submiting
    int sports_sudu -> sports_sudu
    int sports_sudu_dan -> sports_sudu_dan
    int sports_sys_message -> sports_sys_message
    int sports_tab_sk_camera -> sports_tab_sk_camera
    int sports_time_justnow -> sports_time_justnow
    int sports_time_mins_ago -> sports_time_mins_ago
    int sports_toast_emailexist -> sports_toast_emailexist
    int sports_toast_illegal_character -> sports_toast_illegal_character
    int sports_toast_input_account -> sports_toast_input_account
    int sports_toast_input_nickname -> sports_toast_input_nickname
    int sports_toast_input_pwd -> sports_toast_input_pwd
    int sports_toast_login_failed -> sports_toast_login_failed
    int sports_toast_login_succes -> sports_toast_login_succes
    int sports_toast_nameOrPwdError -> sports_toast_nameOrPwdError
    int sports_toast_nameexist -> sports_toast_nameexist
    int sports_toast_newpwd_nodifference -> sports_toast_newpwd_nodifference
    int sports_toast_nosdcard -> sports_toast_nosdcard
    int sports_toast_not_fit -> sports_toast_not_fit
    int sports_toast_please_confirmpwd -> sports_toast_please_confirmpwd
    int sports_toast_please_inputnewpwd -> sports_toast_please_inputnewpwd
    int sports_toast_please_inputpwd -> sports_toast_please_inputpwd
    int sports_toast_pwd_length -> sports_toast_pwd_length
    int sports_toast_regrist_succes -> sports_toast_regrist_succes
    int sports_top_failed -> sports_top_failed
    int sports_top_successed -> sports_top_successed
    int sports_txweibo -> sports_txweibo
    int sports_type -> sports_type
    int sports_unadded -> sports_unadded
    int sports_unfollow -> sports_unfollow
    int sports_unfollowing -> sports_unfollowing
    int sports_upload_delete -> sports_upload_delete
    int sports_upload_fail_error_param -> sports_upload_fail_error_param
    int sports_upload_find_new -> sports_upload_find_new
    int sports_upload_find_new_me -> sports_upload_find_new_me
    int sports_upload_finish -> sports_upload_finish
    int sports_upload_heading_textview_text -> sports_upload_heading_textview_text
    int sports_upload_pressrecoding -> sports_upload_pressrecoding
    int sports_upload_title -> sports_upload_title
    int sports_video_fail -> sports_video_fail
    int sports_visitors -> sports_visitors
    int sports_wait -> sports_wait
    int sports_weight -> sports_weight
    int sports_weight1 -> sports_weight1
    int sports_xinlang -> sports_xinlang
    int sports_yz -> sports_yz
    int sports_zhanghao -> sports_zhanghao
    int startSport_moffline_map -> startSport_moffline_map
    int startSport_startSport -> startSport_startSport
    int start_search -> start_search
    int start_sleep -> start_sleep
    int start_sports_msg -> start_sports_msg
    int start_text -> start_text
    int step_finish_text -> step_finish_text
    int step_number -> step_number
    int stopBtn_text -> stopBtn_text
    int stopBtn_text1 -> stopBtn_text1
    int summary_confirm_to_change -> summary_confirm_to_change
    int summary_weibo_bound_already -> summary_weibo_bound_already
    int sundy -> sundy
    int suodingBtn_text -> suodingBtn_text
    int sure_delete_friend -> sure_delete_friend
    int swim -> swim
    int swim_face -> swim_face
    int swim_fly -> swim_fly
    int swim_free -> swim_free
    int swim_frog -> swim_frog
    int sync_battery -> sync_battery
    int sync_calllog -> sync_calllog
    int sync_contact -> sync_contact
    int sync_failed -> sync_failed
    int sync_mms -> sync_mms
    int sync_settings -> sync_settings
    int sync_settings_sum -> sync_settings_sum
    int sync_time -> sync_time
    int sync_via_sms -> sync_via_sms
    int sync_via_sms_content -> sync_via_sms_content
    int sync_weather -> sync_weather
    int system_version -> system_version
    int table_tennis -> table_tennis
    int take_picture_fail -> take_picture_fail
    int tennis -> tennis
    int test_play -> test_play
    int text_share_to -> text_share_to
    int text_share_two -> text_share_two
    int text_tengxun_weibo -> text_tengxun_weibo
    int text_weixin -> text_weixin
    int text_weixin_friends -> text_weixin_friends
    int text_xinlang_weibo -> text_xinlang_weibo
    int thursday -> thursday
    int ticker_text -> ticker_text
    int timeValue_text -> timeValue_text
    int timer -> timer
    int timout_noti_content -> timout_noti_content
    int timout_noti_title -> timout_noti_title
    int tip_message -> tip_message
    int title_activity -> title_activity
    int title_activity_celebration_main -> title_activity_celebration_main
    int title_activity_cool_currency_rules -> title_activity_cool_currency_rules
    int title_activity_find_points_say -> title_activity_find_points_say
    int title_activity_fox_sports_settings -> title_activity_fox_sports_settings
    int title_activity_new_guan_zhu -> title_activity_new_guan_zhu
    int title_activity_new_huo_dong -> title_activity_new_huo_dong
    int title_activity_new_ranks -> title_activity_new_ranks
    int title_activity_new_yue_pao_bai_du -> title_activity_new_yue_pao_bai_du
    int title_activity_new_yue_pao_gao_de -> title_activity_new_yue_pao_gao_de
    int title_activity_perfect_main -> title_activity_perfect_main
    int title_activity_personal_page_main -> title_activity_personal_page_main
    int title_activity_share_dialog_main -> title_activity_share_dialog_main
    int title_activity_sleep_history -> title_activity_sleep_history
    int title_activity_sleep_main -> title_activity_sleep_main
    int title_activity_train_complete -> title_activity_train_complete
    int title_activity_train_plan_main -> title_activity_train_plan_main
    int title_activity_user_set_main -> title_activity_user_set_main
    int title_activity_zan_list_user -> title_activity_zan_list_user
    int title_cool_coins_rules -> title_cool_coins_rules
    int title_other_devices -> title_other_devices
    int title_paired_devices -> title_paired_devices
    int title_select_album -> title_select_album
    int title_select_image -> title_select_image
    int title_share_image -> title_share_image
    int tlistSize_text -> tlistSize_text
    int to_dataset -> to_dataset
    int toady_goal -> toady_goal
    int toast_bitmap_decode_failed -> toast_bitmap_decode_failed
    int toshare_friends -> toshare_friends
    int train_action -> train_action
    int train_play -> train_play
    int train_task_list -> train_task_list
    int train_video_cache -> train_video_cache
    int training -> training
    int training_level -> training_level
    int training_site -> training_site
    int try_to_login -> try_to_login
    int tuesday -> tuesday
    int tv_refresh -> tv_refresh
    int tv_refresh_friends -> tv_refresh_friends
    int tv_text_limit_text -> tv_text_limit_text
    int tx_distance_text -> tx_distance_text
    int tx_message_text -> tx_message_text
    int tx_time_text -> tx_time_text
    int tx_years_old_text -> tx_years_old_text
    int txt_name_text -> txt_name_text
    int txt_time_text -> txt_time_text
    int txtt_message_text -> txtt_message_text
    int update -> update
    int update_date -> update_date
    int update_info -> update_info
    int update_later_msg -> update_later_msg
    int update_to_version -> update_to_version
    int upload_failed -> upload_failed
    int upload_failed_nonet -> upload_failed_nonet
    int upload_photo -> upload_photo
    int upload_success -> upload_success
    int uploading -> uploading
    int use_qq_msg -> use_qq_msg
    int use_time -> use_time
    int user_activity_detail -> user_activity_detail
    int user_main_page -> user_main_page
    int user_name_edit_hint -> user_name_edit_hint
    int val_speed -> val_speed
    int verification_code_not_match -> verification_code_not_match
    int version -> version
    int version_back -> version_back
    int version_info -> version_info
    int visit_me -> visit_me
    int voice_opens -> voice_opens
    int voice_prompt_open -> voice_prompt_open
    int voice_prompt_shutdown -> voice_prompt_shutdown
    int voice_shutdown -> voice_shutdown
    int waishe -> waishe
    int waiting -> waiting
    int walk_gps -> walk_gps
    int walk_race -> walk_race
    int watch_2 -> watch_2
    int watch_3 -> watch_3
    int watch_4 -> watch_4
    int watch_5 -> watch_5
    int weather_aqi -> weather_aqi
    int wednesday -> wednesday
    int weibo_setting_title -> weibo_setting_title
    int weight_limit_waring_one -> weight_limit_waring_one
    int weight_limit_waring_two -> weight_limit_waring_two
    int weight_setting -> weight_setting
    int weixin_title -> weixin_title
    int who_about_you -> who_about_you
    int words_no_access -> words_no_access
    int xiaohao -> xiaohao
    int year_date -> year_date
    int yes -> yes
    int zhangzisi -> zhangzisi
com.fox.exercise.R$style -> com.fox.exercise.R$style:
    int AnimationPopup -> AnimationPopup
    int Animation_OnScreenHint -> Animation_OnScreenHint
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int Button_imageok -> Button_imageok
    int Button_recapture -> Button_recapture
    int ContentOverlay -> ContentOverlay
    int InfomationText -> InfomationText
    int MyDialog -> MyDialog
    int OnScreenHintTextAppearance -> OnScreenHintTextAppearance
    int OnScreenHintTextAppearance_Small -> OnScreenHintTextAppearance_Small
    int SlimTitleRetrun -> SlimTitleRetrun
    int SportsButtonBackground -> SportsButtonBackground
    int SportsButtonGray -> SportsButtonGray
    int SportsButtonStripMiddle -> SportsButtonStripMiddle
    int SportsLoginButton -> SportsLoginButton
    int SportsStartButton -> SportsStartButton
    int SportsTitleButton -> SportsTitleButton
    int Transparent -> Transparent
    int activityAnimation -> activityAnimation
    int alldistance_style1 -> alldistance_style1
    int alldistance_style2 -> alldistance_style2
    int alldistance_style3 -> alldistance_style3
    int alldistance_style4 -> alldistance_style4
    int chat_content_date_style_left -> chat_content_date_style_left
    int chat_content_date_style_right -> chat_content_date_style_right
    int chat_text_date_style -> chat_text_date_style
    int chat_text_name_style -> chat_text_name_style
    int cricleBottomAnimation -> cricleBottomAnimation
    int djs -> djs
    int dot_style -> dot_style
    int index_style -> index_style
    int index_style1 -> index_style1
    int index_style2 -> index_style2
    int index_style3 -> index_style3
    int select_text_style -> select_text_style
    int share_dialog2 -> share_dialog2
    int sports_coins_dialog -> sports_coins_dialog
    int sports_dialog -> sports_dialog
    int sports_dialog1 -> sports_dialog1
    int sports_tip_style -> sports_tip_style
    int sports_txt_color_style -> sports_txt_color_style
    int tab_item_text_style -> tab_item_text_style
    int topTitle -> topTitle
    int train_playnum_style -> train_playnum_style
    int train_playnum_style1 -> train_playnum_style1
com.fox.exercise.R$styleable -> com.fox.exercise.R$styleable:
    int[] CameraPreference -> CameraPreference
    int CameraPreference_title -> CameraPreference_title
    int[] CellLayout -> CellLayout
    int CellLayout_cellHeight -> CellLayout_cellHeight
    int CellLayout_cellWidth -> CellLayout_cellWidth
    int CellLayout_longAxisCells -> CellLayout_longAxisCells
    int CellLayout_longAxisEndPadding -> CellLayout_longAxisEndPadding
    int CellLayout_longAxisStartPadding -> CellLayout_longAxisStartPadding
    int CellLayout_shortAxisCells -> CellLayout_shortAxisCells
    int CellLayout_shortAxisEndPadding -> CellLayout_shortAxisEndPadding
    int CellLayout_shortAxisStartPadding -> CellLayout_shortAxisStartPadding
    int[] CircleFlowIndicator -> CircleFlowIndicator
    int CircleFlowIndicator_activeColor -> CircleFlowIndicator_activeColor
    int CircleFlowIndicator_activeRadius -> CircleFlowIndicator_activeRadius
    int CircleFlowIndicator_activeType -> CircleFlowIndicator_activeType
    int CircleFlowIndicator_centered -> CircleFlowIndicator_centered
    int CircleFlowIndicator_circleSeparation -> CircleFlowIndicator_circleSeparation
    int CircleFlowIndicator_fadeOut -> CircleFlowIndicator_fadeOut
    int CircleFlowIndicator_inactiveColor -> CircleFlowIndicator_inactiveColor
    int CircleFlowIndicator_inactiveType -> CircleFlowIndicator_inactiveType
    int CircleFlowIndicator_radius -> CircleFlowIndicator_radius
    int[] ClippedImageView -> ClippedImageView
    int ClippedImageView_ignoreZone -> ClippedImageView_ignoreZone
    int[] DeleteZone -> DeleteZone
    int DeleteZone_direction -> DeleteZone_direction
    int[] ExpandableLayout -> ExpandableLayout
    int ExpandableLayout_el_contentLayout -> ExpandableLayout_el_contentLayout
    int ExpandableLayout_el_duration -> ExpandableLayout_el_duration
    int ExpandableLayout_el_headerLayout -> ExpandableLayout_el_headerLayout
    int[] Gallery1 -> Gallery1
    int Gallery1_android_galleryItemBackground -> Gallery1_android_galleryItemBackground
    int[] HandleView -> HandleView
    int HandleView_direction -> HandleView_direction
    int[] ListPreference -> ListPreference
    int ListPreference_defaultValue -> ListPreference_defaultValue
    int ListPreference_entries -> ListPreference_entries
    int ListPreference_entryValues -> ListPreference_entryValues
    int ListPreference_key -> ListPreference_key
    int[] NumberPicker -> NumberPicker
    int NumberPicker_isEnable -> NumberPicker_isEnable
    int NumberPicker_itemNumber -> NumberPicker_itemNumber
    int NumberPicker_lineColor -> NumberPicker_lineColor
    int NumberPicker_maskHight -> NumberPicker_maskHight
    int NumberPicker_noEmpty -> NumberPicker_noEmpty
    int NumberPicker_normalTextColor -> NumberPicker_normalTextColor
    int NumberPicker_normalTextSize -> NumberPicker_normalTextSize
    int NumberPicker_selecredTextColor -> NumberPicker_selecredTextColor
    int NumberPicker_selecredTextSize -> NumberPicker_selecredTextSize
    int NumberPicker_unitHight -> NumberPicker_unitHight
    int[] Panel -> Panel
    int Panel_animationDuration -> Panel_animationDuration
    int Panel_closedHandle -> Panel_closedHandle
    int Panel_content -> Panel_content
    int Panel_handle -> Panel_handle
    int Panel_linearFlying -> Panel_linearFlying
    int Panel_openedHandle -> Panel_openedHandle
    int Panel_position -> Panel_position
    int Panel_weight -> Panel_weight
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_adapterViewBackground -> PullToRefresh_adapterViewBackground
    int PullToRefresh_headerBackground -> PullToRefresh_headerBackground
    int PullToRefresh_headerTextColor -> PullToRefresh_headerTextColor
    int PullToRefresh_mode -> PullToRefresh_mode
    int[] RoundProgressBar -> RoundProgressBar
    int RoundProgressBar_max -> RoundProgressBar_max
    int RoundProgressBar_roundColor -> RoundProgressBar_roundColor
    int RoundProgressBar_roundProgressColor -> RoundProgressBar_roundProgressColor
    int RoundProgressBar_roundWidth -> RoundProgressBar_roundWidth
    int RoundProgressBar_style -> RoundProgressBar_style
    int RoundProgressBar_textColor -> RoundProgressBar_textColor
    int RoundProgressBar_textIsDisplayable -> RoundProgressBar_textIsDisplayable
    int RoundProgressBar_textSize -> RoundProgressBar_textSize
    int[] ViewFlow -> ViewFlow
    int ViewFlow_sidebuffer -> ViewFlow_sidebuffer
    int[] Workspace -> Workspace
    int Workspace_defaultScreen -> Workspace_defaultScreen
com.fox.exercise.R$xml -> com.fox.exercise.R$xml:
    int lock_screen -> lock_screen
    int modules -> modules
    int respond_via_sms_settings -> respond_via_sms_settings
    int setting -> setting
    int settings -> settings
    int sports_settings -> sports_settings
    int sync_settings -> sync_settings
com.fox.exercise.RecordHelper -> com.fox.exercise.ob:
    boolean flag -> a
    int mState -> b
    com.fox.exercise.RecordHelper$OnStateChangedListener mOnStateChangedListener -> c
    long mSampleStart -> d
    int mSampleLength -> e
    java.io.File mSampleFile -> f
    android.media.MediaRecorder mRecorder -> g
    android.media.MediaPlayer mPlayer -> h
    int sampleLength() -> a
    void delete() -> b
    void startRecording(int,java.lang.String,android.content.Context) -> a
    void stopRecording() -> c
    android.media.MediaPlayer startPlayback(android.content.Context) -> a
    android.media.MediaPlayer startPlaybackNet(android.content.Context,java.lang.String) -> a
    void stopPlayback() -> d
    void stop() -> e
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void setState(int) -> a
    void signalStateChanged(int) -> b
    void setError(int) -> c
com.fox.exercise.RecordHelper$OnStateChangedListener -> com.fox.exercise.oc:
    void onStateChanged(int) -> a
    void onError(int) -> b
com.fox.exercise.RegistratFragment -> com.fox.exercise.od:
    com.fox.exercise.view.PullToRefreshGridView registratRefreshGrid -> c
    android.widget.GridView registratGridView -> d
    int actionId -> e
    boolean isFirst -> f
    java.util.List allApplyLists -> g
    int times -> h
    com.fox.exercise.RegistratFragmentAdpter registratAdapter -> a
    android.app.Dialog mLoadProgressDialog -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void GetApplyListData() -> c
    void waitShow() -> a
    void waitCloset() -> b
    int access$0(com.fox.exercise.RegistratFragment) -> a
    int access$1(com.fox.exercise.RegistratFragment) -> b
    java.util.List access$2(com.fox.exercise.RegistratFragment) -> c
    android.widget.GridView access$3(com.fox.exercise.RegistratFragment) -> d
    com.fox.exercise.view.PullToRefreshGridView access$4(com.fox.exercise.RegistratFragment) -> e
    void access$5(com.fox.exercise.RegistratFragment,int) -> a
    void access$6(com.fox.exercise.RegistratFragment) -> f
com.fox.exercise.RegistratFragment$1 -> com.fox.exercise.oe:
    com.fox.exercise.RegistratFragment this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.RegistratFragment$GetApplyListTask -> com.fox.exercise.of:
    com.fox.exercise.RegistratFragment this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.RegistratFragment$myGridviewClickListenter -> com.fox.exercise.og:
    com.fox.exercise.RegistratFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.RegistratFragmentAdpter -> com.fox.exercise.oh:
    java.util.List activityApplyLists -> a
    android.content.Context mContext -> b
    android.view.LayoutInflater mInflater -> c
    com.fox.exercise.ImageDownloader mDownloader -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.RegistratFragmentAdpter$ViewHodler -> com.fox.exercise.oi:
    com.fox.exercise.util.RoundedImage avatar -> a
    android.widget.TextView name -> b
    com.fox.exercise.RegistratFragmentAdpter this$0 -> c
com.fox.exercise.ResideMenu -> com.fox.exercise.ResideMenu:
    android.widget.ImageView imageViewBackground -> c
    android.widget.LinearLayout layoutLeftMenu -> d
    android.widget.ScrollView scrollLayout -> e
    android.widget.LinearLayout linearLeftMenu -> f
    android.widget.LinearLayout scrollViewMenu -> g
    android.app.Activity activity -> h
    android.view.ViewGroup viewDecor -> i
    com.fox.exercise.TouchDisableView viewActivity -> j
    boolean isOpened -> k
    float shadowAdjustScaleX -> l
    float shadowAdjustScaleY -> m
    java.util.List ignoredViews -> n
    java.util.List leftMenuItems -> o
    android.util.DisplayMetrics displayMetrics -> p
    float lastRawX -> q
    boolean isInIgnoredView -> r
    int scaleDirection -> s
    int pressedState -> t
    java.util.List disabledSwipeDirection -> u
    float mScaleValue -> v
    cn.ingenic.indroidsync.SportsApp mSportsApp -> w
    com.fox.exercise.util.RoundedImage userImage -> x
    android.widget.TextView nameText -> y
    android.widget.TextView money_rule -> z
    android.widget.TextView sports_money -> A
    android.widget.TextView photo_msg_count -> B
    android.widget.ImageView user_sex_icon -> C
    android.widget.LinearLayout ssLayout -> a
    android.widget.LinearLayout ruleLayout -> b
    com.fox.exercise.MainFragmentActivity mainFragmentActivity -> D
    android.view.View$OnClickListener viewActivityOnClickListener -> E
    android.animation.Animator$AnimatorListener animationListener -> F
    float lastActionDownX -> G
    float lastActionDownY -> H
    void initViews(android.content.Context) -> a
    android.widget.LinearLayout getruleLinearLayout() -> getruleLinearLayout
    android.widget.TextView getphotomsgcount() -> getphotomsgcount
    android.widget.TextView getNameTextView() -> getNameTextView
    android.widget.ImageView getUserSexView() -> getUserSexView
    android.widget.TextView getMoneyTextView() -> getMoneyTextView
    android.widget.TextView getRuleTextView() -> getRuleTextView
    com.fox.exercise.util.RoundedImage getUserImage() -> getUserImage
    android.widget.LinearLayout getPhotoView() -> getPhotoView
    void attachToActivity(android.app.Activity) -> a
    void initValue(android.app.Activity) -> b
    void setShadowAdjustScaleXByOrientation() -> e
    void setBackground(int) -> setBackground
    void addMenuItem(com.fox.exercise.ResideMenuItem) -> a
    void setMenuItems(java.util.List) -> setMenuItems
    void rebuildMenu() -> f
    java.util.List getMenuItems() -> getMenuItems
    void setViewPadding() -> g
    void openMenu() -> a
    void closeMenu() -> b
    boolean isInDisableDirection(int) -> a
    void setScaleDirection() -> h
    boolean isOpened() -> c
    void setIsopned(boolean) -> setIsopned
    android.animation.AnimatorSet buildScaleDownAnimation(android.view.View,float,float) -> a
    android.animation.AnimatorSet buildScaleUpAnimation(android.view.View,float,float) -> b
    android.animation.AnimatorSet buildMenuAnimation(android.view.View,float,float,float) -> a
    void addIgnoredView(android.view.View) -> a
    void removeIgnoredView(android.view.View) -> b
    void clearIgnoredViewList() -> d
    void setScaleDirectionByRawX(float) -> setScaleDirectionByRawX
    float getTargetScale(float) -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    int getScreenHeight() -> getScreenHeight
    int getScreenWidth() -> getScreenWidth
    void setScaleValue(float) -> setScaleValue
    com.fox.exercise.TouchDisableView access$0(com.fox.exercise.ResideMenu) -> a
    android.view.View$OnClickListener access$1(com.fox.exercise.ResideMenu) -> b
com.fox.exercise.ResideMenu$1 -> com.fox.exercise.oj:
    com.fox.exercise.ResideMenu this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.ResideMenu$2 -> com.fox.exercise.ok:
    com.fox.exercise.ResideMenu this$0 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.fox.exercise.ResideMenuItem -> com.fox.exercise.ResideMenuItem:
    android.widget.ImageView iv_icon -> b
    android.widget.TextView tv_title -> c
    android.widget.TextView countMsg -> a
    void initViews(android.content.Context) -> a
    void setIcon(int) -> setIcon
    void setTitle(int) -> setTitle
    void setTitle(java.lang.String) -> setTitle
com.fox.exercise.SemicolonTokenizer -> com.fox.exercise.ol:
    char charS -> a
    java.lang.String mSTring -> b
    int findTokenStart(java.lang.CharSequence,int) -> findTokenStart
    int findTokenEnd(java.lang.CharSequence,int) -> findTokenEnd
    java.lang.CharSequence terminateToken(java.lang.CharSequence) -> terminateToken
com.fox.exercise.Settings -> com.fox.exercise.Settings:
    android.app.Dialog loginPregressDialog -> g
    android.preference.PreferenceScreen mTengxun -> a
    android.preference.PreferenceScreen mXinlang -> b
    android.preference.PreferenceScreen mBaidu -> c
    android.preference.PreferenceScreen mHuaban -> d
    android.content.Context mContext -> e
    android.content.BroadcastReceiver mNetworkStateIntentReceiver -> h
    boolean mNoNetwork -> i
    com.fox.exercise.weibo.tencent.TencentDataHelper tencent_dataHelper -> j
    com.fox.exercise.weibo.sina.AccessInfo accessInfo -> k
    java.lang.String mTengxunUserId -> l
    java.lang.String mTengxunNick -> m
    java.lang.String mXinlangUserId -> n
    java.lang.String mXinlangNick -> o
    android.app.AlertDialog mDialog -> p
    java.lang.String mCurTitleForDialog -> q
    java.lang.String user_name -> r
    cn.ingenic.indroidsync.SportsApp mSportsApp -> s
    com.fox.exercise.Settings$SettingHandler mHandler -> t
    android.content.DialogInterface$OnClickListener onselect -> f
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy mQqWeiboProxy -> u
    java.lang.String access_token -> v
    java.lang.String expires_in -> w
    java.lang.String openID -> x
    java.lang.String openKey -> y
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void initPreference() -> b
    void updateWeiboSummary() -> c
    void initWeiboInfo() -> d
    void qqPCSLogin() -> a
    void bindQQ() -> e
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void gotoUpdateInfo(java.lang.String) -> a
    void gotoTenxunWeibo() -> f
    void gotoXinlangWeibo() -> g
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResultForAuthActivity(android.content.Intent) -> a
    android.app.AlertDialog access$0(com.fox.exercise.Settings) -> a
    java.lang.String access$1(com.fox.exercise.Settings) -> b
    void access$2(com.fox.exercise.Settings) -> c
    void access$3(com.fox.exercise.Settings) -> d
    java.lang.String access$4(com.fox.exercise.Settings) -> e
    void access$5(com.fox.exercise.Settings,java.lang.String) -> a
    void access$6(com.fox.exercise.Settings,java.lang.String) -> b
    void access$7(com.fox.exercise.Settings) -> f
    void access$8(com.fox.exercise.Settings,java.lang.String) -> c
    java.lang.String access$9(com.fox.exercise.Settings) -> g
    com.fox.exercise.Settings$SettingHandler access$10(com.fox.exercise.Settings) -> h
    void access$11(com.fox.exercise.Settings,boolean) -> a
    void access$12(com.fox.exercise.Settings,com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy) -> a
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy access$13(com.fox.exercise.Settings) -> i
    android.app.Dialog access$14(com.fox.exercise.Settings) -> j
    com.fox.exercise.weibo.tencent.TencentDataHelper access$15(com.fox.exercise.Settings) -> k
    void access$16(com.fox.exercise.Settings,java.lang.String) -> d
    java.lang.String access$17(com.fox.exercise.Settings) -> l
    java.lang.String access$18(com.fox.exercise.Settings) -> m
    java.lang.String access$19(com.fox.exercise.Settings) -> n
    java.lang.String access$20(com.fox.exercise.Settings) -> o
com.fox.exercise.Settings$1 -> com.fox.exercise.om:
    com.fox.exercise.Settings this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.Settings$2 -> com.fox.exercise.on:
    com.fox.exercise.Settings this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.Settings$3 -> com.fox.exercise.oo:
    java.lang.String userInfo -> a
    com.fox.exercise.Settings this$0 -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.Settings$AuthDialogListener -> com.fox.exercise.op:
    java.lang.String uid -> b
    java.lang.String tokenString -> c
    com.fox.exercise.Settings this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void retrieveSinaUserInfo(com.fox.exercise.weibo.sina.oauth2.Weibo,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token,java.lang.String) -> a
    void onComplete(java.lang.String) -> a
    void onError(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> a
    void onWeiboException(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> b
    void onError(com.fox.exercise.weibo.sina.oauth2.DialogError) -> a
    void onCancel() -> a
    java.lang.String access$0(com.fox.exercise.Settings$AuthDialogListener) -> a
    void access$1(com.fox.exercise.Settings$AuthDialogListener,com.fox.exercise.weibo.sina.oauth2.Weibo,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token,java.lang.String) -> a
com.fox.exercise.Settings$AuthDialogListener$1 -> com.fox.exercise.oq:
    com.fox.exercise.Settings$AuthDialogListener this$1 -> a
    com.fox.exercise.weibo.sina.oauth2.Weibo val$weibo -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.Settings$SettingHandler -> com.fox.exercise.or:
    com.fox.exercise.Settings this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.ShareToQQzone -> com.fox.exercise.ShareToQQzone:
    android.widget.ImageView mDisplayImage -> b
    android.graphics.Bitmap mBitmapSrc -> c
    android.widget.EditText mInputText -> d
    java.lang.String mAppid -> e
    android.app.ProgressDialog dialog -> f
    java.lang.String thisLarge -> g
    java.lang.String thisMessage -> h
    java.lang.String thisUrl -> i
    java.lang.String zoneToken -> j
    java.lang.String opid -> k
    android.content.Context mContext -> l
    cn.ingenic.indroidsync.SportsApp mSportsApp -> m
    int tShare -> n
    android.app.Dialog loginPregressDialog -> o
    android.os.Handler handle -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void initRes() -> a
    void onClick(android.view.View) -> onClick
    void returnToHome() -> b
    android.app.ProgressDialog access$0(com.fox.exercise.ShareToQQzone) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.ShareToQQzone) -> b
    void access$2(com.fox.exercise.ShareToQQzone) -> c
    android.content.Context access$3(com.fox.exercise.ShareToQQzone) -> d
    java.lang.String access$4(com.fox.exercise.ShareToQQzone) -> e
    java.lang.String access$5(com.fox.exercise.ShareToQQzone) -> f
com.fox.exercise.ShareToQQzone$1 -> com.fox.exercise.os:
    com.fox.exercise.ShareToQQzone this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.ShareToQQzone access$0(com.fox.exercise.ShareToQQzone$1) -> a
com.fox.exercise.ShareToQQzone$1$1 -> com.fox.exercise.ot:
    com.fox.exercise.ShareToQQzone$1 this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.ShareToQQzone$ShareToQQzoneThread -> com.fox.exercise.ou:
    com.fox.exercise.ShareToQQzone this$0 -> a
    void run() -> run
com.fox.exercise.ShareToTencentWeibo -> com.fox.exercise.ShareToTencentWeibo:
    android.widget.ImageView mDisplayImage -> n
    android.graphics.Bitmap mBitmapSrc -> o
    android.widget.EditText mInputText -> p
    java.lang.CharSequence mTempText -> q
    int selectionStart -> r
    int selectionEnd -> s
    android.app.ProgressDialog dialog -> t
    java.lang.String accessToken -> u
    java.lang.String accessSecret -> v
    java.lang.String thisLarge -> w
    java.lang.String theSmall -> x
    android.content.Context mContext -> y
    cn.ingenic.indroidsync.SportsApp mSportsApp -> z
    int tShare -> A
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy mQqWeiboProxy -> B
    java.lang.String mUserId -> C
    java.lang.String clientIP -> D
    int shaerTengXunId -> E
    com.fox.exercise.ImageDownloader mDownloader -> F
    java.lang.String urls -> G
    android.text.TextWatcher mTextWatcher -> k
    android.os.Handler handle -> l
    android.os.Handler endSessionHandle -> m
    java.lang.String getIpAddress() -> f
    java.lang.String intToIp(int) -> b
    java.lang.String getLocalIpAddress() -> g
    void initRes() -> h
    void onClick(android.view.View) -> onClick
    void SendIamgeAndText() -> i
    void returnToHome(java.lang.String) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void access$0(com.fox.exercise.ShareToTencentWeibo,java.lang.CharSequence) -> a
    android.widget.EditText access$1(com.fox.exercise.ShareToTencentWeibo) -> a
    void access$2(com.fox.exercise.ShareToTencentWeibo,int) -> a
    void access$3(com.fox.exercise.ShareToTencentWeibo,int) -> b
    int access$4(com.fox.exercise.ShareToTencentWeibo) -> b
    java.lang.CharSequence access$5(com.fox.exercise.ShareToTencentWeibo) -> c
    int access$6(com.fox.exercise.ShareToTencentWeibo) -> d
    android.app.ProgressDialog access$7(com.fox.exercise.ShareToTencentWeibo) -> e
    cn.ingenic.indroidsync.SportsApp access$8(com.fox.exercise.ShareToTencentWeibo) -> f
    android.content.Context access$9(com.fox.exercise.ShareToTencentWeibo) -> g
    java.lang.String access$10(com.fox.exercise.ShareToTencentWeibo) -> h
    void access$11(com.fox.exercise.ShareToTencentWeibo,java.lang.String) -> a
    void access$12(com.fox.exercise.ShareToTencentWeibo,java.lang.String) -> b
    java.lang.String access$13(com.fox.exercise.ShareToTencentWeibo) -> i
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy access$14(com.fox.exercise.ShareToTencentWeibo) -> j
    java.lang.String access$15(com.fox.exercise.ShareToTencentWeibo) -> k
    int access$16(com.fox.exercise.ShareToTencentWeibo) -> l
    void access$17(com.fox.exercise.ShareToTencentWeibo,com.fox.exercise.ImageDownloader) -> a
    com.fox.exercise.ImageDownloader access$18(com.fox.exercise.ShareToTencentWeibo) -> m
    android.widget.ImageView access$19(com.fox.exercise.ShareToTencentWeibo) -> n
    void access$20(com.fox.exercise.ShareToTencentWeibo,java.lang.String) -> c
com.fox.exercise.ShareToTencentWeibo$1 -> com.fox.exercise.ov:
    com.fox.exercise.ShareToTencentWeibo this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.ShareToTencentWeibo$2 -> com.fox.exercise.ow:
    com.fox.exercise.ShareToTencentWeibo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.ShareToTencentWeibo access$0(com.fox.exercise.ShareToTencentWeibo$2) -> a
com.fox.exercise.ShareToTencentWeibo$2$1 -> com.fox.exercise.ox:
    com.fox.exercise.ShareToTencentWeibo$2 this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.ShareToTencentWeibo$3 -> com.fox.exercise.oy:
    com.fox.exercise.ShareToTencentWeibo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.ShareToTencentWeibo$4 -> com.fox.exercise.oz:
    com.fox.exercise.ShareToTencentWeibo this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ShareToTencentWeibo$UpdateStatusThread -> com.fox.exercise.pa:
    com.fox.exercise.ShareToTencentWeibo this$0 -> a
    void run() -> run
com.fox.exercise.ShareToXinlangWeibo -> com.fox.exercise.ShareToXinlangWeibo:
    android.widget.ImageView mDisplayImage -> p
    android.graphics.Bitmap mBitmapSrc -> q
    android.widget.EditText mInputText -> r
    java.lang.CharSequence mTempText -> s
    int selectionStart -> t
    int selectionEnd -> u
    android.app.ProgressDialog dialog -> v
    java.lang.String thisLarge -> w
    java.lang.String SHARE_PATH -> x
    com.fox.exercise.weibo.sina.AccessInfo mAccessInfo -> y
    cn.ingenic.indroidsync.SportsApp mSportsApp -> z
    android.content.Context mContext -> k
    android.app.Activity instance -> l
    int tShare -> A
    int shareXinLangId -> B
    com.fox.exercise.ImageDownloader mDownloader -> C
    java.lang.String urls -> D
    android.text.TextWatcher mTextWatcher -> m
    android.os.Handler handle -> n
    android.os.Handler endSessionHandle -> o
    void initRes() -> g
    void onClick(android.view.View) -> onClick
    void SendIamgeAndText() -> h
    void returnToHome() -> i
    void upload(com.fox.exercise.weibo.sina.oauth2.Weibo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void onComplete(java.lang.String) -> a
    void onError(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void access$0(com.fox.exercise.ShareToXinlangWeibo,java.lang.CharSequence) -> a
    android.widget.EditText access$1(com.fox.exercise.ShareToXinlangWeibo) -> a
    void access$2(com.fox.exercise.ShareToXinlangWeibo,int) -> a
    void access$3(com.fox.exercise.ShareToXinlangWeibo,int) -> b
    int access$4(com.fox.exercise.ShareToXinlangWeibo) -> b
    java.lang.CharSequence access$5(com.fox.exercise.ShareToXinlangWeibo) -> c
    int access$6(com.fox.exercise.ShareToXinlangWeibo) -> d
    android.app.ProgressDialog access$7(com.fox.exercise.ShareToXinlangWeibo) -> e
    void access$8(com.fox.exercise.ShareToXinlangWeibo,java.lang.String) -> a
    com.fox.exercise.weibo.sina.AccessInfo access$9(com.fox.exercise.ShareToXinlangWeibo) -> f
    cn.ingenic.indroidsync.SportsApp access$10(com.fox.exercise.ShareToXinlangWeibo) -> g
    void access$11(com.fox.exercise.ShareToXinlangWeibo,int) -> c
    int access$12(com.fox.exercise.ShareToXinlangWeibo) -> h
    void access$13(com.fox.exercise.ShareToXinlangWeibo) -> i
    java.lang.String access$14() -> f
    java.lang.String access$15(com.fox.exercise.ShareToXinlangWeibo) -> j
    java.lang.String access$16(com.fox.exercise.ShareToXinlangWeibo) -> k
    void access$17(com.fox.exercise.ShareToXinlangWeibo,com.fox.exercise.weibo.sina.oauth2.Weibo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    int access$18(com.fox.exercise.ShareToXinlangWeibo) -> l
    void access$19(com.fox.exercise.ShareToXinlangWeibo,com.fox.exercise.ImageDownloader) -> a
    com.fox.exercise.ImageDownloader access$20(com.fox.exercise.ShareToXinlangWeibo) -> m
    android.widget.ImageView access$21(com.fox.exercise.ShareToXinlangWeibo) -> n
    void access$22(com.fox.exercise.ShareToXinlangWeibo,java.lang.String) -> b
com.fox.exercise.ShareToXinlangWeibo$1 -> com.fox.exercise.pb:
    com.fox.exercise.ShareToXinlangWeibo this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.ShareToXinlangWeibo$2 -> com.fox.exercise.pc:
    com.fox.exercise.ShareToXinlangWeibo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.ShareToXinlangWeibo access$0(com.fox.exercise.ShareToXinlangWeibo$2) -> a
com.fox.exercise.ShareToXinlangWeibo$2$1 -> com.fox.exercise.pd:
    com.fox.exercise.ShareToXinlangWeibo$2 this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.ShareToXinlangWeibo$3 -> com.fox.exercise.pe:
    com.fox.exercise.ShareToXinlangWeibo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.ShareToXinlangWeibo$4 -> com.fox.exercise.pf:
    com.fox.exercise.ShareToXinlangWeibo this$0 -> a
    java.lang.String val$response -> b
    void run() -> run
com.fox.exercise.ShareToXinlangWeibo$5 -> com.fox.exercise.pg:
    com.fox.exercise.ShareToXinlangWeibo this$0 -> a
    void run() -> run
com.fox.exercise.ShareToXinlangWeibo$7 -> com.fox.exercise.ph:
    com.fox.exercise.ShareToXinlangWeibo this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.ShareToXinlangWeibo$UpdateStatusThread -> com.fox.exercise.pi:
    com.fox.exercise.ShareToXinlangWeibo this$0 -> a
    void run() -> run
com.fox.exercise.ShutterButton -> com.fox.exercise.ShutterButton:
    com.fox.exercise.ShutterButton$OnShutterButtonListener mListener -> a
    boolean mOldPressed -> b
    void setOnShutterButtonListener(com.fox.exercise.ShutterButton$OnShutterButtonListener) -> setOnShutterButtonListener
    void drawableStateChanged() -> drawableStateChanged
    void callShutterButtonFocus(boolean) -> a
    boolean performClick() -> performClick
    void access$0(com.fox.exercise.ShutterButton,boolean) -> a
com.fox.exercise.ShutterButton$1 -> com.fox.exercise.pj:
    com.fox.exercise.ShutterButton this$0 -> a
    boolean val$pressed -> b
    void run() -> run
com.fox.exercise.ShutterButton$OnShutterButtonListener -> com.fox.exercise.pk:
    void onShutterButtonFocus(com.fox.exercise.ShutterButton,boolean) -> a
    void onShutterButtonClick(com.fox.exercise.ShutterButton) -> a
com.fox.exercise.SlimFrendAdapter -> com.fox.exercise.pl:
    java.util.ArrayList mList -> a
    android.content.Context mContext -> b
    android.view.LayoutInflater mInflater -> c
    cn.ingenic.indroidsync.SportsApp mSportsApp -> d
    com.fox.exercise.ImageDownloader mDownloader -> e
    com.fox.exercise.ImageDownloader mIconDownloader -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    void clearList() -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.ArrayList access$0(com.fox.exercise.SlimFrendAdapter) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.SlimFrendAdapter) -> b
    android.content.Context access$2(com.fox.exercise.SlimFrendAdapter) -> c
com.fox.exercise.SlimFrendAdapter$1 -> com.fox.exercise.pm:
    com.fox.exercise.SlimFrendAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.SlimFrendAdapter$2 -> com.fox.exercise.pn:
    com.fox.exercise.SlimFrendAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.SlimFriendState -> com.fox.exercise.SlimFriendState:
    com.fox.exercise.view.PullToRefreshListView mPullListView -> b
    android.widget.ListView mListView -> c
    com.fox.exercise.SlimFrendAdapter mAdapter -> d
    android.app.Dialog loadProgressDialog -> e
    java.util.HashSet mSet -> f
    java.util.ArrayList mList -> g
    android.widget.TextView title_name -> h
    com.fox.exercise.SlimFriendState$GiftsHandler mHandler -> i
    int mTimes -> j
    boolean isRefresh -> k
    boolean isFlag -> a
    int userID -> l
    cn.ingenic.indroidsync.SportsApp mSportsApp -> m
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void initData() -> b
    void onClick(android.view.View) -> onClick
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.SlimFriendState) -> a
    int access$1(com.fox.exercise.SlimFriendState) -> b
    void access$2(com.fox.exercise.SlimFriendState,int) -> a
    boolean access$3(com.fox.exercise.SlimFriendState) -> c
    java.util.HashSet access$4(com.fox.exercise.SlimFriendState) -> d
    java.util.ArrayList access$5(com.fox.exercise.SlimFriendState) -> e
    com.fox.exercise.SlimFriendState$GiftsHandler access$6(com.fox.exercise.SlimFriendState) -> f
    com.fox.exercise.SlimFrendAdapter access$7(com.fox.exercise.SlimFriendState) -> g
    void access$8(com.fox.exercise.SlimFriendState,com.fox.exercise.SlimFrendAdapter) -> a
    android.widget.ListView access$9(com.fox.exercise.SlimFriendState) -> h
    android.app.Dialog access$10(com.fox.exercise.SlimFriendState) -> i
    com.fox.exercise.view.PullToRefreshListView access$11(com.fox.exercise.SlimFriendState) -> j
    void access$12(com.fox.exercise.SlimFriendState,boolean) -> a
    int access$13(com.fox.exercise.SlimFriendState) -> k
com.fox.exercise.SlimFriendState$1 -> com.fox.exercise.po:
    com.fox.exercise.SlimFriendState this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.SlimFriendState$2 -> com.fox.exercise.pp:
    com.fox.exercise.SlimFriendState this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.SlimFriendState$GetGiftsThread -> com.fox.exercise.pq:
    int uid -> b
    com.fox.exercise.SlimFriendState this$0 -> a
    void run() -> run
com.fox.exercise.SlimFriendState$GiftsHandler -> com.fox.exercise.pr:
    com.fox.exercise.SlimFriendState this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SmartBarUtils -> com.fox.exercise.ps:
    void setActionBarTabsShowAtBottom(android.app.ActionBar,boolean) -> a
    void setActionBarViewCollapsable(android.app.ActionBar,boolean) -> b
    void setActionModeHeaderHidden(android.app.ActionBar,boolean) -> c
    boolean findActionBarTabsShowAtBottom() -> a
com.fox.exercise.SportBinder -> com.fox.exercise.pt:
    com.fox.exercise.SporterBundle bundle -> a
com.fox.exercise.SportExceptionHandler -> com.fox.exercise.pu:
    android.content.Context mContext -> a
    android.widget.Toast toast -> b
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SportServices -> com.fox.exercise.SportServices:
    com.fox.exercise.SportBinder mBinder -> a
    com.fox.exercise.SportExceptionHandler mExceptionHandler -> b
    java.util.Timer mSportTimer -> c
    boolean isOperator -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    boolean access$0(com.fox.exercise.SportServices) -> a
    com.fox.exercise.SportExceptionHandler access$1(com.fox.exercise.SportServices) -> b
com.fox.exercise.SportServices$SportTask -> com.fox.exercise.pv:
    com.fox.exercise.SportServices this$0 -> a
    void run() -> run
com.fox.exercise.SporterBundle -> com.fox.exercise.pw:
    com.fox.exercise.SporterBundle mInstance -> a
    java.lang.Object lock -> b
    java.lang.String sessionId -> c
    com.fox.exercise.location.SportLocationInfo location -> d
    int steps -> e
    int calories -> f
    int scoreStep -> g
    int scoreCalories -> h
    int sportsType -> i
    com.fox.exercise.SporterBundle getInstance() -> a
    java.lang.String getSessionId() -> b
    int getSteps() -> c
    int getCalories() -> d
    int getScoreStep() -> e
    int getScoreCalories() -> f
    int getSportsType() -> g
com.fox.exercise.SportsDetail -> com.fox.exercise.SportsDetail:
    android.content.Context context -> b
    android.widget.TextView phone_sports -> c
    android.widget.TextView phone_parts -> d
    android.widget.TextView date_one -> e
    android.widget.TextView date_three -> f
    android.widget.TextView date_four -> g
    android.widget.ImageView sports_type -> h
    android.widget.TextView sports_times -> i
    android.widget.TextView sports_cals -> j
    android.widget.TextView sports_dis -> k
    android.widget.TextView detail_date -> l
    android.widget.ImageView image -> m
    int mMoveSize -> n
    int currentIndex -> o
    int[] types -> p
    cn.ingenic.indroidsync.SportsApp mSportsApp -> q
    com.fox.exercise.api.WatchService wService -> r
    android.content.ServiceConnection wConnection -> s
    android.os.Handler mHandler -> a
    com.fox.exercise.api.WatchService$SpecialCallback sCallback -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void init() -> b
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    void InitImage() -> c
    java.lang.String Time() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0(com.fox.exercise.SportsDetail,com.fox.exercise.api.WatchService) -> a
    com.fox.exercise.api.WatchService access$1(com.fox.exercise.SportsDetail) -> a
    com.fox.exercise.api.WatchService$SpecialCallback access$2(com.fox.exercise.SportsDetail) -> b
    android.widget.ImageView access$3(com.fox.exercise.SportsDetail) -> c
    int[] access$4(com.fox.exercise.SportsDetail) -> d
    android.widget.TextView access$5(com.fox.exercise.SportsDetail) -> e
    android.widget.TextView access$6(com.fox.exercise.SportsDetail) -> f
    android.widget.TextView access$7(com.fox.exercise.SportsDetail) -> g
    android.widget.TextView access$8(com.fox.exercise.SportsDetail) -> h
    android.widget.TextView access$9(com.fox.exercise.SportsDetail) -> i
    android.widget.TextView access$10(com.fox.exercise.SportsDetail) -> j
com.fox.exercise.SportsDetail$1 -> com.fox.exercise.px:
    com.fox.exercise.SportsDetail this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fox.exercise.SportsDetail$2 -> com.fox.exercise.py:
    com.fox.exercise.SportsDetail this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SportsDetail$3 -> com.fox.exercise.pz:
    com.fox.exercise.SportsDetail this$0 -> a
    void timerValue(java.lang.String) -> a
    void stepValue(java.lang.String) -> b
    void disValue(java.lang.String) -> c
    void calValue(java.lang.String) -> d
    void heartValue(java.lang.String) -> e
    void typeValue(int,java.lang.String) -> a
com.fox.exercise.SportsDownloadMapTypeActivity -> com.fox.exercise.SportsDownloadMapTypeActivity:
    android.content.SharedPreferences$Editor editor -> k
    void onClick(android.view.View) -> onClick
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
com.fox.exercise.SportsExceptionHandler -> com.fox.exercise.qa:
    android.content.Context mContext -> a
    android.widget.Toast toast -> b
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SportsFoundImgActivity -> com.fox.exercise.SportsFoundImgActivity:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> k
    com.fox.exercise.widght.MutilTouchScrollLayout scrollLayout -> l
    com.fox.exercise.ImageDownloader mDownloader -> m
    android.view.LayoutInflater mInflater -> n
    java.lang.String[] urlString -> o
    int index -> p
    android.widget.ProgressBar progressBar -> q
    android.widget.ImageButton rButton -> r
    int urlNum -> s
    boolean[] bool -> t
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void OnViewChange(int,com.fox.exercise.widght.MutilTouchImageView) -> a
    java.lang.String[] access$0(com.fox.exercise.SportsFoundImgActivity) -> a
    int access$1(com.fox.exercise.SportsFoundImgActivity) -> b
com.fox.exercise.SportsFoundImgActivity$1 -> com.fox.exercise.qb:
    com.fox.exercise.SportsFoundImgActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.SportsGroup -> com.fox.exercise.qc:
    java.util.ArrayList fragmentList -> l
    android.widget.ImageView image -> m
    int mMoveSize -> n
    android.widget.ImageButton iView -> o
    android.widget.TextView[] tViews -> p
    android.support.v4.view.ViewPager mPager -> q
    cn.ingenic.indroidsync.SportsApp gSportsApp -> r
    int mSelectionPosition -> s
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void InitTextView() -> h
    void InitImage() -> i
    void InitViewPager() -> j
    void onClick(android.view.View) -> onClick
    android.support.v4.view.ViewPager access$0(com.fox.exercise.SportsGroup) -> a
    android.widget.TextView[] access$1(com.fox.exercise.SportsGroup) -> b
    int access$2(com.fox.exercise.SportsGroup) -> c
    int access$3(com.fox.exercise.SportsGroup) -> d
    android.widget.ImageView access$4(com.fox.exercise.SportsGroup) -> e
    void access$5(com.fox.exercise.SportsGroup,int) -> a
com.fox.exercise.SportsGroup$MyFragmentPagerAdapter -> com.fox.exercise.qd:
    java.util.ArrayList list -> a
    com.fox.exercise.SportsGroup this$0 -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.fox.exercise.SportsGroup$MyOnPageChangeListener -> com.fox.exercise.qe:
    com.fox.exercise.SportsGroup this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageSelected(int) -> onPageSelected
com.fox.exercise.SportsGroup$txListener -> com.fox.exercise.qf:
    int index -> b
    com.fox.exercise.SportsGroup this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.SportsGroupAll -> com.fox.exercise.qg:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> a
    com.fox.exercise.view.PullToRefreshGridView pullToRefreshGridView -> b
    android.widget.GridView mGridView -> c
    android.app.Dialog mLoadProgressDialog -> d
    android.widget.TextView mDialogMessage -> e
    android.widget.EditText search_group_edittext -> f
    int FRESH_LIST -> g
    int FRESH_FAILED -> h
    int times -> i
    com.fox.exercise.SportsGroupAllAdapter sportsGroupAllAdapter -> j
    java.util.ArrayList mList -> k
    java.lang.String editGroupName -> l
    int edittextCnt -> m
    int SEARCH_BASIC -> n
    int SEARCH_NAME -> o
    com.fox.exercise.SportsGroupAll$SportsGroupAllHandler msportsGroupAllHandler -> p
    android.text.TextWatcher sports_group_all_editchangelistener -> q
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void init() -> a
    void waitShowDialog() -> b
    void onDestroy() -> onDestroy
    android.widget.EditText access$0(com.fox.exercise.SportsGroupAll) -> a
    void access$1(com.fox.exercise.SportsGroupAll,java.lang.String) -> a
    java.lang.String access$2(com.fox.exercise.SportsGroupAll) -> b
    int access$3(com.fox.exercise.SportsGroupAll) -> c
    void access$4(com.fox.exercise.SportsGroupAll,int) -> a
    void access$5(com.fox.exercise.SportsGroupAll,int) -> b
    int access$6(com.fox.exercise.SportsGroupAll) -> d
    android.widget.GridView access$7(com.fox.exercise.SportsGroupAll) -> e
    java.util.ArrayList access$8(com.fox.exercise.SportsGroupAll) -> f
    cn.ingenic.indroidsync.SportsApp access$9(com.fox.exercise.SportsGroupAll) -> g
    void access$10(com.fox.exercise.SportsGroupAll,com.fox.exercise.SportsGroupAllAdapter) -> a
    com.fox.exercise.SportsGroupAllAdapter access$11(com.fox.exercise.SportsGroupAll) -> h
    com.fox.exercise.view.PullToRefreshGridView access$12(com.fox.exercise.SportsGroupAll) -> i
    android.app.Dialog access$13(com.fox.exercise.SportsGroupAll) -> j
    com.fox.exercise.SportsGroupAll$SportsGroupAllHandler access$14(com.fox.exercise.SportsGroupAll) -> k
com.fox.exercise.SportsGroupAll$1 -> com.fox.exercise.qh:
    com.fox.exercise.SportsGroupAll this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.SportsGroupAll$2 -> com.fox.exercise.qi:
    com.fox.exercise.SportsGroupAll this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.SportsGroupAll$GroupAll -> com.fox.exercise.qj:
    int id -> b
    java.lang.String img -> c
    java.lang.String titlename -> d
    java.lang.String detils -> e
    float goal -> f
    com.fox.exercise.SportsGroupAll this$0 -> a
    void setId(int) -> a
    java.lang.String getImg() -> a
    void setImg(java.lang.String) -> a
    java.lang.String getTitlename() -> b
    void setTitlename(java.lang.String) -> b
    java.lang.String getDetils() -> c
    void setDetils(java.lang.String) -> c
    float getGoal() -> d
    void setGoal(float) -> a
com.fox.exercise.SportsGroupAll$SportsGroupAllHandler -> com.fox.exercise.qk:
    com.fox.exercise.SportsGroupAll this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SportsGroupAll$SportsGroupAllThread -> com.fox.exercise.ql:
    com.fox.exercise.SportsGroupAll this$0 -> a
    void run() -> run
com.fox.exercise.SportsGroupAllAdapter -> com.fox.exercise.qm:
    android.content.Context mContext -> a
    java.util.ArrayList mList -> b
    android.view.LayoutInflater mInflater -> c
    com.fox.exercise.ImageDownloader mDownloader -> d
    android.app.Dialog loadProgressDialog -> e
    int itemWidth -> f
    int itemHeight -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.SportsGroupAllAdapter$ViewHolder -> com.fox.exercise.qn:
    android.widget.TextView title -> b
    android.widget.ImageView detilsImg -> c
    android.widget.TextView detils -> d
    android.widget.TextView goal -> e
    com.fox.exercise.SportsGroupAllAdapter this$0 -> a
    void access$1(com.fox.exercise.SportsGroupAllAdapter$ViewHolder,android.widget.TextView) -> a
    void access$2(com.fox.exercise.SportsGroupAllAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$3(com.fox.exercise.SportsGroupAllAdapter$ViewHolder,android.widget.TextView) -> b
    void access$4(com.fox.exercise.SportsGroupAllAdapter$ViewHolder,android.widget.TextView) -> c
    android.widget.ImageView access$5(com.fox.exercise.SportsGroupAllAdapter$ViewHolder) -> a
    android.widget.TextView access$6(com.fox.exercise.SportsGroupAllAdapter$ViewHolder) -> b
    android.widget.TextView access$7(com.fox.exercise.SportsGroupAllAdapter$ViewHolder) -> c
    android.widget.TextView access$8(com.fox.exercise.SportsGroupAllAdapter$ViewHolder) -> d
com.fox.exercise.SportsGroupMe -> com.fox.exercise.qo:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> a
    boolean isFirst -> b
    com.fox.exercise.view.PullToRefreshListView mPullSearchListView -> c
    android.widget.ListView mListView -> d
    android.app.Dialog mLoadProgressDialog -> e
    android.widget.TextView mDialogMessage -> f
    android.widget.EditText search_mygroup_edittext -> g
    int FRESH_LIST -> h
    int FRESH_FAILED -> i
    int times -> j
    com.fox.exercise.SportsGroupMeAdapter sportsGroupMeAdapter -> k
    java.util.ArrayList mList -> l
    java.lang.String editGroupName -> m
    int edittextCnt -> n
    int SEARCH_BASIC -> o
    int SEARCH_NAME -> p
    com.fox.exercise.SportsGroupMe$SportsGroupMeHandler msportsGroupMeHandler -> q
    android.text.TextWatcher sports_group_me_editchangelistener -> r
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void init() -> a
    void waitShowDialog() -> b
    void onDestroy() -> onDestroy
    android.widget.EditText access$0(com.fox.exercise.SportsGroupMe) -> a
    void access$1(com.fox.exercise.SportsGroupMe,java.lang.String) -> a
    java.lang.String access$2(com.fox.exercise.SportsGroupMe) -> b
    int access$3(com.fox.exercise.SportsGroupMe) -> c
    void access$4(com.fox.exercise.SportsGroupMe,int) -> a
    void access$5(com.fox.exercise.SportsGroupMe,int) -> b
    int access$6(com.fox.exercise.SportsGroupMe) -> d
    android.widget.ListView access$7(com.fox.exercise.SportsGroupMe) -> e
    java.util.ArrayList access$8(com.fox.exercise.SportsGroupMe) -> f
    cn.ingenic.indroidsync.SportsApp access$9(com.fox.exercise.SportsGroupMe) -> g
    void access$10(com.fox.exercise.SportsGroupMe,com.fox.exercise.SportsGroupMeAdapter) -> a
    com.fox.exercise.SportsGroupMeAdapter access$11(com.fox.exercise.SportsGroupMe) -> h
    com.fox.exercise.view.PullToRefreshListView access$12(com.fox.exercise.SportsGroupMe) -> i
    android.app.Dialog access$13(com.fox.exercise.SportsGroupMe) -> j
    com.fox.exercise.SportsGroupMe$SportsGroupMeHandler access$14(com.fox.exercise.SportsGroupMe) -> k
com.fox.exercise.SportsGroupMe$1 -> com.fox.exercise.qp:
    com.fox.exercise.SportsGroupMe this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.SportsGroupMe$2 -> com.fox.exercise.qq:
    com.fox.exercise.SportsGroupMe this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.SportsGroupMe$GroupMe -> com.fox.exercise.qr:
    int id -> b
    java.lang.String img -> c
    java.lang.String titlename -> d
    java.lang.String detils -> e
    com.fox.exercise.SportsGroupMe this$0 -> a
    void setId(int) -> a
    java.lang.String getImg() -> a
    void setImg(java.lang.String) -> a
    java.lang.String getTitlename() -> b
    void setTitlename(java.lang.String) -> b
    java.lang.String getDetils() -> c
    void setDetils(java.lang.String) -> c
com.fox.exercise.SportsGroupMe$SportsGroupMeHandler -> com.fox.exercise.qs:
    com.fox.exercise.SportsGroupMe this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SportsGroupMe$SportsGroupMeThread -> com.fox.exercise.qt:
    com.fox.exercise.SportsGroupMe this$0 -> a
    void run() -> run
com.fox.exercise.SportsGroupMeAdapter -> com.fox.exercise.qu:
    java.util.ArrayList mList -> a
    android.view.LayoutInflater mInflater -> b
    com.fox.exercise.ImageDownloader mDownloader -> c
    android.app.Dialog loadProgressDialog -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.SportsGroupMeAdapter$ViewHolder -> com.fox.exercise.qv:
    android.widget.TextView title -> b
    android.widget.ImageView detilsImg -> c
    android.widget.TextView detils -> d
    com.fox.exercise.SportsGroupMeAdapter this$0 -> a
    void access$1(com.fox.exercise.SportsGroupMeAdapter$ViewHolder,android.widget.TextView) -> a
    android.widget.TextView access$2(com.fox.exercise.SportsGroupMeAdapter$ViewHolder) -> a
    void access$3(com.fox.exercise.SportsGroupMeAdapter$ViewHolder,android.widget.ImageView) -> a
    void access$4(com.fox.exercise.SportsGroupMeAdapter$ViewHolder,android.widget.TextView) -> b
    android.widget.ImageView access$5(com.fox.exercise.SportsGroupMeAdapter$ViewHolder) -> b
    android.widget.TextView access$6(com.fox.exercise.SportsGroupMeAdapter$ViewHolder) -> c
com.fox.exercise.SportsHelpInfo -> com.fox.exercise.SportsHelpInfo:
    java.util.List helpInfoList -> a
    com.fox.exercise.SportsHelpInfo$InfoListAdapter mInfoAdapter -> b
    android.content.Context mContext -> c
    android.widget.ListView helpInfoListView -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initData() -> a
    void onClick(android.view.View) -> onClick
    com.fox.exercise.SportsHelpInfo$InfoListAdapter access$0(com.fox.exercise.SportsHelpInfo) -> a
    void access$1(com.fox.exercise.SportsHelpInfo,java.util.List) -> a
    java.util.List access$2(com.fox.exercise.SportsHelpInfo) -> b
com.fox.exercise.SportsHelpInfo$1 -> com.fox.exercise.qw:
    com.fox.exercise.SportsHelpInfo this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.SportsHelpInfo$2 -> com.fox.exercise.qx:
    com.fox.exercise.SportsHelpInfo this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.SportsHelpInfo$InfoListAdapter -> com.fox.exercise.qy:
    java.util.List mHelpInfoList -> b
    boolean[] mExpanded -> c
    android.content.Context mContext -> d
    com.fox.exercise.SportsHelpInfo this$0 -> a
    int getCount() -> getCount
    void clear() -> a
    void addItem(com.fox.exercise.api.entity.Help) -> a
    void updateStatus() -> b
    com.fox.exercise.api.entity.Help getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void toggle(int) -> b
    java.lang.Object getItem(int) -> getItem
com.fox.exercise.SportsHelpInfo$InfoView -> com.fox.exercise.qz:
    android.widget.TextView mTitle -> b
    android.widget.TextView mContent -> c
    com.fox.exercise.SportsHelpInfo this$0 -> a
    void setTitle(java.lang.String) -> a
    void setDialogue(java.lang.String) -> b
    void setExpanded(boolean) -> a
com.fox.exercise.SportsMain -> com.fox.exercise.SportsMain:
com.fox.exercise.SportsPersonalMsg -> com.fox.exercise.SportsPersonalMsg:
    android.widget.ImageButton mCancelBtn -> s
    android.widget.Button sk2PressBtn -> t
    android.widget.ImageButton sk2TextBtn -> u
    boolean upTypeText -> v
    android.widget.LinearLayout upcommentText -> w
    android.widget.EditText upcommentEdittext -> x
    android.widget.Button upcommentSend -> y
    com.fox.exercise.RecordHelper mRecorder -> z
    com.fox.exercise.SportsPersonalMsg$FinishHandler h -> k
    android.widget.ImageView mWavBegin -> l
    int currentDuration -> A
    boolean isStart -> B
    boolean isPause -> m
    android.app.Dialog uploadProgressDialog -> C
    android.app.Dialog dialog -> D
    android.media.MediaPlayer mPlayer -> n
    android.widget.LinearLayout layoutVoice -> E
    android.widget.ListView mListView -> F
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter mAdapter -> G
    cn.ingenic.indroidsync.SportsApp mSportsApp -> H
    android.content.Context mContext -> I
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> J
    android.os.Message eMsg -> K
    int uid -> L
    int touid -> M
    java.lang.String senderName -> N
    java.lang.String senderIcon -> O
    java.lang.String receiverIcon -> P
    java.lang.String birthday -> Q
    java.lang.String sex -> R
    java.lang.String defaultMesg -> S
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> T
    android.app.Dialog mProgressDialog -> U
    android.widget.LinearLayout verifyPassedLayput -> V
    android.widget.LinearLayout verifyFailedLayput -> W
    android.widget.ImageButton expressBtn -> X
    android.widget.RelativeLayout rScrollLayout -> Y
    com.fox.exercise.util.ScrollLayout scrollLayout -> Z
    java.util.List imgItems -> aa
    android.widget.LinearLayout imgLayout -> ab
    int mViewCount -> ac
    int mCurSel -> ad
    java.lang.Boolean isShow -> ae
    java.lang.String[] imgStr -> af
    long preTime -> ag
    java.lang.String copyString -> ah
    android.os.Handler mHandler -> o
    android.widget.ImageView wavBeginOne -> p
    android.widget.AdapterView$OnItemClickListener listener -> q
    android.text.TextWatcher mTextWatcher -> r
    void initIntentParam(android.content.Intent) -> a
    void onPagePause() -> d
    void onPageResume() -> c
    void initView() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onBackPressed() -> onBackPressed
    void initData() -> f
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void OnViewChange(int) -> a
    void setCurPoint(int) -> b
    void initViews() -> g
    void delStr(android.widget.EditText) -> a
    java.util.List getExpressionString(android.content.Context,java.lang.String) -> a
    java.lang.String filterEmoji(java.lang.String) -> a
    boolean containsEmoji(java.lang.String) -> b
    boolean isEmojiCharacter(char) -> a
    void setViewStatus() -> b
    void onPageDestroy() -> e
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter access$0(com.fox.exercise.SportsPersonalMsg) -> a
    void access$1(com.fox.exercise.SportsPersonalMsg,boolean) -> a
    android.content.Context access$2(com.fox.exercise.SportsPersonalMsg) -> b
    android.widget.EditText access$3(com.fox.exercise.SportsPersonalMsg) -> c
    void access$4(com.fox.exercise.SportsPersonalMsg,android.widget.EditText) -> a
    android.widget.Button access$5(com.fox.exercise.SportsPersonalMsg) -> d
    cn.ingenic.indroidsync.SportsApp access$6(com.fox.exercise.SportsPersonalMsg) -> e
    com.fox.exercise.RecordHelper access$7(com.fox.exercise.SportsPersonalMsg) -> f
    android.app.Dialog access$8(com.fox.exercise.SportsPersonalMsg) -> g
    void access$9(com.fox.exercise.SportsPersonalMsg,android.app.Dialog) -> a
    android.widget.LinearLayout access$10(com.fox.exercise.SportsPersonalMsg) -> h
    android.app.Dialog access$11(com.fox.exercise.SportsPersonalMsg) -> i
    android.widget.ImageButton access$12(com.fox.exercise.SportsPersonalMsg) -> j
    void access$13(com.fox.exercise.SportsPersonalMsg,java.lang.Boolean) -> a
    android.widget.RelativeLayout access$14(com.fox.exercise.SportsPersonalMsg) -> k
    boolean access$15(com.fox.exercise.SportsPersonalMsg) -> l
    void access$16(com.fox.exercise.SportsPersonalMsg,boolean) -> b
    android.widget.LinearLayout access$17(com.fox.exercise.SportsPersonalMsg) -> m
    android.widget.Button access$18(com.fox.exercise.SportsPersonalMsg) -> n
    android.widget.ImageButton access$19(com.fox.exercise.SportsPersonalMsg) -> o
    java.lang.Boolean access$20(com.fox.exercise.SportsPersonalMsg) -> p
    android.widget.ImageButton access$21(com.fox.exercise.SportsPersonalMsg) -> q
    int access$22(com.fox.exercise.SportsPersonalMsg) -> r
    java.lang.String access$23(com.fox.exercise.SportsPersonalMsg) -> s
    java.lang.String access$24(com.fox.exercise.SportsPersonalMsg) -> t
    java.lang.String access$25(com.fox.exercise.SportsPersonalMsg) -> u
    java.lang.String access$26(com.fox.exercise.SportsPersonalMsg) -> v
    android.widget.ListView access$27(com.fox.exercise.SportsPersonalMsg) -> w
    void access$28(com.fox.exercise.SportsPersonalMsg,android.app.Dialog) -> b
    android.app.Dialog access$29(com.fox.exercise.SportsPersonalMsg) -> x
    com.fox.exercise.bitmap.util.ImageResizer access$30(com.fox.exercise.SportsPersonalMsg) -> y
    android.widget.LinearLayout access$31(com.fox.exercise.SportsPersonalMsg) -> z
    android.widget.LinearLayout access$32(com.fox.exercise.SportsPersonalMsg) -> A
    java.lang.String access$33(com.fox.exercise.SportsPersonalMsg) -> B
    boolean access$34(com.fox.exercise.SportsPersonalMsg) -> C
    void access$35(com.fox.exercise.SportsPersonalMsg,int) -> a
    int access$36(com.fox.exercise.SportsPersonalMsg) -> D
    void access$37(com.fox.exercise.SportsPersonalMsg,java.lang.String) -> a
com.fox.exercise.SportsPersonalMsg$1 -> com.fox.exercise.ra:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SportsPersonalMsg$2 -> com.fox.exercise.rb:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.SportsPersonalMsg$3 -> com.fox.exercise.rc:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.SportsPersonalMsg$4 -> com.fox.exercise.rd:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.fox.exercise.SportsPersonalMsg$5 -> com.fox.exercise.re:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    java.util.List val$saveToDBMsgList -> b
    void run() -> run
com.fox.exercise.SportsPersonalMsg$6 -> com.fox.exercise.rf:
    java.util.List primsgAllList -> a
    com.fox.exercise.api.entity.UserPrimsgAll userPrimsgAll -> b
    com.fox.exercise.SportsPersonalMsg this$0 -> c
    java.util.List val$saveToDBMsgList -> d
    void run() -> run
com.fox.exercise.SportsPersonalMsg$7 -> com.fox.exercise.rg:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    void onChanged() -> onChanged
com.fox.exercise.SportsPersonalMsg$8 -> com.fox.exercise.rh:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.SportsPersonalMsg$9 -> com.fox.exercise.ri:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter -> com.fox.exercise.rj:
    java.util.List msgList -> b
    android.content.Context ctx -> c
    android.view.LayoutInflater mInflater -> d
    cn.ingenic.indroidsync.SportsApp mSportsApp -> e
    int uid -> f
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    int getCount() -> getCount
    void addItem(com.fox.exercise.api.entity.UserPrimsgOne) -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean getMsgType(com.fox.exercise.api.entity.UserPrimsgOne) -> b
    com.fox.exercise.SportsPersonalMsg access$0(com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter) -> a
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$1 -> com.fox.exercise.rk:
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter this$1 -> a
    void run() -> run
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2 -> com.fox.exercise.rl:
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter this$1 -> a
    java.lang.Object val$lock -> b
    java.lang.String val$mediaPath -> c
    android.widget.ImageView val$wavBegin -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter access$0(com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2) -> a
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2$1 -> com.fox.exercise.rm:
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    java.lang.String val$mediaPath -> c
    void run() -> run
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2 access$0(com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2$1) -> a
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2$1$1 -> com.fox.exercise.rn:
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2$1 this$3 -> a
    android.widget.ImageView val$wavBegin -> b
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2$1$2 -> com.fox.exercise.ro:
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2$1 this$3 -> a
    android.widget.ImageView val$wavBegin -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2$1$3 -> com.fox.exercise.rp:
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$2$1 this$3 -> a
    android.widget.ImageView val$wavBegin -> b
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$3 -> com.fox.exercise.rq:
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter this$1 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$4 -> com.fox.exercise.rr:
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter this$1 -> a
    com.fox.exercise.api.entity.UserPrimsgOne val$msg -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter$ViewHolder -> com.fox.exercise.rs:
    android.widget.TextView commentText -> a
    android.widget.TextView wavDurations -> b
    java.lang.String wavPath -> c
    android.widget.LinearLayout rClick -> d
    android.widget.TextView tvSendTime -> e
    android.widget.ImageView wavBegin -> f
    com.fox.exercise.util.RoundedImage userIcon -> g
    boolean isComMsg -> h
    android.widget.ImageView authImageView -> i
    com.fox.exercise.SportsPersonalMsg$ChatMsgViewAdapter this$1 -> j
com.fox.exercise.SportsPersonalMsg$ExpressionImgAdapter -> com.fox.exercise.rt:
    java.util.List mList -> b
    android.content.Context mContext -> c
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.SportsPersonalMsg$ExpressionImgAdapter$ImgItem -> com.fox.exercise.ru:
    android.widget.ImageView mAppIcon -> a
    com.fox.exercise.SportsPersonalMsg$ExpressionImgAdapter this$1 -> b
com.fox.exercise.SportsPersonalMsg$FinishHandler -> com.fox.exercise.rv:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SportsPersonalMsg$GetPicDetailThread -> com.fox.exercise.rw:
    int picId -> b
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    void run() -> run
com.fox.exercise.SportsPersonalMsg$InitialDataTask -> com.fox.exercise.rx:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.SportsPersonalMsg$Sk2ClickListener -> com.fox.exercise.ry:
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onLongClick(android.view.View) -> onLongClick
    void onClick(android.view.View) -> onClick
com.fox.exercise.SportsPersonalMsg$UploadThread -> com.fox.exercise.rz:
    java.lang.String wav -> b
    java.lang.String comment -> c
    int wavDurations -> d
    com.fox.exercise.SportsPersonalMsg this$0 -> a
    void run() -> run
    com.fox.exercise.SportsPersonalMsg access$0(com.fox.exercise.SportsPersonalMsg$UploadThread) -> a
com.fox.exercise.SportsPersonalMsg$UploadThread$1 -> com.fox.exercise.sa:
    com.fox.exercise.SportsPersonalMsg$UploadThread this$1 -> a
    com.fox.exercise.api.entity.UserPrimsgOne val$priMsg -> b
    void run() -> run
    com.fox.exercise.SportsPersonalMsg$UploadThread access$0(com.fox.exercise.SportsPersonalMsg$UploadThread$1) -> a
com.fox.exercise.SportsPersonalMsg$UploadThread$1$1 -> com.fox.exercise.sb:
    com.fox.exercise.SportsPersonalMsg$UploadThread$1 this$2 -> a
    com.fox.exercise.api.entity.UserPrimsgOne val$priMsg -> b
    void run() -> run
com.fox.exercise.SportsPersonalMsg$UploadThread$2 -> com.fox.exercise.sc:
    java.util.List primsgAllList -> a
    com.fox.exercise.SportsPersonalMsg$UploadThread this$1 -> b
    com.fox.exercise.api.entity.UserPrimsgOne val$priMsg -> c
    void run() -> run
com.fox.exercise.SportsService -> com.fox.exercise.SportsService:
    java.lang.String mSessionId -> a
    com.fox.exercise.api.entity.UserDetail mUserDetail -> b
    boolean mIsAdmin -> c
    android.content.BroadcastReceiver serviceReceiver -> d
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void access$0(com.fox.exercise.SportsService,java.lang.String) -> a
    void access$1(com.fox.exercise.SportsService,boolean) -> a
    java.lang.String access$2(com.fox.exercise.SportsService) -> a
    void access$3(com.fox.exercise.SportsService,com.fox.exercise.api.entity.UserDetail) -> a
    com.fox.exercise.api.entity.UserDetail access$4(com.fox.exercise.SportsService) -> b
    boolean access$5(com.fox.exercise.SportsService) -> c
com.fox.exercise.SportsService$1 -> com.fox.exercise.sd:
    com.fox.exercise.SportsService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.SportsService$ClearThread -> com.fox.exercise.se:
    com.fox.exercise.SportsService this$0 -> a
    void run() -> run
com.fox.exercise.SportsService$RefreshAndBroadcastThread -> com.fox.exercise.sf:
    com.fox.exercise.SportsService this$0 -> a
    void run() -> run
com.fox.exercise.SportsUtilities -> com.fox.exercise.sg:
    java.lang.String DOWNLOAD_BASE_PATH -> a
    java.lang.String DOWNLOAD_SAVE_PATH -> b
    java.lang.String DOWNLOAD_PHOTOFRAMES_PATH -> c
    java.lang.String RECYCLE_PATH -> d
    int IMAGE_DEFAULT_WIDTH -> e
    int IMAGE_DEFAULT_HEIGHT -> f
    java.lang.String mPictureFormat -> g
    int IMAGE_SPACE -> h
    android.graphics.Bitmap$CompressFormat mOutputFormat -> l
    java.lang.String CAMERA_MANAGER_BUCKET_NAME -> m
    java.lang.String IMAGE_SAVE_PATH -> i
    android.net.Uri STORAGE_URI -> n
    java.lang.String[] constellationArr -> j
    int[] constellationEdgeDay -> k
    java.lang.String getUrlFileName(java.lang.String) -> a
    android.graphics.Bitmap loadBitmap(java.lang.String,java.lang.String) -> a
    android.graphics.Bitmap loadBitmapFromUrl(java.lang.String,java.lang.String) -> c
    java.io.File getFromFileCache(java.lang.String) -> b
    int calculatePicturesRemaining() -> a
    boolean hasStorage() -> b
    boolean hasStorage(boolean) -> a
    boolean checkFsWritable() -> c
    android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,float) -> a
    void showFatalErrorAndFinish(android.app.Activity,java.lang.String,java.lang.String) -> a
    void checkSize(java.lang.String) -> c
    void resizePic(java.lang.String,java.lang.String) -> b
    java.lang.String getResizePic(java.lang.String) -> d
    android.graphics.Bitmap decodeFile(java.lang.String) -> e
    java.lang.String millionsToStringDate(long) -> a
    int getRealPixel_W(android.content.Context,int) -> a
    boolean checkConnection(android.content.Context) -> a
    void setAge(android.content.Context,java.lang.String,android.widget.TextView) -> a
    int getStateImgIdsMysports(int,int) -> a
    int getStateImgIdsTitle(int) -> a
    int getNewStateImgIdsTitle(int) -> b
    int getStateImgIdsTitle(int,int) -> b
com.fox.exercise.SportsUtilities$1 -> com.fox.exercise.sh:
    android.app.Activity val$activity -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.SportsUtilities$FlushedInputStream -> com.fox.exercise.si:
    long skip(long) -> skip
com.fox.exercise.SreachDevice -> com.fox.exercise.SreachDevice:
    android.widget.Button startBtn -> b
    android.widget.ImageView sreachImg -> c
    boolean isStart -> d
    boolean isWait -> e
    java.util.Timer mTimer -> f
    java.util.TimerTask task -> g
    com.fox.exercise.SreachDevice context -> h
    com.fox.exercise.api.WatchService wService -> i
    android.content.ServiceConnection wConnection -> j
    com.fox.exercise.api.WatchService$SearchCallback sCallback -> k
    android.os.Handler handler -> a
    java.lang.Runnable mThread -> l
    void onCreate(android.os.Bundle) -> onCreate
    void animationSet(java.lang.Boolean) -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void stopSearch() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void access$0(com.fox.exercise.SreachDevice,com.fox.exercise.api.WatchService) -> a
    com.fox.exercise.api.WatchService access$1(com.fox.exercise.SreachDevice) -> a
    com.fox.exercise.api.WatchService$SearchCallback access$2(com.fox.exercise.SreachDevice) -> b
    boolean access$3(com.fox.exercise.SreachDevice) -> c
    void access$4(com.fox.exercise.SreachDevice,java.lang.Boolean) -> a
    void access$5(com.fox.exercise.SreachDevice,boolean) -> a
com.fox.exercise.SreachDevice$1 -> com.fox.exercise.sj:
    com.fox.exercise.SreachDevice this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fox.exercise.SreachDevice$2 -> com.fox.exercise.sk:
    com.fox.exercise.SreachDevice this$0 -> a
    void setSearch(boolean) -> a
com.fox.exercise.SreachDevice$3 -> com.fox.exercise.sl:
    com.fox.exercise.SreachDevice this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SreachDevice$4 -> com.fox.exercise.sm:
    com.fox.exercise.SreachDevice this$0 -> a
    void run() -> run
com.fox.exercise.SreachDevice$5 -> com.fox.exercise.sn:
    com.fox.exercise.SreachDevice this$0 -> a
    void run() -> run
com.fox.exercise.StateActivity -> com.fox.exercise.StateActivity:
    long preTime -> N
    boolean mHasPlan -> l
    boolean mIn -> m
    cn.ingenic.indroidsync.SportsApp mSportsApp -> n
    java.util.List mImageDetails -> o
    java.lang.String date -> p
    java.util.concurrent.ExecutorService cachedThreadExecutor -> O
    com.baidu.location.LocationClient mClient -> q
    com.fox.exercise.StateActivity$MyLocationListenner myListener -> r
    java.lang.String mCitycode -> P
    android.widget.ImageView mWeatherPic -> Q
    android.widget.TextView mWeatherDegree -> R
    android.widget.TextView mWeek -> S
    android.widget.TextView mAear -> T
    android.widget.TextView mWeatherPM -> U
    android.widget.RelativeLayout mPopMenuBack -> V
    int mUid -> W
    android.content.SharedPreferences sharedPreferences -> X
    com.fox.exercise.db.SportSubTaskDB mdb -> Y
    android.content.SharedPreferences spf -> Z
    android.widget.TextView dis_zheng -> aa
    android.widget.TextView dis_xiao_1 -> ab
    android.widget.TextView dis_xiao_2 -> ac
    android.widget.TextView sport_cishu -> ad
    android.widget.TextView sport_sudu -> ae
    android.widget.TextView sport_reliang -> af
    android.widget.TextView bind_device_text -> ag
    android.widget.ImageView image_biao_yuan -> ah
    android.widget.ImageView image_zhu_yuan -> ai
    android.view.animation.AnimationSet animationSet1 -> s
    android.view.animation.AnimationSet animationSet2 -> t
    android.view.animation.TranslateAnimation translateAnimation1 -> u
    android.view.animation.TranslateAnimation translateAnimation2 -> v
    android.view.animation.AnimationSet animationSetDis1 -> w
    android.view.animation.AnimationSet animationSetDis2 -> x
    android.view.animation.TranslateAnimation translateAnimationDis1 -> y
    android.view.animation.TranslateAnimation translateAnimationDis2 -> z
    android.view.animation.AnimationSet animationSetCal1 -> A
    android.view.animation.AnimationSet animationSetCal2 -> B
    android.view.animation.TranslateAnimation translateAnimationCal1 -> C
    android.view.animation.TranslateAnimation translateAnimationCal2 -> D
    int count -> aj
    int mTimes -> ak
    java.lang.Boolean history_see -> al
    com.fox.exercise.db.SportSubTaskDB histDB -> am
    android.support.v4.app.FragmentActivity context -> an
    com.amap.api.location.LocationManagerProxy mLocationManagerProxy -> ao
    android.widget.TextView dis -> ap
    android.widget.TextView dis_xiao1 -> aq
    android.widget.TextView dis_xiao2 -> ar
    android.widget.TextView cal -> as
    android.widget.TextView cal2 -> at
    android.widget.TextView goal_dis -> au
    android.widget.TextView goal_cal -> av
    android.widget.TextView step_counter -> aw
    double todayDis -> ax
    int todayCal -> ay
    int todayDisFloat -> az
    int todayDisCountdown -> aA
    int todayCalCountdown -> aB
    android.os.Handler mHandler -> aC
    int type -> aD
    android.widget.PopupWindow myWindow -> aE
    android.widget.RelativeLayout myView -> aF
    android.widget.EditText myEditStep -> aG
    android.widget.EditText myEditCalories -> aH
    int myNumberStep -> aI
    int myNumberCalories -> aJ
    int myNum -> aK
    android.content.SharedPreferences mySP -> aL
    int kllMultiple -> aM
    android.text.TextWatcher editSteplistener -> E
    android.text.TextWatcher editCaloriesListener -> F
    double sports_juli -> aN
    int sports_cishu -> aO
    double sports_sudu -> aP
    int sports_reliang -> aQ
    int juli_float -> aR
    int countdown -> G
    com.fox.exercise.view.DrawNewImageView sport_step_drawimage -> H
    com.fox.exercise.view.DrawNewImageView sport_cal_drawimage -> I
    android.support.v4.view.ViewPager viewPager -> aS
    java.util.List viewList -> aT
    java.lang.String[] months -> aU
    android.widget.TextView month_english -> aV
    android.widget.TextView month_num -> aW
    android.widget.TextView day1 -> aX
    android.widget.TextView day2 -> aY
    android.widget.TextView day3 -> aZ
    android.widget.TextView day4 -> ba
    android.widget.TextView day5 -> bb
    android.widget.ImageView cal_1 -> bc
    android.widget.ImageView cal_2 -> bd
    android.widget.ImageView cal_3 -> be
    android.widget.ImageView cal_4 -> bf
    android.widget.ImageView cal_5 -> bg
    android.widget.ImageView km_1 -> bh
    android.widget.ImageView km_2 -> bi
    android.widget.ImageView km_3 -> bj
    android.widget.ImageView km_4 -> bk
    android.widget.ImageView km_5 -> bl
    android.widget.LinearLayout mCalKm -> bm
    java.util.List juli_list -> J
    java.util.List juli_list2 -> K
    java.util.List reliang_list -> L
    java.util.List reliang_list2 -> M
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void initView() -> k
    void setLastsports() -> l
    void onStart() -> onStart
    java.lang.String getWeek() -> m
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setSportsgoal() -> n
    void initPM() -> o
    void startTextAnimation(int) -> c
    void getIcon(java.lang.String) -> a
    int registerLocation() -> h
    void unregisterLocation() -> i
    void onDismiss() -> onDismiss
    java.lang.String getTodayDate() -> p
    void shotSportsGoal() -> j
    double KALULIMultiple(int,int) -> a
    void allSportsData() -> q
    java.lang.String CalcStepCounter() -> r
    void biaoPanEffect() -> s
    void initBiaoZhu() -> t
    void initViewPagerScroll() -> u
    void addView() -> v
    java.lang.String getDateBefore(int) -> d
    java.lang.String getStringDate(int) -> e
    void getKmCal() -> w
    void getKmCalDate() -> x
    void OnViewChange(int) -> b
    android.app.Dialog onCreateDialog(int,android.os.Bundle) -> a
    void showImageView() -> y
    void hideImageView() -> z
    void saveDate2DB(com.fox.exercise.pedometer.SportContionTaskDetail) -> a
    void access$0(com.fox.exercise.StateActivity) -> a
    void access$1(com.fox.exercise.StateActivity) -> b
    void access$2(com.fox.exercise.StateActivity) -> c
    void access$3(com.fox.exercise.StateActivity) -> d
    android.widget.TextView access$4(com.fox.exercise.StateActivity) -> e
    java.util.concurrent.ExecutorService access$5(com.fox.exercise.StateActivity) -> f
    java.lang.String access$6(com.fox.exercise.StateActivity) -> g
    android.os.Handler access$7(com.fox.exercise.StateActivity) -> h
    android.widget.TextView access$8(com.fox.exercise.StateActivity) -> i
    void access$9(com.fox.exercise.StateActivity) -> j
    void access$10(com.fox.exercise.StateActivity) -> k
    void access$11(com.fox.exercise.StateActivity,int) -> a
    android.widget.TextView access$12(com.fox.exercise.StateActivity) -> l
    int access$13(com.fox.exercise.StateActivity) -> m
    android.widget.TextView access$14(com.fox.exercise.StateActivity) -> n
    int access$15(com.fox.exercise.StateActivity) -> o
    android.widget.TextView access$16(com.fox.exercise.StateActivity) -> p
    void access$17(com.fox.exercise.StateActivity,android.content.SharedPreferences) -> a
    android.content.SharedPreferences access$18(com.fox.exercise.StateActivity) -> q
    android.widget.EditText access$19(com.fox.exercise.StateActivity) -> r
    int access$20(com.fox.exercise.StateActivity) -> s
    void access$21(com.fox.exercise.StateActivity,int) -> b
    void access$22(com.fox.exercise.StateActivity,int) -> c
    android.widget.EditText access$23(com.fox.exercise.StateActivity) -> t
    int access$24(com.fox.exercise.StateActivity) -> u
    android.widget.ImageView access$25(com.fox.exercise.StateActivity) -> v
    android.widget.ImageView access$26(com.fox.exercise.StateActivity) -> w
    void access$27(com.fox.exercise.StateActivity,com.fox.exercise.db.SportSubTaskDB) -> a
    java.lang.Boolean access$28(com.fox.exercise.StateActivity) -> x
    int access$29(com.fox.exercise.StateActivity) -> y
    int access$30(com.fox.exercise.StateActivity) -> z
    void access$31(com.fox.exercise.StateActivity,int) -> d
    void access$32(com.fox.exercise.StateActivity,com.fox.exercise.pedometer.SportContionTaskDetail) -> a
    void access$33(com.fox.exercise.StateActivity,java.lang.Boolean) -> a
    com.fox.exercise.db.SportSubTaskDB access$34(com.fox.exercise.StateActivity) -> A
com.fox.exercise.StateActivity$1 -> com.fox.exercise.so:
    android.content.SharedPreferences spf -> a
    com.fox.exercise.StateActivity this$0 -> b
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.StateActivity access$0(com.fox.exercise.StateActivity$1) -> a
com.fox.exercise.StateActivity$1$1 -> com.fox.exercise.sp:
    com.fox.exercise.StateActivity$1 this$1 -> a
    void run() -> run
com.fox.exercise.StateActivity$2 -> com.fox.exercise.sq:
    com.fox.exercise.StateActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.StateActivity$3 -> com.fox.exercise.sr:
    com.fox.exercise.StateActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.StateActivity$4 -> com.fox.exercise.ss:
    com.fox.exercise.StateActivity this$0 -> a
    void run() -> run
com.fox.exercise.StateActivity$6 -> com.fox.exercise.st:
    com.fox.exercise.StateActivity this$0 -> a
    void run() -> run
com.fox.exercise.StateActivity$7 -> com.fox.exercise.su:
    com.fox.exercise.StateActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.StateActivity$8 -> com.fox.exercise.sv:
    com.fox.exercise.StateActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.StateActivity$MyLocationListenner -> com.fox.exercise.sw:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.fox.exercise.StateActivity$MyPageListener -> com.fox.exercise.sx:
    com.fox.exercise.StateActivity this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.fox.exercise.SysMessageMyActivity -> com.fox.exercise.SysMessageMyActivity:
    com.fox.exercise.view.PullToRefreshListView mPullListView -> k
    android.widget.ListView mListView -> l
    com.fox.exercise.SysMessageMyAdapter mAdapter -> m
    android.app.Dialog loadProgressDialog -> n
    java.util.HashSet mSet -> o
    java.util.ArrayList mList -> p
    com.fox.exercise.SysMessageMyActivity$GiftsHandler mHandler -> q
    int mTimes -> r
    boolean isRefresh -> s
    int userID -> t
    cn.ingenic.indroidsync.SportsApp mSportsApp -> u
    java.lang.String copyString -> v
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void initViews() -> f
    void initData() -> g
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.SysMessageMyActivity) -> a
    int access$1(com.fox.exercise.SysMessageMyActivity) -> b
    void access$2(com.fox.exercise.SysMessageMyActivity,int) -> a
    boolean access$3(com.fox.exercise.SysMessageMyActivity) -> c
    java.util.HashSet access$4(com.fox.exercise.SysMessageMyActivity) -> d
    java.util.ArrayList access$5(com.fox.exercise.SysMessageMyActivity) -> e
    com.fox.exercise.SysMessageMyActivity$GiftsHandler access$6(com.fox.exercise.SysMessageMyActivity) -> f
    com.fox.exercise.SysMessageMyAdapter access$7(com.fox.exercise.SysMessageMyActivity) -> g
    void access$8(com.fox.exercise.SysMessageMyActivity,com.fox.exercise.SysMessageMyAdapter) -> a
    android.widget.ListView access$9(com.fox.exercise.SysMessageMyActivity) -> h
    android.app.Dialog access$10(com.fox.exercise.SysMessageMyActivity) -> i
    com.fox.exercise.view.PullToRefreshListView access$11(com.fox.exercise.SysMessageMyActivity) -> j
    void access$12(com.fox.exercise.SysMessageMyActivity,boolean) -> a
    int access$13(com.fox.exercise.SysMessageMyActivity) -> k
    void access$14(com.fox.exercise.SysMessageMyActivity,java.lang.String) -> a
com.fox.exercise.SysMessageMyActivity$1 -> com.fox.exercise.sy:
    com.fox.exercise.SysMessageMyActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.SysMessageMyActivity$2 -> com.fox.exercise.sz:
    com.fox.exercise.SysMessageMyActivity this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.fox.exercise.SysMessageMyActivity$GetGiftsThread -> com.fox.exercise.ta:
    int uid -> b
    com.fox.exercise.SysMessageMyActivity this$0 -> a
    void run() -> run
com.fox.exercise.SysMessageMyActivity$GiftsHandler -> com.fox.exercise.tb:
    com.fox.exercise.SysMessageMyActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.SysMessageMyAdapter -> com.fox.exercise.tc:
    java.util.ArrayList mList -> a
    android.content.Context mContext -> b
    android.view.LayoutInflater mInflater -> c
    com.fox.exercise.ImageDownloader mDownloader -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.fox.exercise.SysMessageMyAdapter) -> a
    java.util.ArrayList access$1(com.fox.exercise.SysMessageMyAdapter) -> b
com.fox.exercise.SysMessageMyAdapter$1 -> com.fox.exercise.td:
    com.fox.exercise.SysMessageMyAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.SysMessageMyAdapter$2 -> com.fox.exercise.te:
    com.fox.exercise.SysMessageMyAdapter this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
com.fox.exercise.TextUtil -> com.fox.exercise.tf:
    int mTextPosx -> a
    int mTextPosy -> b
    int mTextWidth -> c
    int mTextHeight -> d
    int mFontHeight -> e
    int mPageLineNum -> f
    int mCanvasBGColor -> g
    int mFontColor -> h
    int mAlpha -> i
    int mRealLine -> j
    int mCurrentLine -> k
    int mTextSize -> l
    java.lang.String mStrText -> m
    java.util.Vector mString -> n
    android.graphics.Paint mPaint -> o
    void InitText() -> a
    void GetTextIfon() -> b
    void DrawText(android.graphics.Canvas) -> a
com.fox.exercise.ThemeUtils -> com.fox.exercise.tg:
    java.lang.String[] restart_keys -> a
    boolean isThemeChange -> b
    java.lang.String getLocalIpAddress() -> a
com.fox.exercise.TitlePopup -> com.fox.exercise.th:
    android.widget.TextView priase -> c
    android.widget.TextView comment -> d
    android.widget.LinearLayout goodLayout -> e
    android.widget.LinearLayout textLayout -> f
    android.content.Context mContext -> g
    java.lang.String findIDString -> h
    int list_position -> i
    int LIST_PADDING -> a
    android.graphics.Rect mRect -> j
    int[] mLocation -> k
    com.fox.exercise.TitlePopup$OnItemOnClickListener mItemOnClickListener -> l
    android.view.View$OnClickListener onclick -> b
    void show(android.view.View,int,java.lang.String,java.lang.String) -> a
    void setItemOnClickListener(com.fox.exercise.TitlePopup$OnItemOnClickListener) -> a
    com.fox.exercise.TitlePopup$OnItemOnClickListener access$0(com.fox.exercise.TitlePopup) -> a
    int access$1(com.fox.exercise.TitlePopup) -> b
    java.lang.String access$2(com.fox.exercise.TitlePopup) -> c
com.fox.exercise.TitlePopup$1 -> com.fox.exercise.ti:
    com.fox.exercise.TitlePopup this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.TitlePopup$OnItemOnClickListener -> com.fox.exercise.tj:
    void onItemClick(int,int,java.lang.String) -> a
com.fox.exercise.TouchDisableView -> com.fox.exercise.TouchDisableView:
    android.view.View mContent -> a
    boolean mTouchDisabled -> b
    void setContent(android.view.View) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setTouchDisable(boolean) -> a
com.fox.exercise.TouchImageView -> com.fox.exercise.TouchImageView:
    int mode -> a
    float beforeLenght -> b
    float afterLenght -> c
    float scale -> d
    int screenW -> e
    int screenH -> f
    int start_x -> g
    int start_y -> h
    int stop_x -> i
    int stop_y -> j
    android.view.animation.TranslateAnimation trans -> k
    int bmWidth -> l
    int bmHeight -> m
    android.graphics.Bitmap bitmap -> n
    float maxScale -> o
    float minScale -> p
    int startWidth -> q
    float piovtX -> r
    float piovtY -> s
    int AnimSwitch -> t
    float[] center -> u
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    float spacing(android.view.MotionEvent) -> a
    float[] centerPostion(android.view.MotionEvent) -> b
    void setRect() -> a
    void Rebound(int,int) -> a
    boolean ReScale() -> b
    void onRebound() -> c
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setScale(float,int) -> a
    void setPosition(int,int,int,int) -> a
    void access$0(com.fox.exercise.TouchImageView) -> a
com.fox.exercise.TouchImageView$1 -> com.fox.exercise.tk:
    com.fox.exercise.TouchImageView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.fox.exercise.Train_webViewClass -> com.fox.exercise.Train_webViewClass:
    java.lang.String APP_CACAHE_DIRNAME -> k
    java.lang.String webUrl -> l
    android.webkit.WebView webView -> m
    android.widget.LinearLayout loading_layout -> n
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void loadWebView() -> g
    void clearWebViewCache() -> f
    void deleteFile(java.io.File) -> a
    android.widget.LinearLayout access$0(com.fox.exercise.Train_webViewClass) -> a
com.fox.exercise.Train_webViewClass$1 -> com.fox.exercise.tl:
    com.fox.exercise.Train_webViewClass this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.fox.exercise.Train_webViewClass$2 -> com.fox.exercise.tm:
    com.fox.exercise.Train_webViewClass this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.fox.exercise.UploadActivity -> com.fox.exercise.UploadActivity:
    java.lang.String picAddr -> p
    android.widget.EditText picTitleEditText -> q
    java.lang.String shareTitle -> r
    java.lang.String imgUrl -> s
    android.widget.Button finishBtn -> t
    cn.ingenic.indroidsync.SportsApp mSportsApp -> u
    com.fox.exercise.UploadActivity$FinishHandler h -> k
    android.app.Dialog uploadProgressDialog -> v
    android.widget.Toast toast -> w
    boolean noSinaWeibo -> x
    boolean noTxWeibo -> y
    boolean noRenRen -> z
    boolean noBaidu -> A
    boolean noQQzone -> B
    com.fox.exercise.RecordHelper mRecorder -> C
    android.widget.ImageButton voiceStart -> D
    android.widget.TextView upvoiceTime -> E
    android.widget.ImageButton voiceDelete -> F
    android.widget.ProgressBar progress -> G
    boolean isStart -> H
    int currentDuration -> I
    android.widget.RelativeLayout upvoiceLinear -> J
    android.media.MediaPlayer mPlayer -> l
    boolean canSingleClick -> K
    android.widget.RelativeLayout reVoice -> L
    android.graphics.Bitmap mPhoto -> M
    com.fox.exercise.SportExceptionHandler mExceptionHandler -> N
    android.content.Context mContext -> O
    java.lang.String pointString -> m
    int taskID -> n
    int mediaTypeID -> o
    android.widget.ImageButton iButton -> P
    android.os.Handler handler -> Q
    void onStart() -> onStart
    void init() -> f
    void onStop() -> onStop
    void init_finish_btn() -> g
    void onClick(android.view.View) -> onClick
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    android.widget.ProgressBar access$0(com.fox.exercise.UploadActivity) -> a
    void access$1(com.fox.exercise.UploadActivity,boolean) -> a
    android.widget.ImageButton access$2(com.fox.exercise.UploadActivity) -> b
    boolean access$3(com.fox.exercise.UploadActivity) -> c
    com.fox.exercise.RecordHelper access$4(com.fox.exercise.UploadActivity) -> d
    android.content.Context access$5(com.fox.exercise.UploadActivity) -> e
    int access$6(com.fox.exercise.UploadActivity) -> f
    void access$7(com.fox.exercise.UploadActivity,int) -> a
    android.os.Handler access$8(com.fox.exercise.UploadActivity) -> g
    android.widget.ImageButton access$9(com.fox.exercise.UploadActivity) -> h
    android.widget.RelativeLayout access$10(com.fox.exercise.UploadActivity) -> i
    void access$11(com.fox.exercise.UploadActivity,boolean) -> b
    android.widget.Button access$12(com.fox.exercise.UploadActivity) -> j
    boolean access$13(com.fox.exercise.UploadActivity) -> k
    android.widget.TextView access$14(com.fox.exercise.UploadActivity) -> l
    android.widget.RelativeLayout access$15(com.fox.exercise.UploadActivity) -> m
    android.app.Dialog access$16(com.fox.exercise.UploadActivity) -> n
    void access$17(com.fox.exercise.UploadActivity,android.app.Dialog) -> a
    android.widget.Toast access$18(com.fox.exercise.UploadActivity) -> o
    void access$19(com.fox.exercise.UploadActivity,android.widget.Toast) -> a
    cn.ingenic.indroidsync.SportsApp access$20(com.fox.exercise.UploadActivity) -> p
    void access$21(com.fox.exercise.UploadActivity,java.lang.String) -> a
com.fox.exercise.UploadActivity$1 -> com.fox.exercise.tn:
    com.fox.exercise.UploadActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.UploadActivity$2 -> com.fox.exercise.to:
    com.fox.exercise.UploadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.UploadActivity$3 -> com.fox.exercise.tp:
    com.fox.exercise.UploadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.UploadActivity$4 -> com.fox.exercise.tq:
    com.fox.exercise.UploadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.UploadActivity$AudioListener -> com.fox.exercise.tr:
    com.fox.exercise.UploadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onLongClick(android.view.View) -> onLongClick
    com.fox.exercise.UploadActivity access$0(com.fox.exercise.UploadActivity$AudioListener) -> a
com.fox.exercise.UploadActivity$AudioListener$1 -> com.fox.exercise.ts:
    com.fox.exercise.UploadActivity$AudioListener this$1 -> a
    void run() -> run
com.fox.exercise.UploadActivity$EditTextMaxLengthWatcher -> com.fox.exercise.tt:
    int maxLen -> b
    android.widget.EditText editText -> c
    com.fox.exercise.UploadActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.fox.exercise.UploadActivity$FinishHandler -> com.fox.exercise.tu:
    com.fox.exercise.UploadActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.UploadActivity$UploadThread -> com.fox.exercise.tv:
    com.fox.exercise.UploadActivity this$0 -> a
    void run() -> run
com.fox.exercise.Util -> com.fox.exercise.tw:
    int IMAGE_DEFAULT_WIDTH -> a
    int IMAGE_DEFAULT_HEIGHT -> b
    int IMAGE_SCALE_WIDTH -> c
    int IMAGE_SCALE_HEIGHT -> d
    int IMAGE_SPACE -> e
    android.net.Uri STORAGE_URI -> p
    java.lang.String CAMERA_MANAGER_BUCKET_NAME -> f
    java.lang.String IMAGE_SAVE_PATH -> g
    java.lang.String IMAGE_SAVE_PATH_TEMP -> h
    java.lang.String IMAGE_SAVE_PATH_HISTORY -> i
    android.graphics.Bitmap$CompressFormat mOutputFormat -> q
    java.lang.String mPictureFormat -> j
    java.lang.String mFilePath -> k
    java.lang.String mHistoryFilePath -> l
    java.lang.String mTFilePath -> m
    boolean mImageSaveToTemp -> n
    android.net.Uri mCurrContentUri -> o
    int identifer -> r
    android.net.Uri storeUriImage(android.content.Context,byte[],android.graphics.Bitmap,boolean,java.lang.String,boolean) -> a
    int getExifOrientation(java.lang.String) -> a
    android.graphics.Bitmap decodeFile(java.lang.String) -> b
    int getDisplayRotation(android.app.Activity) -> a
    void setCameraDisplayOrientation(android.app.Activity,int,android.hardware.Camera,int) -> a
    void recycle(android.graphics.Bitmap) -> a
    int getRealPixel_W(android.content.Context,int) -> a
com.fox.exercise.Utils -> com.fox.exercise.tx:
    android.graphics.Bitmap rotate(android.graphics.Bitmap,int) -> a
    void closeSilently(java.io.Closeable) -> a
com.fox.exercise.ViewPagerScroller -> com.fox.exercise.ty:
    int mScrollDuration -> a
    void startScroll(int,int,int,int,int) -> startScroll
    void startScroll(int,int,int,int) -> startScroll
com.fox.exercise.VisitorMyActivity -> com.fox.exercise.VisitorMyActivity:
    com.fox.exercise.view.PullToRefreshListView mPullListView -> l
    android.widget.ListView mListView -> m
    com.fox.exercise.VisitorMyAdapter mAdapter -> n
    android.app.Dialog loadProgressDialog -> o
    java.util.HashSet mSet -> p
    java.util.ArrayList mList -> q
    com.fox.exercise.VisitorMyActivity$GiftsHandler mHandler -> r
    int mTimes -> s
    boolean isRefresh -> t
    boolean isFlag -> k
    int userID -> u
    cn.ingenic.indroidsync.SportsApp mSportsApp -> v
    long preTime -> w
    android.widget.AdapterView$OnItemClickListener listViewClick -> x
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void initViews() -> f
    void initData() -> g
    com.fox.exercise.VisitorMyAdapter access$0(com.fox.exercise.VisitorMyActivity) -> a
    java.util.ArrayList access$1(com.fox.exercise.VisitorMyActivity) -> b
    cn.ingenic.indroidsync.SportsApp access$2(com.fox.exercise.VisitorMyActivity) -> c
    int access$3(com.fox.exercise.VisitorMyActivity) -> d
    void access$4(com.fox.exercise.VisitorMyActivity,int) -> a
    boolean access$5(com.fox.exercise.VisitorMyActivity) -> e
    java.util.HashSet access$6(com.fox.exercise.VisitorMyActivity) -> f
    com.fox.exercise.VisitorMyActivity$GiftsHandler access$7(com.fox.exercise.VisitorMyActivity) -> g
    void access$8(com.fox.exercise.VisitorMyActivity,com.fox.exercise.VisitorMyAdapter) -> a
    android.widget.ListView access$9(com.fox.exercise.VisitorMyActivity) -> h
    android.app.Dialog access$10(com.fox.exercise.VisitorMyActivity) -> i
    com.fox.exercise.view.PullToRefreshListView access$11(com.fox.exercise.VisitorMyActivity) -> j
    void access$12(com.fox.exercise.VisitorMyActivity,boolean) -> a
    int access$13(com.fox.exercise.VisitorMyActivity) -> k
com.fox.exercise.VisitorMyActivity$1 -> com.fox.exercise.tz:
    com.fox.exercise.VisitorMyActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.VisitorMyActivity$2 -> com.fox.exercise.ua:
    com.fox.exercise.VisitorMyActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.VisitorMyActivity$GetGiftsThread -> com.fox.exercise.ub:
    int uid -> b
    com.fox.exercise.VisitorMyActivity this$0 -> a
    void run() -> run
com.fox.exercise.VisitorMyActivity$GiftsHandler -> com.fox.exercise.uc:
    com.fox.exercise.VisitorMyActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.VisitorMyAdapter -> com.fox.exercise.ud:
    java.util.ArrayList mList -> c
    android.content.Context mContext -> d
    android.view.LayoutInflater mInflater -> e
    int indexGL -> a
    int indexRZ -> b
    com.fox.exercise.ImageDownloader mDownloader -> f
    com.fox.exercise.ImageDownloader mIconDownloader -> g
    cn.ingenic.indroidsync.SportsApp mSportsApp -> h
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getIndexGL() -> a
    int getIndexRZ() -> b
    java.util.ArrayList access$0(com.fox.exercise.VisitorMyAdapter) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.VisitorMyAdapter) -> b
    android.content.Context access$2(com.fox.exercise.VisitorMyAdapter) -> c
com.fox.exercise.VisitorMyAdapter$1 -> com.fox.exercise.ue:
    com.fox.exercise.VisitorMyAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.WarnActivity -> com.fox.exercise.WarnActivity:
    android.widget.ImageView bgImg -> b
    android.widget.ImageView clickImg -> c
    android.app.KeyguardManager mKeyguardManager -> a
    android.app.KeyguardManager$KeyguardLock mKeyguardLock -> d
    android.os.PowerManager mPowerManager -> e
    android.os.PowerManager$WakeLock mWakeLock -> f
    android.os.Vibrator vibrator -> g
    android.media.MediaPlayer mMediaPlayer -> h
    android.net.Uri alert -> i
    com.fox.exercise.WarnActivity mContext -> j
    com.fox.exercise.api.WatchService wService -> k
    android.content.ServiceConnection wConnection -> l
    void onCreate(android.os.Bundle) -> onCreate
    void startWarn() -> b
    void startAudioAndVibrator() -> c
    void vibrator(long[],boolean) -> a
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void stop() -> d
    void onFinish() -> a
    void access$0(com.fox.exercise.WarnActivity,com.fox.exercise.api.WatchService) -> a
    void access$1(com.fox.exercise.WarnActivity) -> a
    android.widget.ImageView access$2(com.fox.exercise.WarnActivity) -> b
    void access$3(com.fox.exercise.WarnActivity,android.os.Vibrator) -> a
    android.os.Vibrator access$4(com.fox.exercise.WarnActivity) -> c
com.fox.exercise.WarnActivity$1 -> com.fox.exercise.uf:
    com.fox.exercise.WarnActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fox.exercise.WarnActivity$MyTouchLinster -> com.fox.exercise.ug:
    com.fox.exercise.WarnActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.WholeFragment -> com.fox.exercise.uh:
    com.fox.exercise.view.PullToRefreshGridView wholePulltoListView -> a
    android.widget.GridView wholelListView -> b
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> c
    cn.ingenic.indroidsync.SportsApp sportsApp -> d
    com.fox.exercise.WholeGridViewAdapter wholeGridViewAdapter -> e
    com.fox.exercise.SportExceptionHandler mExceptionHandler -> f
    android.app.Dialog mProgressDialog -> g
    int times -> h
    java.util.List allUserRanks -> i
    android.widget.TextView tv_refresh -> j
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initData() -> a
    void onStart() -> onStart
    void onResume() -> onResume
    void initProgressDialog() -> b
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    int access$0(com.fox.exercise.WholeFragment) -> a
    void access$1(com.fox.exercise.WholeFragment,int) -> a
    com.fox.exercise.SportExceptionHandler access$2(com.fox.exercise.WholeFragment) -> b
    android.widget.GridView access$3(com.fox.exercise.WholeFragment) -> c
    com.fox.exercise.view.PullToRefreshGridView access$4(com.fox.exercise.WholeFragment) -> d
    android.widget.TextView access$5(com.fox.exercise.WholeFragment) -> e
    java.util.List access$6(com.fox.exercise.WholeFragment) -> f
    com.fox.exercise.WholeGridViewAdapter access$7(com.fox.exercise.WholeFragment) -> g
    com.fox.exercise.bitmap.util.ImageResizer access$8(com.fox.exercise.WholeFragment) -> h
    void access$9(com.fox.exercise.WholeFragment,com.fox.exercise.WholeGridViewAdapter) -> a
    android.app.Dialog access$10(com.fox.exercise.WholeFragment) -> i
    cn.ingenic.indroidsync.SportsApp access$11(com.fox.exercise.WholeFragment) -> j
com.fox.exercise.WholeFragment$1 -> com.fox.exercise.ui:
    com.fox.exercise.WholeFragment this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.WholeFragment$WholeGetDataTask -> com.fox.exercise.uj:
    int pullToRefresh -> b
    com.fox.exercise.WholeFragment this$0 -> a
    java.util.List doInBackground(java.lang.String[]) -> a
    java.util.List loadData(java.lang.String) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.WholeGridViewAdapter -> com.fox.exercise.uk:
    android.content.Context context -> b
    java.util.List userRankList -> c
    android.view.LayoutInflater mInflater -> d
    android.content.res.Resources r -> a
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.fox.exercise.WholeGridViewAdapter) -> a
com.fox.exercise.WholeGridViewAdapter$1 -> com.fox.exercise.ul:
    com.fox.exercise.WholeGridViewAdapter this$0 -> a
    com.fox.exercise.api.entity.UserRank val$item -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.WholeGridViewAdapter$ViewHolder -> com.fox.exercise.um:
    android.widget.RelativeLayout alllayout -> a
    android.widget.ImageView rankTextView -> b
    com.fox.exercise.util.RoundedImage cover_user_photo -> c
    android.widget.TextView nameTextView -> d
    android.widget.TextView numTextView -> e
com.fox.exercise.XinlangWebViewActivity -> com.fox.exercise.XinlangWebViewActivity:
    android.webkit.WebView webView -> e
    android.content.Intent intent -> f
    com.fox.exercise.XinlangWebViewActivity webInstance -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.webkit.WebView access$0(com.fox.exercise.XinlangWebViewActivity) -> a
com.fox.exercise.XinlangWebViewActivity$1 -> com.fox.exercise.un:
    com.fox.exercise.XinlangWebViewActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.XinlangWebViewActivity$2 -> com.fox.exercise.uo:
    com.fox.exercise.XinlangWebViewActivity this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.fox.exercise.YunHuWebViewActivity -> com.fox.exercise.YunHuWebViewActivity:
    android.webkit.WebView webView -> u
    android.widget.LinearLayout lodingLayout -> v
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> w
    android.widget.RelativeLayout pay_rl -> x
    android.widget.TextView money_rule -> y
    android.widget.TextView pay_text -> z
    android.widget.ImageView backimg -> A
    int biaoshi -> k
    android.widget.Button pay_btn -> B
    int mymoney -> l
    com.fox.exercise.newversion.entity.WXxdback wb -> C
    com.fox.exercise.newversion.entity.WXxdback wbpay -> D
    com.fox.exercise.newversion.entity.WXPaylist list -> E
    com.fox.exercise.newversion.entity.WXPaylist Dlist -> F
    com.tencent.mm.sdk.openapi.IWXAPI msgApi -> m
    com.tencent.mm.sdk.modelpay.PayReq req -> n
    com.fox.exercise.newversion.entity.ShopPayDingDan sd -> o
    java.lang.String text -> G
    java.lang.String id -> H
    java.lang.String sjzf -> I
    java.lang.String name -> J
    java.lang.String dingdan -> K
    java.lang.String ip -> L
    java.lang.String type -> M
    java.lang.String entity -> N
    java.lang.String did -> O
    java.lang.String sessionid -> p
    java.lang.String Numid -> q
    java.lang.String wxurl -> P
    java.lang.String qiandaourl -> Q
    android.app.Dialog mLoadProgressDialog -> R
    int returnFlg -> S
    int create_time -> r
    int endtime -> s
    int web_id -> T
    android.os.Handler mHandler -> U
    java.lang.StringBuffer xml -> t
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPause() -> onPause
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void loadWebView() -> h
    void clearWebViewCache() -> f
    void deleteFile(java.io.File) -> a
    void getListData(int) -> b
    void GetData(int) -> c
    java.lang.String toXml(java.util.List) -> a
    java.lang.String genProductArgs() -> i
    void genPayReq() -> j
    void sendPayReq() -> k
    java.lang.String genNonceStr() -> l
    java.lang.String getLocalHostIp() -> g
    void waitShowDialog() -> m
    void access$0(com.fox.exercise.YunHuWebViewActivity) -> a
    com.fox.exercise.newversion.entity.WXPaylist access$1(com.fox.exercise.YunHuWebViewActivity) -> b
    android.widget.RelativeLayout access$2(com.fox.exercise.YunHuWebViewActivity) -> c
    android.widget.TextView access$3(com.fox.exercise.YunHuWebViewActivity) -> d
    android.widget.Button access$4(com.fox.exercise.YunHuWebViewActivity) -> e
    android.app.Dialog access$5(com.fox.exercise.YunHuWebViewActivity) -> f
    void access$6(com.fox.exercise.YunHuWebViewActivity,int) -> a
    android.webkit.WebView access$7(com.fox.exercise.YunHuWebViewActivity) -> g
    com.fox.exercise.SportsExceptionHandler access$8(com.fox.exercise.YunHuWebViewActivity) -> h
    java.lang.String access$9(com.fox.exercise.YunHuWebViewActivity) -> i
    void access$10(com.fox.exercise.YunHuWebViewActivity) -> j
    void access$11(com.fox.exercise.YunHuWebViewActivity,java.lang.String) -> a
    void access$12(com.fox.exercise.YunHuWebViewActivity,java.lang.String) -> b
    java.lang.String access$13(com.fox.exercise.YunHuWebViewActivity) -> k
    void access$14(com.fox.exercise.YunHuWebViewActivity,java.lang.String) -> c
    java.lang.String access$15(com.fox.exercise.YunHuWebViewActivity) -> l
    android.widget.LinearLayout access$16(com.fox.exercise.YunHuWebViewActivity) -> m
    void access$17(com.fox.exercise.YunHuWebViewActivity,com.fox.exercise.newversion.entity.WXPaylist) -> a
    android.os.Handler access$18(com.fox.exercise.YunHuWebViewActivity) -> n
    java.lang.String access$19(com.fox.exercise.YunHuWebViewActivity) -> o
    void access$20(com.fox.exercise.YunHuWebViewActivity,com.fox.exercise.newversion.entity.WXPaylist) -> b
    com.fox.exercise.newversion.entity.WXPaylist access$21(com.fox.exercise.YunHuWebViewActivity) -> p
    void access$22(com.fox.exercise.YunHuWebViewActivity,java.lang.String) -> d
    void access$23(com.fox.exercise.YunHuWebViewActivity,java.lang.String) -> e
    java.lang.String access$24(com.fox.exercise.YunHuWebViewActivity) -> q
    java.lang.String access$25(com.fox.exercise.YunHuWebViewActivity) -> r
    java.lang.String access$26(com.fox.exercise.YunHuWebViewActivity) -> s
    java.lang.String access$27(com.fox.exercise.YunHuWebViewActivity) -> t
    java.lang.String access$28(com.fox.exercise.YunHuWebViewActivity) -> u
    java.lang.String access$29(com.fox.exercise.YunHuWebViewActivity) -> v
    void access$30(com.fox.exercise.YunHuWebViewActivity,com.fox.exercise.newversion.entity.WXxdback) -> a
    java.lang.String access$31(com.fox.exercise.YunHuWebViewActivity) -> w
    void access$32(com.fox.exercise.YunHuWebViewActivity,java.lang.String) -> f
    java.lang.String access$33(com.fox.exercise.YunHuWebViewActivity) -> x
    void access$34(com.fox.exercise.YunHuWebViewActivity,com.fox.exercise.newversion.entity.WXxdback) -> b
com.fox.exercise.YunHuWebViewActivity$1 -> com.fox.exercise.up:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.YunHuWebViewActivity$2 -> com.fox.exercise.uq:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.fox.exercise.YunHuWebViewActivity$3 -> com.fox.exercise.ur:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.fox.exercise.YunHuWebViewActivity$4 -> com.fox.exercise.us:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void run() -> run
com.fox.exercise.YunHuWebViewActivity$5 -> com.fox.exercise.ut:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void run() -> run
com.fox.exercise.YunHuWebViewActivity$6 -> com.fox.exercise.uu:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void run() -> run
com.fox.exercise.YunHuWebViewActivity$7 -> com.fox.exercise.uv:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void run() -> run
com.fox.exercise.YunHuWebViewActivity$GetUserNameThread -> com.fox.exercise.uw:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void run() -> run
com.fox.exercise.YunHuWebViewActivity$Payclicklister -> com.fox.exercise.ux:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.YunHuWebViewActivity$RightClickLiser -> com.fox.exercise.uy:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.YunHuWebViewActivity$TwoPayclicklister -> com.fox.exercise.uz:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.YunHuWebViewActivity$clickListener -> com.fox.exercise.va:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.YunHuWebViewActivity$imgBackclicklister -> com.fox.exercise.vb:
    com.fox.exercise.YunHuWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.activityinfo2 -> com.fox.exercise.vc:
    java.lang.String img_head -> a
    int uid -> b
    int sex -> c
    java.lang.String name -> d
    int inputtime -> e
    java.lang.String comefrom -> f
    java.lang.String content -> g
    int width -> h
    int height -> i
    java.util.List list -> j
    void setSex(int) -> a
    void setUid(int) -> b
    void setWidth(int) -> c
    void setHeight(int) -> d
    void setContent(java.lang.String) -> a
    void setImg_head(java.lang.String) -> b
    void setName(java.lang.String) -> c
    void setInputtime(int) -> e
    void setComefrom(java.lang.String) -> d
    void setList(java.util.List) -> a
com.fox.exercise.api.AddCoinsThread -> com.fox.exercise.api.a:
    int coins -> a
    android.os.Handler handler -> b
    int actionStyle -> c
    int sportsType -> d
    void run() -> run
com.fox.exercise.api.Api -> com.fox.exercise.api.b:
    java.lang.String end -> a
    java.lang.String twoHyphens -> b
    java.lang.String boundary -> c
    com.fox.exercise.api.ApiMessage sendPhoneMessage(java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    com.fox.exercise.api.ApiMessage login(java.lang.String,java.lang.String,int) -> a
    com.fox.exercise.api.ApiMessage getImgDetail(java.lang.String,int) -> a
    com.fox.exercise.api.ApiMessage getUserByName(int,java.lang.String,int) -> a
    com.fox.exercise.api.ApiMessage getFriendByName(int,java.lang.String,int) -> b
    com.fox.exercise.api.ApiMessage getFriendByNameNew(int,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage inviteSport(java.lang.String,int,int) -> a
    com.fox.exercise.api.ApiMessage refreshRank(java.lang.String) -> a
    com.fox.exercise.api.ApiMessage modifymsg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage follow(java.lang.String,int,int,int) -> a
    com.fox.exercise.api.ApiMessage coingoldChange(java.lang.String,int,int,int,int,int,int) -> a
    com.fox.exercise.api.ApiMessage uploadLocal(java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage getNearby(int,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage getNearbyBysex(int,java.lang.String,int) -> c
    com.fox.exercise.api.ApiMessage getFriendList(int,java.lang.String) -> b
    com.fox.exercise.api.ApiMessage userFollow(java.lang.String,int,int) -> b
    com.fox.exercise.api.ApiMessage userFan(java.lang.String,int,int) -> c
    com.fox.exercise.api.ApiMessage combineWeibo_New(java.lang.String,java.lang.String,java.lang.String,int) -> a
    com.fox.exercise.api.ApiMessage sendprimsg(java.lang.String,int,java.lang.String,java.lang.String,int) -> a
    com.fox.exercise.api.ApiMessage getPrimsgAll(java.lang.String,int) -> b
    com.fox.exercise.api.ApiMessage getPrimsgOne(java.lang.String,int,int) -> d
    com.fox.exercise.api.ApiMessage getSysmsg(java.lang.String,int) -> c
    com.fox.exercise.api.ApiMessage activities(java.lang.String,int) -> d
    com.fox.exercise.api.ApiMessage getExamine() -> a
    com.fox.exercise.api.ApiMessage getHelp() -> b
    com.fox.exercise.api.ApiMessage seeUserSimple(java.lang.String,int) -> e
    com.fox.exercise.api.ApiMessage uploadSportsType(java.lang.String,int,int,int,int,int) -> a
    com.fox.exercise.api.ApiMessage sportsRankNew(int,int,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage sportsActs(java.lang.String,int) -> f
    com.fox.exercise.api.ApiMessage uploadSportTask(int,java.lang.String,int,int,int,java.lang.String,int,double,double,double,double,java.lang.String,int,int,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage updateSportTask(int,int,java.lang.String,int,int,java.lang.String,int,double,double,double,double,java.lang.String,int,int) -> a
    com.fox.exercise.api.ApiMessage uploadSportTaskMedia(java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int) -> a
    com.fox.exercise.api.ApiMessage getSportsVisitor(java.lang.String,int) -> g
    com.fox.exercise.api.ApiMessage visitorSports(java.lang.String,int) -> h
    com.fox.exercise.api.ApiMessage getSportsTaskByDate(java.lang.String,java.lang.String,int) -> b
    com.fox.exercise.api.ApiMessage getSportsTaskAll(java.lang.String,int,int) -> e
    com.fox.exercise.api.ApiMessage getSportsTaskById(java.lang.String,int,int) -> f
    com.fox.exercise.api.ApiMessage sportsUploadMsg(java.lang.String,int) -> i
    com.fox.exercise.api.ApiMessage getMediaListByTaskid(java.lang.String,int) -> j
    com.fox.exercise.api.ApiMessage getSportsWeatherInfo(java.lang.String) -> b
    com.fox.exercise.api.ApiMessage deleteSportsTaskById(java.lang.String,int,int) -> g
    com.fox.exercise.api.ApiMessage getInviteSports(java.lang.String,int) -> k
    com.fox.exercise.api.ApiMessage deleteSportMediaById(java.lang.String,int,int) -> h
    com.fox.exercise.api.ApiMessage actionPost(java.lang.String,int,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage activityPost(java.lang.String,int,int,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage getApplyList(java.lang.String,int,int) -> i
    com.fox.exercise.api.ApiMessage getActionRankList(java.lang.String,int,int) -> j
    com.fox.exercise.api.ApiMessage getNewCommentCount(java.lang.String,int) -> l
    com.fox.exercise.api.ApiMessage getNewCommentLists(java.lang.String,int) -> m
    com.fox.exercise.api.ApiMessage getNewActionList(java.lang.String,java.lang.String,int) -> c
    com.fox.exercise.api.ApiMessage getOnlineActionList(java.lang.String) -> c
    com.fox.exercise.api.ApiMessage getFindMore(java.lang.String,java.lang.String,java.lang.String) -> b
    com.fox.exercise.api.ApiMessage getFindSingleMore(java.lang.String,java.lang.String,java.lang.String) -> c
    com.fox.exercise.api.ApiMessage getFindList(java.lang.String,int,java.lang.String,boolean,int) -> a
    com.fox.exercise.api.ApiMessage getFindList(java.lang.String) -> d
    com.fox.exercise.api.ApiMessage getPersonalFindList(java.lang.String,int,java.lang.String) -> b
    com.fox.exercise.api.ApiMessage addFind(java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage delFind(java.lang.String,java.lang.String) -> b
    com.fox.exercise.api.ApiMessage TopFind(java.lang.String,java.lang.String,java.lang.String) -> d
    com.fox.exercise.api.ApiMessage likeFind(java.lang.String,java.lang.String) -> c
    com.fox.exercise.api.ApiMessage DelTopFind(java.lang.String,java.lang.String) -> d
    com.fox.exercise.api.ApiMessage addComment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage addSysComment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    com.fox.exercise.api.ApiMessage updateFindBg(java.lang.String,java.lang.String) -> e
    com.fox.exercise.api.ApiMessage updatePwNew(java.lang.String,java.lang.String,java.lang.String) -> e
    com.fox.exercise.api.ApiMessage adShow() -> c
    com.fox.exercise.api.ApiMessage delComment(java.lang.String,java.lang.String) -> f
    com.fox.exercise.api.ApiMessage qqHealthTask(int,double,int,java.lang.String[]) -> a
    void createWriteBytes(java.io.DataOutputStream,java.lang.String,java.lang.String) -> a
    void createChineseWriteBytes(java.io.DataOutputStream,java.lang.String,java.lang.String) -> b
    java.net.HttpURLConnection initHttpUrlConnection(java.lang.String) -> j
    com.fox.exercise.api.ApiMessage getSportsRecordInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage openequipment(java.lang.String,java.lang.String) -> g
    com.fox.exercise.api.ApiMessage getLikeLists(java.lang.String,int,int) -> k
    com.fox.exercise.api.ApiMessage getCircleFindListsContent(java.lang.String,int,int,int,int) -> a
    com.fox.exercise.api.ApiMessage uploadTepe(java.lang.String,int) -> n
    com.fox.exercise.api.ApiMessage uploadSleepData(java.lang.String,com.fox.exercise.newversion.entity.SleepEffect,boolean) -> a
    com.fox.exercise.api.ApiMessage getSleepDate(java.lang.String,int,boolean) -> a
    com.fox.exercise.api.ApiMessage deleteXinlv(java.lang.String,java.lang.String) -> h
    com.fox.exercise.api.ApiMessage deleteXinlv(java.lang.String) -> e
    com.fox.exercise.api.ApiMessage panDianGetImage(java.lang.String) -> f
    com.fox.exercise.api.ApiMessage healthdatacount(java.lang.String,int,java.lang.String,int) -> a
    com.fox.exercise.api.ApiMessage addUserLoginTime(java.lang.String) -> g
    com.fox.exercise.api.ApiMessage getTrainlist(java.lang.String) -> h
    com.fox.exercise.api.ApiMessage getTraininfo(java.lang.String,int) -> o
    com.fox.exercise.api.ApiMessage getTrainActionInfo(java.lang.String,int) -> p
    com.fox.exercise.api.ApiMessage getTrainTaskList(java.lang.String,int) -> q
    com.fox.exercise.api.ApiMessage getTotalTrainTask(java.lang.String) -> i
    com.fox.exercise.api.ApiMessage addTrainRecord(java.lang.String,int,int,double,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage GetCurrentDayBuShu(java.lang.String,java.lang.String) -> i
    com.fox.exercise.api.ApiMessage GetAllDayBuShu(java.lang.String,int) -> r
    com.fox.exercise.api.ApiMessage saveBuShuTongJiToNetWork(java.lang.String,int,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage GetShareData(int) -> a
    com.fox.exercise.api.ApiMessage getExternalActive(java.lang.String,int,java.lang.String) -> c
    com.fox.exercise.api.ApiMessage getActInfo(java.lang.String,java.lang.String) -> j
    com.fox.exercise.api.ApiMessage getActInfo(java.lang.String,java.lang.String,int,int) -> a
    com.fox.exercise.api.ApiMessage getWXxiadanlist(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage getPaysing(java.lang.String,int) -> s
    com.fox.exercise.api.ApiMessage getYePao(java.lang.String,int,int) -> l
    com.fox.exercise.api.ApiMessage getGoodsInfo(java.lang.String,int) -> t
    com.fox.exercise.api.ApiMessage getDindanId(java.lang.String,java.lang.String,int) -> d
    com.fox.exercise.api.ApiMessage getServertime() -> d
    com.fox.exercise.api.ApiMessage getShareIcon(int,int) -> a
    com.fox.exercise.api.ApiMessage getTitle(java.lang.String,java.lang.String) -> k
com.fox.exercise.api.ApiBack -> com.fox.exercise.api.c:
    int flag -> a
    java.lang.String msg -> b
    int first -> c
    int reg -> d
    int getReg() -> a
    void setReg(int) -> a
    int getFlag() -> b
    void setFlag(int) -> b
    java.lang.String getMsg() -> c
    void setMsg(java.lang.String) -> a
    int getFirst() -> d
    void setFirst(int) -> c
com.fox.exercise.api.ApiConstant -> com.fox.exercise.api.d:
    boolean isservice -> a
com.fox.exercise.api.ApiJsonParser -> com.fox.exercise.api.e:
    com.fox.exercise.api.ApiBack registerPhone(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    com.fox.exercise.api.ApiBack registerPhone(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    com.fox.exercise.api.ApiBack register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> b
    com.fox.exercise.api.ApiBack sendPhoneMessage(java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiBack login(java.lang.String,java.lang.String,int) -> a
    com.fox.exercise.api.entity.ImageDetail getImgDetail(java.lang.String,int) -> a
    com.fox.exercise.api.entity.UserDetail refreshRank(java.lang.String) -> a
    com.fox.exercise.api.ApiBack modifymsg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiBack follow(java.lang.String,int,int,int) -> a
    com.fox.exercise.api.ApiBack coingoldChange(java.lang.String,int,int,int,int,int,int) -> a
    com.fox.exercise.api.ApiBack uploadLocal(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.List getNearby(int,java.lang.String) -> a
    java.util.List getNearbyBysex(int,java.lang.String,int) -> a
    java.util.List getFriendList(int,java.lang.String,android.content.Context) -> a
    java.util.List getNearbyName(int,java.lang.String,int) -> b
    java.util.List getFriendbyName(int,java.lang.String,int) -> c
    java.util.List getFriendbyNameNew(int,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiBack inviteSport(java.lang.String,int,int) -> a
    java.util.List userFollow(java.lang.String,int,int) -> b
    java.util.List userFan(java.lang.String,int,int) -> c
    com.fox.exercise.api.ApiBack combineWeibo_New(java.lang.String,java.lang.String,java.lang.String,int) -> a
    com.fox.exercise.api.ApiBack sendprimsg(java.lang.String,int,java.lang.String,java.lang.String,int) -> a
    java.util.List getPrimsgAll(java.lang.String,int) -> b
    java.util.List getPrimsgOne(java.lang.String,int,int) -> d
    java.util.List getSysmsg(java.lang.String,int) -> c
    com.fox.exercise.api.ApiBack activities(java.lang.String,int) -> d
    java.util.List getExamine() -> a
    java.util.List getHelp() -> b
    com.fox.exercise.api.entity.UserDetail seeUserSimple(java.lang.String,int) -> e
    com.fox.exercise.api.ApiBack uploadSportsType(java.lang.String,int,int,int,int,int) -> a
    java.util.List sportsRankNew(int,int,java.lang.String,android.content.Context) -> a
    java.util.List sportsActs(java.lang.String,int) -> f
    com.fox.exercise.api.ApiBack uploadSportTask(int,java.lang.String,int,int,int,java.lang.String,int,double,double,double,double,java.lang.String,int,int,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiBack updateSportTask(int,int,java.lang.String,int,int,java.lang.String,int,double,double,double,double,java.lang.String,int,int) -> a
    com.fox.exercise.api.ApiBack uploadSportTaskMedia(java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int) -> a
    java.util.List getSportsVisitor(java.lang.String,int) -> g
    com.fox.exercise.api.ApiBack visitorSports(java.lang.String,int) -> h
    java.util.List getSportsTaskByDate(java.lang.String,java.lang.String,int) -> b
    java.util.List getSportsTaskAll(java.lang.String,int,int) -> e
    com.fox.exercise.api.entity.SportTask getSportsTaskById(java.lang.String,int,int) -> f
    java.util.List sportsUploadMsg(java.lang.String,int) -> i
    java.util.List getMediaListByTaskid(java.lang.String,int) -> j
    com.fox.exercise.api.ApiBack deleteSportsTaskById(java.lang.String,int,int) -> g
    com.fox.exercise.api.ApiBack deleteSportMediaById(java.lang.String,int,int) -> h
    com.fox.exercise.api.entity.WeatherInfo getWeatherIconUrl(java.lang.String) -> b
    java.util.List getInviteSports(java.lang.String,int) -> k
    com.fox.exercise.api.entity.SportPM getSportsPM(java.lang.String) -> c
    com.fox.exercise.api.entity.ActionInfo getActionInfo(java.lang.String,int) -> l
    com.fox.exercise.api.entity.ActivityInfo getActivityDetailInfo(java.lang.String,int,int) -> i
    java.lang.String getPayInfo(java.lang.String,int) -> m
    java.util.List getApplyList(java.lang.String,int,int) -> j
    java.util.List getActionRankList(java.lang.String,int,int) -> k
    com.fox.exercise.api.ApiBack goApply(java.lang.String,int) -> n
    java.util.List getNewActionList(java.lang.String,java.lang.String,int) -> c
    java.util.List getOnlineActionList(java.lang.String) -> d
    com.fox.exercise.api.entity.NewCommentInfo getNewCommentCount(java.lang.String,int) -> o
    java.util.List getNewCommentLists(java.lang.String,int) -> p
    java.util.List getNewFindList(java.lang.String) -> e
    java.util.List getNewFindList(java.lang.String,int,java.lang.String,boolean,int) -> a
    java.util.List getFindListByUid(java.lang.String,int,java.lang.String,boolean,int) -> b
    java.util.List getFindGroupListByUid(java.lang.String,int,java.lang.String,boolean,int) -> c
    java.util.List getFindGroupListByUid(java.lang.String) -> f
    java.util.List getNewPersonalFindList(java.lang.String,int,java.lang.String) -> a
    java.util.List getFindPersonalListByUid(java.lang.String,int,java.lang.String) -> b
    com.fox.exercise.api.entity.FindMore getGetFindMore(java.lang.String,java.lang.String) -> b
    com.fox.exercise.newversion.entity.FindGroup getGetFindGroup(java.lang.String,java.lang.String) -> c
    com.fox.exercise.api.entity.FindMore getFindMoreByUid(java.lang.String,java.lang.String,java.lang.String) -> b
    com.fox.exercise.newversion.entity.FindGroup getFindSingleGroupByUid(java.lang.String,java.lang.String,java.lang.String) -> c
    com.fox.exercise.api.entity.AddFindItem addFind(java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiBack delFind(java.lang.String,java.lang.String) -> d
    com.fox.exercise.api.ApiBack topFind(java.lang.String,java.lang.String,java.lang.String) -> d
    com.fox.exercise.api.ApiBack deltopFind(java.lang.String,java.lang.String) -> e
    com.fox.exercise.api.ApiBack likeFind(java.lang.String,java.lang.String) -> f
    java.lang.String addComment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String addSysComment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    com.fox.exercise.api.ApiBack delComment(java.lang.String,java.lang.String) -> g
    com.fox.exercise.api.ApiBack updateFindBg(java.lang.String,java.lang.String) -> h
    com.fox.exercise.api.ApiBack updatePwNew(java.lang.String,java.lang.String,java.lang.String) -> e
    com.fox.exercise.api.ApiBack qqHealthTask(int,double,int,java.lang.String[]) -> a
    com.fox.exercise.api.entity.AdContent adShow() -> c
    int saveDataToServer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiBack openequipment(java.lang.String,java.lang.String) -> i
    java.util.ArrayList getSportsLikes(java.lang.String,int,int) -> l
    com.fox.exercise.newversion.entity.CircleFindDetailContent getCircleFindListsContent(java.lang.String,int,int,int,int) -> a
    com.fox.exercise.newversion.entity.PointsSay getCirclePointsSayContent(java.lang.String,int,int,int,int) -> b
    com.fox.exercise.api.ApiBack uploadSportTemp(java.lang.String,int) -> q
    com.fox.exercise.api.ApiBack uploadSleep(java.lang.String,com.fox.exercise.newversion.entity.SleepEffect,boolean) -> a
    java.util.List getSleepDate(java.lang.String,int,boolean) -> a
    com.fox.exercise.api.ApiBack deleteXinlv(java.lang.String,java.lang.String) -> j
    com.fox.exercise.api.ApiBack deleteXinlv(java.lang.String) -> g
    com.fox.exercise.api.ApiBack panDianGetImage(java.lang.String) -> h
    com.fox.exercise.api.ApiBack healthdatacount(java.lang.String,int,java.lang.String,int) -> a
    java.util.List getTrainlist(java.lang.String,android.content.Context) -> a
    com.fox.exercise.newversion.entity.TrainInfo getTraininfo(java.lang.String,int,android.content.Context) -> a
    com.fox.exercise.api.ApiMessage getTrainActionInfo(java.lang.String,int) -> r
    com.fox.exercise.api.ApiMessage getTrainTaskList(java.lang.String,int) -> s
    com.fox.exercise.api.ApiMessage getTotalTrainTask(java.lang.String) -> i
    com.fox.exercise.api.ApiMessage addTrainRecord(java.lang.String,int,int,double,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage GetCurrentDayBuShu(java.lang.String,java.lang.String) -> k
    com.fox.exercise.api.ApiMessage GetAllDayBuShu(java.lang.String,int) -> t
    com.fox.exercise.api.ApiMessage saveBuShuTongJiToNetWork(java.lang.String,int,java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage GetShareData(int) -> a
    com.fox.exercise.newversion.entity.ExternalActivi getExternalActive(java.lang.String,int,java.lang.String) -> c
    com.fox.exercise.newversion.entity.WXxdback gettongyiInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> a
    com.fox.exercise.newversion.entity.WXxdback getPayid(java.lang.String,int) -> u
    com.fox.exercise.newversion.entity.YePaoInfo getYePaoInfo(java.lang.String,int,int) -> m
    com.fox.exercise.newversion.entity.YeDindanInfo getDianDanInfo(java.lang.String,java.lang.String,int) -> d
    com.fox.exercise.newversion.entity.WXPaylist getGoodsinfo(java.lang.String,int) -> v
    com.fox.exercise.newversion.entity.WXPaylist getGoodspayinfo(java.lang.String,int,int) -> n
    int getservertime() -> d
    com.fox.exercise.newversion.entity.ShopPayDingDan getShopDingDanInfo(java.lang.String,java.lang.String,int) -> e
    java.util.List getExternalActives(java.lang.String,int,java.lang.String) -> d
    java.util.List getSquareInfo(java.lang.String,java.lang.String) -> l
    java.util.List getActListInfos(java.lang.String,java.lang.String,int,int) -> a
    java.lang.String getShareIcon(int,int) -> a
    com.fox.exercise.api.entity.ActListInfo getInfoTitle(java.lang.String,java.lang.String) -> m
com.fox.exercise.api.ApiMessage -> com.fox.exercise.api.f:
    boolean flag -> a
    java.lang.String msg -> b
    boolean isFlag() -> a
    void setFlag(boolean) -> a
    java.lang.String getMsg() -> b
    void setMsg(java.lang.String) -> a
com.fox.exercise.api.ApiNetException -> com.fox.exercise.api.g:
    java.lang.String msg -> a
    java.lang.String exceMsg() -> a
com.fox.exercise.api.ApiNetwork -> com.fox.exercise.api.h:
    com.fox.exercise.api.ApiMessage post(java.lang.String,java.lang.String) -> a
    com.fox.exercise.api.ApiMessage postByEntity(java.lang.String,org.apache.http.entity.StringEntity) -> a
    com.fox.exercise.api.ApiMessage get(java.lang.String) -> a
com.fox.exercise.api.ApiSessionOutException -> com.fox.exercise.api.i:
    java.lang.String msg -> a
com.fox.exercise.api.BootCompletedReceiver -> com.fox.exercise.api.BootCompletedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.api.MessageService -> com.fox.exercise.api.MessageService:
    java.util.concurrent.ScheduledExecutorService scheduledThreadPool -> a
    cn.ingenic.indroidsync.SportsApp mSportsApp -> b
    android.content.SharedPreferences spf -> c
    java.lang.Boolean isExitBoolean -> d
    android.content.SharedPreferences pSpf -> e
    android.os.Handler sHandler -> f
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.content.SharedPreferences access$0(com.fox.exercise.api.MessageService) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.api.MessageService) -> b
    void access$2(com.fox.exercise.api.MessageService,java.lang.Boolean) -> a
    java.lang.Boolean access$3(com.fox.exercise.api.MessageService) -> c
    android.os.Handler access$4(com.fox.exercise.api.MessageService) -> d
com.fox.exercise.api.MessageService$1 -> com.fox.exercise.api.j:
    com.fox.exercise.api.MessageService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.api.MessageService$CustomTask -> com.fox.exercise.api.k:
    com.fox.exercise.api.MessageService this$0 -> a
    void run() -> run
com.fox.exercise.api.QQHealthTask -> com.fox.exercise.api.l:
    int typeId -> a
    int sportGoal -> b
    double dis -> c
    android.content.Context mContext -> d
    java.lang.String startTime -> e
    com.fox.exercise.api.QQHealthTask$QQHealthResult qResult -> f
    com.fox.exercise.api.ApiBack doInBackground(java.lang.String[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.api.QQHealthTask$QQHealthResult -> com.fox.exercise.api.m:
    void qqResult() -> a
com.fox.exercise.api.ShowCoinsDialog -> com.fox.exercise.api.ShowCoinsDialog:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.fox.exercise.api.ShowCoinsDialog$1 -> com.fox.exercise.api.n:
    com.fox.exercise.api.ShowCoinsDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.api.Util -> com.fox.exercise.api.o:
    byte[] bmpToByteArray(android.graphics.Bitmap,boolean) -> a
com.fox.exercise.api.WatchService -> com.fox.exercise.api.WatchService:
    android.content.SharedPreferences spf -> a
    java.util.concurrent.ExecutorService cachedThreadExecutor -> f
    android.bluetooth.BluetoothAdapter mBluetoothAdapter -> b
    int mStepValue -> g
    java.lang.Boolean isExitBoolean -> h
    int uid -> i
    java.lang.String sessionId -> j
    java.lang.String strDate -> k
    java.lang.String strTime -> l
    java.lang.Boolean isFirst -> m
    android.os.Handler wtHandler -> c
    cn.ingenic.indroidsync.SportsApp mSportsApp -> n
    com.fox.exercise.api.WatchService$CustomModule cModule -> o
    int mState -> p
    cn.ingenic.indroidsync.DefaultSyncManager mgr -> q
    org.xml.sax.XMLReader reader -> r
    java.util.concurrent.ScheduledExecutorService scheduledThreadPool -> s
    android.telephony.PhoneStateListener listener -> d
    android.content.SharedPreferences pSpf -> t
    com.fox.exercise.api.WatchService$HomeKeyEventBroadCastReceiver backgrondReceiver -> u
    int coinsNum -> v
    android.os.IBinder mBinder -> w
    com.fox.exercise.api.WatchService$ICallback mCallback -> x
    com.fox.exercise.api.WatchService$SCallback sCallback -> y
    java.lang.String uname -> z
    android.os.Handler sHandler -> A
    com.fox.exercise.api.WatchService$SearchCallback searchCallback -> B
    boolean mConnect -> e
    com.fox.exercise.api.WatchService$SpecialCallback specialcallback -> C
    boolean isMe -> D
    void sendWeatherInfo() -> a
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void updateScheduleWithFixedDelay(long,long) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void registerSettingCallback(com.fox.exercise.api.WatchService$SCallback) -> a
    void sendUser() -> b
    java.lang.String getData() -> g
    void getPrimsg(int,java.lang.String) -> a
    void showDialog(android.content.Context) -> a
    void registerSearchCallback(com.fox.exercise.api.WatchService$SearchCallback) -> a
    void searchDevice(boolean) -> a
    void stopSearch() -> c
    void registerSpecialCallback(com.fox.exercise.api.WatchService$SpecialCallback) -> a
    void unregisterSpecialCallback() -> d
    void setMe(boolean) -> b
    void checkTodayTask(java.lang.String,java.lang.String) -> a
    void saveSportDB2(com.fox.exercise.pedometer.SportContionTaskDetail) -> a
    java.lang.String Time() -> e
    boolean isDelete(java.lang.String) -> a
    void appOnForeground() -> f
    java.util.concurrent.ExecutorService access$0(com.fox.exercise.api.WatchService) -> a
    com.fox.exercise.api.WatchService$CustomModule access$1(com.fox.exercise.api.WatchService) -> b
    cn.ingenic.indroidsync.SportsApp access$2(com.fox.exercise.api.WatchService) -> c
    void access$3(com.fox.exercise.api.WatchService,android.content.Context) -> a
    android.content.SharedPreferences access$4(com.fox.exercise.api.WatchService) -> d
    boolean access$5(com.fox.exercise.api.WatchService) -> e
    java.lang.String access$6(com.fox.exercise.api.WatchService) -> f
    int access$7(com.fox.exercise.api.WatchService) -> g
    void access$8(com.fox.exercise.api.WatchService,int) -> a
    void access$9(com.fox.exercise.api.WatchService,java.lang.Boolean) -> a
    java.lang.Boolean access$10(com.fox.exercise.api.WatchService) -> h
    android.os.Handler access$11(com.fox.exercise.api.WatchService) -> i
    java.lang.String access$12(com.fox.exercise.api.WatchService) -> j
    void access$13(com.fox.exercise.api.WatchService,java.lang.Boolean) -> b
    java.lang.Boolean access$14(com.fox.exercise.api.WatchService) -> k
    com.fox.exercise.api.WatchService$ICallback access$15(com.fox.exercise.api.WatchService) -> l
    com.fox.exercise.api.WatchService$SpecialCallback access$16(com.fox.exercise.api.WatchService) -> m
    void access$17(com.fox.exercise.api.WatchService,java.lang.String,java.lang.String) -> a
    int access$18(com.fox.exercise.api.WatchService) -> n
    java.lang.String access$19(com.fox.exercise.api.WatchService) -> o
    java.lang.String access$20(com.fox.exercise.api.WatchService) -> p
    void access$21(com.fox.exercise.api.WatchService,java.lang.String) -> a
    java.lang.String access$22(com.fox.exercise.api.WatchService) -> q
    void access$23(com.fox.exercise.api.WatchService,com.fox.exercise.pedometer.SportContionTaskDetail) -> a
com.fox.exercise.api.WatchService$1 -> com.fox.exercise.api.p:
    com.fox.exercise.api.WatchService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.api.WatchService access$0(com.fox.exercise.api.WatchService$1) -> a
com.fox.exercise.api.WatchService$1$1 -> com.fox.exercise.api.q:
    com.fox.exercise.api.WatchService$1 this$1 -> a
    void run() -> run
com.fox.exercise.api.WatchService$2 -> com.fox.exercise.api.r:
    com.fox.exercise.api.WatchService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.fox.exercise.api.WatchService$3 -> com.fox.exercise.api.s:
    com.fox.exercise.api.WatchService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.api.WatchService$4 -> com.fox.exercise.api.t:
    com.fox.exercise.api.WatchService this$0 -> a
    java.util.List val$saveToDBMsgList -> b
    void run() -> run
com.fox.exercise.api.WatchService$5 -> com.fox.exercise.api.u:
    com.fox.exercise.api.WatchService this$0 -> a
    android.app.Dialog val$dialog -> b
    android.content.Context val$context -> c
    void onClick(android.view.View) -> onClick
com.fox.exercise.api.WatchService$6 -> com.fox.exercise.api.v:
    com.fox.exercise.api.WatchService this$0 -> a
    void run() -> run
com.fox.exercise.api.WatchService$CustomModule -> com.fox.exercise.api.w:
    boolean isCreate -> b
    com.fox.exercise.api.WatchService this$0 -> a
    void onCreate() -> onCreate
    boolean isCreated() -> a
    void onConnectionStateChanged(boolean) -> onConnectionStateChanged
    void onRetrive(cn.ingenic.indroidsync.services.SyncData) -> onRetrive
    void readSpecial(java.lang.String) -> a
com.fox.exercise.api.WatchService$CustomTask -> com.fox.exercise.api.x:
    com.fox.exercise.api.WatchService this$0 -> a
    void run() -> run
    com.fox.exercise.api.WatchService access$0(com.fox.exercise.api.WatchService$CustomTask) -> a
com.fox.exercise.api.WatchService$CustomTask$1 -> com.fox.exercise.api.y:
    com.fox.exercise.api.WatchService$CustomTask this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.api.WatchService$GetGiftsThread -> com.fox.exercise.api.z:
    com.fox.exercise.api.WatchService this$0 -> a
    void run() -> run
com.fox.exercise.api.WatchService$HomeKeyEventBroadCastReceiver -> com.fox.exercise.api.aa:
    com.fox.exercise.api.WatchService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.api.WatchService$ICallback -> com.fox.exercise.api.ab:
    void stepsChanged(int) -> a
com.fox.exercise.api.WatchService$SCallback -> com.fox.exercise.api.ac:
com.fox.exercise.api.WatchService$SearchCallback -> com.fox.exercise.api.ad:
    void setSearch(boolean) -> a
com.fox.exercise.api.WatchService$SpecialCallback -> com.fox.exercise.api.ae:
    void timerValue(java.lang.String) -> a
    void typeValue(int,java.lang.String) -> a
    void stepValue(java.lang.String) -> b
    void disValue(java.lang.String) -> c
    void calValue(java.lang.String) -> d
    void heartValue(java.lang.String) -> e
com.fox.exercise.api.WatchService$WBinder -> com.fox.exercise.api.af:
    com.fox.exercise.api.WatchService this$0 -> a
    com.fox.exercise.api.WatchService getService() -> a
com.fox.exercise.api.entity.ActListInfo -> c.a:
    int id -> a
    java.lang.String title -> b
    java.lang.String thumb -> c
    java.lang.String description -> d
    java.lang.String start_time -> e
    java.lang.String end_time -> f
    java.lang.String inputtime -> g
    int listorder -> h
    java.lang.String url -> i
    java.lang.String content -> j
    java.lang.String thumbgengduo -> k
    java.lang.String thumblist -> l
    java.lang.String getThumbgengduo() -> a
    void setThumbgengduo(java.lang.String) -> a
    void setThumblist(java.lang.String) -> b
    int getId() -> b
    void setId(int) -> a
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> c
    java.lang.String getThumb() -> d
    void setThumb(java.lang.String) -> d
    java.lang.String getDescription() -> e
    void setDescription(java.lang.String) -> e
    void setStart_time(java.lang.String) -> f
    void setEnd_time(java.lang.String) -> g
    java.lang.String getInputtime() -> f
    void setInputtime(java.lang.String) -> h
    void setListorder(int) -> b
    void setUrl(java.lang.String) -> i
    void setContent(java.lang.String) -> j
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.ActionInfo -> c.b:
    int actionId -> a
    java.lang.String title -> b
    java.lang.String url -> c
    java.lang.String start_time -> d
    java.lang.String end_time -> e
    java.lang.String content -> f
    java.lang.String activity_time -> g
    java.lang.String getActivity_time() -> a
    java.lang.String getTitle() -> b
    java.lang.String getUrl() -> c
    java.lang.String getStart_time() -> d
    java.lang.String getEnd_time() -> e
    java.lang.String getContent() -> f
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.ActionInfos -> c.c:
    int id -> a
    java.lang.String thumb -> b
    java.lang.String title -> c
    java.lang.String description -> d
    java.lang.String start_time -> e
    java.lang.String end_time -> f
    java.lang.String inputtime -> g
    int listorder -> h
    java.lang.String content -> i
    java.lang.String url -> j
    int web_id -> k
    int like_num -> l
    int getLike_num() -> a
    void setLike_num(int) -> a
    java.lang.String getThumb() -> b
    void setThumb(java.lang.String) -> a
    void setUrl(java.lang.String) -> b
    int getId() -> c
    void setId(int) -> b
    void setTitle(java.lang.String) -> c
    java.lang.String getDescription() -> d
    void setDescription(java.lang.String) -> d
    void setStart_time(java.lang.String) -> e
    void setEnd_time(java.lang.String) -> f
    java.lang.String getInputtime() -> e
    void setInputtime(java.lang.String) -> g
    void setListorder(int) -> c
    void setContent(java.lang.String) -> h
    int getWeb_id() -> f
    void setWeb_id(int) -> d
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.ActionList -> c.d:
    int actionId -> a
    java.lang.String title -> b
    java.lang.String url -> c
    java.lang.String actionTime -> d
    java.lang.String actionUrl -> e
    java.lang.String thuurl -> f
    java.lang.String getThuurl() -> a
    java.lang.String getActionUrl() -> b
    int getActionId() -> c
    java.lang.String getActionTime() -> d
    java.lang.String getTitle() -> e
    java.lang.String getUrl() -> f
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.ActionRankList -> c.e:
    int userId -> a
    java.lang.String userName -> b
    java.lang.String userIcon -> c
    java.lang.String calories -> d
    java.lang.String sports_time -> e
    java.lang.String getUserName() -> a
    java.lang.String getUserIcon() -> b
    java.lang.String getCalories() -> c
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.ActivityInfo -> c.f:
    int actionId -> a
    java.lang.String title -> b
    java.lang.String biaoti_img -> c
    java.lang.String jiangli_img -> d
    java.lang.String content -> e
    java.lang.String canjia_type -> f
    java.lang.String act_explain -> g
    java.lang.String activity_time -> h
    int isshow -> i
    java.lang.String activity_URl -> j
    long start_time -> l
    long end_time -> m
    java.util.List list_catInfo -> k
    void setStart_time(long) -> a
    long getEnd_time() -> a
    void setEnd_time(long) -> b
    java.lang.String getActivity_URl() -> b
    int getIsshow() -> c
    java.util.List getList_catInfo() -> d
    void setList_catInfo(java.util.List) -> a
    int getActionId() -> e
    java.lang.String getTitle() -> f
    java.lang.String getBiaoti_img() -> g
    java.lang.String getJiangli_img() -> h
    java.lang.String getContent() -> i
    java.lang.String getCanjia_type() -> j
    java.lang.String getAct_explain() -> k
    java.lang.String getActivity_time() -> l
com.fox.exercise.api.entity.AdContent -> c.g:
    java.lang.String adimg -> a
    java.lang.String play_seconds -> b
    java.lang.String jumpurl -> c
    java.lang.String getAdimg() -> a
    void setAdimg(java.lang.String) -> a
    java.lang.String getPlay_seconds() -> b
    void setPlay_seconds(java.lang.String) -> b
    java.lang.String getJumpurl() -> c
    void setJumpurl(java.lang.String) -> c
com.fox.exercise.api.entity.AddFindItem -> c.h:
    java.lang.String findId -> a
    java.lang.String[] urls -> b
    int width -> c
    int height -> d
    java.lang.String[] bigurls -> e
    int flag -> f
com.fox.exercise.api.entity.Ads -> c.i:
    int id -> a
    java.lang.String title -> b
    java.lang.String imgUrl -> c
    java.lang.String url -> d
    int status -> e
    int uid -> f
    void setUrl(java.lang.String) -> a
    void setId(int) -> a
    void setTitle(java.lang.String) -> b
    void setImgUrl(java.lang.String) -> c
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.ApplyList -> c.j:
    int userId -> a
    java.lang.String userName -> b
    java.lang.String userIcon -> c
    java.lang.String getUserName() -> a
    java.lang.String getUserIcon() -> b
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.ExpressionItems -> c.k:
    int id -> a
    java.lang.String des -> b
    java.lang.Boolean isCanel -> c
    int getId() -> a
    void setId(int) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    java.lang.Boolean getIsCanel() -> c
    void setIsCanel(java.lang.Boolean) -> a
com.fox.exercise.api.entity.FindComment -> c.l:
    java.lang.String firstName -> a
    java.lang.String secondName -> b
    java.lang.String commentText -> c
    java.lang.String commentId -> d
    java.lang.String commentWav -> e
    java.lang.String wavDuration -> f
    java.lang.String getCommentId() -> a
    void setCommentId(java.lang.String) -> a
    java.lang.String getFirstName() -> b
    void setFirstName(java.lang.String) -> b
    java.lang.String getSecondName() -> c
    void setSecondName(java.lang.String) -> c
    java.lang.String getCommentText() -> d
    void setCommentText(java.lang.String) -> d
    java.lang.String getCommentWav() -> e
    void setCommentWav(java.lang.String) -> e
    java.lang.String getWavDuration() -> f
    void setWavDuration(java.lang.String) -> f
com.fox.exercise.api.entity.FindMore -> c.m:
    int otheruid -> a
    java.lang.String findId -> b
    java.lang.String otherimg -> c
    java.lang.String othername -> d
    java.lang.String detils -> e
    java.lang.String[] imgs -> f
    java.lang.String[] biggerImgs -> g
    java.lang.Long times -> h
    java.lang.String sex -> i
    int width -> j
    int height -> k
    java.util.ArrayList talkdetils -> l
    boolean good -> m
    int goodpeople -> n
    int cCount -> o
    java.util.ArrayList getTalkdetils() -> a
    void setTalkdetils(java.util.ArrayList) -> a
    int getOtheruid() -> b
    void setOtheruid(int) -> a
    boolean isGood() -> c
    void setGood(boolean) -> a
    int getGoodpeople() -> d
    void setGoodpeople(int) -> b
    java.lang.String getFindId() -> e
    void setFindId(java.lang.String) -> a
    java.lang.String getOtherimg() -> f
    void setOtherimg(java.lang.String) -> b
    java.lang.String getOthername() -> g
    void setOthername(java.lang.String) -> c
    java.lang.String getDetils() -> h
    void setDetils(java.lang.String) -> d
    java.lang.String[] getImgs() -> i
    void setImgs(java.lang.String[]) -> a
    java.lang.Long getTimes() -> j
    java.lang.String[] getBiggerImgs() -> k
    void setBiggerImgs(java.lang.String[]) -> b
    void setTimes(java.lang.Long) -> a
    java.lang.String getSex() -> l
    void setSex(java.lang.String) -> e
    int getCommentCount() -> m
    void setCommentCount(int) -> c
    int getWidth() -> n
    void setWidth(int) -> d
    int getHeight() -> o
    void setHeight(int) -> e
com.fox.exercise.api.entity.FindMore2 -> c.n:
    int type -> a
    java.lang.String picPath -> b
    java.lang.String findId -> c
    java.lang.String commentId -> d
    java.lang.String uId -> e
    java.lang.String content -> f
    java.lang.String wavAddress -> g
    java.lang.String wavTime -> h
    java.lang.String inputTime -> i
    java.lang.String name -> j
    java.lang.String userImg -> k
    java.lang.String time -> l
    int is_delete -> m
com.fox.exercise.api.entity.Help -> c.o:
    int id -> a
    java.lang.String title -> b
    java.lang.String msg -> c
    long addTime -> d
    void setId(int) -> a
    java.lang.String getTitle() -> a
    void setTitle(java.lang.String) -> a
    java.lang.String getMsg() -> b
    void setMsg(java.lang.String) -> b
    void setAddTime(long) -> a
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.ImageDetail -> c.p:
    int uid -> a
    int likes -> b
    java.lang.String uname -> c
    java.lang.String uimg -> d
    int pid -> e
    java.lang.String pimg -> f
    java.lang.String ptitle -> g
    long addTime -> h
    boolean liked -> i
    int totalRank -> j
    java.util.List labels -> k
    java.lang.String wav -> l
    int wavDurations -> m
    java.lang.String weiboName -> n
    java.lang.String sex -> o
    int authStatus -> p
    java.lang.String birthday -> q
    int gainCalories -> r
    double lat -> s
    double lng -> t
    void setBirthday(java.lang.String) -> a
    void setAuthStatus(int) -> a
    void setSex(java.lang.String) -> b
    void setWeiboName(java.lang.String) -> c
    void setWavDurations(int) -> b
    void setWav(java.lang.String) -> d
    void setUid(int) -> c
    int getLikes() -> a
    void setLikes(int) -> d
    void setUname(java.lang.String) -> e
    void setUimg(java.lang.String) -> f
    void setPid(int) -> e
    java.lang.String getPimg() -> b
    void setPimg(java.lang.String) -> g
    void setPtitle(java.lang.String) -> h
    void setAddTime(long) -> a
    void setLiked(boolean) -> a
    void setTotalRank(int) -> f
    void setLabels(java.util.List) -> a
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.InviteUser -> c.q:
    java.lang.String img -> a
    int uid -> b
    long addTime -> c
    java.lang.String name -> d
    int sex -> e
    java.lang.String getImg() -> a
    void setImg(java.lang.String) -> a
    int getUid() -> b
    void setUid(int) -> a
    long getAddTime() -> c
    void setAddTime(long) -> a
    void setName(java.lang.String) -> b
    int getSex() -> d
    void setSex(int) -> b
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.MsgCounts -> c.r:
    int fans -> a
    int sportVisitor -> b
    int likes -> c
    int gifts -> d
    int follows -> e
    int primsg -> f
    int suns -> g
    int sysmsgsports -> h
    int fUploads -> i
    int fFollows -> j
    int fGifts -> k
    int total -> l
    int sportComments -> m
    int invitesports -> n
    int getFans() -> a
    void setFans(int) -> a
    void setLikes(int) -> b
    void setGifts(int) -> c
    void setFollows(int) -> d
    int getPrimsg() -> b
    void setPrimsg(int) -> e
    void setSuns(int) -> f
    void setfUploads(int) -> g
    int getfFollows() -> c
    void setfFollows(int) -> h
    void setfGifts(int) -> i
    int getTotal() -> d
    void setTotal(int) -> j
    void setSportComments(int) -> k
    int getSportVisitor() -> e
    void setSportVisitor(int) -> l
    int getSysmsgsports() -> f
    void setSysmsgsports(int) -> m
    void setInvitesports(int) -> n
    int getInvitesports() -> g
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.NewCommentInfo -> c.s:
    int commentCount -> a
    java.lang.String headimg -> b
    void setCommentCount(int) -> a
    void setHeadimg(java.lang.String) -> a
com.fox.exercise.api.entity.PicsAndIds -> c.t:
    int id -> a
    java.lang.String imgUrl -> b
    int likes -> c
    com.fox.exercise.api.entity.ImageDetail imgDetail -> d
    void setImgDetail(com.fox.exercise.api.entity.ImageDetail) -> a
    void setId(int) -> a
    void setImgUrl(java.lang.String) -> a
    void setLikes(int) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fox.exercise.api.entity.PrivateMsgStatus -> c.u:
    com.fox.exercise.api.entity.UserPrimsgAll userPrimsgAll -> a
    java.lang.String msgStatus -> b
    com.fox.exercise.api.entity.UserPrimsgAll getUserPrimsgAll() -> a
    void setUserPrimsgAll(com.fox.exercise.api.entity.UserPrimsgAll) -> a
    java.lang.String getMsgStatus() -> b
    void setMsgStatus(java.lang.String) -> a
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.SportMediaFile -> c.v:
    int uid -> a
    int mediaId -> b
    int mediaTypeID -> c
    int durations -> d
    java.lang.String mediaFilePath -> e
    int width -> f
    int height -> g
    int mapType -> h
    java.lang.String mediaFileName -> i
    java.lang.String pointStr -> j
    int getMapType() -> a
    void setMapType(int) -> a
    int getWidth() -> b
    void setWidth(int) -> b
    int getHeight() -> c
    void setHeight(int) -> c
    int getUid() -> d
    void setUid(int) -> d
    int getMediaId() -> e
    void setMediaId(int) -> e
    int getMediaTypeID() -> f
    void setMediaTypeID(int) -> f
    int getDurations() -> g
    void setDurations(int) -> g
    java.lang.String getMediaFilePath() -> h
    void setMediaFilePath(java.lang.String) -> a
    java.lang.String getMediaFileName() -> i
    void setMediaFileName(java.lang.String) -> b
    java.lang.String getPointStr() -> j
    void setPointStr(java.lang.String) -> c
com.fox.exercise.api.entity.SportPM -> c.w:
    java.lang.String pm -> a
    java.lang.String pm2d5 -> b
    java.lang.String getPm() -> a
    void setPm(java.lang.String) -> a
    java.lang.String getPm2d5() -> b
    void setPm2d5(java.lang.String) -> b
com.fox.exercise.api.entity.SportTask -> c.x:
    int uid -> a
    int Sport_type_task -> b
    int sports_swim_type -> c
    int sport_device -> d
    java.lang.String start_time -> e
    int sport_time -> f
    double sport_distance -> g
    double sport_speed -> h
    double sport_calories -> i
    double sport_heart_rate -> j
    java.lang.String sport_lat_lng -> k
    int sport_isupload -> l
    int sport_taskid -> m
    int sport_step -> n
    int sport_map_type -> o
    java.lang.String sport_mark_code -> p
    java.lang.String getSport_mark_code() -> a
    void setSport_mark_code(java.lang.String) -> a
    int getSport_map_type() -> b
    void setSport_map_type(int) -> a
    int getSport_step() -> c
    void setSport_step(int) -> b
    int getSport_taskid() -> d
    int getSports_swim_type() -> e
    int getUid() -> f
    int getSport_type_task() -> g
    void setSport_type_task(int) -> c
    int getSport_device() -> h
    void setSport_device(int) -> d
    java.lang.String getStart_time() -> i
    void setStart_time(java.lang.String) -> b
    int getSport_time() -> j
    void setSport_time(int) -> e
    double getSport_distance() -> k
    void setSport_distance(double) -> a
    double getSport_speed() -> l
    void setSport_speed(double) -> b
    double getSport_calories() -> m
    void setSport_calories(double) -> c
    double getSport_heart_rate() -> n
    void setSport_heart_rate(double) -> d
    java.lang.String getSport_lat_lng() -> o
    void setSport_lat_lng(java.lang.String) -> c
    int getSport_isupload() -> p
com.fox.exercise.api.entity.SquareInfo -> c.y:
    int id -> a
    java.lang.String cat_name -> b
    int cat_order -> c
    int typeid -> d
    java.lang.String url -> e
    int actnum -> f
    java.util.ArrayList actinfoList -> g
    java.util.ArrayList getActinfoList() -> a
    void setActinfoList(java.util.ArrayList) -> a
    int getId() -> b
    void setId(int) -> a
    java.lang.String getCat_name() -> c
    void setCat_name(java.lang.String) -> a
    void setCat_order(int) -> b
    int getTypeid() -> d
    void setTypeid(int) -> c
    void setUrl(java.lang.String) -> b
    int getActnum() -> e
    void setActnum(int) -> d
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.SysMsg -> c.z:
    java.lang.String pic -> a
    java.lang.String name -> b
    java.lang.String content -> c
    long addTime -> d
    java.lang.String img -> e
    java.lang.String url -> f
    java.lang.String shareurl -> g
    java.lang.String getShareurl() -> a
    void setShareurl(java.lang.String) -> a
    java.lang.String getImg() -> b
    void setImg(java.lang.String) -> b
    java.lang.String getUrl() -> c
    void setUrl(java.lang.String) -> c
    java.lang.String getContent() -> d
    void setContent(java.lang.String) -> d
    long getAddTime() -> e
    void setAddTime(long) -> a
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.UserDetail -> c.aa:
    int uid -> a
    java.lang.String uname -> b
    java.lang.String uimg -> c
    java.util.List imgs -> d
    int counts -> e
    int totalRank -> f
    int totalLikes -> g
    java.lang.String sex -> h
    java.lang.String birthday -> i
    int height -> j
    int weight -> k
    int fanCounts -> l
    int followCounts -> m
    int giftCounts -> n
    java.lang.String phoneno -> o
    int followStatus -> p
    int coins -> q
    int golds -> r
    int fcount -> s
    int actmsgs -> t
    int charms -> u
    int upcharms -> v
    int wealths -> w
    int upwealths -> x
    int kind -> y
    int upkind -> z
    int charmsrank -> A
    int kindrank -> B
    int wealthsrank -> C
    boolean isOwner -> D
    int sportstatus -> E
    java.lang.String equtype -> F
    java.lang.String editdate -> G
    java.lang.String email -> H
    java.lang.String findimg -> I
    com.fox.exercise.api.entity.MsgCounts msgCounts -> J
    int authStatus -> K
    java.lang.String authPic -> L
    java.lang.String province -> M
    java.lang.String city -> N
    java.lang.String area -> O
    java.lang.String sportsdata -> P
    int time -> Q
    java.lang.String signature -> R
    double bmi -> S
    int count_num -> T
    double sprots_Calorie -> U
    int getCount_num() -> a
    void setCount_num(int) -> a
    double getSprots_Calorie() -> b
    void setSprots_Calorie(double) -> a
    int getActmsgs() -> c
    void setActmsgs(int) -> b
    int getFcount() -> d
    void setFcount(int) -> c
    void setEqutype(java.lang.String) -> a
    int getHeight() -> e
    void setHeight(int) -> d
    int getWeight() -> f
    void setWeight(int) -> e
    int getAuthStatus() -> g
    void setAuthStatus(int) -> f
    java.lang.String getAuthPic() -> h
    void setAuthPic(java.lang.String) -> b
    com.fox.exercise.api.entity.MsgCounts getMsgCounts() -> i
    void setMsgCounts(com.fox.exercise.api.entity.MsgCounts) -> a
    java.lang.String getEmail() -> j
    void setEmail(java.lang.String) -> c
    void setCharms(int) -> g
    void setUpcharms(int) -> h
    void setWealths(int) -> i
    void setUpwealths(int) -> j
    void setKind(int) -> k
    void setUpkind(int) -> l
    int getCharmsrank() -> k
    void setCharmsrank(int) -> m
    int getKindrank() -> l
    void setKindrank(int) -> n
    void setOwner(boolean) -> a
    int getCoins() -> m
    void setCoins(int) -> o
    int getGolds() -> n
    void setGolds(int) -> p
    int getFollowStatus() -> o
    void setFollowStatus(int) -> q
    java.lang.String getPhoneno() -> p
    void setPhoneno(java.lang.String) -> d
    int getFanCounts() -> q
    void setFanCounts(int) -> r
    int getFollowCounts() -> r
    void setFollowCounts(int) -> s
    int getGiftCounts() -> s
    void setGiftCounts(int) -> t
    java.lang.String getSex() -> t
    void setSex(java.lang.String) -> e
    java.lang.String getBirthday() -> u
    void setBirthday(java.lang.String) -> f
    int getUid() -> v
    void setUid(int) -> u
    java.lang.String getUname() -> w
    void setUname(java.lang.String) -> g
    java.lang.String getUimg() -> x
    void setUimg(java.lang.String) -> h
    int getCounts() -> y
    void setCounts(int) -> v
    int getTotalRank() -> z
    void setTotalRank(int) -> w
    int getTotalLikes() -> A
    void setTotalLikes(int) -> x
    java.lang.String getFindimg() -> B
    void setFindimg(java.lang.String) -> i
    java.lang.String toString() -> toString
    java.lang.String getProvince() -> C
    void setProvince(java.lang.String) -> j
    java.lang.String getCity() -> D
    void setCity(java.lang.String) -> k
    java.lang.String getArea() -> E
    void setArea(java.lang.String) -> l
    java.lang.String getSportsdata() -> F
    void setSportsdata(java.lang.String) -> m
    int getTime() -> G
    void setTime(int) -> y
    java.lang.String getSignature() -> H
    void setSignature(java.lang.String) -> n
    double getBmi() -> I
    void setBmi(double) -> b
com.fox.exercise.api.entity.UserFollowMsg -> c.ab:
    int id -> a
    java.lang.String name -> b
    java.lang.String birthday -> c
    java.lang.String img -> d
    long addTime -> e
    java.lang.String sex -> f
    java.lang.String giftPic -> g
    int oid -> h
    java.lang.String oimg -> i
    java.lang.String osex -> j
    int gainCalories -> k
    int type -> l
    int detailType -> m
    int taskid -> n
    java.lang.String pimg -> o
    int pid -> p
    int getType() -> a
    void setType(int) -> a
    int getDetailType() -> b
    void setDetailType(int) -> b
    int getTaskid() -> c
    void setTaskid(int) -> c
    void setGainCalories(int) -> d
    int getId() -> d
    void setId(int) -> e
    java.lang.String getName() -> e
    void setName(java.lang.String) -> a
    void setBirthday(java.lang.String) -> b
    java.lang.String getImg() -> f
    void setImg(java.lang.String) -> c
    long getAddTime() -> g
    void setAddTime(long) -> a
    java.lang.String getSex() -> h
    void setSex(java.lang.String) -> d
    void setPimg(java.lang.String) -> e
    void setPid(int) -> f
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.UserNearby -> c.ac:
    int id -> a
    java.lang.String name -> b
    java.lang.String img -> c
    int distance -> d
    long time -> e
    int followStatus -> f
    java.lang.String sex -> g
    java.lang.String birthday -> h
    double lat -> i
    double lng -> j
    void setBirthday(java.lang.String) -> a
    java.lang.String getSex() -> a
    void setSex(java.lang.String) -> b
    int getId() -> b
    void setId(int) -> a
    java.lang.String getName() -> c
    void setName(java.lang.String) -> c
    java.lang.String getImg() -> d
    void setImg(java.lang.String) -> d
    int getDistance() -> e
    void setDistance(int) -> b
    long getTime() -> f
    void setTime(long) -> a
    int getFollowStatus() -> g
    void setFollowStatus(int) -> c
    double getLat() -> h
    void setLat(double) -> a
    double getLng() -> i
    void setLng(double) -> b
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.UserPrimsgAll -> c.ad:
    java.lang.String sex -> a
    java.lang.String uimg -> b
    java.lang.String touimg -> c
    int uid -> d
    int touid -> e
    long addTime -> f
    int counts -> g
    java.lang.String name -> h
    java.lang.String birthday -> i
    java.lang.String getBirthday() -> a
    void setBirthday(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
    int getCounts() -> c
    void setCounts(int) -> a
    java.lang.String getSex() -> d
    void setSex(java.lang.String) -> c
    java.lang.String getUimg() -> e
    void setUimg(java.lang.String) -> d
    java.lang.String getTouimg() -> f
    void setTouimg(java.lang.String) -> e
    int getUid() -> g
    void setUid(int) -> b
    int getTouid() -> h
    void setTouid(int) -> c
    long getAddTime() -> i
    void setAddTime(long) -> a
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.UserPrimsgOne -> c.ae:
    int uid -> a
    int touid -> b
    java.lang.String commentText -> c
    java.lang.String commentWav -> d
    long addTime -> e
    int wavDuration -> f
    int ownerid -> g
    int getOwnerid() -> a
    void setOwnerid(int) -> a
    int getUid() -> b
    void setUid(int) -> b
    int getTouid() -> c
    void setTouid(int) -> c
    java.lang.String getCommentText() -> d
    void setCommentText(java.lang.String) -> a
    java.lang.String getCommentWav() -> e
    void setCommentWav(java.lang.String) -> b
    long getAddTime() -> f
    void setAddTime(long) -> a
    int getWavDuration() -> g
    void setWavDuration(int) -> d
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.UserRank -> c.af:
    int id -> a
    java.lang.String name -> b
    java.lang.String img -> c
    int rankNumber -> d
    int authStatus -> e
    int sex -> f
    void setAuthStatus(int) -> a
    int getId() -> a
    void setId(int) -> b
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    java.lang.String getImg() -> c
    void setImg(java.lang.String) -> b
    int getRankNumber() -> d
    void setRankNumber(int) -> c
    int getSex() -> e
    void setSex(int) -> d
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.UserSearch -> c.ag:
    int id -> a
    java.lang.String name -> b
    java.lang.String img -> c
    int totalRank -> d
    int followStatus -> e
    java.lang.String sex -> f
    java.lang.String birthday -> g
    long addTime -> h
    void setBirthday(java.lang.String) -> a
    void setAddTime(long) -> a
    int getFollowStatus() -> a
    void setFollowStatus(int) -> a
    java.lang.String getSex() -> b
    void setSex(java.lang.String) -> b
    int getId() -> c
    void setId(int) -> b
    java.lang.String getName() -> d
    void setName(java.lang.String) -> c
    java.lang.String getImg() -> e
    void setImg(java.lang.String) -> d
    void setTotalRank(int) -> c
    java.lang.String toString() -> toString
com.fox.exercise.api.entity.WeatherInfo -> c.ah:
    java.lang.String weather -> a
    java.lang.String temp_high -> b
    java.lang.String temp_low -> c
com.fox.exercise.bitmap.util.AsyncTask -> d.a:
    java.util.concurrent.BlockingQueue sWorkQueue -> a
    java.util.concurrent.ThreadFactory sThreadFactory -> b
    java.util.concurrent.ThreadPoolExecutor sExecutor -> c
    com.fox.exercise.bitmap.util.AsyncTask$InternalHandler sHandler -> d
    com.fox.exercise.bitmap.util.AsyncTask$WorkerRunnable mWorker -> e
    java.util.concurrent.FutureTask mFuture -> f
    com.fox.exercise.bitmap.util.AsyncTask$Status mStatus -> g
    int[] $SWITCH_TABLE$com$fox$exercise$bitmap$util$AsyncTask$Status -> h
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled() -> b
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    com.fox.exercise.bitmap.util.AsyncTask execute(java.lang.Object[]) -> c
    void finish(java.lang.Object) -> b
    void access$0(com.fox.exercise.bitmap.util.AsyncTask,java.lang.Object) -> a
    com.fox.exercise.bitmap.util.AsyncTask$InternalHandler access$1() -> d
    int[] $SWITCH_TABLE$com$fox$exercise$bitmap$util$AsyncTask$Status() -> e
com.fox.exercise.bitmap.util.AsyncTask$1 -> d.b:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.fox.exercise.bitmap.util.AsyncTask$2 -> d.c:
    com.fox.exercise.bitmap.util.AsyncTask this$0 -> a
    java.lang.Object call() -> call
com.fox.exercise.bitmap.util.AsyncTask$3 -> d.d:
    com.fox.exercise.bitmap.util.AsyncTask this$0 -> a
    void done() -> done
com.fox.exercise.bitmap.util.AsyncTask$AsyncTaskResult -> d.e:
    com.fox.exercise.bitmap.util.AsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.fox.exercise.bitmap.util.AsyncTask$InternalHandler -> d.f:
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.bitmap.util.AsyncTask$Status -> d.g:
    com.fox.exercise.bitmap.util.AsyncTask$Status PENDING -> a
    com.fox.exercise.bitmap.util.AsyncTask$Status RUNNING -> b
    com.fox.exercise.bitmap.util.AsyncTask$Status FINISHED -> c
    com.fox.exercise.bitmap.util.AsyncTask$Status[] ENUM$VALUES -> d
    com.fox.exercise.bitmap.util.AsyncTask$Status[] values() -> values
    com.fox.exercise.bitmap.util.AsyncTask$Status valueOf(java.lang.String) -> valueOf
com.fox.exercise.bitmap.util.AsyncTask$WorkerRunnable -> d.h:
    java.lang.Object[] mParams -> b
com.fox.exercise.bitmap.util.DiskLruCache -> d.i:
    java.io.File mCacheDir -> a
    int cacheSize -> b
    int cacheByteSize -> c
    int maxCacheItemSize -> d
    long maxCacheByteSize -> e
    android.graphics.Bitmap$CompressFormat mCompressFormat -> f
    int mCompressQuality -> g
    java.util.Map mLinkedHashMap -> h
    java.io.FilenameFilter cacheFileFilter -> i
    com.fox.exercise.bitmap.util.DiskLruCache openCache(android.content.Context,java.io.File,long) -> a
    void clearCache() -> a
    void clearCache(java.io.File) -> a
    java.io.File getDiskCacheDir(android.content.Context,java.lang.String) -> a
    java.lang.String createFilePath(java.io.File,java.lang.String) -> a
    java.lang.String urlToFileName(java.lang.String) -> a
    java.lang.String createFilePath(java.lang.String,boolean) -> a
    void setCompressParams(android.graphics.Bitmap$CompressFormat,int) -> a
com.fox.exercise.bitmap.util.DiskLruCache$1 -> d.j:
    boolean accept(java.io.File,java.lang.String) -> accept
com.fox.exercise.bitmap.util.ImageCache -> d.k:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    com.fox.exercise.bitmap.util.DiskLruCache mDiskCache -> b
    void init(android.content.Context,com.fox.exercise.bitmap.util.ImageCache$ImageCacheParams) -> a
    android.graphics.Bitmap$CompressFormat access$0() -> a
com.fox.exercise.bitmap.util.ImageCache$ImageCacheParams -> d.l:
    java.lang.String uniqueName -> a
    int memCacheSize -> b
    int diskCacheSize -> c
    android.graphics.Bitmap$CompressFormat compressFormat -> d
    int compressQuality -> e
    boolean memoryCacheEnabled -> f
    boolean diskCacheEnabled -> g
    boolean clearDiskCacheOnStart -> h
com.fox.exercise.bitmap.util.ImageFetcher -> d.m:
    java.lang.String cacheDirectory -> a
    void init(android.content.Context) -> a
    void checkConnection(android.content.Context) -> b
    android.graphics.Bitmap processBitmap(java.lang.String,boolean) -> a
    java.io.File downloadBitmap(android.content.Context,java.lang.String,boolean) -> a
com.fox.exercise.bitmap.util.ImageResizer -> d.n:
    int mImageWidth -> b
    int mImageHeight -> c
    java.lang.String cacheDir -> d
    void setImageSize(int,int) -> a
    android.graphics.Bitmap processBitmap(int,boolean) -> a
    android.graphics.Bitmap processBitmap(java.lang.String,boolean) -> a
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,int,int) -> a
    android.graphics.Bitmap decodeSampledBitmapFromFile(java.lang.String,int,int) -> a
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
    int calculateInSampleSizeByMemory(android.graphics.BitmapFactory$Options,java.lang.String) -> a
com.fox.exercise.bitmap.util.ImageWorker -> d.o:
    android.graphics.Bitmap mLoadingBitmap -> a
    boolean mFadeInBitmap -> b
    boolean mExitTasksEarly -> c
    com.fox.exercise.bitmap.util.ImageCache mImageCache -> d
    android.content.Context mContext -> e
    int type -> f
    void setType(int) -> a
    java.lang.String getFileType(java.lang.String) -> a
    boolean isImage(java.lang.String) -> b
    void loadImage(java.lang.String,android.widget.ImageView,android.widget.ProgressBar,android.os.Handler,boolean) -> a
    void setLoadingImage(int) -> b
    void setImageCache(com.fox.exercise.bitmap.util.ImageCache) -> a
    android.graphics.Bitmap processBitmap(java.lang.String,boolean) -> a
    boolean cancelPotentialWork(java.lang.String,android.widget.ImageView) -> a
    com.fox.exercise.bitmap.util.ImageWorker$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> b
    void setImageBitmap(android.widget.ImageView,android.graphics.Bitmap) -> a
    boolean access$0(com.fox.exercise.bitmap.util.ImageWorker) -> a
    void access$1(com.fox.exercise.bitmap.util.ImageWorker,android.widget.ImageView,android.graphics.Bitmap) -> a
    com.fox.exercise.bitmap.util.ImageWorker$BitmapWorkerTask access$2(android.widget.ImageView) -> a
com.fox.exercise.bitmap.util.ImageWorker$AsyncDrawable -> d.p:
    java.lang.ref.WeakReference bitmapWorkerTaskReference -> a
    com.fox.exercise.bitmap.util.ImageWorker$BitmapWorkerTask getBitmapWorkerTask() -> a
com.fox.exercise.bitmap.util.ImageWorker$BitmapWorkerTask -> d.q:
    java.lang.String url -> b
    android.widget.ProgressBar progressBar -> c
    java.lang.ref.WeakReference imageViewReference -> d
    android.os.Handler mHandler -> e
    boolean filterUrl -> f
    com.fox.exercise.bitmap.util.ImageWorker this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    android.widget.ImageView getAttachedImageView() -> f
    void onPostExecute(java.lang.Object) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    java.lang.String access$2(com.fox.exercise.bitmap.util.ImageWorker$BitmapWorkerTask) -> a
com.fox.exercise.bitmap.util.Utils -> d.r:
    void disableConnectionReuseIfNecessary() -> a
    java.io.File getExternalCacheDir(android.content.Context) -> a
    long getUsableSpace(java.io.File) -> a
    boolean hasHttpConnectionBug() -> b
    boolean hasExternalCacheDir() -> c
com.fox.exercise.bluetooth.DeviceListActivity -> com.fox.exercise.bluetooth.DeviceListActivity:
    java.lang.String EXTRA_DEVICE_ADDRESS -> a
    java.lang.String EXTRA_DEVICE_NAME -> b
    android.bluetooth.BluetoothAdapter mBtAdapter -> c
    android.widget.ArrayAdapter mPairedDevicesArrayAdapter -> d
    android.widget.ArrayAdapter mNewDevicesArrayAdapter -> e
    android.widget.AdapterView$OnItemClickListener mDeviceClickListener -> f
    android.content.BroadcastReceiver mReceiver -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void doDiscovery() -> a
    android.bluetooth.BluetoothAdapter access$0(com.fox.exercise.bluetooth.DeviceListActivity) -> a
    android.widget.ArrayAdapter access$1(com.fox.exercise.bluetooth.DeviceListActivity) -> b
    void access$2(com.fox.exercise.bluetooth.DeviceListActivity) -> c
com.fox.exercise.bluetooth.DeviceListActivity$1 -> com.fox.exercise.bluetooth.a:
    com.fox.exercise.bluetooth.DeviceListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.bluetooth.DeviceListActivity$2 -> com.fox.exercise.bluetooth.b:
    com.fox.exercise.bluetooth.DeviceListActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.bluetooth.DeviceListActivity$3 -> com.fox.exercise.bluetooth.c:
    com.fox.exercise.bluetooth.DeviceListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.dao.SQLiteTemplate -> e.a:
    android.database.sqlite.SQLiteOpenHelper sportsDatabasbOpenHelper -> a
    com.fox.exercise.api.entity.PrivateMsgStatus queryPrivateMsgByUidAndName(com.fox.exercise.dao.SQLiteTemplate$RowMapper,java.lang.String,int,java.lang.String) -> a
    java.util.List queryPrivateMsgAll(com.fox.exercise.dao.SQLiteTemplate$RowMapper,java.lang.String,int) -> a
    void deletePrivateMsgByUID(java.lang.String,int) -> a
    void deletePrivateMsg(java.lang.String,int,int) -> a
    java.util.List rawQueryForPrivateMSGList(com.fox.exercise.dao.SQLiteTemplate$RowMapper,java.lang.String,java.lang.String[]) -> a
    android.database.sqlite.SQLiteDatabase getDb(boolean) -> a
com.fox.exercise.dao.SQLiteTemplate$RowMapper -> e.b:
    java.lang.Object mapRow(android.database.Cursor,int) -> a
com.fox.exercise.dao.SportsDAO -> e.c:
    com.fox.exercise.dao.SQLiteTemplate sqLiteTemplate -> a
    com.fox.exercise.dao.SQLiteTemplate$RowMapper adsRowMapper -> b
    com.fox.exercise.dao.SQLiteTemplate$RowMapper privateMSGAllowMapper -> c
    com.fox.exercise.dao.SQLiteTemplate$RowMapper privateMSGRowMapper -> d
    int insertPrivateMsgAll(java.lang.String,java.util.List,java.lang.String) -> a
    int insertPrivateMsg(java.lang.String,com.fox.exercise.api.entity.UserPrimsgAll,java.lang.String) -> a
    com.fox.exercise.api.entity.PrivateMsgStatus queryPrivateMsgByUidAndName(java.lang.String,int,java.lang.String) -> a
    java.util.List queryPrivateMsgAll(java.lang.String,int) -> a
    void deletePrivateMsgAllByUID(java.lang.String,int) -> b
    void deletePrivateMsgByUID(java.lang.String,int,int) -> a
    java.util.List retrievePrivateMSG(java.lang.String,java.lang.String[]) -> a
    long savePrivateMsgInfo(com.fox.exercise.api.entity.UserPrimsgOne) -> a
    int savePrivateMsgInfo(java.util.List) -> a
    android.content.ContentValues privateMSGToContentValues(com.fox.exercise.api.entity.UserPrimsgOne) -> b
com.fox.exercise.dao.SportsDAO$1 -> e.d:
    com.fox.exercise.api.entity.Ads mapRow(android.database.Cursor,int) -> b
    java.lang.Object mapRow(android.database.Cursor,int) -> a
com.fox.exercise.dao.SportsDAO$2 -> e.e:
    com.fox.exercise.api.entity.PrivateMsgStatus mapRow(android.database.Cursor,int) -> b
    java.lang.Object mapRow(android.database.Cursor,int) -> a
com.fox.exercise.dao.SportsDAO$3 -> e.f:
    com.fox.exercise.api.entity.UserPrimsgOne mapRow(android.database.Cursor,int) -> b
    java.lang.Object mapRow(android.database.Cursor,int) -> a
com.fox.exercise.db.PrimsgDeleteDb -> f.a:
    android.database.sqlite.SQLiteDatabase db -> b
    com.fox.exercise.db.PrimsgDeleteDb mInstance -> c
    java.lang.String CREATE_TAB -> a
    com.fox.exercise.db.PrimsgDeleteDb getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void close() -> close
    void delete(java.lang.String) -> a
    void deleteAll() -> a
    void insert(android.content.ContentValues) -> a
    android.database.Cursor query() -> b
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.db.SportContentDB -> f.b:
    android.content.Context context -> d
    android.database.sqlite.SQLiteDatabase db -> e
    com.fox.exercise.db.SportContentDB mInstance -> f
    java.lang.String CREATE_TAB -> a
    java.lang.String CREATE_TAB_SLEEP -> b
    java.lang.String TAG -> g
    java.lang.String CREATE_TAB_XINLV -> c
    com.fox.exercise.db.SportContentDB getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    android.database.Cursor querySleep(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.List queryUidSleep(java.lang.String) -> a
    java.util.List queryUidTimeSleep(java.lang.String,java.lang.String) -> a
    com.fox.exercise.newversion.entity.FirstPageContent queryData() -> a
    int insert(android.content.ContentValues,java.lang.Boolean) -> a
    void update(android.content.ContentValues,int) -> a
    int insertSleep(java.lang.Boolean,com.fox.exercise.newversion.entity.SleepEffect) -> a
    java.util.List queryUidXinLv(java.lang.String) -> b
    int deleteSleep(java.lang.Boolean,com.fox.exercise.newversion.entity.SleepEffect) -> b
    int deleteAll(java.lang.Boolean,cn.ingenic.indroidsync.SportsApp) -> a
    int insertXinlv(java.lang.Boolean,com.fox.exercise.newversion.entity.SleepEffect) -> c
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.db.SportDatabase -> f.c:
    android.database.sqlite.SQLiteDatabase datebase -> h
    com.fox.exercise.db.SportDatabase mInstance -> i
    java.lang.String DB_NAME -> a
    java.lang.String TAB_NAME_ONE -> b
    java.lang.String TAB_NAME_TWO -> c
    java.lang.String TAB_NAME_THREE -> d
    java.lang.String CREATE_TAB_ONE -> e
    java.lang.String CREATE_TAB_TWO -> f
    java.lang.String CREATE_TAB_THREE -> g
    android.content.Context mContext -> j
    com.fox.exercise.db.SportDatabase getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void close() -> close
    void insertDateType(android.content.ContentValues) -> a
    void insertData(android.content.ContentValues) -> b
    void insertOther(android.content.ContentValues) -> c
    void updateTypeDate(android.content.ContentValues) -> d
    void updateTime(android.content.ContentValues) -> e
    void updateOther(android.content.ContentValues) -> f
    android.database.Cursor queryOne() -> a
    android.database.Cursor queryTwo() -> b
    android.database.Cursor queryThree() -> c
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.db.SportDb -> f.d:
    android.database.sqlite.SQLiteDatabase db -> b
    com.fox.exercise.db.SportDb mInstance -> c
    java.lang.String CREATE_TAB -> a
    com.fox.exercise.db.SportDb getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void close() -> close
    void insert(int,java.lang.String,int,android.content.ContentValues) -> a
    android.database.Cursor query(int,java.lang.String) -> a
    android.database.Cursor query(int,int,java.lang.String) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.db.SportSubTaskDB -> f.e:
    android.content.Context context -> b
    android.database.sqlite.SQLiteDatabase db -> c
    com.fox.exercise.db.SportSubTaskDB mInstance -> d
    java.lang.String CREATE_TAB -> a
    java.lang.String TAG -> e
    com.fox.exercise.db.SportSubTaskDB getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    android.database.Cursor query(int,java.lang.String) -> a
    android.database.Cursor newquery(int,java.lang.String,java.lang.String,java.lang.String) -> a
    int insert(android.content.ContentValues,java.lang.Boolean) -> a
    void update(android.content.ContentValues,java.lang.String,int) -> a
    void newUpdate(android.content.ContentValues,java.lang.String,java.lang.String,int) -> a
    int update(android.content.ContentValues,int,java.lang.String,java.lang.Boolean,java.lang.String) -> a
    void delete(int,java.lang.String) -> b
    boolean delete(int) -> a
    boolean deleteSportByStartTime(java.lang.String) -> a
    boolean deleteSportByMarkCode(java.lang.String) -> b
    java.util.ArrayList getTasksList(int,java.lang.String) -> c
    java.util.ArrayList getTasks(int,int) -> a
    com.fox.exercise.pedometer.SportContionTaskDetail getToadyHistorySports(int,java.lang.String) -> d
    com.fox.exercise.pedometer.SportContionTaskDetail getToadySportsByType(int,java.lang.String,int) -> a
    java.util.ArrayList getStartTimeByType(int,java.lang.String,int) -> b
    com.fox.exercise.pedometer.SportContionTaskDetail getTaskByTime(int,java.lang.String) -> e
    com.fox.exercise.api.entity.SportTask getTask(int,int) -> b
    com.fox.exercise.api.entity.SportTask getTaskByStartTime(int,java.lang.String) -> f
    com.fox.exercise.api.entity.SportTask getTaskByTimeAndCode(int,java.lang.String,java.lang.String) -> a
    void close() -> close
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void ChangePrivateMsgTable(android.database.sqlite.SQLiteDatabase) -> a
    java.lang.String getGeneratedSQL() -> a
    java.lang.String getTempTableSQL() -> b
    java.lang.String InsertStringTableSQL() -> c
    java.lang.String DropTempTableSQL() -> d
    java.util.ArrayList getAllTasks(int) -> b
    java.util.ArrayList getNewAllTasks(int) -> c
    java.util.ArrayList getTasksByDate(int,java.lang.String) -> g
    java.util.ArrayList getTasksByUnOrIngUpload(int) -> d
com.fox.exercise.db.SportsContent -> f.f:
com.fox.exercise.db.SportsContent$AdsTable -> f.g:
    java.lang.String getGeneratedSQL() -> a
com.fox.exercise.db.SportsContent$PhotoFramsTable -> f.h:
    java.lang.String getGeneratedSQL() -> a
com.fox.exercise.db.SportsContent$PrivateMessageAllTable -> f.i:
    java.lang.String getGeneratedSQL() -> a
com.fox.exercise.db.SportsContent$PrivateMsgTable -> f.j:
    java.lang.String getGeneratedSQL() -> a
    java.lang.String getTempTableSQL() -> b
    java.lang.String InsertStringTableSQL() -> c
    java.lang.String DropTempTableSQL() -> d
com.fox.exercise.db.SportsContent$RankTable -> f.k:
    java.lang.String getGeneratedSQLWeek() -> a
    java.lang.String getGeneratedSQLMonth() -> b
    java.lang.String getGeneratedSQLQuarter() -> c
    java.lang.String getGeneratedSQLTotal() -> d
com.fox.exercise.db.SportsDatabase -> f.l:
    com.fox.exercise.db.SportsDatabase bDatabaseInstance -> a
    com.fox.exercise.db.SportsDatabase$SportsDataHelper sportsDataHelper -> b
    com.fox.exercise.db.SportsDatabase getInstance(android.content.Context) -> a
    android.database.sqlite.SQLiteOpenHelper getSqLiteOpenHelper() -> a
    void ChangePrivateMsgTable(android.database.sqlite.SQLiteDatabase) -> c
    void createTables(android.database.sqlite.SQLiteDatabase) -> d
    void access$0(android.database.sqlite.SQLiteDatabase) -> a
    void access$1(android.database.sqlite.SQLiteDatabase) -> b
com.fox.exercise.db.SportsDatabase$SportsDataHelper -> f.m:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.http.Configuration -> g.a:
    java.util.Properties defaultProperty -> a
    boolean DALVIK -> b
    void init() -> a
    boolean loadProperties(java.util.Properties,java.lang.String) -> a
    boolean loadProperties(java.util.Properties,java.io.InputStream) -> a
    boolean getBoolean(java.lang.String) -> a
    java.lang.String getProperty(java.lang.String) -> b
    java.lang.String getProperty(java.lang.String,java.lang.String) -> a
    java.lang.String replace(java.lang.String) -> c
    boolean getDebug() -> b
com.fox.exercise.http.DebugTimer -> g.b:
    java.util.HashMap mTime -> a
    long mStartTime -> b
    long mLastTime -> c
    long mark(java.lang.String) -> a
    long between(java.lang.String,int) -> a
    long betweenStart(java.lang.String) -> b
    long betweenEnd(java.lang.String) -> c
    long get(java.lang.String,long) -> a
    java.lang.String __toString() -> a
    java.lang.String toString() -> toString
com.fox.exercise.http.FunctionStatic -> g.c:
    java.lang.String[] fun_name -> a
    java.lang.String[][] game_id -> b
    long onResume() -> a
    java.lang.String getGameId(android.content.Context) -> a
    java.lang.String getGameNameById(android.content.Context) -> b
    void onPause(android.content.Context,int,long) -> a
com.fox.exercise.http.HttpAuthException -> g.d:
com.fox.exercise.http.HttpClient -> g.e:
    boolean DEBUG -> a
    org.apache.http.impl.client.DefaultHttpClient mClient -> b
    boolean isAuthenticationEnabled -> c
    void enableDebug() -> a
    void prepareHttpClient() -> b
    com.fox.exercise.http.Response post(java.lang.String,java.util.ArrayList) -> a
    com.fox.exercise.http.Response httpRequest(java.lang.String,java.util.ArrayList,boolean,java.lang.String) -> a
    com.fox.exercise.http.Response httpRequest(java.lang.String,java.util.ArrayList,java.io.File,boolean,java.lang.String) -> a
    java.net.URI createURI(java.lang.String) -> a
    org.apache.http.client.methods.HttpUriRequest createMethod(java.lang.String,java.net.URI,java.io.File,java.util.ArrayList) -> a
    java.lang.String getCause(int) -> a
    void HandleResponseStatusCode(int,com.fox.exercise.http.Response) -> a
com.fox.exercise.http.HttpException -> g.f:
    int statusCode -> a
com.fox.exercise.http.HttpRefusedException -> g.g:
com.fox.exercise.http.HttpServerException -> g.h:
com.fox.exercise.http.HttpsUtil -> g.i:
    javax.net.ssl.TrustManager[] xtmArray -> a
    java.lang.String mCookie -> d
    int httpsResponseCode -> b
    javax.net.ssl.HostnameVerifier DO_NOT_VERIFY -> c
    void trustAllHosts() -> a
    java.lang.String HttpsPost(java.lang.String,java.lang.String) -> a
    void getCookie(java.net.HttpURLConnection) -> a
com.fox.exercise.http.HttpsUtil$1 -> g.j:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.fox.exercise.http.MytmArray -> g.k:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.fox.exercise.http.RefuseError -> g.l:
com.fox.exercise.http.Response -> g.m:
    org.apache.http.HttpResponse mResponse -> a
    boolean mStreamConsumed -> b
    java.io.InputStream asStream() -> a
    java.lang.String asString() -> b
    void setStreamConsumed(boolean) -> a
com.fox.exercise.http.ResponseException -> g.n:
com.fox.exercise.http.StatCounts -> g.o:
    int mreportintall -> a
    int mreportstartup -> b
    java.lang.String MD5KEY -> c
    void ReportStatisticInfo(android.content.Context,java.lang.String) -> a
    void ReportSocialShareInfo(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void ReportFunctionIdCount(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String MD5(java.lang.String) -> a
    java.lang.String getAppVersionName(android.content.Context) -> a
    boolean checkVersonUpdate(android.content.Context) -> b
    void transferApp(android.content.Context,java.lang.String) -> b
    void ReportBug(android.content.Context,java.lang.String) -> c
com.fox.exercise.http.StatCounts$1 -> g.p:
    java.lang.String val$uuid -> a
    java.lang.String val$imei -> b
    java.lang.String val$tmsi -> c
    java.lang.String val$gameid -> d
    java.lang.String val$osversion -> e
    java.lang.String val$vesion -> f
    java.lang.String val$phoneModel -> g
    java.lang.String val$mobilenumber -> h
    java.lang.String val$vendor -> i
    java.lang.String val$key -> j
    android.content.Context val$context1 -> k
    void run() -> run
com.fox.exercise.http.StatCounts$2 -> g.q:
    java.lang.String val$userid -> a
    java.lang.String val$sina_weibo_id -> b
    java.lang.String val$tencent_weibo_id -> c
    java.lang.String val$weixin_id -> d
    java.lang.String val$qzone_id -> e
    java.lang.String val$key -> f
    void run() -> run
com.fox.exercise.http.StatCounts$3 -> g.r:
    java.lang.String val$userid -> a
    java.lang.String val$functionid -> b
    java.lang.String val$function_name -> c
    java.lang.String val$function_time_interval -> d
    java.lang.String val$uuid -> e
    java.lang.String val$imei -> f
    java.lang.String val$tmsi -> g
    java.lang.String val$gameid -> h
    java.lang.String val$osversion -> i
    java.lang.String val$vesion -> j
    java.lang.String val$key -> k
    void run() -> run
com.fox.exercise.http.StatCounts$6 -> g.s:
    java.lang.String val$userid -> a
    java.lang.String val$gameid -> b
    java.lang.String val$osversion -> c
    java.lang.String val$vesion -> d
    java.lang.String val$phoneModel -> e
    java.lang.String val$vendor -> f
    java.lang.String val$content -> g
    java.lang.String val$key -> h
    void run() -> run
com.fox.exercise.http.WeiboResponse -> g.t:
    java.util.Map formatMap -> a
com.fox.exercise.location.SportLocationInfo -> h.a:
    com.fox.exercise.location.SportLocationInfo mInstance -> a
    java.lang.Object lock -> b
com.fox.exercise.location.SportWeatherInformation -> h.b:
    java.lang.String temp_low -> a
    java.lang.String temp_high -> b
    java.lang.String weather -> c
    java.lang.String getTemp_low() -> a
    java.lang.String getTemp_high() -> b
    java.lang.String getWeather() -> c
com.fox.exercise.lockscreen.LockScreen -> com.fox.exercise.lockscreen.LockScreen:
    java.lang.String TAG -> b
    com.fox.exercise.lockscreen.SliderRelativeLayout sliderLayout -> c
    android.content.Context mContext -> d
    int MSG_LOCK_SUCESS -> a
    android.content.SharedPreferences foxSportSetting -> e
    cn.ingenic.indroidsync.SportsApp mSportsApp -> f
    java.lang.Runnable AnimationDrawableTask -> g
    android.os.Handler mHandler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> b
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.os.Handler access$0(com.fox.exercise.lockscreen.LockScreen) -> a
    java.lang.Runnable access$1(com.fox.exercise.lockscreen.LockScreen) -> b
    java.lang.String access$2() -> a
    cn.ingenic.indroidsync.SportsApp access$3(com.fox.exercise.lockscreen.LockScreen) -> c
    void access$4(com.fox.exercise.lockscreen.LockScreen,android.content.SharedPreferences) -> a
    android.content.SharedPreferences access$5(com.fox.exercise.lockscreen.LockScreen) -> d
com.fox.exercise.lockscreen.LockScreen$1 -> com.fox.exercise.lockscreen.a:
    com.fox.exercise.lockscreen.LockScreen this$0 -> a
    void run() -> run
com.fox.exercise.lockscreen.LockScreen$2 -> com.fox.exercise.lockscreen.b:
    com.fox.exercise.lockscreen.LockScreen this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.lockscreen.SliderRelativeLayout -> com.fox.exercise.lockscreen.SliderRelativeLayout:
    java.lang.String TAG -> a
    android.widget.TextView tv_slider_icon -> b
    android.graphics.Bitmap dragBitmap -> c
    android.content.Context mContext -> d
    android.os.Handler mainHandler -> e
    int mLastMoveX -> f
    boolean unLocking -> g
    int BACK_DURATION -> h
    float VE_HORIZONTAL -> i
    java.lang.Runnable BackDragImgTask -> j
    android.os.Handler mHandler -> k
    void initDragBitmap() -> d
    void onFinishInflate() -> onFinishInflate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void invalidateDragImg(android.graphics.Canvas) -> a
    boolean handleActionDownEvenet(android.view.MotionEvent) -> a
    void handleActionUpEvent(android.view.MotionEvent) -> b
    void resetViewState() -> e
    void virbate() -> f
    void setMainHandler(android.os.Handler) -> setMainHandler
    int access$0(com.fox.exercise.lockscreen.SliderRelativeLayout) -> a
    int access$1() -> a
    float access$2() -> b
    void access$3(com.fox.exercise.lockscreen.SliderRelativeLayout,int) -> a
    java.lang.String access$4() -> c
    android.widget.TextView access$5(com.fox.exercise.lockscreen.SliderRelativeLayout) -> b
    android.os.Handler access$6(com.fox.exercise.lockscreen.SliderRelativeLayout) -> c
    java.lang.Runnable access$7(com.fox.exercise.lockscreen.SliderRelativeLayout) -> d
    void access$8(com.fox.exercise.lockscreen.SliderRelativeLayout) -> e
com.fox.exercise.lockscreen.SliderRelativeLayout$1 -> com.fox.exercise.lockscreen.c:
    com.fox.exercise.lockscreen.SliderRelativeLayout this$0 -> a
    void run() -> run
com.fox.exercise.lockscreen.SliderRelativeLayout$2 -> com.fox.exercise.lockscreen.d:
    com.fox.exercise.lockscreen.SliderRelativeLayout this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.login.AdShowActivity -> com.fox.exercise.login.AdShowActivity:
    android.widget.ImageView imageView -> a
    int play_time -> b
    com.fox.exercise.ImageDownloader mDownloader -> c
    com.fox.exercise.login.AdShowActivity$TimeCount timeCount -> d
    com.fox.exercise.login.AdShowActivity$TimeCount timeCountThree -> e
    java.lang.String jumpurl -> f
    android.widget.ImageButton jumpButton -> g
    android.os.Handler handler -> h
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onStart() -> onStart
    void getAdShow() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    java.lang.String access$0(com.fox.exercise.login.AdShowActivity) -> a
    android.os.Handler access$1(com.fox.exercise.login.AdShowActivity) -> b
    com.fox.exercise.login.AdShowActivity$TimeCount access$2(com.fox.exercise.login.AdShowActivity) -> c
    void access$3(com.fox.exercise.login.AdShowActivity,int) -> a
    int access$4(com.fox.exercise.login.AdShowActivity) -> d
    com.fox.exercise.ImageDownloader access$5(com.fox.exercise.login.AdShowActivity) -> e
    android.widget.ImageView access$6(com.fox.exercise.login.AdShowActivity) -> f
    void access$7(com.fox.exercise.login.AdShowActivity,java.lang.String) -> a
    void access$8(com.fox.exercise.login.AdShowActivity,com.fox.exercise.login.AdShowActivity$TimeCount) -> a
    com.fox.exercise.login.AdShowActivity$TimeCount access$9(com.fox.exercise.login.AdShowActivity) -> g
com.fox.exercise.login.AdShowActivity$1 -> com.fox.exercise.login.a:
    com.fox.exercise.login.AdShowActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.login.AdShowActivity$2 -> com.fox.exercise.login.b:
    com.fox.exercise.login.AdShowActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.AdShowActivity$3 -> com.fox.exercise.login.c:
    com.fox.exercise.login.AdShowActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.AdShowActivity$4 -> com.fox.exercise.login.d:
    com.fox.exercise.login.AdShowActivity this$0 -> a
    com.fox.exercise.api.entity.AdContent doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.AdContent) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.AdShowActivity$TimeCount -> com.fox.exercise.login.e:
    com.fox.exercise.login.AdShowActivity this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.fox.exercise.login.BiaoZhuScrollLayout -> com.fox.exercise.login.BiaoZhuScrollLayout:
    android.widget.Scroller mScroller -> a
    android.view.VelocityTracker mVelocityTracker -> b
    int mCurScreen -> c
    int mDefaultScreen -> d
    int mTouchState -> e
    int mTouchSlop -> f
    float mLastMotionX -> g
    float mLastMotionY -> h
    com.fox.exercise.login.BiaoZhuScrollLayout$OnViewChangeListener mOnViewChangeListener -> i
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void snapToDestination() -> a
    void snapToScreen(int) -> a
    void setToScreen(int) -> setToScreen
    int getCurScreen() -> getCurScreen
    void computeScroll() -> computeScroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void removeViewAt(int) -> removeViewAt
com.fox.exercise.login.BiaoZhuScrollLayout$OnViewChangeListener -> com.fox.exercise.login.f:
    void OnViewChange(int) -> b
com.fox.exercise.login.CheckToken -> com.fox.exercise.login.g:
    android.content.Context mContext -> a
    boolean sinaToastFlag -> b
    boolean tencentToastFlag -> c
    boolean qqzoneToastFlag -> d
    void start() -> a
    int sinaJsonParse(java.lang.String) -> a
    android.content.Context access$0(com.fox.exercise.login.CheckToken) -> a
    void access$1(com.fox.exercise.login.CheckToken,boolean) -> a
    void access$2(com.fox.exercise.login.CheckToken,boolean) -> b
    int access$3(com.fox.exercise.login.CheckToken,java.lang.String) -> a
    void access$4(com.fox.exercise.login.CheckToken,boolean) -> c
com.fox.exercise.login.CheckToken$QQzoneChechThread -> com.fox.exercise.login.h:
    com.fox.exercise.login.CheckToken this$0 -> a
    void run() -> run
com.fox.exercise.login.CheckToken$SinaCheckThread -> com.fox.exercise.login.i:
    com.fox.exercise.login.CheckToken this$0 -> a
    void run() -> run
com.fox.exercise.login.CheckToken$TencentCheckThread -> com.fox.exercise.login.j:
    com.fox.exercise.login.CheckToken this$0 -> a
    void run() -> run
com.fox.exercise.login.FileDownloader -> com.fox.exercise.login.k:
    java.io.InputStream inputStream -> d
    java.net.URLConnection connection -> e
    int FileLength -> f
    android.os.Handler handler -> g
    boolean isCancel -> h
    android.content.Context mContext -> a
    int DownedFileLength -> i
    java.lang.String savePathString -> b
    java.lang.String mfilename -> c
    int getFileLength() -> a
    int getDownedFileLength() -> b
    void setCancel(boolean) -> a
    void DownFile(java.lang.String) -> a
com.fox.exercise.login.FirstLoginView -> com.fox.exercise.login.FirstLoginView:
    com.fox.exercise.login.FirstScrollLayout scrollLayout -> a
    int[] images -> b
    void onCreate(android.os.Bundle) -> onCreate
    void addView(int) -> b
    void OnViewChange(int) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
com.fox.exercise.login.FirstLoginView$1 -> com.fox.exercise.login.l:
    com.fox.exercise.login.FirstLoginView this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.FirstScrollLayout -> com.fox.exercise.login.FirstScrollLayout:
    android.widget.Scroller mScroller -> a
    android.view.VelocityTracker mVelocityTracker -> b
    int mCurScreen -> c
    int mDefaultScreen -> d
    int mTouchState -> e
    int mTouchSlop -> f
    float mLastMotionX -> g
    com.fox.exercise.login.FirstScrollLayout$OnViewChangeListener mOnViewChangeListener -> h
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void snapToDestination() -> a
    void snapToScreen(int) -> a
    void setToScreen(int) -> setToScreen
    int getCurScreen() -> getCurScreen
    void computeScroll() -> computeScroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void removeViewAt(int) -> removeViewAt
    void SetOnViewChangeListener(com.fox.exercise.login.FirstScrollLayout$OnViewChangeListener) -> a
com.fox.exercise.login.FirstScrollLayout$OnViewChangeListener -> com.fox.exercise.login.m:
    void OnViewChange(int) -> a
com.fox.exercise.login.ForgetPwdActivity -> com.fox.exercise.login.ForgetPwdActivity:
    android.widget.EditText phoneNum -> c
    android.widget.EditText yzNum -> d
    android.widget.EditText newPwd -> e
    android.widget.EditText newPwd_agagin -> f
    android.widget.Button bt_yz -> g
    java.lang.String phonenumberString -> h
    java.lang.String result -> i
    android.widget.RelativeLayout oneLayout -> j
    android.widget.TextView phoneTextView -> k
    cn.ingenic.indroidsync.SportsApp fSportsApp -> l
    java.lang.String SENT_SMS_ACTION -> a
    java.lang.String DELIVERED_SMS_ACTION -> b
    int getTheNumber -> m
    java.lang.String time -> n
    com.fox.exercise.login.ForgetPwdActivity$TimeCount timeCount -> o
    java.lang.String newpwdString -> p
    java.lang.String newpwdagainString -> q
    android.app.Dialog codeDialog -> r
    android.app.Dialog pwdDialog -> s
    android.os.Handler handler -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initView() -> a
    void setViewStatus() -> b
    java.lang.String stringFilter(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void getCheckCode() -> c
    void ChangePwd() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void initCodeDialog() -> e
    void initPwdDialog() -> f
    android.app.Dialog access$0(com.fox.exercise.login.ForgetPwdActivity) -> a
    android.app.Dialog access$1(com.fox.exercise.login.ForgetPwdActivity) -> b
    cn.ingenic.indroidsync.SportsApp access$2(com.fox.exercise.login.ForgetPwdActivity) -> c
    android.widget.Button access$3(com.fox.exercise.login.ForgetPwdActivity) -> d
    java.lang.String access$4(com.fox.exercise.login.ForgetPwdActivity) -> e
    android.os.Handler access$5(com.fox.exercise.login.ForgetPwdActivity) -> f
    void access$6(com.fox.exercise.login.ForgetPwdActivity,java.lang.String) -> a
    java.lang.String access$7(com.fox.exercise.login.ForgetPwdActivity) -> g
    java.lang.String access$8(com.fox.exercise.login.ForgetPwdActivity) -> h
    int access$9(com.fox.exercise.login.ForgetPwdActivity) -> i
    com.fox.exercise.login.ForgetPwdActivity$TimeCount access$10(com.fox.exercise.login.ForgetPwdActivity) -> j
    android.widget.EditText access$11(com.fox.exercise.login.ForgetPwdActivity) -> k
    void access$12(com.fox.exercise.login.ForgetPwdActivity,int) -> a
    android.widget.EditText access$13(com.fox.exercise.login.ForgetPwdActivity) -> l
    android.widget.EditText access$14(com.fox.exercise.login.ForgetPwdActivity) -> m
com.fox.exercise.login.ForgetPwdActivity$1 -> com.fox.exercise.login.n:
    com.fox.exercise.login.ForgetPwdActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.login.ForgetPwdActivity$2 -> com.fox.exercise.login.o:
    com.fox.exercise.login.ForgetPwdActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.ForgetPwdActivity$3 -> com.fox.exercise.login.p:
    com.fox.exercise.login.ForgetPwdActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.ForgetPwdActivity$PassWord -> com.fox.exercise.login.q:
    android.widget.EditText editText -> b
    com.fox.exercise.login.ForgetPwdActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.fox.exercise.login.ForgetPwdActivity$TimeCount -> com.fox.exercise.login.r:
    com.fox.exercise.login.ForgetPwdActivity this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.fox.exercise.login.JDAuthActivity -> com.fox.exercise.login.JDAuthActivity:
    android.app.Dialog JDYPregressDialog -> a
    android.webkit.WebView webView -> b
    android.os.Bundle params -> c
    java.lang.String url -> d
    java.lang.String JDOptionAppKey -> e
    java.lang.String JDOptionAppSecret -> f
    java.lang.String JDOptionAppRedirectUri -> g
    android.widget.TextView tvLeft -> h
    android.widget.RelativeLayout rlNavigation -> i
    int color -> j
    void onCreate(android.os.Bundle) -> onCreate
    void initJDYProgressDialog() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    java.lang.String access$0(com.fox.exercise.login.JDAuthActivity) -> a
    android.app.Dialog access$1(com.fox.exercise.login.JDAuthActivity) -> b
    java.lang.String access$2(com.fox.exercise.login.JDAuthActivity) -> c
    android.webkit.WebView access$3(com.fox.exercise.login.JDAuthActivity) -> d
    java.lang.String access$4(com.fox.exercise.login.JDAuthActivity) -> e
    java.lang.String access$5(com.fox.exercise.login.JDAuthActivity) -> f
com.fox.exercise.login.JDAuthActivity$1 -> com.fox.exercise.login.s:
    com.fox.exercise.login.JDAuthActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.JDAuthActivity$GetAccessTokenTask -> com.fox.exercise.login.t:
    com.fox.exercise.login.JDAuthActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Object doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.JDAuthActivity$JdWebViewClient -> com.fox.exercise.login.u:
    com.fox.exercise.login.JDAuthActivity this$0 -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.fox.exercise.login.LocationInfo -> com.fox.exercise.login.v:
    java.lang.String latitude -> a
    java.lang.String longitude -> b
    java.lang.String spName -> c
    java.lang.String spAuto -> d
    java.lang.String spNotice -> e
com.fox.exercise.login.LoginActivity -> com.fox.exercise.login.LoginActivity:
    java.lang.String date -> a
    android.widget.EditText name -> p
    android.widget.EditText password -> q
    android.widget.TextView forget -> r
    android.widget.TextView trytologintext -> s
    android.app.Dialog loginPregressDialog -> t
    android.app.Dialog login2PregressDialog -> u
    android.widget.Toast toastnet -> v
    android.content.Context mContext -> w
    cn.ingenic.indroidsync.SportsApp mSportsApp -> x
    com.tencent.tauth.Tencent mTencent -> y
    java.lang.String mAppid -> b
    int intcols -> c
    boolean mIsFromMain -> d
    boolean mTabActivityHasStart -> e
    int qqconfig -> z
    boolean mIsRegister -> f
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> A
    com.tencent.mm.sdk.openapi.IWXAPI api -> B
    android.app.Dialog alertDialog -> C
    android.app.Dialog alertQQDialog -> D
    java.lang.String user_name -> g
    java.lang.String mBirthday -> E
    java.lang.String openId -> F
    java.lang.String mSex -> G
    java.lang.String NORMAL_PATH1 -> h
    java.lang.String NORMAL_PATH2 -> i
    java.lang.String access_token -> H
    java.lang.String expires_in -> I
    java.lang.String openID -> J
    java.lang.String openKey -> K
    boolean isFristTry -> L
    boolean isWeiXinLogin -> j
    com.fox.exercise.login.LoginActivity instance -> k
    java.lang.String nickName -> M
    java.lang.String WX_CODE -> l
    java.lang.String WX_TOKEN -> m
    java.lang.String WX_OPENID -> n
    boolean startPause -> o
    int qq_toast_number -> N
    java.lang.String userId -> O
    android.os.Handler mHandler -> P
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy mQqWeiboProxy -> Q
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String loadWXUserInfo(java.lang.String) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onStart() -> onStart
    void onNewIntent(android.content.Intent) -> onNewIntent
    void resetStartState() -> a
    void loginFinish() -> e
    void registMsgBoxReceiver() -> f
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    void onStop() -> onStop
    void checkFirstLogin() -> g
    void initLoginProgressDialog() -> h
    void initLoginProgressDialog2() -> i
    void gotoXinlangWeibo() -> j
    void gotoTenxunWeibo() -> k
    void gotoJDOption() -> l
    void gotoWeiXin() -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showqqDialog(java.lang.String,java.lang.String) -> a
    void onResultForAuthActivity(android.content.Intent) -> a
    void createDeskShortCut() -> n
    void deleteShortCut() -> b
    void LoginQQ() -> c
    void onResultJDForAuthActivity(android.content.Intent) -> b
    android.content.Context access$0() -> d
    void access$1(com.fox.exercise.login.LoginActivity) -> a
    void access$2(com.fox.exercise.login.LoginActivity,java.lang.String) -> a
    void access$3(com.fox.exercise.login.LoginActivity,java.lang.String) -> b
    android.os.Handler access$4(com.fox.exercise.login.LoginActivity) -> b
    java.lang.String access$5(com.fox.exercise.login.LoginActivity) -> c
    com.fox.exercise.SportsExceptionHandler access$6(com.fox.exercise.login.LoginActivity) -> d
    android.app.Dialog access$7(com.fox.exercise.login.LoginActivity) -> e
    cn.ingenic.indroidsync.SportsApp access$8(com.fox.exercise.login.LoginActivity) -> f
    void access$9(com.fox.exercise.login.LoginActivity) -> g
    android.app.Dialog access$10(com.fox.exercise.login.LoginActivity) -> h
    java.lang.String access$11(com.fox.exercise.login.LoginActivity) -> i
    java.lang.String access$12(com.fox.exercise.login.LoginActivity) -> j
    void access$13(com.fox.exercise.login.LoginActivity) -> k
    void access$14(com.fox.exercise.login.LoginActivity) -> l
    com.tencent.tauth.Tencent access$15(com.fox.exercise.login.LoginActivity) -> m
    java.lang.String access$16(com.fox.exercise.login.LoginActivity,java.lang.String) -> c
    void access$17(com.fox.exercise.login.LoginActivity,java.lang.String) -> d
    java.lang.String access$18(com.fox.exercise.login.LoginActivity) -> n
    void access$19(com.fox.exercise.login.LoginActivity,com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy) -> a
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy access$20(com.fox.exercise.login.LoginActivity) -> o
    void access$21(com.fox.exercise.login.LoginActivity,java.lang.String) -> e
    void access$22(com.fox.exercise.login.LoginActivity,java.lang.String) -> f
    java.lang.String access$23(com.fox.exercise.login.LoginActivity) -> p
    java.lang.String access$24(com.fox.exercise.login.LoginActivity) -> q
    java.lang.String access$25(com.fox.exercise.login.LoginActivity) -> r
    java.lang.String access$26(com.fox.exercise.login.LoginActivity) -> s
    java.lang.String access$27(com.fox.exercise.login.LoginActivity) -> t
    android.widget.Toast access$28(com.fox.exercise.login.LoginActivity) -> u
    void access$29(com.fox.exercise.login.LoginActivity,android.widget.Toast) -> a
com.fox.exercise.login.LoginActivity$1 -> com.fox.exercise.login.w:
    com.fox.exercise.login.LoginActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.login.LoginActivity access$0(com.fox.exercise.login.LoginActivity$1) -> a
com.fox.exercise.login.LoginActivity$1$1 -> com.fox.exercise.login.x:
    com.fox.exercise.login.LoginActivity$1 this$1 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.LoginActivity$2 -> com.fox.exercise.login.y:
    com.fox.exercise.login.LoginActivity this$0 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.login.LoginActivity access$2(com.fox.exercise.login.LoginActivity$2) -> a
com.fox.exercise.login.LoginActivity$2$1 -> com.fox.exercise.login.z:
    com.fox.exercise.login.LoginActivity$2 this$1 -> a
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.login.LoginActivity$2 access$2(com.fox.exercise.login.LoginActivity$2$1) -> a
com.fox.exercise.login.LoginActivity$2$1$1 -> com.fox.exercise.login.aa:
    com.fox.exercise.api.ApiBack back -> a
    com.fox.exercise.login.LoginActivity$2$1 this$2 -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.LoginActivity$3 -> com.fox.exercise.login.ab:
    java.lang.String userInfo -> a
    com.fox.exercise.login.LoginActivity this$0 -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.login.LoginActivity access$2(com.fox.exercise.login.LoginActivity$3) -> a
com.fox.exercise.login.LoginActivity$3$1 -> com.fox.exercise.login.ac:
    com.fox.exercise.login.LoginActivity$3 this$1 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.LoginActivity$4 -> com.fox.exercise.login.ad:
    com.fox.exercise.api.ApiBack back -> a
    com.fox.exercise.login.LoginActivity this$0 -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.LoginActivity$AuthDialogListener -> com.fox.exercise.login.ae:
    java.lang.String uid -> b
    java.lang.String tokenString -> c
    com.fox.exercise.login.LoginActivity this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void retrieveSinaUserInfo(com.fox.exercise.weibo.sina.oauth2.Weibo,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token,java.lang.String) -> a
    void onComplete(java.lang.String) -> a
    void onError(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> a
    void onWeiboException(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> b
    void onError(com.fox.exercise.weibo.sina.oauth2.DialogError) -> a
    void onCancel() -> a
    java.lang.String access$0(com.fox.exercise.login.LoginActivity$AuthDialogListener) -> a
    void access$1(com.fox.exercise.login.LoginActivity$AuthDialogListener,com.fox.exercise.weibo.sina.oauth2.Weibo,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token,java.lang.String) -> a
com.fox.exercise.login.LoginActivity$AuthDialogListener$1 -> com.fox.exercise.login.af:
    com.fox.exercise.login.LoginActivity$AuthDialogListener this$1 -> a
    com.fox.exercise.weibo.sina.oauth2.Weibo val$weibo -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.LoginActivity$BaseUiListener -> com.fox.exercise.login.ag:
    com.fox.exercise.login.LoginActivity this$0 -> a
    void onComplete(java.lang.Object) -> a
    void onCancel() -> h
    void onError(com.tencent.tauth.UiError) -> a
    com.fox.exercise.login.LoginActivity access$1(com.fox.exercise.login.LoginActivity$BaseUiListener) -> a
com.fox.exercise.login.LoginActivity$BaseUiListener$1 -> com.fox.exercise.login.ah:
    com.fox.exercise.login.LoginActivity$BaseUiListener this$1 -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onComplete(java.lang.Object) -> a
    void onCancel() -> h
    com.fox.exercise.login.LoginActivity$BaseUiListener access$0(com.fox.exercise.login.LoginActivity$BaseUiListener$1) -> a
com.fox.exercise.login.LoginActivity$BaseUiListener$1$1 -> com.fox.exercise.login.ai:
    com.fox.exercise.login.LoginActivity$BaseUiListener$1 this$2 -> a
    void run() -> run
com.fox.exercise.login.LoginActivity$DetailTask -> com.fox.exercise.login.aj:
    com.fox.exercise.login.LoginActivity this$0 -> a
    com.fox.exercise.api.entity.UserDetail doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.UserDetail) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.LoginActivity$LoginFinishTask -> com.fox.exercise.login.ak:
    com.fox.exercise.login.LoginActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.entity.UserDetail doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.UserDetail) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.LoginActivity$MarketTask -> com.fox.exercise.login.al:
    com.fox.exercise.login.LoginActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.LoginByOtherThread -> com.fox.exercise.login.am:
    android.os.Handler mHandler -> b
    com.fox.exercise.api.ApiBack back -> a
    java.lang.String weiboType -> c
    java.lang.String weiboName -> d
    java.lang.String token -> e
    void run() -> run
com.fox.exercise.login.LoginByQQThread -> com.fox.exercise.login.an:
    android.os.Handler mHandler -> b
    com.fox.exercise.api.ApiBack back -> a
    void run() -> run
com.fox.exercise.login.ModifyPwdActivity -> com.fox.exercise.login.ModifyPwdActivity:
    android.widget.EditText currentpwd -> k
    android.widget.EditText newpwd -> l
    android.widget.EditText confirmpwd -> m
    android.app.Dialog modifypwdProgressDialog -> n
    cn.ingenic.indroidsync.SportsApp mSportsApp -> o
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    java.lang.String stringFilter(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    android.widget.EditText access$0(com.fox.exercise.login.ModifyPwdActivity) -> a
    android.widget.EditText access$1(com.fox.exercise.login.ModifyPwdActivity) -> b
    cn.ingenic.indroidsync.SportsApp access$2(com.fox.exercise.login.ModifyPwdActivity) -> c
    android.app.Dialog access$3(com.fox.exercise.login.ModifyPwdActivity) -> d
com.fox.exercise.login.ModifyPwdActivity$1 -> com.fox.exercise.login.ao:
    com.fox.exercise.login.ModifyPwdActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.ModifyPwdActivity$PassWord -> com.fox.exercise.login.ap:
    android.widget.EditText editText -> b
    com.fox.exercise.login.ModifyPwdActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.fox.exercise.login.OriginalLoginInfoViews -> com.fox.exercise.login.aq:
    android.widget.EditText name -> a
    android.widget.EditText password -> b
    android.app.Dialog progressDialog -> c
    int loginFinish -> d
    int loginFail -> e
    int getLoginFinish() -> a
    int getLoginFail() -> b
    android.app.Dialog getProgressDialog() -> c
    android.widget.EditText getName() -> d
    android.widget.EditText getPassword() -> e
com.fox.exercise.login.OriginalLoginInfos -> com.fox.exercise.login.ar:
    java.lang.String name -> a
    java.lang.String pwd -> b
    java.lang.String getName() -> a
    java.lang.String getPwd() -> b
com.fox.exercise.login.OriginalLoginTask -> com.fox.exercise.login.as:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> a
    android.content.Context mContext -> b
    android.os.Handler mHandler -> c
    com.fox.exercise.login.OriginalLoginInfoViews mInfoViews -> d
    com.fox.exercise.login.OriginalLoginInfos mInfos -> e
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> f
    android.app.Dialog mLoginPregressDialog -> g
    int login_finish -> h
    int login_fail -> i
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.RegistActivity -> com.fox.exercise.login.RegistActivity:
    java.lang.String FACE_PATH -> d
    android.widget.EditText mail -> e
    android.widget.EditText nickname -> f
    android.widget.EditText password -> g
    com.fox.exercise.util.RoundedImage faceImage -> h
    java.lang.String[] items -> i
    android.app.ProgressDialog registProgressDialog -> j
    android.widget.Toast toastnet -> k
    int faceCount -> l
    java.lang.String SENT_SMS_ACTION -> a
    java.lang.String DELIVERED_SMS_ACTION -> b
    android.app.Dialog loginPregressDialog -> m
    cn.ingenic.indroidsync.SportsApp mSportsApp -> n
    android.widget.RadioButton mMaleButton -> o
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> p
    android.text.TextWatcher mTextWatcher -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initView() -> a
    void setViewStatus() -> b
    java.lang.String stringFilter2(java.lang.String) -> a
    java.lang.String stringFilter(java.lang.String) -> b
    void onClick(android.view.View) -> onClick
    void showDialog() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri) -> a
    void getImageToView(android.content.Intent) -> a
    boolean trytoLogin(java.lang.String,java.lang.String,android.content.Context) -> a
    void onStop() -> onStop
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void checkFirstLogin() -> f
    android.widget.EditText access$0(com.fox.exercise.login.RegistActivity) -> a
    cn.ingenic.indroidsync.SportsApp access$1() -> c
    com.fox.exercise.SportsExceptionHandler access$2(com.fox.exercise.login.RegistActivity) -> b
    android.widget.RadioButton access$3(com.fox.exercise.login.RegistActivity) -> c
    int access$4(com.fox.exercise.login.RegistActivity) -> d
    com.fox.exercise.util.RoundedImage access$5(com.fox.exercise.login.RegistActivity) -> e
    java.lang.String access$6() -> d
    android.widget.EditText access$7(com.fox.exercise.login.RegistActivity) -> f
    android.widget.EditText access$8(com.fox.exercise.login.RegistActivity) -> g
    android.app.Dialog access$9(com.fox.exercise.login.RegistActivity) -> h
    void access$10(com.fox.exercise.login.RegistActivity) -> i
com.fox.exercise.login.RegistActivity$1 -> com.fox.exercise.login.at:
    java.lang.CharSequence temp -> b
    int editStart -> c
    int editEnd -> d
    com.fox.exercise.login.RegistActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.login.RegistActivity$2 -> com.fox.exercise.login.au:
    com.fox.exercise.login.RegistActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.fox.exercise.login.RegistActivity$3 -> com.fox.exercise.login.av:
    com.fox.exercise.login.RegistActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.login.RegistActivity access$2(com.fox.exercise.login.RegistActivity$3) -> a
com.fox.exercise.login.RegistActivity$3$1 -> com.fox.exercise.login.aw:
    com.fox.exercise.login.RegistActivity$3 this$1 -> a
    void onPostExecute(java.lang.Boolean) -> a
    java.lang.Boolean doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.RegistActivity$4 -> com.fox.exercise.login.ax:
    com.fox.exercise.login.RegistActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.login.RegistActivity$MarketTask -> com.fox.exercise.login.ay:
    com.fox.exercise.login.RegistActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.RegistActivity$PassWord -> com.fox.exercise.login.az:
    android.widget.EditText editText -> b
    com.fox.exercise.login.RegistActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.fox.exercise.login.SplashScreenActivity -> com.fox.exercise.login.SplashScreenActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.fox.exercise.login.SplashScreenActivity$TimeCount -> com.fox.exercise.login.ba:
    com.fox.exercise.login.SplashScreenActivity this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.fox.exercise.login.SportMain -> com.fox.exercise.login.SportMain:
    java.lang.String date -> a
    android.content.Intent intent -> b
    java.lang.String user_name -> c
    java.lang.String openId -> k
    java.lang.String mSex -> l
    android.content.Context mContext -> d
    cn.ingenic.indroidsync.SportsApp mSportsApp -> e
    int ScreenWidth -> f
    int ScreenHeight -> g
    android.widget.LinearLayout mLayout -> m
    android.app.Dialog loginPregressDialog -> n
    boolean isAutoLogin -> h
    android.content.BroadcastReceiver mNetworkStateIntentReceiver -> o
    boolean mNoNetwork -> i
    boolean mIsStop -> j
    boolean mIsNetWork -> p
    com.fox.exercise.login.SportMain$LoadDataThread mLoadDataThread -> q
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> r
    com.fox.exercise.login.SportMain$MyHandler handler -> s
    android.widget.ProgressBar proBarset -> t
    android.widget.TextView textViewset -> u
    android.content.SharedPreferences sp -> v
    java.lang.String type -> w
    android.app.Dialog alertDialog -> x
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void showqqDialog(java.lang.String,java.lang.String) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void LoadData() -> a
    int tryOthertoLogin(java.lang.String,java.lang.String,android.content.Context) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loginFinish() -> b
    void registMsgBoxReceiver() -> c
    java.lang.String getConfigPath() -> d
    void checkFirstLogin() -> e
    void initWeiboInfo() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    android.content.SharedPreferences access$0(com.fox.exercise.login.SportMain) -> a
    com.fox.exercise.login.SportMain$MyHandler access$1(com.fox.exercise.login.SportMain) -> b
    java.lang.String access$2(com.fox.exercise.login.SportMain) -> c
    int access$3(com.fox.exercise.login.SportMain,java.lang.String,java.lang.String,android.content.Context) -> a
    android.app.Dialog access$4(com.fox.exercise.login.SportMain) -> d
    android.widget.LinearLayout access$5(com.fox.exercise.login.SportMain) -> e
    android.widget.ProgressBar access$6(com.fox.exercise.login.SportMain) -> f
    android.widget.TextView access$7(com.fox.exercise.login.SportMain) -> g
    boolean access$8(com.fox.exercise.login.SportMain) -> h
    void access$9(com.fox.exercise.login.SportMain,java.lang.String) -> a
    void access$10(com.fox.exercise.login.SportMain,java.lang.String) -> b
    java.lang.String access$11(com.fox.exercise.login.SportMain) -> i
    com.fox.exercise.SportsExceptionHandler access$12(com.fox.exercise.login.SportMain) -> j
    void access$13(com.fox.exercise.login.SportMain) -> k
    java.lang.String access$14(com.fox.exercise.login.SportMain) -> l
    void access$15(com.fox.exercise.login.SportMain) -> m
    void access$16(com.fox.exercise.login.SportMain,boolean) -> a
com.fox.exercise.login.SportMain$1 -> com.fox.exercise.login.bb:
    com.fox.exercise.login.SportMain this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.login.SportMain$BaseUiListener -> com.fox.exercise.login.bc:
    com.tencent.tauth.Tencent mTencent -> b
    com.fox.exercise.login.SportMain this$0 -> a
    void onComplete(java.lang.Object) -> a
    void onCancel() -> h
    void onError(com.tencent.tauth.UiError) -> a
    com.tencent.tauth.Tencent access$0(com.fox.exercise.login.SportMain$BaseUiListener) -> a
    com.fox.exercise.login.SportMain access$1(com.fox.exercise.login.SportMain$BaseUiListener) -> b
com.fox.exercise.login.SportMain$BaseUiListener$1 -> com.fox.exercise.login.bd:
    com.fox.exercise.login.SportMain$BaseUiListener this$1 -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onComplete(java.lang.Object) -> a
    void onCancel() -> h
com.fox.exercise.login.SportMain$LoadDataThread -> com.fox.exercise.login.be:
    com.fox.exercise.login.SportMain this$0 -> a
    void run() -> run
com.fox.exercise.login.SportMain$LoginFinishTask -> com.fox.exercise.login.bf:
    com.fox.exercise.login.SportMain this$0 -> a
    com.fox.exercise.api.entity.UserDetail doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.UserDetail) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.SportMain$MarketTask -> com.fox.exercise.login.bg:
    com.fox.exercise.login.SportMain this$0 -> a
    java.lang.Integer doInBackground(java.lang.Integer[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.SportMain$MyHandler -> com.fox.exercise.login.bh:
    com.fox.exercise.login.SportMain this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.login.SportMain access$1(com.fox.exercise.login.SportMain$MyHandler) -> a
com.fox.exercise.login.SportMain$MyHandler$1 -> com.fox.exercise.login.bi:
    com.fox.exercise.login.SportMain$MyHandler this$1 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.SportService -> com.fox.exercise.login.SportService:
    java.lang.String mSessionId -> a
    com.fox.exercise.api.entity.UserDetail mUserDetail -> b
    boolean mIsAdmin -> c
    java.util.Timer timer -> d
    com.fox.exercise.login.SportService$SportsTask task -> e
    android.content.BroadcastReceiver serviceReceiver -> f
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart(android.content.Intent,int) -> onStart
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void access$0(com.fox.exercise.login.SportService,java.lang.String) -> a
    void access$1(com.fox.exercise.login.SportService,boolean) -> a
    java.lang.String access$2(com.fox.exercise.login.SportService) -> a
    void access$3(com.fox.exercise.login.SportService,com.fox.exercise.api.entity.UserDetail) -> a
    com.fox.exercise.api.entity.UserDetail access$4(com.fox.exercise.login.SportService) -> b
    boolean access$5(com.fox.exercise.login.SportService) -> c
com.fox.exercise.login.SportService$1 -> com.fox.exercise.login.bj:
    com.fox.exercise.login.SportService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.login.SportService$ClearThread -> com.fox.exercise.login.bk:
    com.fox.exercise.login.SportService this$0 -> a
    void run() -> run
com.fox.exercise.login.SportService$SportsTask -> com.fox.exercise.login.bl:
    com.fox.exercise.login.SportService this$0 -> a
    void run() -> run
com.fox.exercise.login.SportUtilities -> com.fox.exercise.login.bm:
    java.lang.String DOWNLOAD_BASE_PATH -> a
    java.lang.String DOWNLOAD_SAVE_PATH -> b
    java.lang.String DOWNLOAD_PHOTOFRAMES_PATH -> c
    java.lang.String RECYCLE_PATH -> d
    int IMAGE_DEFAULT_WIDTH -> e
    int IMAGE_DEFAULT_HEIGHT -> f
    java.lang.String mPictureFormat -> g
    int IMAGE_SPACE -> h
    android.graphics.Bitmap$CompressFormat mOutputFormat -> l
    java.lang.String CAMERA_MANAGER_BUCKET_NAME -> m
    java.lang.String IMAGE_SAVE_PATH -> i
    android.net.Uri STORAGE_URI -> n
    java.lang.String[] constellationArr -> j
    int[] constellationEdgeDay -> k
com.fox.exercise.login.SportsLocalBroadcastReceiver -> com.fox.exercise.login.SportsLocalBroadcastReceiver:
    com.fox.exercise.login.SportsLocalBroadcastReceiver mReceiver -> a
    cn.ingenic.indroidsync.SportsApp mSportsApp -> b
    int invitemsg -> c
    int fans -> d
    int visitors -> e
    java.util.ArrayList al -> f
    com.fox.exercise.newversion.adapter.MsgboxNewAdapter ma -> g
    int sysmsg -> h
    com.fox.exercise.login.SportsLocalBroadcastReceiver getInstance() -> a
    void update(com.fox.exercise.api.entity.UserDetail,boolean) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void setList(java.util.ArrayList) -> a
    void setMsgAdapter(com.fox.exercise.newversion.adapter.MsgboxNewAdapter) -> a
com.fox.exercise.login.SportsLoginUtils -> com.fox.exercise.login.bn:
    java.lang.String mName -> a
    void saveNormalToFile(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean canNormalAccount(java.lang.String,java.lang.String) -> a
    int getNormalNumberCount(java.lang.String) -> a
com.fox.exercise.login.TencentAuthorizeActivity -> com.fox.exercise.login.TencentAuthorizeActivity:
    com.fox.exercise.login.TencentAuthorizeActivity authInstance -> a
    android.view.View progressBar -> b
    android.webkit.WebView mWebView -> c
    android.webkit.WebViewClient mWebViewClient -> d
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy mQqWeiboProxy -> e
    android.widget.FrameLayout tencent_layout -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initData() -> b
    void showProgress() -> c
    void hideProgress() -> d
    void access$0(com.fox.exercise.login.TencentAuthorizeActivity) -> a
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy access$1(com.fox.exercise.login.TencentAuthorizeActivity) -> b
    android.widget.FrameLayout access$2(com.fox.exercise.login.TencentAuthorizeActivity) -> c
    void access$3(com.fox.exercise.login.TencentAuthorizeActivity) -> d
    android.view.View access$4(com.fox.exercise.login.TencentAuthorizeActivity) -> e
com.fox.exercise.login.TencentAuthorizeActivity$1 -> com.fox.exercise.login.bo:
    com.fox.exercise.login.TencentAuthorizeActivity this$0 -> a
    void run() -> run
com.fox.exercise.login.TencentAuthorizeActivity$2 -> com.fox.exercise.login.bp:
    com.fox.exercise.login.TencentAuthorizeActivity this$0 -> a
    void run() -> run
com.fox.exercise.login.TencentAuthorizeActivity$WeiboWebViewClient -> com.fox.exercise.login.bq:
    com.fox.exercise.login.TencentAuthorizeActivity this$0 -> a
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.fox.exercise.login.Tools -> com.fox.exercise.login.br:
    boolean hasSdcard() -> a
    boolean SaveBitmapAsFile(java.lang.String,android.graphics.Bitmap) -> a
    boolean SaveBitmapAsFile(java.lang.String,android.graphics.Bitmap,int) -> a
    boolean isNetworkConnected(android.content.Context) -> a
    android.graphics.Bitmap getBitmapFromURL(java.lang.String) -> a
    void delFolder(java.lang.String) -> b
    void delAllFile(java.lang.String) -> c
com.fox.exercise.login.UpdataApplication -> com.fox.exercise.login.bs:
    android.content.Context mContext -> a
    android.app.ProgressDialog m_dialog -> b
    java.lang.String download_url -> d
    com.fox.exercise.login.FileDownloader fd -> c
    java.lang.String savePathString -> e
    android.os.Handler handler -> f
    int UPDATE_MESSAGE_NETWORKERR -> g
    int UPDATE_MESSAGE_SERVERERR -> h
    int UPDATE_MESSAGE_CANCEL -> i
    int UPDATE_MESSAGE_UPDATE -> j
    android.os.Handler messageHandler -> k
    com.fox.exercise.login.UpdateMessage message -> l
    android.app.ProgressDialog mypDialog -> m
    boolean misOnResume -> n
    boolean misCanceled -> o
    void MessageBox(int,java.lang.String) -> a
    void InitUpdateInfo() -> a
    int getVersionNum(android.content.Context) -> b
    java.lang.String getVersionName(android.content.Context) -> a
    boolean UpdateApp() -> b
    void showProgressDialog(boolean) -> b
    void UpdateAppBackground(boolean) -> a
    java.lang.String access$0(com.fox.exercise.login.UpdataApplication) -> a
    void access$1(com.fox.exercise.login.UpdataApplication,int,java.lang.String) -> a
    com.fox.exercise.login.UpdateMessage access$2(com.fox.exercise.login.UpdataApplication) -> b
    boolean access$3(com.fox.exercise.login.UpdataApplication) -> c
    boolean access$4(com.fox.exercise.login.UpdataApplication) -> d
    void access$5(com.fox.exercise.login.UpdataApplication,boolean) -> a
    void access$6(com.fox.exercise.login.UpdataApplication,boolean) -> b
    void access$7(com.fox.exercise.login.UpdataApplication) -> e
    boolean access$8(com.fox.exercise.login.UpdataApplication) -> f
    void access$9(com.fox.exercise.login.UpdataApplication,com.fox.exercise.login.UpdateMessage) -> a
    android.os.Handler access$10(com.fox.exercise.login.UpdataApplication) -> g
    void access$11(com.fox.exercise.login.UpdataApplication,java.lang.String) -> a
    java.lang.String access$12(com.fox.exercise.login.UpdataApplication) -> h
    android.app.ProgressDialog access$13(com.fox.exercise.login.UpdataApplication) -> i
com.fox.exercise.login.UpdataApplication$1 -> com.fox.exercise.login.bt:
    com.fox.exercise.login.UpdataApplication this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.login.UpdataApplication$2 -> com.fox.exercise.login.bu:
    com.fox.exercise.login.UpdataApplication this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.login.UpdataApplication$3 -> com.fox.exercise.login.bv:
    com.fox.exercise.login.UpdataApplication this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    com.fox.exercise.login.UpdataApplication access$0(com.fox.exercise.login.UpdataApplication$3) -> a
com.fox.exercise.login.UpdataApplication$3$1 -> com.fox.exercise.login.bw:
    com.fox.exercise.login.UpdataApplication$3 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.login.UpdataApplication$3$2 -> com.fox.exercise.login.bx:
    com.fox.exercise.login.UpdataApplication$3 this$1 -> a
    void run() -> run
com.fox.exercise.login.UpdataApplication$4 -> com.fox.exercise.login.by:
    com.fox.exercise.login.UpdataApplication this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.login.UpdataApplication$5 -> com.fox.exercise.login.bz:
    com.fox.exercise.login.UpdataApplication this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.fox.exercise.login.UpdataApplication$6 -> com.fox.exercise.login.ca:
    com.fox.exercise.login.UpdataApplication this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    com.fox.exercise.login.UpdataApplication access$0(com.fox.exercise.login.UpdataApplication$6) -> a
com.fox.exercise.login.UpdataApplication$6$1 -> com.fox.exercise.login.cb:
    com.fox.exercise.login.UpdataApplication$6 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.login.UpdataApplication$6$2 -> com.fox.exercise.login.cc:
    com.fox.exercise.login.UpdataApplication$6 this$1 -> a
    void run() -> run
com.fox.exercise.login.UpdataApplication$7 -> com.fox.exercise.login.cd:
    com.fox.exercise.login.UpdataApplication this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.login.UpdataApplication$8 -> com.fox.exercise.login.ce:
    com.fox.exercise.login.UpdataApplication this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.fox.exercise.login.UpdataApplication$UpdataAppBackgroundThread -> com.fox.exercise.login.cf:
    com.fox.exercise.login.UpdataApplication this$0 -> a
    void run() -> run
com.fox.exercise.login.UpdateMessage -> com.fox.exercise.login.cg:
    java.lang.String versionCode -> a
    java.lang.String versionName -> b
    java.lang.String download_url -> c
    java.lang.String update_info -> d
    java.lang.String filesize -> e
    java.lang.String update_date -> f
    java.lang.String force_update -> g
    java.lang.String PATH -> h
    int getVersionCode() -> a
    void setVersionCode(java.lang.String) -> a
    java.lang.String getVersionName() -> b
    void setVersionName(java.lang.String) -> b
    java.lang.String getDownload_url() -> c
    void setDownload_url(java.lang.String) -> c
    java.lang.String getUpdate_info() -> d
    void setUpdate_info(java.lang.String) -> d
    java.lang.String getFilesize() -> e
    void setFilesize(java.lang.String) -> e
    java.lang.String getUpdate_date() -> f
    void setUpdate_date(java.lang.String) -> f
    java.lang.String getForce_update() -> g
    void setForce_update(java.lang.String) -> g
com.fox.exercise.login.UrlUtil -> com.fox.exercise.login.ch:
    android.os.Bundle parseUrl(java.lang.String) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> b
    java.lang.String encodeUrl(android.os.Bundle) -> a
    java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle) -> a
    java.lang.String buildGetURL(java.lang.String,java.lang.String) -> a
    java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle,boolean) -> a
    java.lang.String encodePostBody(android.os.Bundle,java.lang.String) -> a
    java.net.HttpURLConnection getConnection(java.lang.String) -> c
    java.lang.String buildQuery(android.os.Bundle,java.lang.String) -> b
    java.lang.String getResponseCharset(java.lang.String) -> d
    java.lang.String read(java.io.InputStream,java.lang.String,boolean) -> a
com.fox.exercise.login.UrlUtil$1 -> com.fox.exercise.login.ci:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.fox.exercise.login.UrlUtil$2 -> com.fox.exercise.login.cj:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.fox.exercise.login.UserEditActivity -> com.fox.exercise.login.UserEditActivity:
    boolean mIsDoing -> k
    java.lang.String FACE_PATH -> r
    java.lang.String FACE_PATH_TWO -> s
    cn.ingenic.indroidsync.SportsApp mSportsApp -> t
    android.widget.EditText nickname -> u
    android.widget.TextView mheight -> v
    android.widget.TextView mweight -> w
    android.widget.EditText height -> x
    android.widget.EditText weight -> y
    com.fox.exercise.util.RoundedImage face -> z
    android.widget.ImageButton rButton -> A
    java.lang.String sex -> B
    android.widget.TextView birthday -> C
    java.lang.String birthday2 -> D
    java.lang.String phone2 -> E
    int height2 -> F
    int weight2 -> G
    java.lang.String nickname2 -> H
    java.lang.String faceurl -> I
    boolean isnicknamechanged -> J
    boolean isbirthdaychanged -> K
    boolean isfacechanged -> L
    com.fox.exercise.api.entity.UserDetail userdetail -> M
    int faceCount -> N
    android.app.Dialog userEditProgressDialog -> O
    android.app.Dialog waitProgressDialog -> P
    java.util.Calendar cal -> Q
    com.fox.exercise.widght.WheelView yearWheel -> R
    com.fox.exercise.widght.WheelView monthWheel -> S
    com.fox.exercise.widght.WheelView dayWheel -> T
    int curYear -> U
    int curMonth -> V
    int curDate -> W
    java.lang.String newYearString -> X
    java.lang.String newMonthString -> Y
    java.lang.String newDayString -> Z
    android.widget.PopupWindow menuWindow -> aa
    android.widget.PopupWindow cityWindow -> ab
    android.widget.PopupWindow sexPopWindow -> ac
    android.widget.PopupWindow heightPopWindow -> ad
    android.widget.PopupWindow photoPopWindow -> ae
    android.widget.PopupWindow weightPopWindow -> af
    android.widget.RelativeLayout pop_menu_background -> ag
    int nowyear -> ah
    int nowmonth -> ai
    int nowday -> aj
    android.content.SharedPreferences weiBo_sp -> ak
    java.lang.String weiBo_type -> al
    java.lang.String weiBo_photo -> am
    android.widget.EditText ed_gexing_qianming -> an
    android.widget.TextView bmi_num -> ao
    android.widget.TextView bmi_content -> ap
    android.widget.LinearLayout layout_address -> aq
    android.widget.TextView tx_suozai_points -> ar
    android.widget.TextView tx_suozai_city -> as
    android.widget.TextView tx_suozai_couny -> at
    android.widget.TextView tx_sexs -> au
    android.widget.ImageButton bt_add1 -> av
    android.widget.ImageButton bt_del1 -> aw
    android.widget.ImageButton bt_add2 -> ax
    android.widget.ImageButton bt_del2 -> ay
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> az
    android.text.TextWatcher mTextWatcher -> l
    com.fox.exercise.api.WatchService wService -> aA
    android.content.ServiceConnection wConnection -> aB
    com.fox.exercise.api.WatchService$SCallback wCallback -> aC
    android.graphics.drawable.BitmapDrawable drawable -> aD
    java.lang.String provinceContent -> m
    java.lang.String cityContent -> n
    java.lang.String conuyContent -> o
    boolean isSelect -> p
    com.fox.exercise.widght.OnWheelScrollListener scrollListener -> q
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    java.lang.String stringFilter(java.lang.String) -> a
    void adjustHeight() -> i
    void adjustWeight() -> j
    void showWaitDialog() -> k
    void onClick(android.view.View) -> onClick
    void showPopwindow(android.view.View) -> c
    void showCityPopwindow(android.view.View) -> d
    android.view.View getDataPick() -> l
    android.view.View getCityView() -> m
    int getDay(int,int) -> a
    void initDay(int,int) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri) -> a
    void getImageToView(android.content.Intent) -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onStart() -> onStart
    void onStop() -> onStop
    void setBmi() -> n
    void showSexPop() -> o
    void showHeightPop() -> p
    void showWeightPop() -> q
    void shotSelectImages() -> f
    void onDismiss() -> onDismiss
    boolean judgeNum(java.lang.String) -> b
    android.widget.EditText access$0(com.fox.exercise.login.UserEditActivity) -> a
    void access$1(com.fox.exercise.login.UserEditActivity,com.fox.exercise.api.WatchService) -> a
    com.fox.exercise.api.WatchService access$2(com.fox.exercise.login.UserEditActivity) -> b
    com.fox.exercise.api.WatchService$SCallback access$3(com.fox.exercise.login.UserEditActivity) -> c
    android.widget.TextView access$5(com.fox.exercise.login.UserEditActivity) -> d
    android.widget.TextView access$6(com.fox.exercise.login.UserEditActivity) -> e
    com.fox.exercise.widght.WheelView access$7(com.fox.exercise.login.UserEditActivity) -> f
    com.fox.exercise.widght.WheelView access$8(com.fox.exercise.login.UserEditActivity) -> g
    int access$9(com.fox.exercise.login.UserEditActivity) -> h
    int access$10(com.fox.exercise.login.UserEditActivity) -> i
    void access$11(com.fox.exercise.login.UserEditActivity,int,int) -> a
    cn.ingenic.indroidsync.SportsApp access$12(com.fox.exercise.login.UserEditActivity) -> j
    java.lang.String access$13() -> g
    java.lang.String access$14(com.fox.exercise.login.UserEditActivity) -> k
    java.lang.String access$15(com.fox.exercise.login.UserEditActivity) -> l
    android.app.Dialog access$16(com.fox.exercise.login.UserEditActivity) -> m
    com.fox.exercise.SportsExceptionHandler access$17(com.fox.exercise.login.UserEditActivity) -> n
    boolean access$18(com.fox.exercise.login.UserEditActivity) -> o
    java.lang.String access$19(com.fox.exercise.login.UserEditActivity) -> p
    java.lang.String access$20(com.fox.exercise.login.UserEditActivity) -> q
    java.lang.String access$21(com.fox.exercise.login.UserEditActivity) -> r
    com.fox.exercise.util.RoundedImage access$22(com.fox.exercise.login.UserEditActivity) -> s
    java.lang.String access$23() -> h
    void access$24(com.fox.exercise.login.UserEditActivity,boolean) -> a
    void access$25(com.fox.exercise.login.UserEditActivity,int) -> a
    java.lang.String access$26(com.fox.exercise.login.UserEditActivity) -> t
    android.widget.TextView access$27(com.fox.exercise.login.UserEditActivity) -> u
    int access$28(com.fox.exercise.login.UserEditActivity) -> v
    int access$29(com.fox.exercise.login.UserEditActivity) -> w
    boolean access$30(com.fox.exercise.login.UserEditActivity) -> x
    android.widget.TextView access$31(com.fox.exercise.login.UserEditActivity) -> y
    boolean access$32(com.fox.exercise.login.UserEditActivity) -> z
    android.widget.TextView access$33(com.fox.exercise.login.UserEditActivity) -> A
    android.widget.TextView access$34(com.fox.exercise.login.UserEditActivity) -> B
    android.widget.TextView access$35(com.fox.exercise.login.UserEditActivity) -> C
    android.widget.EditText access$36(com.fox.exercise.login.UserEditActivity) -> D
    android.widget.TextView access$37(com.fox.exercise.login.UserEditActivity) -> E
    android.app.Dialog access$38(com.fox.exercise.login.UserEditActivity) -> F
    void access$39(com.fox.exercise.login.UserEditActivity,java.lang.String) -> a
    void access$40(com.fox.exercise.login.UserEditActivity,java.lang.String) -> b
    java.lang.String access$41(com.fox.exercise.login.UserEditActivity) -> G
    void access$42(com.fox.exercise.login.UserEditActivity,android.widget.PopupWindow) -> a
    android.widget.RelativeLayout access$43(com.fox.exercise.login.UserEditActivity) -> H
    void access$44(com.fox.exercise.login.UserEditActivity,android.widget.PopupWindow) -> b
    void access$45(com.fox.exercise.login.UserEditActivity,java.lang.String) -> c
    void access$46(com.fox.exercise.login.UserEditActivity,java.lang.String) -> d
    com.fox.exercise.widght.WheelView access$47(com.fox.exercise.login.UserEditActivity) -> I
    void access$48(com.fox.exercise.login.UserEditActivity,java.lang.String) -> e
    java.lang.String access$49(com.fox.exercise.login.UserEditActivity) -> J
    java.lang.String access$50(com.fox.exercise.login.UserEditActivity) -> K
    java.lang.String access$51(com.fox.exercise.login.UserEditActivity) -> L
    android.widget.PopupWindow access$52(com.fox.exercise.login.UserEditActivity) -> M
    android.widget.PopupWindow access$53(com.fox.exercise.login.UserEditActivity) -> N
    int access$54(com.fox.exercise.login.UserEditActivity) -> O
    android.widget.PopupWindow access$55(com.fox.exercise.login.UserEditActivity) -> P
    void access$56(com.fox.exercise.login.UserEditActivity) -> Q
    void access$57(com.fox.exercise.login.UserEditActivity) -> R
    android.widget.PopupWindow access$58(com.fox.exercise.login.UserEditActivity) -> S
    android.widget.EditText access$59(com.fox.exercise.login.UserEditActivity) -> T
    void access$60(com.fox.exercise.login.UserEditActivity) -> U
    android.widget.PopupWindow access$61(com.fox.exercise.login.UserEditActivity) -> V
    android.widget.EditText access$62(com.fox.exercise.login.UserEditActivity) -> W
com.fox.exercise.login.UserEditActivity$1 -> com.fox.exercise.login.ck:
    java.lang.CharSequence temp -> b
    int editStart -> c
    int editEnd -> d
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.login.UserEditActivity$10 -> com.fox.exercise.login.cl:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$11 -> com.fox.exercise.login.cm:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    com.fox.exercise.newversion.city.CityPicker val$cityPicker -> b
    void selected(boolean) -> a
com.fox.exercise.login.UserEditActivity$12 -> com.fox.exercise.login.cn:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$13 -> com.fox.exercise.login.co:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$14 -> com.fox.exercise.login.cp:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.fox.exercise.login.UserEditActivity$15 -> com.fox.exercise.login.cq:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    android.widget.RelativeLayout val$myView -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$16 -> com.fox.exercise.login.cr:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    android.widget.RadioButton val$male -> b
    android.widget.RadioButton val$female -> c
    android.widget.RelativeLayout val$myView -> d
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$17 -> com.fox.exercise.login.cs:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.fox.exercise.login.UserEditActivity$18 -> com.fox.exercise.login.ct:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    android.widget.RelativeLayout val$myView -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$19 -> com.fox.exercise.login.cu:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    android.widget.RelativeLayout val$myView -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$2 -> com.fox.exercise.login.cv:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fox.exercise.login.UserEditActivity$20 -> com.fox.exercise.login.cw:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.fox.exercise.login.UserEditActivity$21 -> com.fox.exercise.login.cx:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    android.widget.RelativeLayout val$myView -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$22 -> com.fox.exercise.login.cy:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    android.widget.RelativeLayout val$myView -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$3 -> com.fox.exercise.login.cz:
    com.fox.exercise.login.UserEditActivity this$0 -> a
com.fox.exercise.login.UserEditActivity$4 -> com.fox.exercise.login.da:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onScrollingStarted(com.fox.exercise.widght.WheelView) -> a
    void onScrollingFinished(com.fox.exercise.widght.WheelView) -> b
com.fox.exercise.login.UserEditActivity$5 -> com.fox.exercise.login.db:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.UserEditActivity$6 -> com.fox.exercise.login.dc:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.login.UserEditActivity access$2(com.fox.exercise.login.UserEditActivity$6) -> a
com.fox.exercise.login.UserEditActivity$6$1 -> com.fox.exercise.login.dd:
    com.fox.exercise.login.UserEditActivity$6 this$1 -> a
    com.fox.exercise.api.entity.UserDetail doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.UserDetail) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.UserEditActivity$7 -> com.fox.exercise.login.de:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onDismiss() -> onDismiss
com.fox.exercise.login.UserEditActivity$8 -> com.fox.exercise.login.df:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onDismiss() -> onDismiss
com.fox.exercise.login.UserEditActivity$9 -> com.fox.exercise.login.dg:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.login.UserEditActivity$WeiBoRegistBackTask -> com.fox.exercise.login.dh:
    com.fox.exercise.login.UserEditActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.login.Util -> com.fox.exercise.login.di:
    int IMAGE_DEFAULT_WIDTH -> a
    int IMAGE_DEFAULT_HEIGHT -> b
    int IMAGE_SCALE_WIDTH -> c
    int IMAGE_SCALE_HEIGHT -> d
    int IMAGE_SPACE -> e
    android.net.Uri STORAGE_URI -> o
    java.lang.String CAMERA_MANAGER_BUCKET_NAME -> f
    java.lang.String IMAGE_SAVE_PATH -> g
    java.lang.String IMAGE_SAVE_PATH_TEMP -> h
    java.lang.String IMAGE_SAVE_PATH_HISTORY -> i
    android.graphics.Bitmap$CompressFormat mOutputFormat -> p
    java.lang.String mPictureFormat -> j
    java.lang.String mFilePath -> k
    java.lang.String mHistoryFilePath -> l
    java.lang.String mTFilePath -> m
    boolean mImageSaveToTemp -> n
    int identifer -> q
    android.graphics.Bitmap decodeFile(java.lang.String) -> a
com.fox.exercise.map.LoveWebView -> com.fox.exercise.map.LoveWebView:
    android.os.Handler handler -> a
    int switchType -> b
    android.webkit.WebViewClient mWebViewClient -> c
    android.webkit.WebChromeClient mWebChromeClient -> d
    java.lang.String getJsUrl(int,java.lang.Object[]) -> a
    void setMapType(int) -> setMapType
    void setLabelCenter(int) -> setLabelCenter
    android.os.Handler access$0(com.fox.exercise.map.LoveWebView) -> a
com.fox.exercise.map.LoveWebView$1 -> com.fox.exercise.map.a:
    com.fox.exercise.map.LoveWebView this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.fox.exercise.map.LoveWebView$2 -> com.fox.exercise.map.b:
    com.fox.exercise.map.LoveWebView this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
com.fox.exercise.map.MediaPointInMapGaode -> com.fox.exercise.map.MediaPointInMapGaode:
    com.amap.api.maps.MapView mMapView -> a
    com.amap.api.maps.AMap aMap -> b
    com.amap.api.maps.UiSettings mUiSettings -> c
    android.widget.ImageButton backBtn -> d
    float zoomValue -> e
    double dLat -> f
    double dLng -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void addMediaItem(com.amap.api.maps.model.LatLng,int) -> a
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onBackPressed() -> onBackPressed
com.fox.exercise.map.RecordHelper -> com.fox.exercise.map.c:
    boolean flag -> a
    int mState -> b
    com.fox.exercise.map.RecordHelper$OnStateChangedListener mOnStateChangedListener -> c
    long mSampleStart -> d
    int mSampleLength -> e
    java.io.File mSampleFile -> f
    android.media.MediaRecorder mRecorder -> g
    android.media.MediaPlayer mPlayer -> h
    void stopRecording() -> a
    android.media.MediaPlayer startPlaybackNet(android.content.Context,java.lang.String) -> a
    void stopPlayback() -> b
    void stop() -> c
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void setState(int) -> a
    void signalStateChanged(int) -> b
    void setError(int) -> c
com.fox.exercise.map.RecordHelper$OnStateChangedListener -> com.fox.exercise.map.d:
    void onStateChanged(int) -> a
    void onError(int) -> b
com.fox.exercise.map.SWeiboBaseActivity -> com.fox.exercise.map.SWeiboBaseActivity:
    android.content.Context mContext -> a
    java.lang.String thisLarge -> b
    java.lang.String thisMessage -> c
    java.lang.String thisUrl -> d
    java.lang.String mQQToken -> e
    java.lang.String mQQOpid -> f
    android.app.Dialog loginPregressDialog -> k
    boolean isForShare -> g
    com.fox.exercise.map.SWeiboBaseActivity mInstance -> l
    cn.ingenic.indroidsync.SportsApp mSportsApp -> m
    boolean isFromShareImg -> n
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy mQqWeiboProxy -> o
    java.lang.String access_token -> p
    java.lang.String expires_in -> q
    java.lang.String openID -> r
    java.lang.String openKey -> s
    int shareXinLangId -> h
    int shaerTengXunId -> i
    com.fox.exercise.weibo.sina.AccessInfo xinlang_AccessInfo -> t
    java.lang.String user_name -> u
    com.fox.exercise.weibo.renren.RenrenDataHelper renren_dataHelper -> v
    java.lang.String url -> w
    com.fox.exercise.weibo.tencent.TencentDataHelper tencent_dataHelper -> x
    int max_Time -> j
    android.os.Handler mHandler -> y
    java.lang.String tenxun_authUrl -> z
    java.lang.String tenxun_tokenKey -> A
    android.app.ProgressDialog mProgressDialog -> B
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void shareToXinlangWeibo() -> a
    void goShareActivity(com.fox.exercise.weibo.sina.AccessInfo) -> a
    void initweibo() -> d
    void shareToTenxunWeibo() -> b
    void closeProgressDialog() -> e
    void shareToQQzoneNEWSDK() -> c
    void login() -> f
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResultForAuthActivity(android.content.Intent) -> a
    void saveQQOpenId() -> g
    void saveQQNick() -> h
    void access$0(com.fox.exercise.map.SWeiboBaseActivity,java.lang.String) -> a
    java.lang.String access$1(com.fox.exercise.map.SWeiboBaseActivity) -> a
    void access$2(com.fox.exercise.map.SWeiboBaseActivity,android.app.ProgressDialog) -> a
    void access$3(com.fox.exercise.map.SWeiboBaseActivity) -> b
    void access$4(com.fox.exercise.map.SWeiboBaseActivity,boolean) -> a
    void access$5(com.fox.exercise.map.SWeiboBaseActivity) -> c
    void access$6(com.fox.exercise.map.SWeiboBaseActivity) -> d
    android.os.Handler access$7(com.fox.exercise.map.SWeiboBaseActivity) -> e
    void access$8(com.fox.exercise.map.SWeiboBaseActivity,com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy) -> a
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy access$9(com.fox.exercise.map.SWeiboBaseActivity) -> f
    java.lang.String access$10(com.fox.exercise.map.SWeiboBaseActivity) -> g
    java.lang.String access$11(com.fox.exercise.map.SWeiboBaseActivity) -> h
    java.lang.String access$12(com.fox.exercise.map.SWeiboBaseActivity) -> i
    java.lang.String access$13(com.fox.exercise.map.SWeiboBaseActivity) -> j
    com.fox.exercise.weibo.tencent.TencentDataHelper access$14(com.fox.exercise.map.SWeiboBaseActivity) -> k
com.fox.exercise.map.SWeiboBaseActivity$1 -> com.fox.exercise.map.e:
    java.lang.String userInfo -> a
    com.fox.exercise.map.SWeiboBaseActivity this$0 -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.map.SWeiboBaseActivity$AuthDialogListener -> com.fox.exercise.map.f:
    java.lang.String uid -> b
    java.lang.String tokenString -> c
    com.fox.exercise.map.SWeiboBaseActivity this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void retrieveSinaUserInfo(com.fox.exercise.weibo.sina.oauth2.Weibo,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token,java.lang.String) -> a
    void onCancel() -> a
    void onError(com.fox.exercise.weibo.sina.oauth2.DialogError) -> a
    void onWeiboException(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> b
    void onComplete(java.lang.String) -> a
    void onError(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> a
    java.lang.String access$0(com.fox.exercise.map.SWeiboBaseActivity$AuthDialogListener) -> a
    void access$1(com.fox.exercise.map.SWeiboBaseActivity$AuthDialogListener,com.fox.exercise.weibo.sina.oauth2.Weibo,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token,java.lang.String) -> a
com.fox.exercise.map.SWeiboBaseActivity$AuthDialogListener$1 -> com.fox.exercise.map.g:
    com.fox.exercise.map.SWeiboBaseActivity$AuthDialogListener this$1 -> a
    com.fox.exercise.weibo.sina.oauth2.Weibo val$weibo -> b
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.map.SWeiboBaseActivity$LoginByQQThread -> com.fox.exercise.map.h:
    com.fox.exercise.map.SWeiboBaseActivity this$0 -> a
    void run() -> run
com.fox.exercise.map.SWeiboBaseActivity$MainHandler -> com.fox.exercise.map.i:
    com.fox.exercise.map.SWeiboBaseActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SWeiboBaseActivity$shareToQQThread -> com.fox.exercise.map.j:
    com.fox.exercise.map.SWeiboBaseActivity this$0 -> a
    void run() -> run
com.fox.exercise.map.SportMediaFileDetailActivity -> com.fox.exercise.map.SportMediaFileDetailActivity:
    java.util.ArrayList mediaFilesList -> c
    int mCurrentIndex -> d
    com.fox.exercise.map.VideoHelper mVideoHelper -> e
    com.fox.exercise.map.SportMediaWAV mSportMediaWAV -> f
    com.fox.exercise.util.ScrollLayout scrollLayout -> g
    android.view.LayoutInflater inflater -> h
    android.widget.ImageButton mback -> i
    android.widget.ImageButton positionBtn -> j
    android.widget.ImageButton mdel -> k
    android.app.Dialog alertDialog -> l
    cn.ingenic.indroidsync.SportsApp mSportsApp -> a
    android.widget.TextView textView -> m
    android.app.Dialog dialog -> n
    android.widget.ProgressBar progressBar -> o
    android.widget.ImageView img -> p
    android.graphics.Bitmap bmp -> q
    android.os.Handler handler -> b
    long preTime -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void showDialog(android.content.Context) -> a
    android.app.Dialog onCreateDialog(int,android.os.Bundle) -> onCreateDialog
    void deleMedia() -> a
    void updateListSize(int,int) -> a
    void onClick(android.view.View) -> onClick
    void getMediaFile(int) -> b
    void getPhotoView(int) -> c
    void getVoiceView(int) -> d
    void getVideoView(int) -> e
    void OnViewChange(int) -> a
    android.graphics.Bitmap getBitmap(int) -> f
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    int access$0(com.fox.exercise.map.SportMediaFileDetailActivity) -> a
    java.util.ArrayList access$1(com.fox.exercise.map.SportMediaFileDetailActivity) -> b
    com.fox.exercise.util.ScrollLayout access$2(com.fox.exercise.map.SportMediaFileDetailActivity) -> c
    void access$3(com.fox.exercise.map.SportMediaFileDetailActivity,int,int) -> a
    void access$4(com.fox.exercise.map.SportMediaFileDetailActivity,int) -> a
    android.app.Dialog access$5(com.fox.exercise.map.SportMediaFileDetailActivity) -> d
    android.graphics.Bitmap access$6(com.fox.exercise.map.SportMediaFileDetailActivity,int) -> b
    void access$7(com.fox.exercise.map.SportMediaFileDetailActivity,android.widget.ImageView) -> a
    android.widget.ImageView access$8(com.fox.exercise.map.SportMediaFileDetailActivity) -> e
    void access$9(com.fox.exercise.map.SportMediaFileDetailActivity) -> f
    android.app.Dialog access$10(com.fox.exercise.map.SportMediaFileDetailActivity) -> g
com.fox.exercise.map.SportMediaFileDetailActivity$1 -> com.fox.exercise.map.k:
    com.fox.exercise.map.SportMediaFileDetailActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportMediaFileDetailActivity$2 -> com.fox.exercise.map.l:
    com.fox.exercise.map.SportMediaFileDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportMediaFileDetailActivity$3 -> com.fox.exercise.map.m:
    com.fox.exercise.map.SportMediaFileDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportMediaFileDetailActivity$4 -> com.fox.exercise.map.n:
    com.fox.exercise.map.SportMediaFileDetailActivity this$0 -> a
    void run() -> run
com.fox.exercise.map.SportMediaFileDetailActivity$5 -> com.fox.exercise.map.o:
    com.fox.exercise.map.SportMediaFileDetailActivity this$0 -> a
    int val$id -> b
    android.view.View val$view -> c
    void run() -> run
com.fox.exercise.map.SportMediaWAV -> com.fox.exercise.map.p:
    android.app.Activity mContext -> a
    android.media.MediaPlayer mPlayer -> b
    java.lang.String DOWNLOAD_SAVE_PATH -> c
    java.lang.String mediaPath -> e
    com.fox.exercise.map.RecordHelper mRecorder -> f
    int currentDuration -> g
    android.widget.LinearLayout recodButton -> h
    android.widget.TextView wavDurations -> i
    android.widget.ImageView wavBegin -> j
    android.widget.ImageView mWavBegin -> k
    boolean isPause -> l
    boolean isWaving -> m
    boolean mIsLoading -> n
    boolean mIsNotLoadVoice -> o
    boolean isStart -> p
    android.widget.ProgressBar progress -> q
    com.fox.exercise.map.SportMediaWAV$MyHandler mHandler -> r
    int type -> s
    java.lang.Object lock -> d
    android.os.Handler handler -> t
    void setCurentView(android.view.View,int,java.lang.String) -> a
    void release() -> a
    void resetView(android.view.View) -> a
    void initView(android.view.View,int,java.lang.String) -> b
    java.lang.String getUrlFileName(java.lang.String) -> a
    void progressRun() -> b
    void onClick(android.view.View) -> onClick
    void loadFile() -> c
    void playVoice() -> d
    android.widget.ProgressBar access$0(com.fox.exercise.map.SportMediaWAV) -> a
    void access$1(com.fox.exercise.map.SportMediaWAV,android.widget.ImageView) -> a
    void access$2(com.fox.exercise.map.SportMediaWAV,boolean) -> a
    android.widget.ImageView access$3(com.fox.exercise.map.SportMediaWAV) -> b
    android.widget.ImageView access$4(com.fox.exercise.map.SportMediaWAV) -> c
    void access$5(com.fox.exercise.map.SportMediaWAV,boolean) -> b
    void access$6(com.fox.exercise.map.SportMediaWAV) -> d
    boolean access$7(com.fox.exercise.map.SportMediaWAV) -> e
    int access$8(com.fox.exercise.map.SportMediaWAV) -> f
    boolean access$9(com.fox.exercise.map.SportMediaWAV) -> g
    android.os.Handler access$10(com.fox.exercise.map.SportMediaWAV) -> h
    void access$11(com.fox.exercise.map.SportMediaWAV,int) -> a
    java.lang.String access$12(com.fox.exercise.map.SportMediaWAV) -> i
    void access$13(com.fox.exercise.map.SportMediaWAV,java.lang.String) -> a
    void access$14(com.fox.exercise.map.SportMediaWAV,boolean) -> c
    com.fox.exercise.map.SportMediaWAV$MyHandler access$15(com.fox.exercise.map.SportMediaWAV) -> j
    boolean access$16(com.fox.exercise.map.SportMediaWAV) -> k
    void access$17(com.fox.exercise.map.SportMediaWAV,boolean) -> d
    int access$18(com.fox.exercise.map.SportMediaWAV) -> l
    void access$19(com.fox.exercise.map.SportMediaWAV,boolean) -> e
    void access$20(com.fox.exercise.map.SportMediaWAV,int) -> b
    com.fox.exercise.map.RecordHelper access$21(com.fox.exercise.map.SportMediaWAV) -> m
com.fox.exercise.map.SportMediaWAV$1 -> com.fox.exercise.map.q:
    com.fox.exercise.map.SportMediaWAV this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportMediaWAV$2 -> com.fox.exercise.map.r:
    com.fox.exercise.map.SportMediaWAV this$0 -> a
    void run() -> run
com.fox.exercise.map.SportMediaWAV$3 -> com.fox.exercise.map.s:
    com.fox.exercise.map.SportMediaWAV this$0 -> a
    com.fox.exercise.util.ImageFileUtil val$util -> b
    java.lang.String val$urlStr -> c
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.map.SportMediaWAV$4 -> com.fox.exercise.map.t:
    com.fox.exercise.map.SportMediaWAV this$0 -> a
    void run() -> run
    com.fox.exercise.map.SportMediaWAV access$0(com.fox.exercise.map.SportMediaWAV$4) -> a
com.fox.exercise.map.SportMediaWAV$4$1 -> com.fox.exercise.map.u:
    com.fox.exercise.map.SportMediaWAV$4 this$1 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.map.SportMediaWAV$4$2 -> com.fox.exercise.map.v:
    com.fox.exercise.map.SportMediaWAV$4 this$1 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.map.SportMediaWAV$4$3 -> com.fox.exercise.map.w:
    com.fox.exercise.map.SportMediaWAV$4 this$1 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.map.SportMediaWAV$MyHandler -> com.fox.exercise.map.x:
    com.fox.exercise.map.SportMediaWAV this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportTaskDetailActivityGaode -> com.fox.exercise.map.SportTaskDetailActivityGaode:
    com.fox.exercise.map.SportTaskDetailActivityGaode$AddCoinsHandler addCoinsHandler -> m
    int coins -> n
    com.fox.exercise.api.ApiBack theApiBack -> o
    int thereturn -> p
    com.amap.api.maps.MapView mMapView -> q
    com.amap.api.maps.AMap aMap -> r
    com.amap.api.maps.UiSettings mUiSettings -> s
    java.util.List mGeoPoints -> t
    com.tencent.mm.sdk.openapi.IWXAPI api -> u
    android.widget.ImageButton backBtn -> v
    android.widget.ImageButton sport_map_finish -> w
    android.widget.TextView disValue -> x
    android.widget.TextView conValue -> y
    android.widget.TextView speedValue -> z
    android.widget.TextView chronometerId -> A
    java.lang.String sessionId -> B
    java.lang.String startTime -> C
    java.lang.String startTimeFrom -> D
    int taskID -> E
    int recLen -> F
    int uid -> G
    int typeId -> H
    int deviceId -> I
    int typeDetailId -> J
    double dis -> K
    double con -> L
    double speed -> M
    double heart -> N
    int step -> O
    int isUpload -> P
    int mapType -> Q
    java.lang.String mark_code -> R
    java.lang.String pointsStr -> S
    android.app.Activity mContext -> T
    com.fox.exercise.db.SportSubTaskDB db -> U
    java.lang.String SHARE_PATH -> k
    int curUid -> V
    android.widget.ImageButton uploadBtn -> W
    android.widget.RelativeLayout header_layout -> X
    android.widget.RelativeLayout shareLayout -> Y
    android.widget.RelativeLayout timeLayout -> Z
    android.widget.ImageView mLine1 -> aa
    android.widget.ImageView mLine2 -> ab
    android.widget.RelativeLayout sportStateLayout -> ac
    android.widget.LinearLayout shareLinearLayout -> ad
    android.widget.ImageButton unfoldBtn -> ae
    boolean isGone -> af
    android.app.Dialog mDialog -> ag
    java.util.ArrayList mediaFilesList -> l
    int fromID -> ah
    long preTime -> ai
    cn.ingenic.indroidsync.SportsApp mSportsApp -> aj
    int shareId -> ak
    java.util.List recordLong -> al
    java.util.List recordLat -> am
    com.amap.api.maps.model.MarkerOptions mMarkerOpStart -> an
    com.amap.api.maps.model.MarkerOptions mMarkerOpEnd -> ao
    float zoomValue -> ap
    java.util.List mMediaMarkerList -> aq
    double dLat -> ar
    double dLng -> as
    boolean mapLoaded -> at
    android.app.Dialog dialog -> au
    android.app.Dialog shareDialog -> av
    java.lang.String startTimeQQ -> aw
    boolean qq_health -> ax
    android.widget.TextView peiValue -> ay
    android.widget.ImageButton sport_detail_share -> az
    com.fox.exercise.ImageDownloader mDownloader -> aA
    com.tencent.tauth.Tencent mTencent -> aB
    android.app.Dialog mLoadProgressDialog -> aC
    android.os.Handler sportHandler -> aD
    android.os.Handler mDrawTrajectoryHandler -> aE
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> f
    void initFromSportDetail(com.fox.exercise.api.entity.SportTask) -> a
    void onStart() -> onStart
    void getMediaFiles() -> g
    com.amap.api.maps.model.Marker addMediaItem(com.amap.api.maps.model.LatLng,int) -> a
    void onClick(android.view.View) -> onClick
    void goShare(int) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.app.Dialog onCreateDialog(int,android.os.Bundle,int) -> a
    void uploadQQAndCoinsAgain() -> i
    void uploadcoins() -> j
    void deleteSportTaskByID() -> k
    void shareToFaXian() -> l
    void shareTo() -> m
    void shareToQQ() -> n
    void shareToNewWeixin() -> o
    void onBackPressed() -> onBackPressed
    android.graphics.Bitmap shot() -> d
    void drawMap() -> p
    android.graphics.Bitmap syntheticImagesBitmap(android.graphics.Bitmap,android.graphics.Bitmap) -> a
    void update() -> q
    void animateTo(com.amap.api.maps.model.LatLng) -> a
    void getMapScreenShot() -> e
    void onMapScreenShot(android.graphics.Bitmap) -> onMapScreenShot
    void onCancel() -> h
    void onComplete(java.lang.Object) -> a
    void onError(com.tencent.tauth.UiError) -> a
    void waitShowDialog() -> r
    android.app.Dialog access$0(com.fox.exercise.map.SportTaskDetailActivityGaode) -> a
    int access$1(com.fox.exercise.map.SportTaskDetailActivityGaode) -> b
    void access$2(com.fox.exercise.map.SportTaskDetailActivityGaode) -> c
    android.app.Activity access$3(com.fox.exercise.map.SportTaskDetailActivityGaode) -> d
    boolean access$4(com.fox.exercise.map.SportTaskDetailActivityGaode) -> e
    int access$5(com.fox.exercise.map.SportTaskDetailActivityGaode) -> f
    android.widget.ImageButton access$6(com.fox.exercise.map.SportTaskDetailActivityGaode) -> g
    void access$7(com.fox.exercise.map.SportTaskDetailActivityGaode,com.fox.exercise.api.entity.SportTask) -> a
    void access$8(com.fox.exercise.map.SportTaskDetailActivityGaode) -> h
    void access$9(com.fox.exercise.map.SportTaskDetailActivityGaode,int) -> a
    int access$10(com.fox.exercise.map.SportTaskDetailActivityGaode) -> i
    void access$11(com.fox.exercise.map.SportTaskDetailActivityGaode) -> j
    void access$12(com.fox.exercise.map.SportTaskDetailActivityGaode) -> k
    java.util.List access$13(com.fox.exercise.map.SportTaskDetailActivityGaode) -> l
    void access$14(com.fox.exercise.map.SportTaskDetailActivityGaode) -> m
    int access$15(com.fox.exercise.map.SportTaskDetailActivityGaode) -> n
    int access$16(com.fox.exercise.map.SportTaskDetailActivityGaode) -> o
    com.fox.exercise.api.ApiBack access$17(com.fox.exercise.map.SportTaskDetailActivityGaode) -> p
    android.os.Handler access$18(com.fox.exercise.map.SportTaskDetailActivityGaode) -> q
    java.lang.String access$19(com.fox.exercise.map.SportTaskDetailActivityGaode) -> r
    int access$20(com.fox.exercise.map.SportTaskDetailActivityGaode) -> s
    int access$21(com.fox.exercise.map.SportTaskDetailActivityGaode) -> t
    int access$22(com.fox.exercise.map.SportTaskDetailActivityGaode) -> u
    java.lang.String access$23(com.fox.exercise.map.SportTaskDetailActivityGaode) -> v
    int access$24(com.fox.exercise.map.SportTaskDetailActivityGaode) -> w
    double access$25(com.fox.exercise.map.SportTaskDetailActivityGaode) -> x
    double access$26(com.fox.exercise.map.SportTaskDetailActivityGaode) -> y
    double access$27(com.fox.exercise.map.SportTaskDetailActivityGaode) -> z
    double access$28(com.fox.exercise.map.SportTaskDetailActivityGaode) -> A
    java.lang.String access$29(com.fox.exercise.map.SportTaskDetailActivityGaode) -> B
    int access$30(com.fox.exercise.map.SportTaskDetailActivityGaode) -> C
    int access$31(com.fox.exercise.map.SportTaskDetailActivityGaode) -> D
    java.lang.String access$32(com.fox.exercise.map.SportTaskDetailActivityGaode) -> E
    void access$33(com.fox.exercise.map.SportTaskDetailActivityGaode,int) -> b
    void access$34(com.fox.exercise.map.SportTaskDetailActivityGaode,int) -> c
    void access$35(com.fox.exercise.map.SportTaskDetailActivityGaode,int) -> d
    void access$36(com.fox.exercise.map.SportTaskDetailActivityGaode,com.fox.exercise.api.ApiBack) -> a
    void access$37(com.fox.exercise.map.SportTaskDetailActivityGaode,int) -> e
    void access$38(com.fox.exercise.map.SportTaskDetailActivityGaode) -> F
    cn.ingenic.indroidsync.SportsApp access$39(com.fox.exercise.map.SportTaskDetailActivityGaode) -> G
    int access$40(com.fox.exercise.map.SportTaskDetailActivityGaode) -> H
    int access$41(com.fox.exercise.map.SportTaskDetailActivityGaode) -> I
    int access$42(com.fox.exercise.map.SportTaskDetailActivityGaode) -> J
    android.app.Dialog access$43(com.fox.exercise.map.SportTaskDetailActivityGaode) -> K
    void access$44(com.fox.exercise.map.SportTaskDetailActivityGaode,com.fox.exercise.ImageDownloader) -> a
    com.fox.exercise.ImageDownloader access$45(com.fox.exercise.map.SportTaskDetailActivityGaode) -> L
    void access$46(com.fox.exercise.map.SportTaskDetailActivityGaode) -> M
    void access$47(com.fox.exercise.map.SportTaskDetailActivityGaode) -> N
    void access$48(com.fox.exercise.map.SportTaskDetailActivityGaode,boolean) -> a
    java.util.List access$49(com.fox.exercise.map.SportTaskDetailActivityGaode) -> O
    java.util.List access$50(com.fox.exercise.map.SportTaskDetailActivityGaode) -> P
    com.amap.api.maps.AMap access$51(com.fox.exercise.map.SportTaskDetailActivityGaode) -> Q
    java.util.List access$52(com.fox.exercise.map.SportTaskDetailActivityGaode) -> R
    double access$53(com.fox.exercise.map.SportTaskDetailActivityGaode) -> S
    double access$54(com.fox.exercise.map.SportTaskDetailActivityGaode) -> T
    com.amap.api.maps.model.Marker access$55(com.fox.exercise.map.SportTaskDetailActivityGaode,com.amap.api.maps.model.LatLng,int) -> a
    android.app.Dialog access$56(com.fox.exercise.map.SportTaskDetailActivityGaode) -> U
    void access$57(com.fox.exercise.map.SportTaskDetailActivityGaode) -> V
    void access$58(com.fox.exercise.map.SportTaskDetailActivityGaode) -> W
    com.fox.exercise.db.SportSubTaskDB access$59(com.fox.exercise.map.SportTaskDetailActivityGaode) -> X
    java.lang.String access$60(com.fox.exercise.map.SportTaskDetailActivityGaode) -> Y
    android.app.Dialog access$61(com.fox.exercise.map.SportTaskDetailActivityGaode) -> Z
    void access$62(com.fox.exercise.map.SportTaskDetailActivityGaode,boolean) -> b
com.fox.exercise.map.SportTaskDetailActivityGaode$1 -> com.fox.exercise.map.y:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportTaskDetailActivityGaode$10 -> com.fox.exercise.map.z:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportTaskDetailActivityGaode$2 -> com.fox.exercise.map.aa:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportTaskDetailActivityGaode$3 -> com.fox.exercise.map.ab:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    void onMapLoaded() -> onMapLoaded
com.fox.exercise.map.SportTaskDetailActivityGaode$4 -> com.fox.exercise.map.ac:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
com.fox.exercise.map.SportTaskDetailActivityGaode$5 -> com.fox.exercise.map.ad:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportTaskDetailActivityGaode$6 -> com.fox.exercise.map.ae:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    int val$type -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportTaskDetailActivityGaode$7 -> com.fox.exercise.map.af:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportTaskDetailActivityGaode$8 -> com.fox.exercise.map.ag:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportTaskDetailActivityGaode$9 -> com.fox.exercise.map.ah:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    void qqResult() -> a
com.fox.exercise.map.SportTaskDetailActivityGaode$AddCoinsHandler -> com.fox.exercise.map.ai:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportTaskDetailActivityGaode$SportAsyncTask -> com.fox.exercise.map.aj:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.fox.exercise.map.SportTaskDetailActivityGaode$goShare -> com.fox.exercise.map.ak:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.map.SportTaskDetailActivityGaode$saveDataToServer -> com.fox.exercise.map.al:
    com.fox.exercise.map.SportTaskDetailActivityGaode this$0 -> a
    java.lang.Integer doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.map.SportTaskDetailActivityGaode access$3(com.fox.exercise.map.SportTaskDetailActivityGaode$saveDataToServer) -> a
com.fox.exercise.map.SportTaskDetailActivityGaode$saveDataToServer$1 -> com.fox.exercise.map.am:
    com.fox.exercise.map.SportTaskDetailActivityGaode$saveDataToServer this$1 -> a
    java.lang.Integer val$id -> b
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.map.SportingMapActivity -> com.fox.exercise.map.SportingMapActivity:
    android.app.Activity mContext -> o
    com.baidu.mapapi.map.offline.MKOfflineMap mOffline -> p
    com.baidu.mapapi.map.MapView mMapView -> q
    com.baidu.mapapi.map.BaiduMap aMap -> r
    com.baidu.mapapi.map.UiSettings mUiSettings -> s
    java.lang.String SERVICE_NAME -> t
    com.baidu.mapapi.model.LatLng locData -> u
    com.baidu.mapapi.model.LatLng curLocData -> v
    com.baidu.mapapi.model.LatLng curMediaLoc -> w
    double mLat -> a
    double mLng -> b
    java.util.List mGeoPoints -> x
    java.util.List mDrawPoints -> y
    boolean lastPointInValid -> z
    android.widget.TextView chron -> A
    android.widget.TextView time_txt -> B
    android.widget.LinearLayout startStopBut -> C
    android.widget.ImageButton backBtn -> D
    android.widget.ImageButton cameraBtn -> E
    android.widget.ImageButton videoBtn -> F
    android.widget.ImageButton voiceBtn -> G
    android.widget.Button startBtn -> H
    android.widget.Button pauseBtn -> I
    android.widget.Button stopBtn -> J
    java.util.Timer timer -> K
    boolean isPause -> L
    boolean isPauseForClick -> M
    boolean isPauseForGPS -> N
    boolean isRun -> O
    android.widget.RelativeLayout unfoldView -> P
    android.widget.ImageButton unfoldBtn -> Q
    boolean isGone -> R
    android.widget.TextView disValue -> S
    android.widget.TextView conValue -> T
    android.widget.TextView speedValue -> U
    android.widget.TextView paceValue -> V
    android.widget.TextView altitudeValue -> W
    android.widget.TextView pressureValue -> X
    android.widget.ImageView imageGps -> Y
    android.widget.ImageView imageview_jibu -> Z
    java.lang.String tempAltitude -> aa
    java.lang.String startTime -> ab
    long startTimeSeconds -> ac
    int limitId -> ad
    int uid -> ae
    int typeId -> af
    int deviceId -> ag
    int typeDetailId -> ah
    double pace -> ai
    int isUpload -> aj
    double dis -> ak
    double speed -> al
    double heart -> am
    double lastSpeed -> an
    double newSpeed -> ao
    int maxSpeedNum -> ap
    boolean speedOverLimit -> aq
    int con -> ar
    int stepNum -> as
    int PHOTOFromCAMERA -> c
    int VIDEO -> d
    int VOICE -> e
    int LOCKSCREEN -> f
    android.app.Dialog mLoadDialog -> at
    android.app.Dialog mUploadDialog -> au
    java.lang.String mediaFileName -> av
    java.lang.String mediaFilePath -> aw
    int mediaFileWidth -> ax
    int mediaFileHight -> ay
    int mediaFileDuration -> az
    int taskID -> g
    boolean isMedia -> aA
    int mediaTypeID -> h
    android.content.SharedPreferences$Editor ed -> aB
    com.fox.exercise.db.SportSubTaskDB db -> aC
    com.baidu.mapapi.map.MarkerOptions mMarkerOpStart -> aD
    com.baidu.mapapi.map.MarkerOptions mMarkerOpMiddle -> aE
    com.baidu.mapapi.map.Marker mMarkerStart -> aF
    com.baidu.mapapi.map.Marker mMarkerMiddle -> aG
    android.content.SharedPreferences sp -> aH
    android.content.SharedPreferences sharedPreferences -> aI
    java.lang.Boolean isStart -> aJ
    int sportype -> aK
    cn.ingenic.indroidsync.SportsApp mSportsApp -> aL
    android.location.LocationManager locationManager -> aM
    com.fox.exercise.map.SportingMapActivity$GpsLocationListener gpsLocationListener -> aN
    android.app.Dialog alertDialog -> aO
    long preTime -> aP
    com.fox.exercise.lockscreen.SliderRelativeLayout sliderLayout -> aQ
    int MSG_LOCK_SUCESS -> i
    android.content.SharedPreferences foxSportSetting -> aR
    android.widget.RelativeLayout lockscreen -> aS
    java.util.Map sporttype -> aT
    android.os.PowerManager$WakeLock mWakeLock -> aU
    java.lang.Boolean isFirstSave -> aV
    java.lang.Boolean isEndSave -> aW
    com.baidu.mapapi.map.PolylineOptions options -> aX
    com.baidu.mapapi.map.Polyline mPolyline -> aY
    com.baidu.location.LocationClient mLocClient -> aZ
    com.fox.exercise.map.SportingMapActivity$MyLocationListenner myListener -> j
    boolean findMethod -> ba
    android.os.Vibrator djs_vibrator -> bb
    android.widget.LinearLayout djs_layout -> bc
    android.widget.ImageView djs_image -> bd
    android.view.animation.Animation djs_animation -> be
    int djs_count -> bf
    int djs_counts -> bg
    java.lang.Boolean djs_zd -> bh
    android.content.SharedPreferences djs_sp -> bi
    int[] myDjsImage -> bj
    com.fox.exercise.pedometer.TimingManager timingMgr -> bk
    int coins -> bl
    boolean activityPause -> bm
    boolean canSave -> bn
    com.fox.exercise.api.ApiBack theApiBack -> bo
    boolean is_start_map -> bp
    com.fox.exercise.map.VoicePrompt vp -> bq
    java.util.Map hashMap -> br
    android.hardware.SensorManager sensorManager -> bs
    android.hardware.Sensor ss -> bt
    float accelerometer -> bu
    java.lang.Boolean mTroughAppear -> bv
    int mCountNum -> bw
    long mPrevStepTime -> bx
    int lastCountNum -> by
    android.widget.PopupWindow mSportWindow -> bz
    android.widget.RelativeLayout timeLayout -> bA
    com.fox.exercise.pedometer.ImageWorkManager mImageWorkerMan_Icon -> bB
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker_Icon -> bC
    java.lang.String disStringValue -> bD
    java.lang.String conStringValue -> bE
    java.lang.String speedStringValue -> bF
    java.lang.String paceStringValue -> bG
    android.widget.TextView sporting_sport_peiPace -> bH
    android.widget.TextView sporting_sport_pingjunSpeed -> bI
    android.widget.TextView sporting_sportxiaohao -> bJ
    android.widget.TextView time_disValue -> bK
    android.widget.TextView zong_li_txt -> bL
    android.widget.Button suodingBtn -> bM
    android.widget.ImageButton close_yuyin -> bN
    java.lang.Boolean isVoiceON -> bO
    android.widget.TextView textview_stepnum -> bP
    boolean mIsRunning -> bQ
    boolean mIsFirst -> bR
    com.fox.exercise.pedometer.PedometerSettings mPedometerSettings -> bS
    android.content.SharedPreferences mSettings -> bT
    android.content.SharedPreferences msharedPreferences -> bU
    android.content.SharedPreferences mState -> bV
    android.widget.TextView sport_topTitle -> bW
    java.lang.String markCode -> bX
    int recLen -> bY
    int mTempCount -> bZ
    java.lang.Boolean isOpen -> ca
    java.lang.Boolean lockisopen -> cb
    java.lang.Boolean isStepBegin -> cc
    android.os.Handler handler -> k
    com.fox.exercise.newversion.FirstStepService mService -> cd
    android.content.ServiceConnection mConnection -> ce
    com.fox.exercise.newversion.FirstStepService$ICallback mCallback -> cf
    double disVal -> cg
    int randomCoins -> ch
    int mRandom -> ci
    double mKilometre -> cj
    boolean isgps -> ck
    java.lang.String path -> cl
    android.os.Handler mmHandler -> cm
    int netError -> cn
    android.os.Handler mHandlerDjs -> co
    android.content.BroadcastReceiver timeReceiver -> l
    boolean processResume -> cp
    int waitForResume -> cq
    boolean isWaitForPause -> cr
    int gpsType -> m
    int gpsTypeAdd -> cs
    int gpsTypeOtherAdd -> ct
    long waitForPauseTime -> cu
    android.location.GpsStatus$Listener listener -> n
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> e
    void setSportstype() -> f
    void setView() -> g
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    void bindStepService() -> h
    void onDestroy() -> onDestroy
    void unbindStepService() -> i
    android.app.Dialog onCreateDialog(int,android.os.Bundle,int) -> a
    boolean isOPen(android.content.Context) -> a
    void toggleGPS(android.content.Context,java.lang.Boolean) -> a
    int save(boolean) -> a
    void startService() -> j
    void stopService() -> k
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void getMediaFile(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void initGPS() -> l
    double CalcPressure(double) -> a
    void updateSpeed(android.location.Location) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void RemoveLockScreenMSG() -> a
    void SendLockScreenMSG() -> b
    void SendBtnLockScreenMSG() -> c
    void animateTo(com.baidu.mapapi.model.LatLng) -> a
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void goStart() -> m
    void goStop() -> n
    void goResume() -> o
    void goPause() -> p
    void processPause() -> q
    void getGPSStatus() -> r
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void CountStep(float,float,float) -> a
    void updateStepInformation() -> s
    void startStepService() -> d
    int access$0(com.fox.exercise.map.SportingMapActivity) -> a
    long access$1(com.fox.exercise.map.SportingMapActivity) -> b
    void access$2(com.fox.exercise.map.SportingMapActivity,int) -> a
    boolean access$3(com.fox.exercise.map.SportingMapActivity) -> c
    android.widget.TextView access$4(com.fox.exercise.map.SportingMapActivity) -> d
    int access$5(com.fox.exercise.map.SportingMapActivity) -> e
    android.widget.TextView access$6(com.fox.exercise.map.SportingMapActivity) -> f
    int access$7(com.fox.exercise.map.SportingMapActivity,boolean) -> a
    java.lang.Boolean access$8(com.fox.exercise.map.SportingMapActivity) -> g
    void access$9(com.fox.exercise.map.SportingMapActivity) -> h
    android.content.SharedPreferences access$10(com.fox.exercise.map.SportingMapActivity) -> i
    void access$11(com.fox.exercise.map.SportingMapActivity,java.lang.Boolean) -> a
    java.lang.Boolean access$12(com.fox.exercise.map.SportingMapActivity) -> j
    java.lang.Boolean access$13(com.fox.exercise.map.SportingMapActivity) -> k
    com.fox.exercise.lockscreen.SliderRelativeLayout access$14(com.fox.exercise.map.SportingMapActivity) -> l
    android.os.Handler access$15(com.fox.exercise.map.SportingMapActivity) -> m
    android.widget.RelativeLayout access$16(com.fox.exercise.map.SportingMapActivity) -> n
    void access$17(com.fox.exercise.map.SportingMapActivity,com.fox.exercise.map.VoicePrompt) -> a
    com.fox.exercise.map.VoicePrompt access$18(com.fox.exercise.map.SportingMapActivity) -> o
    void access$19(com.fox.exercise.map.SportingMapActivity) -> p
    void access$20(com.fox.exercise.map.SportingMapActivity,com.fox.exercise.newversion.FirstStepService) -> a
    com.fox.exercise.newversion.FirstStepService access$21(com.fox.exercise.map.SportingMapActivity) -> q
    com.fox.exercise.newversion.FirstStepService$ICallback access$22(com.fox.exercise.map.SportingMapActivity) -> r
    cn.ingenic.indroidsync.SportsApp access$23(com.fox.exercise.map.SportingMapActivity) -> s
    void access$24(com.fox.exercise.map.SportingMapActivity,android.content.SharedPreferences) -> a
    android.widget.ImageView access$25(com.fox.exercise.map.SportingMapActivity) -> t
    int[] access$26(com.fox.exercise.map.SportingMapActivity) -> u
    int access$27(com.fox.exercise.map.SportingMapActivity) -> v
    android.view.animation.Animation access$28(com.fox.exercise.map.SportingMapActivity) -> w
    void access$29(com.fox.exercise.map.SportingMapActivity,int) -> b
    android.os.Handler access$30(com.fox.exercise.map.SportingMapActivity) -> x
    android.widget.LinearLayout access$31(com.fox.exercise.map.SportingMapActivity) -> y
    com.baidu.mapapi.model.LatLng access$32(com.fox.exercise.map.SportingMapActivity) -> z
    android.hardware.Sensor access$33(com.fox.exercise.map.SportingMapActivity) -> A
    void access$34(com.fox.exercise.map.SportingMapActivity) -> B
    android.app.Activity access$35(com.fox.exercise.map.SportingMapActivity) -> C
    android.os.Vibrator access$36(com.fox.exercise.map.SportingMapActivity) -> D
    void access$37(com.fox.exercise.map.SportingMapActivity) -> E
    void access$38(com.fox.exercise.map.SportingMapActivity,int) -> c
    int access$39(com.fox.exercise.map.SportingMapActivity) -> F
    void access$40(com.fox.exercise.map.SportingMapActivity,int) -> d
    int access$41(com.fox.exercise.map.SportingMapActivity) -> G
    int access$42(com.fox.exercise.map.SportingMapActivity) -> H
    android.widget.ImageView access$43(com.fox.exercise.map.SportingMapActivity) -> I
    android.widget.ImageView access$44(com.fox.exercise.map.SportingMapActivity) -> J
    void access$45(com.fox.exercise.map.SportingMapActivity,int) -> e
    void access$46(com.fox.exercise.map.SportingMapActivity,int) -> f
    void access$47(com.fox.exercise.map.SportingMapActivity,android.location.Location) -> a
    android.location.LocationManager access$48(com.fox.exercise.map.SportingMapActivity) -> K
    android.app.Dialog access$49(com.fox.exercise.map.SportingMapActivity) -> L
    int access$50(com.fox.exercise.map.SportingMapActivity) -> M
    void access$51(com.fox.exercise.map.SportingMapActivity,int) -> g
    void access$52(com.fox.exercise.map.SportingMapActivity,com.baidu.mapapi.model.LatLng) -> a
    void access$53(com.fox.exercise.map.SportingMapActivity,com.baidu.mapapi.model.LatLng) -> b
    void access$54(com.fox.exercise.map.SportingMapActivity,com.baidu.mapapi.model.LatLng) -> c
    com.baidu.mapapi.map.Marker access$55(com.fox.exercise.map.SportingMapActivity) -> N
    com.baidu.mapapi.map.BaiduMap access$56(com.fox.exercise.map.SportingMapActivity) -> O
    com.baidu.mapapi.map.MarkerOptions access$57(com.fox.exercise.map.SportingMapActivity) -> P
    void access$58(com.fox.exercise.map.SportingMapActivity,com.baidu.mapapi.map.Marker) -> a
    java.lang.Boolean access$59(com.fox.exercise.map.SportingMapActivity) -> Q
    boolean access$60(com.fox.exercise.map.SportingMapActivity) -> R
    long access$61(com.fox.exercise.map.SportingMapActivity) -> S
    void access$62(com.fox.exercise.map.SportingMapActivity,java.lang.Boolean) -> b
    android.hardware.SensorManager access$63(com.fox.exercise.map.SportingMapActivity) -> T
    double access$64(com.fox.exercise.map.SportingMapActivity) -> U
    int access$65(com.fox.exercise.map.SportingMapActivity) -> V
    java.util.Timer access$66(com.fox.exercise.map.SportingMapActivity) -> W
    void access$67(com.fox.exercise.map.SportingMapActivity,java.lang.Boolean) -> c
    void access$68(com.fox.exercise.map.SportingMapActivity,boolean) -> b
    android.app.Dialog access$69(com.fox.exercise.map.SportingMapActivity) -> X
    void access$70(com.fox.exercise.map.SportingMapActivity,boolean) -> c
    boolean access$71(com.fox.exercise.map.SportingMapActivity) -> Y
    android.app.Dialog access$72(com.fox.exercise.map.SportingMapActivity) -> Z
    void access$73(com.fox.exercise.map.SportingMapActivity,int) -> h
    int access$74(com.fox.exercise.map.SportingMapActivity) -> aa
    int access$75(com.fox.exercise.map.SportingMapActivity) -> ab
    java.util.Map access$76(com.fox.exercise.map.SportingMapActivity) -> ac
    void access$77(com.fox.exercise.map.SportingMapActivity,int) -> i
    void access$78(com.fox.exercise.map.SportingMapActivity,int) -> j
    java.lang.String access$79(com.fox.exercise.map.SportingMapActivity) -> ad
    java.util.Map access$80(com.fox.exercise.map.SportingMapActivity) -> ae
    void access$81(com.fox.exercise.map.SportingMapActivity,com.fox.exercise.db.SportSubTaskDB) -> a
    com.fox.exercise.db.SportSubTaskDB access$82(com.fox.exercise.map.SportingMapActivity) -> af
    int access$83(com.fox.exercise.map.SportingMapActivity) -> ag
    android.os.PowerManager$WakeLock access$84(com.fox.exercise.map.SportingMapActivity) -> ah
    com.fox.exercise.pedometer.TimingManager access$85(com.fox.exercise.map.SportingMapActivity) -> ai
    void access$86(com.fox.exercise.map.SportingMapActivity,long) -> a
    void access$87(com.fox.exercise.map.SportingMapActivity,int) -> k
    void access$88(com.fox.exercise.map.SportingMapActivity,boolean) -> d
com.fox.exercise.map.SportingMapActivity$1 -> com.fox.exercise.map.an:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportingMapActivity$1$1 -> com.fox.exercise.map.ao:
    com.fox.exercise.map.SportingMapActivity$1 this$1 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.map.SportingMapActivity$10 -> com.fox.exercise.map.ap:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onMapStatusChange(com.baidu.mapapi.map.MapStatus) -> onMapStatusChange
    void onMapStatusChangeFinish(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeFinish
    void onMapStatusChangeStart(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeStart
com.fox.exercise.map.SportingMapActivity$11 -> com.fox.exercise.map.aq:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivity$12 -> com.fox.exercise.map.ar:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.fox.exercise.map.SportingMapActivity$13 -> com.fox.exercise.map.as:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.fox.exercise.map.SportingMapActivity$14 -> com.fox.exercise.map.at:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportingMapActivity$15 -> com.fox.exercise.map.au:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportingMapActivity$16 -> com.fox.exercise.map.av:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportingMapActivity$17 -> com.fox.exercise.map.aw:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.fox.exercise.map.SportingMapActivity$18 -> com.fox.exercise.map.ax:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivity$2 -> com.fox.exercise.map.ay:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fox.exercise.map.SportingMapActivity$3 -> com.fox.exercise.map.az:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void stepsChanged(int) -> a
    void caloriesChanged(float) -> a
com.fox.exercise.map.SportingMapActivity$4 -> com.fox.exercise.map.ba:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportingMapActivity$5 -> com.fox.exercise.map.bb:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportingMapActivity$6 -> com.fox.exercise.map.bc:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.map.SportingMapActivity$7 -> com.fox.exercise.map.bd:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
com.fox.exercise.map.SportingMapActivity$8 -> com.fox.exercise.map.be:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onMapLoaded() -> onMapLoaded
com.fox.exercise.map.SportingMapActivity$9 -> com.fox.exercise.map.bf:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.fox.exercise.map.SportingMapActivity$GpsLocationListener -> com.fox.exercise.map.bg:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.fox.exercise.map.SportingMapActivity$MyLocationListenner -> com.fox.exercise.map.bh:
    com.fox.exercise.map.SportingMapActivity this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.fox.exercise.map.SportingMapActivityGaode -> com.fox.exercise.map.SportingMapActivityGaode:
    android.app.Activity mContext -> n
    com.amap.api.maps.MapView mMapView -> o
    com.amap.api.maps.AMap aMap -> p
    com.amap.api.maps.UiSettings mUiSettings -> q
    java.lang.String SERVICE_NAME -> r
    com.amap.api.maps.model.LatLng locData -> s
    com.amap.api.maps.model.LatLng curLocData -> t
    com.amap.api.maps.model.LatLng curMediaLoc -> u
    double mLat -> a
    double mLng -> b
    java.util.List mGeoPoints -> v
    java.util.List mDrawPoints -> w
    boolean lastPointInValid -> x
    android.widget.TextView chron -> y
    android.widget.TextView time_txt -> z
    android.widget.LinearLayout startStopBut -> A
    android.widget.ImageButton backBtn -> B
    android.widget.ImageButton cameraBtn -> C
    android.widget.ImageButton videoBtn -> D
    android.widget.ImageButton voiceBtn -> E
    android.widget.Button startBtn -> F
    android.widget.Button pauseBtn -> G
    android.widget.Button stopBtn -> H
    java.util.Timer timer -> I
    java.util.TimerTask task -> J
    boolean isPause -> K
    boolean isPauseForGPS -> L
    boolean isRun -> M
    android.widget.RelativeLayout unfoldView -> N
    android.widget.ImageButton unfoldBtn -> O
    boolean isGone -> P
    android.widget.TextView altitudeValue -> Q
    android.widget.TextView pressureValue -> R
    android.widget.ImageView imageGps -> S
    android.widget.ImageView imageview_jibu -> T
    java.lang.String startTime -> U
    java.lang.String todayTime -> V
    long startTimeSeconds -> W
    java.lang.String tempAltitude -> X
    int limitId -> Y
    int uid -> Z
    int typeId -> aa
    int deviceId -> ab
    int typeDetailId -> ac
    double pace -> ad
    int isUpload -> ae
    double dis -> af
    double speed -> ag
    double heart -> ah
    double lastSpeed -> ai
    double newSpeed -> aj
    int maxSpeedNum -> ak
    boolean speedOverLimit -> al
    int con -> am
    int stepNum -> an
    int PHOTOFromCAMERA -> c
    int VIDEO -> d
    int VOICE -> e
    int LOCKSCREEN -> f
    android.app.Dialog mLoadDialog -> ao
    android.app.Dialog mUploadDialog -> ap
    java.lang.String mediaFileName -> aq
    java.lang.String mediaFilePath -> ar
    int mediaFileWidth -> as
    int mediaFileHight -> at
    int mediaFileDuration -> au
    int taskID -> g
    boolean isMedia -> av
    int mediaTypeID -> h
    android.content.SharedPreferences$Editor ed -> aw
    com.fox.exercise.map.SportingMapActivityGaode$AddCoinsHandler addCoinsHandler -> ax
    com.fox.exercise.db.SportSubTaskDB db -> ay
    com.amap.api.maps.model.MarkerOptions mMarkerOpStart -> az
    com.amap.api.maps.model.MarkerOptions mMarkerOpMiddle -> aA
    com.amap.api.maps.model.Marker mMarkerStart -> aB
    com.amap.api.maps.model.Marker mMarkerMiddle -> aC
    android.content.SharedPreferences sp -> aD
    android.content.SharedPreferences sharedPreferences -> aE
    int isBack -> aF
    java.lang.Boolean isStart -> aG
    int sportype -> aH
    cn.ingenic.indroidsync.SportsApp mSportsApp -> aI
    android.location.LocationManager locationManager -> aJ
    com.fox.exercise.map.SportingMapActivityGaode$GpsLocationListener gpsLocationListener -> aK
    android.app.Dialog alertDialog -> aL
    long preTime -> aM
    com.fox.exercise.lockscreen.SliderRelativeLayout sliderLayout -> aN
    int MSG_LOCK_SUCESS -> i
    android.content.SharedPreferences foxSportSetting -> aO
    android.widget.RelativeLayout lockscreen -> aP
    java.util.Map sporttype -> aQ
    android.os.PowerManager$WakeLock mWakeLock -> aR
    java.lang.Boolean isFirstSave -> aS
    java.lang.Boolean isEndSave -> aT
    com.amap.api.maps.model.PolylineOptions options -> aU
    com.amap.api.maps.model.Polyline mPolyline -> aV
    com.amap.api.location.LocationManagerProxy mAMapLocationManager -> aW
    float zoomValue -> aX
    boolean findMethod -> aY
    android.os.Vibrator djs_vibrator -> aZ
    android.widget.LinearLayout djs_layout -> ba
    android.widget.ImageView djs_image -> bb
    android.view.animation.Animation djs_animation -> bc
    int djs_count -> bd
    int djs_counts -> be
    android.content.SharedPreferences djs_sp -> bf
    int[] myDjsImage -> bg
    com.fox.exercise.pedometer.TimingManager timingMgr -> bh
    int coins -> bi
    boolean activityPause -> bj
    boolean canSave -> bk
    com.fox.exercise.api.ApiBack theApiBack -> bl
    int thereturn -> bm
    boolean is_start_map -> bn
    com.fox.exercise.map.VoicePrompt vp -> bo
    java.util.Map hashMap -> bp
    android.hardware.SensorManager sensorManager -> bq
    android.hardware.Sensor ss -> br
    float accelerometer -> bs
    java.lang.Boolean mTroughAppear -> bt
    int mCountNum -> bu
    android.widget.TextView data -> bv
    long mPrevStepTime -> bw
    int lastCountNum -> bx
    java.lang.String conStringValue -> by
    java.lang.String speedStringValue -> bz
    java.lang.String paceStringValue -> bA
    android.widget.TextView pop_chronometerId -> bB
    android.widget.TextView sporting_sport_peiPace -> bC
    android.widget.TextView sporting_sport_pingjunSpeed -> bD
    android.widget.TextView sporting_sportxiaohao -> bE
    android.widget.TextView time_disValue -> bF
    android.widget.TextView zong_li_txt -> bG
    android.widget.Button suodingBtn -> bH
    android.widget.ImageButton close_yuyin -> bI
    java.lang.Boolean isVoiceON -> bJ
    android.widget.TextView textview_stepnum -> bK
    boolean mIsRunning -> bL
    boolean mIsFirst -> bM
    android.content.SharedPreferences msharedPreferences -> bN
    android.content.SharedPreferences mState -> bO
    android.widget.TextView sport_topTitle -> bP
    java.lang.String markCode -> bQ
    double temDis -> bR
    int recLen -> bS
    int mTempCount -> bT
    java.lang.Boolean isOpen -> bU
    java.lang.Boolean lockisopen -> bV
    java.lang.Boolean isStepBegin -> bW
    android.os.Handler handler -> j
    com.fox.exercise.newversion.FirstStepService mService -> bX
    android.content.ServiceConnection mConnection -> bY
    com.fox.exercise.newversion.FirstStepService$ICallback mCallback -> bZ
    android.os.Handler sportHandler -> ca
    android.os.Handler mDrawTrajectoryHandler -> cb
    int cur_index -> cc
    double disVal -> cd
    int randomCoins -> ce
    int mRandom -> cf
    double mKilometre -> cg
    boolean isgps -> ch
    java.lang.String path -> ci
    android.os.Handler mmHandler -> cj
    int netError -> ck
    android.os.Handler mHandlerDjs -> cl
    android.content.BroadcastReceiver timeReceiver -> k
    boolean processResume -> cm
    int gpsType -> l
    int gpsTypeAdd -> cn
    int gpsTypeOtherAdd -> co
    android.location.GpsStatus$Listener listener -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> g
    void setSportstype() -> h
    void setView() -> i
    void startSport() -> j
    void addMediaItem(com.amap.api.maps.model.LatLng,int) -> a
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    void bindStepService() -> k
    void onDestroy() -> onDestroy
    void unbindStepService() -> l
    void stopStepService() -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void uploadcoins() -> m
    android.app.Dialog onCreateDialog(int,android.os.Bundle,int) -> a
    void onStart() -> onStart
    void onStop() -> onStop
    void uploadSportTask() -> n
    void uploadSportMedia() -> o
    void UploadPhoto() -> b
    void saveSportTask() -> p
    void deleteSportTaskByID() -> q
    void uploadDataToQQ() -> r
    void gotoSportDetailActivity() -> s
    void drawMap() -> t
    boolean LocationUpdate(com.amap.api.location.AMapLocation) -> a
    boolean isOPen(android.content.Context) -> a
    void toggleGPS(android.content.Context,java.lang.Boolean) -> a
    int save(boolean) -> a
    void startService() -> u
    void stopService() -> v
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void getMediaFile(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void initGPS() -> w
    double CalcPressure(double) -> a
    void updateSpeed(android.location.Location) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void RemoveLockScreenMSG() -> c
    void SendLockScreenMSG() -> d
    void SendBtnLockScreenMSG() -> e
    void activate(com.amap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    void animateTo(com.amap.api.maps.model.LatLng) -> a
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void goStart() -> x
    void goStop() -> y
    void goResume() -> z
    void goPause() -> A
    void processPause() -> B
    void getGPSStatus() -> C
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void CountStep(float,float,float) -> a
    void updateStepInformation() -> D
    void startStepService() -> f
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    int access$0(com.fox.exercise.map.SportingMapActivityGaode) -> a
    long access$1(com.fox.exercise.map.SportingMapActivityGaode) -> b
    void access$2(com.fox.exercise.map.SportingMapActivityGaode,int) -> a
    boolean access$3(com.fox.exercise.map.SportingMapActivityGaode) -> c
    android.widget.TextView access$4(com.fox.exercise.map.SportingMapActivityGaode) -> d
    int access$5(com.fox.exercise.map.SportingMapActivityGaode) -> e
    android.widget.TextView access$6(com.fox.exercise.map.SportingMapActivityGaode) -> f
    android.widget.TextView access$7(com.fox.exercise.map.SportingMapActivityGaode) -> g
    int access$8(com.fox.exercise.map.SportingMapActivityGaode) -> h
    double access$9(com.fox.exercise.map.SportingMapActivityGaode) -> i
    int access$10(com.fox.exercise.map.SportingMapActivityGaode) -> j
    int access$11(com.fox.exercise.map.SportingMapActivityGaode,boolean) -> a
    java.lang.Boolean access$12(com.fox.exercise.map.SportingMapActivityGaode) -> k
    void access$13(com.fox.exercise.map.SportingMapActivityGaode) -> l
    android.content.SharedPreferences access$14(com.fox.exercise.map.SportingMapActivityGaode) -> m
    void access$15(com.fox.exercise.map.SportingMapActivityGaode,java.lang.Boolean) -> a
    java.lang.Boolean access$16(com.fox.exercise.map.SportingMapActivityGaode) -> n
    java.lang.Boolean access$17(com.fox.exercise.map.SportingMapActivityGaode) -> o
    com.fox.exercise.lockscreen.SliderRelativeLayout access$18(com.fox.exercise.map.SportingMapActivityGaode) -> p
    android.os.Handler access$19(com.fox.exercise.map.SportingMapActivityGaode) -> q
    android.widget.RelativeLayout access$20(com.fox.exercise.map.SportingMapActivityGaode) -> r
    void access$21(com.fox.exercise.map.SportingMapActivityGaode,com.fox.exercise.map.VoicePrompt) -> a
    com.fox.exercise.map.VoicePrompt access$22(com.fox.exercise.map.SportingMapActivityGaode) -> s
    void access$23(com.fox.exercise.map.SportingMapActivityGaode) -> t
    void access$24(com.fox.exercise.map.SportingMapActivityGaode,com.fox.exercise.newversion.FirstStepService) -> a
    com.fox.exercise.newversion.FirstStepService access$25(com.fox.exercise.map.SportingMapActivityGaode) -> u
    com.fox.exercise.newversion.FirstStepService$ICallback access$26(com.fox.exercise.map.SportingMapActivityGaode) -> v
    android.os.Handler access$27(com.fox.exercise.map.SportingMapActivityGaode) -> w
    boolean access$28(com.fox.exercise.map.SportingMapActivityGaode) -> x
    int access$29(com.fox.exercise.map.SportingMapActivityGaode) -> y
    void access$30(com.fox.exercise.map.SportingMapActivityGaode,int) -> b
    void access$31(com.fox.exercise.map.SportingMapActivityGaode) -> z
    android.app.Activity access$32(com.fox.exercise.map.SportingMapActivityGaode) -> A
    cn.ingenic.indroidsync.SportsApp access$33(com.fox.exercise.map.SportingMapActivityGaode) -> B
    void access$34(com.fox.exercise.map.SportingMapActivityGaode,int) -> c
    android.app.Dialog access$35(com.fox.exercise.map.SportingMapActivityGaode) -> C
    void access$36(com.fox.exercise.map.SportingMapActivityGaode,int) -> d
    void access$37(com.fox.exercise.map.SportingMapActivityGaode,int) -> e
    void access$38(com.fox.exercise.map.SportingMapActivityGaode,int) -> f
    com.amap.api.maps.model.LatLng access$39(com.fox.exercise.map.SportingMapActivityGaode) -> D
    void access$40(com.fox.exercise.map.SportingMapActivityGaode,com.amap.api.maps.model.LatLng,int) -> a
    void access$41(com.fox.exercise.map.SportingMapActivityGaode,boolean) -> b
    void access$42(com.fox.exercise.map.SportingMapActivityGaode,int) -> g
    int access$43(com.fox.exercise.map.SportingMapActivityGaode) -> E
    int access$44(com.fox.exercise.map.SportingMapActivityGaode) -> F
    void access$45(com.fox.exercise.map.SportingMapActivityGaode) -> G
    android.widget.TextView access$46(com.fox.exercise.map.SportingMapActivityGaode) -> H
    void access$47(com.fox.exercise.map.SportingMapActivityGaode) -> I
    void access$48(com.fox.exercise.map.SportingMapActivityGaode,android.content.SharedPreferences) -> a
    android.widget.ImageView access$49(com.fox.exercise.map.SportingMapActivityGaode) -> J
    int[] access$50(com.fox.exercise.map.SportingMapActivityGaode) -> K
    int access$51(com.fox.exercise.map.SportingMapActivityGaode) -> L
    android.view.animation.Animation access$52(com.fox.exercise.map.SportingMapActivityGaode) -> M
    void access$53(com.fox.exercise.map.SportingMapActivityGaode,int) -> h
    android.os.Handler access$54(com.fox.exercise.map.SportingMapActivityGaode) -> N
    android.widget.LinearLayout access$55(com.fox.exercise.map.SportingMapActivityGaode) -> O
    com.amap.api.maps.model.LatLng access$56(com.fox.exercise.map.SportingMapActivityGaode) -> P
    android.hardware.Sensor access$57(com.fox.exercise.map.SportingMapActivityGaode) -> Q
    void access$58(com.fox.exercise.map.SportingMapActivityGaode) -> R
    android.os.Vibrator access$59(com.fox.exercise.map.SportingMapActivityGaode) -> S
    void access$60(com.fox.exercise.map.SportingMapActivityGaode) -> T
    void access$61(com.fox.exercise.map.SportingMapActivityGaode,int) -> i
    int access$62(com.fox.exercise.map.SportingMapActivityGaode) -> U
    void access$63(com.fox.exercise.map.SportingMapActivityGaode,int) -> j
    int access$64(com.fox.exercise.map.SportingMapActivityGaode) -> V
    android.widget.ImageView access$65(com.fox.exercise.map.SportingMapActivityGaode) -> W
    android.widget.ImageView access$66(com.fox.exercise.map.SportingMapActivityGaode) -> X
    int access$67(com.fox.exercise.map.SportingMapActivityGaode) -> Y
    int access$68(com.fox.exercise.map.SportingMapActivityGaode) -> Z
    com.fox.exercise.api.ApiBack access$69(com.fox.exercise.map.SportingMapActivityGaode) -> aa
    void access$70(com.fox.exercise.map.SportingMapActivityGaode,int) -> k
    void access$71(com.fox.exercise.map.SportingMapActivityGaode,int) -> l
    void access$72(com.fox.exercise.map.SportingMapActivityGaode,android.location.Location) -> a
    android.location.LocationManager access$73(com.fox.exercise.map.SportingMapActivityGaode) -> ab
    android.app.Dialog access$74(com.fox.exercise.map.SportingMapActivityGaode) -> ac
    java.lang.Boolean access$75(com.fox.exercise.map.SportingMapActivityGaode) -> ad
    boolean access$76(com.fox.exercise.map.SportingMapActivityGaode) -> ae
    long access$77(com.fox.exercise.map.SportingMapActivityGaode) -> af
    void access$78(com.fox.exercise.map.SportingMapActivityGaode,java.lang.Boolean) -> b
    android.hardware.SensorManager access$79(com.fox.exercise.map.SportingMapActivityGaode) -> ag
    java.lang.String access$80(com.fox.exercise.map.SportingMapActivityGaode) -> ah
    java.util.Timer access$81(com.fox.exercise.map.SportingMapActivityGaode) -> ai
    void access$82(com.fox.exercise.map.SportingMapActivityGaode,java.lang.Boolean) -> c
    void access$83(com.fox.exercise.map.SportingMapActivityGaode,boolean) -> c
    android.app.Dialog access$84(com.fox.exercise.map.SportingMapActivityGaode) -> aj
    void access$85(com.fox.exercise.map.SportingMapActivityGaode,boolean) -> d
    boolean access$86(com.fox.exercise.map.SportingMapActivityGaode) -> ak
    void access$87(com.fox.exercise.map.SportingMapActivityGaode,int) -> m
    int access$88(com.fox.exercise.map.SportingMapActivityGaode) -> al
    java.util.Map access$89(com.fox.exercise.map.SportingMapActivityGaode) -> am
    void access$90(com.fox.exercise.map.SportingMapActivityGaode,int) -> n
    void access$91(com.fox.exercise.map.SportingMapActivityGaode) -> an
    java.lang.String access$92(com.fox.exercise.map.SportingMapActivityGaode) -> ao
    void access$93(com.fox.exercise.map.SportingMapActivityGaode) -> ap
    java.util.Map access$94(com.fox.exercise.map.SportingMapActivityGaode) -> aq
    void access$95(com.fox.exercise.map.SportingMapActivityGaode,com.fox.exercise.db.SportSubTaskDB) -> a
    com.fox.exercise.db.SportSubTaskDB access$96(com.fox.exercise.map.SportingMapActivityGaode) -> ar
    void access$97(com.fox.exercise.map.SportingMapActivityGaode) -> as
    android.os.PowerManager$WakeLock access$98(com.fox.exercise.map.SportingMapActivityGaode) -> at
    com.fox.exercise.pedometer.TimingManager access$99(com.fox.exercise.map.SportingMapActivityGaode) -> au
    void access$100(com.fox.exercise.map.SportingMapActivityGaode,long) -> a
    void access$101(com.fox.exercise.map.SportingMapActivityGaode,int) -> o
    java.util.List access$102(com.fox.exercise.map.SportingMapActivityGaode) -> av
    int access$103(com.fox.exercise.map.SportingMapActivityGaode) -> aw
    int access$104(com.fox.exercise.map.SportingMapActivityGaode) -> ax
    double access$105(com.fox.exercise.map.SportingMapActivityGaode) -> ay
    int access$106(com.fox.exercise.map.SportingMapActivityGaode) -> az
    double access$107(com.fox.exercise.map.SportingMapActivityGaode) -> aA
    android.content.SharedPreferences$Editor access$108(com.fox.exercise.map.SportingMapActivityGaode) -> aB
    void access$109(com.fox.exercise.map.SportingMapActivityGaode,com.fox.exercise.api.ApiBack) -> a
    void access$110(com.fox.exercise.map.SportingMapActivityGaode,int) -> p
    void access$111(com.fox.exercise.map.SportingMapActivityGaode) -> aC
    com.amap.api.maps.model.LatLng access$113(com.fox.exercise.map.SportingMapActivityGaode) -> aD
    void access$114(com.fox.exercise.map.SportingMapActivityGaode,com.amap.api.maps.model.LatLng) -> a
    int access$115(com.fox.exercise.map.SportingMapActivityGaode) -> aE
    java.lang.String access$116(com.fox.exercise.map.SportingMapActivityGaode) -> aF
    java.lang.String access$117(com.fox.exercise.map.SportingMapActivityGaode) -> aG
    int access$118(com.fox.exercise.map.SportingMapActivityGaode) -> aH
    int access$119(com.fox.exercise.map.SportingMapActivityGaode) -> aI
    java.lang.String access$120(com.fox.exercise.map.SportingMapActivityGaode) -> aJ
    java.lang.String access$121(com.fox.exercise.map.SportingMapActivityGaode) -> aK
    void access$122(com.fox.exercise.map.SportingMapActivityGaode,int) -> q
com.fox.exercise.map.SportingMapActivityGaode$1 -> com.fox.exercise.map.bi:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportingMapActivityGaode$1$1 -> com.fox.exercise.map.bj:
    com.fox.exercise.map.SportingMapActivityGaode$1 this$1 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.map.SportingMapActivityGaode$10 -> com.fox.exercise.map.bk:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void onMapLoaded() -> onMapLoaded
com.fox.exercise.map.SportingMapActivityGaode$11 -> com.fox.exercise.map.bl:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
com.fox.exercise.map.SportingMapActivityGaode$12 -> com.fox.exercise.map.bm:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void onTouch(android.view.MotionEvent) -> onTouch
com.fox.exercise.map.SportingMapActivityGaode$13 -> com.fox.exercise.map.bn:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivityGaode$14 -> com.fox.exercise.map.bo:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivityGaode$15 -> com.fox.exercise.map.bp:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.fox.exercise.map.SportingMapActivityGaode$16 -> com.fox.exercise.map.bq:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportingMapActivityGaode$17 -> com.fox.exercise.map.br:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportingMapActivityGaode$18 -> com.fox.exercise.map.bs:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.map.SportingMapActivityGaode$19 -> com.fox.exercise.map.bt:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.fox.exercise.map.SportingMapActivityGaode$2 -> com.fox.exercise.map.bu:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.fox.exercise.map.SportingMapActivityGaode$20 -> com.fox.exercise.map.bv:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivityGaode$22 -> com.fox.exercise.map.bw:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivityGaode$23 -> com.fox.exercise.map.bx:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivityGaode$24 -> com.fox.exercise.map.by:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivityGaode$25 -> com.fox.exercise.map.bz:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivityGaode$26 -> com.fox.exercise.map.ca:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void qqResult() -> a
com.fox.exercise.map.SportingMapActivityGaode$27 -> com.fox.exercise.map.cb:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportingMapActivityGaode$28 -> com.fox.exercise.map.cc:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivityGaode$3 -> com.fox.exercise.map.cd:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void stepsChanged(int) -> a
    void caloriesChanged(float) -> a
com.fox.exercise.map.SportingMapActivityGaode$4 -> com.fox.exercise.map.ce:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportingMapActivityGaode$5 -> com.fox.exercise.map.cf:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.map.SportingMapActivityGaode access$0(com.fox.exercise.map.SportingMapActivityGaode$5) -> a
com.fox.exercise.map.SportingMapActivityGaode$5$1 -> com.fox.exercise.map.cg:
    com.fox.exercise.map.SportingMapActivityGaode$5 this$1 -> a
    void run() -> run
com.fox.exercise.map.SportingMapActivityGaode$6 -> com.fox.exercise.map.ch:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportingMapActivityGaode$7 -> com.fox.exercise.map.ci:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportingMapActivityGaode$8 -> com.fox.exercise.map.cj:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.map.SportingMapActivityGaode$9 -> com.fox.exercise.map.ck:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
com.fox.exercise.map.SportingMapActivityGaode$AddCoinsHandler -> com.fox.exercise.map.cl:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.SportingMapActivityGaode$GpsLocationListener -> com.fox.exercise.map.cm:
    com.fox.exercise.map.SportingMapActivityGaode this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.fox.exercise.map.SportsShared -> com.fox.exercise.map.SportsShared:
    long mClickTime -> l
    android.widget.ImageView displayImage -> k
    android.content.Context mContext -> m
    com.tencent.mm.sdk.openapi.IWXAPI api -> n
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    void shareToWeixin() -> d
    java.lang.String buildTransaction(java.lang.String) -> a
    void onDestroy() -> onDestroy
com.fox.exercise.map.SportsTaskUploader -> com.fox.exercise.map.cn:
    com.fox.exercise.map.SportsTaskUploader mIntance -> a
    boolean mIsUploading -> b
    int typeId -> c
    com.fox.exercise.map.SportsTaskUploader getInstance() -> a
    void startBackgroundUpload(android.content.Context,int,java.lang.String) -> a
    void uploadcoins(int,int) -> a
    void access$0(com.fox.exercise.map.SportsTaskUploader,int) -> a
    int access$1(com.fox.exercise.map.SportsTaskUploader) -> a
    void access$2(com.fox.exercise.map.SportsTaskUploader,int,int) -> a
    void access$3(com.fox.exercise.map.SportsTaskUploader,boolean) -> a
com.fox.exercise.map.SportsTaskUploader$SportAsyncTask -> com.fox.exercise.map.co:
    java.util.ArrayList unUploadDatas -> b
    com.fox.exercise.map.SportsTaskUploader this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.fox.exercise.map.VideoHelper -> com.fox.exercise.map.cp:
    android.view.SurfaceView surfaceView -> a
    android.view.SurfaceHolder surfaceHolder -> b
    android.media.MediaPlayer mediaPlayer -> c
    android.widget.ImageView mDefaultBG -> d
    android.widget.ImageView mPlayImage -> e
    android.widget.ProgressBar mLoadingProgressBar -> f
    android.widget.ProgressBar mPlayProgressBar -> g
    android.widget.TextView mPastTimeText -> h
    android.widget.TextView mTotalTimeText -> i
    int onPausePosition -> j
    int mIndex -> k
    java.lang.String mFilePath -> l
    android.content.Context mContext -> m
    com.fox.exercise.util.MediaFileDownloader mDownLoader -> n
    java.util.concurrent.ScheduledExecutorService executorService -> o
    android.os.Handler handler -> p
    int mState -> q
    android.os.Handler mHandler -> r
    java.lang.String stateToString(int) -> b
    void setCurentView(android.view.View) -> a
    void initView(android.view.View,int,int,int) -> a
    void resetView(android.view.View) -> b
    java.lang.String formatTime(int) -> a
    void onResume() -> a
    void onPause() -> b
    void onDestroy() -> c
    void pause() -> d
    void play() -> e
    void initMedia() -> f
    void release() -> g
    void updateState(int) -> c
    void loadFile() -> h
    void onClick(android.view.View) -> onClick
    android.media.MediaPlayer access$0(com.fox.exercise.map.VideoHelper) -> a
    android.widget.ProgressBar access$1(com.fox.exercise.map.VideoHelper) -> b
    android.widget.TextView access$2(com.fox.exercise.map.VideoHelper) -> c
    int access$3(com.fox.exercise.map.VideoHelper) -> d
    void access$4(com.fox.exercise.map.VideoHelper,int) -> a
    android.content.Context access$5(com.fox.exercise.map.VideoHelper) -> e
    void access$6(com.fox.exercise.map.VideoHelper,java.lang.String) -> a
    android.os.Handler access$7(com.fox.exercise.map.VideoHelper) -> f
    com.fox.exercise.util.MediaFileDownloader access$8(com.fox.exercise.map.VideoHelper) -> g
com.fox.exercise.map.VideoHelper$1 -> com.fox.exercise.map.cq:
    com.fox.exercise.map.VideoHelper this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.VideoHelper$2 -> com.fox.exercise.map.cr:
    com.fox.exercise.map.VideoHelper this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.map.VideoHelper$3 -> com.fox.exercise.map.cs:
    com.fox.exercise.map.VideoHelper this$0 -> a
    void run() -> run
com.fox.exercise.map.VideoHelper$4 -> com.fox.exercise.map.ct:
    com.fox.exercise.map.VideoHelper this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.map.VideoHelper$5 -> com.fox.exercise.map.cu:
    com.fox.exercise.map.VideoHelper this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.map.VideoHelper$6 -> com.fox.exercise.map.cv:
    com.fox.exercise.map.VideoHelper this$0 -> a
    void run() -> run
com.fox.exercise.map.VoicePrompt -> com.fox.exercise.map.cw:
    int n -> a
    android.content.Context context -> c
    java.lang.String sex -> d
    java.lang.String flag -> b
    android.media.MediaPlayer mp -> e
    android.content.res.AssetManager assetManager -> f
    android.content.res.AssetFileDescriptor fileDescriptor -> g
    java.util.List list -> h
    java.util.Map hashMap -> i
    int minute -> j
    int second -> k
    android.content.SharedPreferences foxSportSetting -> l
    void setMusicResource(java.lang.String) -> b
    void dealTime(java.lang.String) -> c
    void readNum(java.lang.String) -> a
    void setVoiceNameList() -> b
    void readTime(java.lang.String) -> d
    void playVoice() -> a
    android.media.MediaPlayer access$0(com.fox.exercise.map.VoicePrompt) -> a
    java.util.List access$1(com.fox.exercise.map.VoicePrompt) -> b
    void access$2(com.fox.exercise.map.VoicePrompt,java.lang.String) -> a
    void access$3(com.fox.exercise.map.VoicePrompt,android.media.MediaPlayer) -> a
com.fox.exercise.map.VoicePrompt$1 -> com.fox.exercise.map.cx:
    com.fox.exercise.map.VoicePrompt this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.map.VoicePrompt$2 -> com.fox.exercise.map.cy:
    com.fox.exercise.map.VoicePrompt this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.map.VoicePrompt$3 -> com.fox.exercise.map.cz:
    com.fox.exercise.map.VoicePrompt this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.map.WebViewActivity -> com.fox.exercise.map.WebViewActivity:
    android.os.Handler handler -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.os.Handler provideHandler() -> a
com.fox.exercise.newversion.FirstStepService -> com.fox.exercise.newversion.FirstStepService:
    android.content.SharedPreferences mSettings -> a
    com.fox.exercise.pedometer.PedometerSettings mPedometerSettings -> b
    android.content.SharedPreferences mState -> c
    android.content.SharedPreferences$Editor mStateEditor -> d
    android.hardware.SensorManager mSensorManager -> e
    android.hardware.Sensor mSensor -> f
    com.fox.exercise.pedometer.StepDetector mStepDetector -> g
    com.fox.exercise.pedometer.StepDisplayer mStepDisplayer -> h
    com.fox.exercise.pedometer.PaceNotifier mPaceNotifier -> i
    com.fox.exercise.pedometer.DistanceNotifier mDistanceNotifier -> j
    com.fox.exercise.pedometer.SpeedNotifier mSpeedNotifier -> k
    com.fox.exercise.pedometer.CaloriesNotifier mCaloriesNotifier -> l
    com.fox.exercise.pedometer.SpeakingTimer mSpeakingTimer -> m
    android.app.NotificationManager mNM -> n
    int mSteps -> o
    int mLastSteps -> p
    long mLastDate -> q
    float mCalories -> r
    cn.ingenic.indroidsync.SportsApp mSportsApp -> s
    android.os.IBinder mBinder -> t
    com.fox.exercise.newversion.FirstStepService$ICallback mCallback -> u
    com.fox.exercise.pedometer.StepDisplayer$Listener mStepListener -> v
    com.fox.exercise.pedometer.CaloriesNotifier$Listener mCaloriesListener -> w
    android.content.BroadcastReceiver mReceiver -> x
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    void registerDetector() -> b
    void unregisterDetector() -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void registerCallback(com.fox.exercise.newversion.FirstStepService$ICallback) -> a
    void reloadSettings() -> a
    void showNotification() -> d
    void acquireWakeLock() -> e
    int access$0(com.fox.exercise.newversion.FirstStepService) -> a
    void access$1(com.fox.exercise.newversion.FirstStepService,int) -> a
    com.fox.exercise.newversion.FirstStepService$ICallback access$2(com.fox.exercise.newversion.FirstStepService) -> b
    int access$3(com.fox.exercise.newversion.FirstStepService) -> c
    void access$4(com.fox.exercise.newversion.FirstStepService,float) -> a
    float access$5(com.fox.exercise.newversion.FirstStepService) -> d
    void access$6(com.fox.exercise.newversion.FirstStepService) -> e
    void access$7(com.fox.exercise.newversion.FirstStepService) -> f
com.fox.exercise.newversion.FirstStepService$1 -> com.fox.exercise.newversion.a:
    com.fox.exercise.newversion.FirstStepService this$0 -> a
    void stepsChanged(int) -> a
    void passValue() -> a
com.fox.exercise.newversion.FirstStepService$2 -> com.fox.exercise.newversion.b:
    com.fox.exercise.newversion.FirstStepService this$0 -> a
    void valueChanged(float) -> a
    void passValue() -> a
com.fox.exercise.newversion.FirstStepService$3 -> com.fox.exercise.newversion.c:
    com.fox.exercise.newversion.FirstStepService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.newversion.FirstStepService$ICallback -> com.fox.exercise.newversion.d:
    void stepsChanged(int) -> a
    void caloriesChanged(float) -> a
com.fox.exercise.newversion.FirstStepService$StepBinder -> com.fox.exercise.newversion.e:
    com.fox.exercise.newversion.FirstStepService this$0 -> a
    com.fox.exercise.newversion.FirstStepService getService() -> a
com.fox.exercise.newversion.ScreenDatas -> com.fox.exercise.newversion.f:
    int screenWidth -> a
    int screenHeight -> b
com.fox.exercise.newversion.SleepService -> com.fox.exercise.newversion.SleepService:
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.fox.exercise.newversion.SportsReceiver -> com.fox.exercise.newversion.SportsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.newversion.Tools -> com.fox.exercise.newversion.g:
    java.lang.String formatDuring(long) -> a
    java.lang.String getTime(long) -> b
    boolean isInDate(java.util.Date,java.lang.String,java.lang.String) -> a
com.fox.exercise.newversion.TrainVoiceBgPrompt -> com.fox.exercise.newversion.h:
    int n -> a
    java.lang.String sex -> c
    java.lang.String flag -> b
    android.media.MediaPlayer mp -> d
    android.content.res.AssetManager assetManager -> e
    java.util.List list -> f
    java.lang.String videoDir -> g
    android.content.Context context -> h
    android.content.SharedPreferences foxSportSetting -> i
    void setMusicResource(java.lang.String,float) -> a
    void setVoiceNameList() -> e
    void playVoice(float) -> a
    void destroyPlay() -> a
    void stopPlay() -> b
    void startPlay() -> c
    int getCurrNum() -> d
    void setPlay(float) -> b
    android.media.MediaPlayer access$0(com.fox.exercise.newversion.TrainVoiceBgPrompt) -> a
    java.util.List access$1(com.fox.exercise.newversion.TrainVoiceBgPrompt) -> b
    void access$2(com.fox.exercise.newversion.TrainVoiceBgPrompt,java.lang.String,float) -> a
    void access$3(com.fox.exercise.newversion.TrainVoiceBgPrompt,android.media.MediaPlayer) -> a
com.fox.exercise.newversion.TrainVoiceBgPrompt$1 -> com.fox.exercise.newversion.i:
    com.fox.exercise.newversion.TrainVoiceBgPrompt this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.newversion.TrainVoiceBgPrompt$2 -> com.fox.exercise.newversion.j:
    com.fox.exercise.newversion.TrainVoiceBgPrompt this$0 -> a
    float val$num -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.newversion.TrainVoiceBgPrompt$3 -> com.fox.exercise.newversion.k:
    com.fox.exercise.newversion.TrainVoiceBgPrompt this$0 -> a
    float val$num -> b
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.newversion.TrainVoicePrompt -> com.fox.exercise.newversion.l:
    int n -> a
    java.lang.String sex -> c
    java.lang.String flag -> b
    android.media.MediaPlayer mp -> d
    android.content.res.AssetManager assetManager -> e
    android.content.res.AssetFileDescriptor fileDescriptor -> f
    java.util.List list -> g
    java.util.Map hashMap -> h
    android.os.Handler mHandler -> i
    java.lang.String videoDir -> j
    android.content.Context context -> k
    android.content.SharedPreferences foxSportSetting -> l
    boolean isPause -> m
    void setMusicResource(java.lang.String) -> b
    void readNum(java.lang.String) -> a
    void setVoiceNameList() -> e
    void playVoice() -> a
    void stopPlay() -> b
    void stopOtherPlay() -> c
    void startPlay() -> d
    boolean access$0(com.fox.exercise.newversion.TrainVoicePrompt) -> a
    android.media.MediaPlayer access$1(com.fox.exercise.newversion.TrainVoicePrompt) -> b
    java.util.List access$2(com.fox.exercise.newversion.TrainVoicePrompt) -> c
    void access$3(com.fox.exercise.newversion.TrainVoicePrompt,java.lang.String) -> a
    void access$4(com.fox.exercise.newversion.TrainVoicePrompt,android.media.MediaPlayer) -> a
    android.os.Handler access$5(com.fox.exercise.newversion.TrainVoicePrompt) -> d
com.fox.exercise.newversion.TrainVoicePrompt$1 -> com.fox.exercise.newversion.m:
    com.fox.exercise.newversion.TrainVoicePrompt this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.newversion.TrainVoicePrompt$2 -> com.fox.exercise.newversion.n:
    com.fox.exercise.newversion.TrainVoicePrompt this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.newversion.TrainVoicePrompt$3 -> com.fox.exercise.newversion.o:
    com.fox.exercise.newversion.TrainVoicePrompt this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.newversion.UUIDGenerator -> com.fox.exercise.newversion.p:
    byte[] ALPHABET -> d
    int hostId -> a
    byte hostCode1 -> e
    byte hostCode2 -> f
    byte hostCode3 -> g
    byte hostCode4 -> h
    byte[] emptyIP -> b
    byte[] IP -> c
    short counter -> i
    long dateCount -> j
    byte[] dateBuffer -> k
    byte[] createDateBuffer(long) -> a
    java.lang.String getUUID() -> a
com.fox.exercise.newversion.act.DoubiActivity -> com.fox.exercise.newversion.act.DoubiActivity:
    android.widget.ListView mListView -> o
    java.util.ArrayList list -> k
    int tid -> l
    int page -> m
    cn.ingenic.indroidsync.SportsApp mSportsApp -> p
    cn.ingenic.indroidsync.SportsApp msApp -> q
    com.fox.exercise.ImageDownloader mDownloader -> r
    android.widget.LinearLayout dblin -> n
    com.fox.exercise.view.PullToRefreshListView doubiListView -> s
    com.fox.exercise.newversion.act.DoubiActivity$DoubiAdapter mAdapter -> t
    android.os.Handler mHandler -> u
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void GetData() -> f
    com.fox.exercise.newversion.act.DoubiActivity$DoubiAdapter access$0(com.fox.exercise.newversion.act.DoubiActivity) -> a
    void access$1(com.fox.exercise.newversion.act.DoubiActivity,com.fox.exercise.newversion.act.DoubiActivity$DoubiAdapter) -> a
    android.widget.ListView access$2(com.fox.exercise.newversion.act.DoubiActivity) -> b
    com.fox.exercise.view.PullToRefreshListView access$3(com.fox.exercise.newversion.act.DoubiActivity) -> c
    com.fox.exercise.ImageDownloader access$4(com.fox.exercise.newversion.act.DoubiActivity) -> d
    cn.ingenic.indroidsync.SportsApp access$5(com.fox.exercise.newversion.act.DoubiActivity) -> e
    cn.ingenic.indroidsync.SportsApp access$6(com.fox.exercise.newversion.act.DoubiActivity) -> f
    android.os.Handler access$7(com.fox.exercise.newversion.act.DoubiActivity) -> g
com.fox.exercise.newversion.act.DoubiActivity$1 -> com.fox.exercise.newversion.act.a:
    com.fox.exercise.newversion.act.DoubiActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.DoubiActivity$2 -> com.fox.exercise.newversion.act.b:
    com.fox.exercise.newversion.act.DoubiActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.act.DoubiActivity$3 -> com.fox.exercise.newversion.act.c:
    com.fox.exercise.newversion.act.DoubiActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.act.DoubiActivity$4 -> com.fox.exercise.newversion.act.d:
    com.fox.exercise.newversion.act.DoubiActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.DoubiActivity$DoubiAdapter -> com.fox.exercise.newversion.act.e:
    android.content.Context mContext -> a
    java.util.ArrayList list -> b
    com.fox.exercise.newversion.act.DoubiActivity this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.act.DoubiActivity$ViewHolder -> com.fox.exercise.newversion.act.f:
    android.widget.ImageView img -> b
    android.widget.TextView title -> c
    android.widget.TextView time -> d
    com.fox.exercise.newversion.act.DoubiActivity this$0 -> a
    void access$0(com.fox.exercise.newversion.act.DoubiActivity$ViewHolder,android.widget.ImageView) -> a
    void access$1(com.fox.exercise.newversion.act.DoubiActivity$ViewHolder,android.widget.TextView) -> a
    void access$2(com.fox.exercise.newversion.act.DoubiActivity$ViewHolder,android.widget.TextView) -> b
    android.widget.ImageView access$3(com.fox.exercise.newversion.act.DoubiActivity$ViewHolder) -> a
    android.widget.TextView access$4(com.fox.exercise.newversion.act.DoubiActivity$ViewHolder) -> b
    android.widget.TextView access$5(com.fox.exercise.newversion.act.DoubiActivity$ViewHolder) -> c
com.fox.exercise.newversion.act.FindFriendsFragment -> com.fox.exercise.newversion.act.g:
    java.util.List actionLists -> p
    cn.ingenic.indroidsync.SportsApp mSportsApp -> q
    com.fox.exercise.view.PullToRefreshListView mPullSearchListView -> r
    android.widget.ListView mListView -> s
    android.app.Dialog mLoadProgressDialog -> t
    android.app.Dialog dialog -> u
    android.widget.TextView mDialogMessage -> v
    int times -> w
    com.fox.exercise.FindOtherMoreAdapter sportsfindmoreAdapter -> x
    java.util.ArrayList mList -> y
    java.util.ArrayList mList_top -> z
    android.widget.ImageView img_background -> A
    android.widget.LinearLayout roundimg_layout -> B
    com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler msportsFindMoreHandler -> l
    android.widget.TextView myNameText -> C
    android.widget.TextView commentsNotify -> D
    android.widget.ImageView commentsImg -> E
    android.widget.LinearLayout messageLinearLayout -> F
    com.fox.exercise.util.RoundedImage userPhoto -> G
    com.fox.exercise.pedometer.ImageWorkManager mImageWorkerMan_Icon -> H
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker_Icon -> I
    com.fox.exercise.api.entity.UserDetail detail -> J
    android.widget.ImageButton iView -> K
    com.fox.exercise.RecordHelper mRecorder -> L
    android.widget.ImageButton findTextBtn -> M
    android.widget.Button findPressBtn -> N
    boolean upTypeText -> O
    android.widget.LinearLayout layoutVoice -> P
    android.widget.RelativeLayout findLayout -> Q
    int findnumber -> R
    android.widget.RelativeLayout rScrollLayout -> S
    com.fox.exercise.util.ScrollLayout scrollLayout -> T
    android.widget.LinearLayout imgLayout -> U
    android.widget.ImageView findExpressBtn -> V
    java.util.List imgItems -> m
    int mViewCount -> W
    int mCurSel -> X
    java.lang.String[] imgStr -> Y
    java.lang.Boolean isShow -> Z
    android.widget.LinearLayout findUpcommentText -> aa
    android.widget.EditText findUpcommentEdittext -> ab
    android.widget.Button findUpcommentSend -> ac
    android.widget.Button findUnavailable -> ad
    int FRESH_LIST -> ae
    int FRESH_FAILED -> af
    int FRESH_DONE -> ag
    int FRESH_NULL -> ah
    int listPosition -> ai
    java.lang.String toNameStr -> aj
    java.lang.String find_Id -> ak
    java.lang.String to_Id -> al
    boolean findBool -> am
    com.fox.exercise.publish.SendMsgDetail self -> an
    int bg_width -> ao
    int bg_height -> ap
    int screen_width -> aq
    com.fox.exercise.ImageDownloader bg_Downloader -> ar
    java.lang.String bg_urlString -> as
    android.app.Dialog waitProgressDialog -> at
    android.view.View head_view -> au
    com.fox.exercise.ResideMenu resideMenu -> av
    android.view.View view -> aw
    android.text.TextWatcher mTextWatcher -> n
    android.widget.AdapterView$OnItemClickListener listener -> o
    android.widget.LinearLayout myView -> ax
    android.widget.PopupWindow myWindow -> ay
    android.widget.RelativeLayout pop_menu_background -> az
    java.lang.String FACE_PATH -> aA
    android.graphics.drawable.BitmapDrawable drawable -> aB
    void beforeInitView() -> a
    void showWaitDialog(java.lang.String) -> d
    void setViewStatus() -> b
    void initView() -> h
    void showedit() -> m
    void showUIedit() -> n
    void hideedit() -> o
    java.lang.Boolean stringFilter(java.lang.String) -> a
    java.lang.String filterEmoji(java.lang.String) -> b
    boolean containsEmoji(java.lang.String) -> c
    boolean isEmojiCharacter(char) -> a
    void initViews() -> i
    void delStr(android.widget.EditText) -> a
    void setCurPoint(int) -> b
    void onStart() -> onStart
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void initPortrait() -> p
    void init() -> q
    void waitShowDialog() -> r
    android.view.View getViewByPosition(int,android.widget.ListView) -> a
    void scrollVertical(int) -> c
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
    void shotSelectImages() -> j
    void onDismiss() -> onDismiss
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri) -> a
    void getImageToView(android.content.Intent) -> a
    android.graphics.Bitmap decodeUriAsBitmap(android.content.Intent) -> b
    void loadDate() -> k
    android.widget.EditText access$0(com.fox.exercise.newversion.act.FindFriendsFragment) -> a
    android.widget.Button access$1(com.fox.exercise.newversion.act.FindFriendsFragment) -> b
    android.widget.Button access$2(com.fox.exercise.newversion.act.FindFriendsFragment) -> c
    void access$3(com.fox.exercise.newversion.act.FindFriendsFragment,android.widget.EditText) -> a
    android.widget.Button access$4(com.fox.exercise.newversion.act.FindFriendsFragment) -> d
    com.fox.exercise.RecordHelper access$5(com.fox.exercise.newversion.act.FindFriendsFragment) -> e
    android.app.Dialog access$6(com.fox.exercise.newversion.act.FindFriendsFragment) -> f
    void access$7(com.fox.exercise.newversion.act.FindFriendsFragment,android.app.Dialog) -> a
    android.widget.LinearLayout access$8(com.fox.exercise.newversion.act.FindFriendsFragment) -> g
    com.fox.exercise.FindOtherMoreAdapter access$9(com.fox.exercise.newversion.act.FindFriendsFragment) -> h
    int access$10(com.fox.exercise.newversion.act.FindFriendsFragment) -> i
    java.lang.String access$11(com.fox.exercise.newversion.act.FindFriendsFragment) -> j
    java.lang.String access$12(com.fox.exercise.newversion.act.FindFriendsFragment) -> k
    java.lang.String access$13(com.fox.exercise.newversion.act.FindFriendsFragment) -> l
    android.widget.LinearLayout access$14(com.fox.exercise.newversion.act.FindFriendsFragment) -> m
    void access$15(com.fox.exercise.newversion.act.FindFriendsFragment) -> n
    java.lang.Boolean access$16(com.fox.exercise.newversion.act.FindFriendsFragment) -> o
    void access$17(com.fox.exercise.newversion.act.FindFriendsFragment,java.lang.Boolean) -> a
    android.widget.RelativeLayout access$18(com.fox.exercise.newversion.act.FindFriendsFragment) -> p
    boolean access$19(com.fox.exercise.newversion.act.FindFriendsFragment) -> q
    void access$20(com.fox.exercise.newversion.act.FindFriendsFragment,boolean) -> a
    android.widget.ImageButton access$21(com.fox.exercise.newversion.act.FindFriendsFragment) -> r
    void access$22(com.fox.exercise.newversion.act.FindFriendsFragment) -> s
    android.widget.RelativeLayout access$23(com.fox.exercise.newversion.act.FindFriendsFragment) -> t
    int access$24(com.fox.exercise.newversion.act.FindFriendsFragment) -> u
    com.fox.exercise.ResideMenu access$25(com.fox.exercise.newversion.act.FindFriendsFragment) -> v
    void access$26(com.fox.exercise.newversion.act.FindFriendsFragment,int) -> a
    void access$27(com.fox.exercise.newversion.act.FindFriendsFragment,boolean) -> b
    void access$28(com.fox.exercise.newversion.act.FindFriendsFragment,int) -> b
    cn.ingenic.indroidsync.SportsApp access$29(com.fox.exercise.newversion.act.FindFriendsFragment) -> w
    android.widget.ListView access$30(com.fox.exercise.newversion.act.FindFriendsFragment) -> x
    com.fox.exercise.view.PullToRefreshListView access$31(com.fox.exercise.newversion.act.FindFriendsFragment) -> y
    android.app.Dialog access$32(com.fox.exercise.newversion.act.FindFriendsFragment) -> z
    int access$33(com.fox.exercise.newversion.act.FindFriendsFragment) -> A
    java.util.List access$34(com.fox.exercise.newversion.act.FindFriendsFragment) -> B
    java.util.ArrayList access$35(com.fox.exercise.newversion.act.FindFriendsFragment) -> C
    void access$36(com.fox.exercise.newversion.act.FindFriendsFragment,com.fox.exercise.FindOtherMoreAdapter) -> a
    void access$37(com.fox.exercise.newversion.act.FindFriendsFragment,int) -> c
    void access$38(com.fox.exercise.newversion.act.FindFriendsFragment,java.lang.String) -> a
    void access$39(com.fox.exercise.newversion.act.FindFriendsFragment,java.lang.String) -> b
    void access$40(com.fox.exercise.newversion.act.FindFriendsFragment,java.lang.String) -> c
    boolean access$41(com.fox.exercise.newversion.act.FindFriendsFragment) -> D
    void access$42(com.fox.exercise.newversion.act.FindFriendsFragment) -> E
    java.util.ArrayList access$43(com.fox.exercise.newversion.act.FindFriendsFragment) -> F
    void access$44(com.fox.exercise.newversion.act.FindFriendsFragment) -> G
    void access$45(com.fox.exercise.newversion.act.FindFriendsFragment) -> H
    android.widget.TextView access$46(com.fox.exercise.newversion.act.FindFriendsFragment) -> I
    android.view.View access$47(com.fox.exercise.newversion.act.FindFriendsFragment,int,android.widget.ListView) -> a
    void access$48(com.fox.exercise.newversion.act.FindFriendsFragment,int) -> d
    void access$53(com.fox.exercise.newversion.act.FindFriendsFragment,int) -> e
    java.lang.Object access$54(com.fox.exercise.newversion.act.FindFriendsFragment,java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
    java.lang.String access$55() -> l
    android.app.Dialog access$56(com.fox.exercise.newversion.act.FindFriendsFragment) -> J
    void access$57(com.fox.exercise.newversion.act.FindFriendsFragment,android.graphics.drawable.BitmapDrawable) -> a
    android.widget.ImageView access$58(com.fox.exercise.newversion.act.FindFriendsFragment) -> K
    android.graphics.drawable.BitmapDrawable access$59(com.fox.exercise.newversion.act.FindFriendsFragment) -> L
com.fox.exercise.newversion.act.FindFriendsFragment$1 -> com.fox.exercise.newversion.act.h:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.newversion.act.FindFriendsFragment$10 -> com.fox.exercise.newversion.act.i:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    android.graphics.Bitmap val$bitmap -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.FindFriendsFragment$2 -> com.fox.exercise.newversion.act.j:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.act.FindFriendsFragment$3 -> com.fox.exercise.newversion.act.k:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.act.FindFriendsFragment$4 -> com.fox.exercise.newversion.act.l:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.fox.exercise.newversion.act.FindFriendsFragment$5 -> com.fox.exercise.newversion.act.m:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.act.FindFriendsFragment$6 -> com.fox.exercise.newversion.act.n:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void OnViewChange(int) -> a
com.fox.exercise.newversion.act.FindFriendsFragment$7 -> com.fox.exercise.newversion.act.o:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.fox.exercise.newversion.act.FindFriendsFragment$8 -> com.fox.exercise.newversion.act.p:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.FindFriendsFragment$9 -> com.fox.exercise.newversion.act.q:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    int val$y -> b
    void run() -> run
com.fox.exercise.newversion.act.FindFriendsFragment$ExpressionImgAdapter -> com.fox.exercise.newversion.act.r:
    java.util.List mList -> b
    android.content.Context mContext -> c
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.act.FindFriendsFragment$ExpressionImgAdapter$ImgItem -> com.fox.exercise.newversion.act.s:
    android.widget.ImageView mAppIcon -> a
    com.fox.exercise.newversion.act.FindFriendsFragment$ExpressionImgAdapter this$1 -> b
com.fox.exercise.newversion.act.FindFriendsFragment$GetActionDataTask -> com.fox.exercise.newversion.act.t:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.FindFriendsFragment$GetActionDataTask2 -> com.fox.exercise.newversion.act.u:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler -> com.fox.exercise.newversion.act.v:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void scrollToComment(int) -> a
    void access$0(com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler,int) -> a
    com.fox.exercise.newversion.act.FindFriendsFragment access$1(com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler) -> a
com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler$1 -> com.fox.exercise.newversion.act.w:
    com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler this$1 -> a
    void OnCheckedChangeListener(int,java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler$2 -> com.fox.exercise.newversion.act.x:
    com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler this$1 -> a
    void OnCheckedChangeListener(int,java.lang.String,int,java.lang.String,java.lang.String) -> a
com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler$3 -> com.fox.exercise.newversion.act.y:
    com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler this$1 -> a
    android.graphics.Rect val$mrect -> b
    void run() -> run
com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreThread -> com.fox.exercise.newversion.act.z:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreThread_top -> com.fox.exercise.newversion.act.aa:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.FindFriendsFragment$findClickListener -> com.fox.exercise.newversion.act.ab:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onLongClick(android.view.View) -> onLongClick
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.FindFriendsFragment$rightOnClickListener -> com.fox.exercise.newversion.act.ac:
    com.fox.exercise.newversion.act.FindFriendsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.FindPointsSayActivity -> com.fox.exercise.newversion.act.FindPointsSayActivity:
    android.widget.TextView iView -> z
    cn.ingenic.indroidsync.SportsApp mSportsApp -> A
    android.content.Context mContext -> B
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> C
    com.fox.exercise.ImageDownloader mDownloader2 -> D
    int width -> w
    com.fox.exercise.newversion.entity.CircleFindsLists circleFindsLists -> E
    android.app.Dialog mLoadProgressDialog -> F
    android.widget.TextView mDialogMessage -> G
    int times -> H
    int FRESH_LIST -> I
    int FRESH_FAILED -> J
    int FRESH_NULL -> K
    com.fox.exercise.newversion.act.FindPointsSayActivity$SportsFindMoreHandler mSportsFindMoreHandler -> L
    android.widget.TextView points_say_title -> M
    android.widget.TextView points_say_time -> N
    android.widget.TextView points_say_content -> O
    android.widget.ImageView points_say_icon -> P
    android.widget.RelativeLayout rScrollLayout -> Q
    com.fox.exercise.util.ScrollLayout scrollLayout -> R
    android.widget.LinearLayout find_upcomment_text -> S
    android.widget.EditText find_upcomment_edittext -> T
    android.widget.Button find_upcomment_send -> U
    android.widget.Button find_unavailable -> V
    android.widget.LinearLayout activity_pinglun_layout -> W
    android.widget.TextView activity_submit_pinglun -> X
    android.widget.ImageButton find_expression_text_btn -> Y
    android.widget.LinearLayout imgLayout -> Z
    int mViewCount -> aa
    int mCurSel -> ab
    java.lang.Boolean isShow -> ac
    android.widget.LinearLayout zong_activity_layout -> ad
    java.util.List imgItems -> ae
    java.lang.String[] imgStr -> af
    android.view.View pinglunDetails -> ag
    java.lang.String theFirstName -> ah
    java.lang.String theSecondName -> ai
    java.lang.String theTalkDetils -> aj
    java.lang.String thewavComment -> ak
    java.lang.String thewavDuration -> al
    java.lang.String newMessageString -> am
    java.lang.String newNameString -> an
    android.view.LayoutInflater mInflater -> ao
    int numcom -> ap
    com.fox.exercise.pedometer.ImageWorkManager mImageWorkerMan_Icon -> aq
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker_Icon -> ar
    android.app.Dialog alertDialog -> as
    java.lang.String toID -> at
    int isHuifuPinglun -> au
    android.app.Dialog waitProgressDialog -> av
    com.fox.exercise.api.entity.UserDetail detail -> aw
    com.fox.exercise.newversion.entity.PointsSay mPointsSay -> ax
    android.text.TextWatcher mTextWatcher -> x
    android.widget.AdapterView$OnItemClickListener listener -> y
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void waitShowDialog() -> h
    void init() -> i
    void setCurPoint(int) -> b
    void onClick(android.view.View) -> onClick
    void hideedit() -> j
    void initViews() -> g
    void delStr(android.widget.EditText) -> a
    void setZanAndPinglun() -> k
    java.lang.String ToDBC(java.lang.String) -> b
    java.util.List getExpressionString(android.content.Context,java.lang.String,int,int,int) -> a
    java.util.List getNameString(android.content.Context,java.lang.String,int,int,int) -> b
    java.util.List getContentString(android.content.Context,java.lang.String,int) -> a
    void showAdminDialogs(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void showDialogs(int,java.lang.String) -> a
    void showWaitDialog(java.lang.String) -> c
    void send(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.widget.EditText access$0(com.fox.exercise.newversion.act.FindPointsSayActivity) -> a
    android.content.Context access$1(com.fox.exercise.newversion.act.FindPointsSayActivity) -> b
    android.widget.Button access$2(com.fox.exercise.newversion.act.FindPointsSayActivity) -> c
    android.widget.Button access$3(com.fox.exercise.newversion.act.FindPointsSayActivity) -> d
    void access$4(com.fox.exercise.newversion.act.FindPointsSayActivity,android.widget.EditText) -> a
    cn.ingenic.indroidsync.SportsApp access$5(com.fox.exercise.newversion.act.FindPointsSayActivity) -> e
    int access$6(com.fox.exercise.newversion.act.FindPointsSayActivity) -> f
    com.fox.exercise.newversion.entity.CircleFindsLists access$7(com.fox.exercise.newversion.act.FindPointsSayActivity) -> g
    com.fox.exercise.newversion.act.FindPointsSayActivity$SportsFindMoreHandler access$8(com.fox.exercise.newversion.act.FindPointsSayActivity) -> h
    void access$9(com.fox.exercise.newversion.act.FindPointsSayActivity,com.fox.exercise.newversion.entity.PointsSay) -> a
    android.widget.TextView access$10(com.fox.exercise.newversion.act.FindPointsSayActivity) -> i
    android.widget.TextView access$11(com.fox.exercise.newversion.act.FindPointsSayActivity) -> j
    android.widget.TextView access$12(com.fox.exercise.newversion.act.FindPointsSayActivity) -> k
    com.fox.exercise.bitmap.util.ImageResizer access$13(com.fox.exercise.newversion.act.FindPointsSayActivity) -> l
    android.widget.ImageView access$14(com.fox.exercise.newversion.act.FindPointsSayActivity) -> m
    android.widget.LinearLayout access$15(com.fox.exercise.newversion.act.FindPointsSayActivity) -> n
    android.widget.TextView access$16(com.fox.exercise.newversion.act.FindPointsSayActivity) -> o
    void access$17(com.fox.exercise.newversion.act.FindPointsSayActivity) -> p
    android.app.Dialog access$18(com.fox.exercise.newversion.act.FindPointsSayActivity) -> q
    android.app.Dialog access$19(com.fox.exercise.newversion.act.FindPointsSayActivity) -> r
    com.fox.exercise.api.entity.UserDetail access$20(com.fox.exercise.newversion.act.FindPointsSayActivity) -> s
    void access$21(com.fox.exercise.newversion.act.FindPointsSayActivity,int,java.lang.String) -> a
    void access$22(com.fox.exercise.newversion.act.FindPointsSayActivity,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void access$23(com.fox.exercise.newversion.act.FindPointsSayActivity,java.lang.String) -> a
    void access$24(com.fox.exercise.newversion.act.FindPointsSayActivity,int) -> a
    int access$25(com.fox.exercise.newversion.act.FindPointsSayActivity) -> t
    java.lang.Boolean access$26(com.fox.exercise.newversion.act.FindPointsSayActivity) -> u
    void access$27(com.fox.exercise.newversion.act.FindPointsSayActivity,java.lang.Boolean) -> a
    android.widget.RelativeLayout access$28(com.fox.exercise.newversion.act.FindPointsSayActivity) -> v
    void access$29(com.fox.exercise.newversion.act.FindPointsSayActivity) -> w
    void access$30(com.fox.exercise.newversion.act.FindPointsSayActivity,int) -> b
    android.app.Dialog access$31(com.fox.exercise.newversion.act.FindPointsSayActivity) -> x
    void access$32(com.fox.exercise.newversion.act.FindPointsSayActivity,java.lang.String) -> b
com.fox.exercise.newversion.act.FindPointsSayActivity$1 -> com.fox.exercise.newversion.act.ad:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.newversion.act.FindPointsSayActivity$10 -> com.fox.exercise.newversion.act.ae:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    java.lang.String val$findID -> b
    java.lang.String val$commentText -> c
    java.lang.String val$commentWav -> d
    java.lang.String val$wavDuration -> e
    java.lang.String val$toID -> f
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.FindPointsSayActivity$2 -> com.fox.exercise.newversion.act.af:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.act.FindPointsSayActivity$3 -> com.fox.exercise.newversion.act.ag:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.fox.exercise.newversion.act.FindPointsSayActivity$4 -> com.fox.exercise.newversion.act.ah:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.FindPointsSayActivity$5 -> com.fox.exercise.newversion.act.ai:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    void OnViewChange(int) -> a
com.fox.exercise.newversion.act.FindPointsSayActivity$6 -> com.fox.exercise.newversion.act.aj:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    java.lang.String val$commentID -> b
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.act.FindPointsSayActivity access$0(com.fox.exercise.newversion.act.FindPointsSayActivity$6) -> a
com.fox.exercise.newversion.act.FindPointsSayActivity$6$1 -> com.fox.exercise.newversion.act.ak:
    com.fox.exercise.newversion.act.FindPointsSayActivity$6 this$1 -> a
    java.lang.String val$commentID -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.FindPointsSayActivity$7 -> com.fox.exercise.newversion.act.al:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    java.lang.String val$commentID -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.FindPointsSayActivity$8 -> com.fox.exercise.newversion.act.am:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    java.lang.String val$commentID -> b
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.act.FindPointsSayActivity access$0(com.fox.exercise.newversion.act.FindPointsSayActivity$8) -> a
com.fox.exercise.newversion.act.FindPointsSayActivity$8$1 -> com.fox.exercise.newversion.act.an:
    com.fox.exercise.newversion.act.FindPointsSayActivity$8 this$1 -> a
    java.lang.String val$commentID -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.FindPointsSayActivity$9 -> com.fox.exercise.newversion.act.ao:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.FindPointsSayActivity$ExpressionImgAdapter -> com.fox.exercise.newversion.act.ap:
    java.util.List mList -> b
    android.content.Context mContext -> c
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.act.FindPointsSayActivity$ExpressionImgAdapter$ImgItem -> com.fox.exercise.newversion.act.aq:
    android.widget.ImageView mAppIcon -> a
    com.fox.exercise.newversion.act.FindPointsSayActivity$ExpressionImgAdapter this$1 -> b
com.fox.exercise.newversion.act.FindPointsSayActivity$SportsFindMoreHandler -> com.fox.exercise.newversion.act.ar:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.FindPointsSayActivity$SportsFindMoreThread -> com.fox.exercise.newversion.act.as:
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.FindPointsSayActivity$commentOnClickListener -> com.fox.exercise.newversion.act.at:
    int comment_number -> b
    java.lang.String findID -> c
    java.lang.String commentID -> d
    java.lang.String theFirstName -> e
    com.fox.exercise.newversion.act.FindPointsSayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.FoxSportsSettingsActivity -> com.fox.exercise.newversion.act.FoxSportsSettingsActivity:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> x
    android.content.SharedPreferences foxSportSetting -> y
    android.content.SharedPreferences download_map_SharedPre -> z
    java.lang.Boolean isOpen -> A
    java.lang.Boolean isVoiceON -> B
    int mMap -> C
    android.widget.ImageView go_lockscreen -> D
    android.widget.ImageView go_readsound -> E
    android.widget.RelativeLayout mPopMenuBack -> F
    android.widget.TextView download_default_map -> G
    long preTime -> H
    android.widget.TextView defaultMap -> I
    int tempMap -> J
    android.content.Context mContext -> K
    android.widget.PopupWindow myWindow -> L
    android.widget.RelativeLayout myView -> M
    android.widget.EditText edit_step -> N
    android.widget.LinearLayout slim_settings_two -> O
    android.widget.RelativeLayout sports_target_settings -> P
    android.widget.TextView sport_target_num -> Q
    android.widget.ImageView go_sport_target -> R
    android.widget.PopupWindow window -> S
    android.widget.LinearLayout mview -> T
    android.widget.RelativeLayout relativelayout_six -> U
    android.widget.TextView now_version -> V
    android.app.Dialog mLoadProgressDialog -> W
    android.widget.TextView mDialogMessage -> X
    android.app.Dialog dialog -> Y
    java.lang.String videoPath -> Z
    android.os.Handler fHandler -> w
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void init() -> j
    long getFileSize(java.io.File) -> c
    long getFileSizes(java.io.File) -> d
    double FormetFileSize(long,int) -> a
    double getFileOrFilesSize(java.lang.String,int) -> a
    void DeleteFile(java.io.File) -> a
    void DeleteVideoFile(java.io.File) -> b
    void popCacheWindow() -> k
    void onClick(android.view.View) -> onClick
    int CalcStepCounter() -> l
    java.lang.String getTodayDate() -> m
    void onDismiss() -> onDismiss
    void selectDownloadMap() -> n
    void shotSportsGoal() -> g
    void shot() -> h
    java.lang.String getVersion() -> i
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void waitShowDialog() -> o
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void access$0(com.fox.exercise.newversion.act.FoxSportsSettingsActivity) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.newversion.act.FoxSportsSettingsActivity) -> b
    int access$2(com.fox.exercise.newversion.act.FoxSportsSettingsActivity) -> c
    android.app.Dialog access$3(com.fox.exercise.newversion.act.FoxSportsSettingsActivity) -> d
    java.lang.String access$4(com.fox.exercise.newversion.act.FoxSportsSettingsActivity) -> e
    android.app.Dialog access$5(com.fox.exercise.newversion.act.FoxSportsSettingsActivity) -> f
    void access$6(com.fox.exercise.newversion.act.FoxSportsSettingsActivity,android.app.Dialog) -> a
com.fox.exercise.newversion.act.FoxSportsSettingsActivity$1 -> com.fox.exercise.newversion.act.au:
    com.fox.exercise.newversion.act.FoxSportsSettingsActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.FoxSportsSettingsActivity$2 -> com.fox.exercise.newversion.act.av:
    com.fox.exercise.newversion.act.FoxSportsSettingsActivity this$0 -> a
    android.widget.CheckBox val$cb_pic_clear -> b
    android.widget.CheckBox val$cb_video_clear -> c
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.FoxSportsSettingsActivity$3 -> com.fox.exercise.newversion.act.aw:
    com.fox.exercise.newversion.act.FoxSportsSettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.FoxSportsSettingsActivity$UpLoadTempTask -> com.fox.exercise.newversion.act.ax:
    com.fox.exercise.newversion.act.FoxSportsSettingsActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.IndexHealthFrg -> com.fox.exercise.newversion.act.ay:
    android.content.Context mContext -> l
    android.view.View view -> m
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.MyFirstSportFragment -> com.fox.exercise.newversion.act.MyFirstSportFragment:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> C
    android.content.Context context -> D
    int mUid -> E
    int mSelectTypeID -> F
    android.app.Dialog alertDialog -> G
    android.content.SharedPreferences sharedPreferences -> H
    android.content.SharedPreferences spf -> I
    java.util.concurrent.ExecutorService cachedThreadExecutor -> J
    com.baidu.location.LocationClient mClient -> l
    com.fox.exercise.newversion.act.MyFirstSportFragment$MyLocationListenner myListener -> m
    int type -> K
    android.widget.ImageView bind_device_text -> L
    android.widget.TextView tianqi_content -> M
    android.widget.TextView tianqi_content_num -> N
    android.widget.TextView mWeatherPM -> O
    android.widget.TextView user_allsport_licheng -> P
    android.widget.TextView dis_xiao_1 -> Q
    android.widget.TextView dis_xiao_2 -> R
    android.widget.ImageView iv_historyallbtn -> S
    android.widget.ImageView iv_sportstyle -> T
    android.widget.RelativeLayout rl_startsport_first -> U
    android.widget.TextView yundong_cishu -> V
    android.widget.TextView yundong_laluli -> W
    android.widget.TextView yundong_di_day -> X
    android.widget.ImageView image_sports_complete_rate -> Y
    android.widget.ImageView image_sports_complete_point -> Z
    android.os.Vibrator djs_vibrator -> aa
    android.widget.LinearLayout djs_layout -> ab
    android.widget.ImageView djs_image -> ac
    android.view.animation.Animation djs_animation -> ad
    int djs_count -> ae
    int djs_counts -> af
    java.lang.Boolean djs_zd -> ag
    android.content.SharedPreferences djs_sp -> ah
    int[] myDjsImage -> ai
    com.fox.exercise.map.VoicePrompt vp -> aj
    android.location.LocationManager locationManager -> ak
    int typeId -> al
    int typeDetailId -> am
    android.widget.PopupWindow mSportWindow -> an
    java.lang.String[] mSportTypeNames -> ao
    com.fox.exercise.newversion.act.MyFirstSportFragment$MyAdapter myAdapter -> ap
    int[] mSporTypeImage -> aq
    int[] mSporTypeImage_yellow -> ar
    int[] mFirstpagetype -> as
    com.fox.exercise.db.SportSubTaskDB mdb -> at
    boolean mIn -> n
    com.amap.api.location.LocationManagerProxy mLocationManagerProxy -> au
    com.fox.exercise.db.SportSubTaskDB histDB -> av
    boolean history_see -> aw
    int mTimes -> ax
    android.widget.TextView tipNumtx -> ay
    android.view.animation.AnimationSet animationSet1 -> o
    android.view.animation.AnimationSet animationSet2 -> p
    android.view.animation.TranslateAnimation translateAnimation1 -> q
    android.view.animation.TranslateAnimation translateAnimation2 -> r
    android.view.animation.AnimationSet animationSetDis1 -> s
    android.view.animation.AnimationSet animationSetDis2 -> t
    android.view.animation.TranslateAnimation translateAnimationDis1 -> u
    android.view.animation.TranslateAnimation translateAnimationDis2 -> v
    android.view.animation.AnimationSet animationSetCal1 -> w
    android.view.animation.AnimationSet animationSetCal2 -> x
    android.view.animation.TranslateAnimation translateAnimationCal1 -> y
    android.view.animation.TranslateAnimation translateAnimationCal2 -> z
    long preTime -> az
    android.graphics.drawable.AnimationDrawable mAnimation -> aA
    java.lang.String times -> aB
    android.widget.RelativeLayout sports_goal_layout -> aC
    android.widget.TextView mubiao_content -> aD
    android.widget.TextView mubiao_content_title -> aE
    java.lang.String cityname -> aF
    android.view.View view -> aG
    android.widget.LinearLayout image_sports_complete_layout -> aH
    android.widget.TextView image_sports_complete_content -> aI
    android.widget.PopupWindow myWindow -> aJ
    android.widget.PopupWindow tanChuPop -> aK
    android.widget.RelativeLayout myView -> aL
    android.widget.EditText edit_step -> aM
    android.widget.RelativeLayout mPopMenuBack -> aN
    java.util.List list_one -> aO
    com.fox.exercise.newversion.entity.ExternalActivi exActivi -> aP
    com.fox.exercise.api.entity.ActivityInfo activityDetailInfo -> aQ
    com.fox.exercise.newversion.act.MyFirstSportFragment$MsgReceiver msgReceiver -> aR
    android.widget.RelativeLayout rl_bushu -> aS
    android.widget.TextView tv_jinri -> aT
    android.widget.TextView tv_bushu -> aU
    android.widget.TextView tv_bu -> aV
    android.widget.TextView tv_xiaohao -> aW
    android.widget.TextView tv_kaluli -> aX
    android.widget.TextView tv_kaluli_content -> aY
    android.widget.TextView iv_beishu -> aZ
    android.widget.ImageView iv_tubiao -> ba
    android.widget.ImageView tv_yuedengyu -> bb
    android.content.SharedPreferences hSpf -> bc
    int steps -> bd
    double calories -> be
    int yangRouChuan -> bf
    int hanBao -> bg
    int zhiShiDanGao -> bh
    int jiTui -> bi
    android.os.Handler mHandler -> bj
    double sports_juli -> bk
    int sports_cishu -> bl
    double sports_sudu -> bm
    int sports_reliang -> bn
    int juli_float -> bo
    int countdown -> A
    double todayDis -> bp
    int todayDisCountdown -> bq
    int gpsType -> B
    android.os.Handler mHandlerDjs -> br
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    int registerLocation() -> h
    void initView() -> o
    void setTempNum(java.lang.String) -> b
    void onClick(android.view.View) -> onClick
    android.app.Dialog onCreateDialogs(int,android.os.Bundle) -> b
    boolean isOPen(android.content.Context) -> a
    void startTextAnimation(int) -> d
    void initGaodeWeather() -> p
    void initPM() -> q
    void onWeatherForecaseSearched(com.amap.api.location.AMapLocalWeatherForecast) -> onWeatherForecaseSearched
    void onWeatherLiveSearched(com.amap.api.location.AMapLocalWeatherLive) -> onWeatherLiveSearched
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void OnViewChange(int) -> b
    void onDismiss() -> onDismiss
    void saveDate2DB(com.fox.exercise.pedometer.SportContionTaskDetail) -> a
    void allSportsData() -> r
    java.util.ArrayList getUnUpload() -> s
    void getIcon(java.lang.String) -> a
    void unregisterLocation() -> i
    java.lang.String CalcStepCounter() -> t
    void updateTip() -> j
    void setMsgbox(int) -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setSportsgoal() -> k
    java.lang.String getTodayDate() -> u
    void shotSportsGoal() -> l
    void shotOutHuodongPop() -> m
    void getUserInfo() -> v
    void showSportWindow() -> w
    void goStart() -> x
    void onCreateDialog() -> y
    void saveAndExit() -> z
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void tanOutCount(int) -> f
    void access$0(com.fox.exercise.newversion.act.MyFirstSportFragment) -> a
    java.lang.String access$1(com.fox.exercise.newversion.act.MyFirstSportFragment) -> b
    void access$2(com.fox.exercise.newversion.act.MyFirstSportFragment,java.lang.String) -> a
    android.widget.TextView access$3(com.fox.exercise.newversion.act.MyFirstSportFragment) -> c
    android.widget.TextView access$4(com.fox.exercise.newversion.act.MyFirstSportFragment) -> d
    android.widget.TextView access$5(com.fox.exercise.newversion.act.MyFirstSportFragment) -> e
    void access$6(com.fox.exercise.newversion.act.MyFirstSportFragment) -> f
    void access$7(com.fox.exercise.newversion.act.MyFirstSportFragment,int) -> a
    android.widget.TextView access$8(com.fox.exercise.newversion.act.MyFirstSportFragment) -> g
    void access$9(com.fox.exercise.newversion.act.MyFirstSportFragment) -> h
    android.widget.ImageView access$10(com.fox.exercise.newversion.act.MyFirstSportFragment) -> i
    int[] access$11(com.fox.exercise.newversion.act.MyFirstSportFragment) -> j
    int access$12(com.fox.exercise.newversion.act.MyFirstSportFragment) -> k
    android.view.animation.Animation access$13(com.fox.exercise.newversion.act.MyFirstSportFragment) -> l
    void access$14(com.fox.exercise.newversion.act.MyFirstSportFragment,int) -> b
    android.os.Handler access$15(com.fox.exercise.newversion.act.MyFirstSportFragment) -> m
    android.widget.LinearLayout access$16(com.fox.exercise.newversion.act.MyFirstSportFragment) -> n
    void access$17(com.fox.exercise.newversion.act.MyFirstSportFragment) -> o
    android.os.Vibrator access$18(com.fox.exercise.newversion.act.MyFirstSportFragment) -> p
    void access$19(com.fox.exercise.newversion.act.MyFirstSportFragment,int) -> c
    void access$20(com.fox.exercise.newversion.act.MyFirstSportFragment,double) -> a
    int access$21(com.fox.exercise.newversion.act.MyFirstSportFragment) -> q
    double access$22(com.fox.exercise.newversion.act.MyFirstSportFragment) -> r
    android.widget.TextView access$23(com.fox.exercise.newversion.act.MyFirstSportFragment) -> s
    android.widget.TextView access$24(com.fox.exercise.newversion.act.MyFirstSportFragment) -> t
    android.widget.TextView access$25(com.fox.exercise.newversion.act.MyFirstSportFragment) -> u
    android.widget.ImageView access$26(com.fox.exercise.newversion.act.MyFirstSportFragment) -> v
    android.widget.TextView access$27(com.fox.exercise.newversion.act.MyFirstSportFragment) -> w
    int access$28(com.fox.exercise.newversion.act.MyFirstSportFragment) -> x
    int access$29(com.fox.exercise.newversion.act.MyFirstSportFragment) -> y
    int access$30(com.fox.exercise.newversion.act.MyFirstSportFragment) -> z
    int access$31(com.fox.exercise.newversion.act.MyFirstSportFragment) -> A
    java.lang.String[] access$32(com.fox.exercise.newversion.act.MyFirstSportFragment) -> B
    int access$33(com.fox.exercise.newversion.act.MyFirstSportFragment) -> C
    int[] access$34(com.fox.exercise.newversion.act.MyFirstSportFragment) -> D
    int[] access$35(com.fox.exercise.newversion.act.MyFirstSportFragment) -> E
    android.widget.ImageView access$36(com.fox.exercise.newversion.act.MyFirstSportFragment) -> F
    int[] access$37(com.fox.exercise.newversion.act.MyFirstSportFragment) -> G
    android.widget.PopupWindow access$38(com.fox.exercise.newversion.act.MyFirstSportFragment) -> H
    void access$39(int) -> c
    void access$40(com.fox.exercise.newversion.act.MyFirstSportFragment,int) -> d
    void access$41(com.fox.exercise.newversion.act.MyFirstSportFragment,int) -> e
    int access$42() -> n
    void access$43(com.fox.exercise.newversion.act.MyFirstSportFragment,int) -> f
    cn.ingenic.indroidsync.SportsApp access$44(com.fox.exercise.newversion.act.MyFirstSportFragment) -> I
    void access$45(com.fox.exercise.newversion.act.MyFirstSportFragment,com.fox.exercise.db.SportSubTaskDB) -> a
    int access$46(com.fox.exercise.newversion.act.MyFirstSportFragment) -> J
    int access$47(com.fox.exercise.newversion.act.MyFirstSportFragment) -> K
    void access$48(com.fox.exercise.newversion.act.MyFirstSportFragment,com.fox.exercise.pedometer.SportContionTaskDetail) -> a
    android.os.Handler access$49(com.fox.exercise.newversion.act.MyFirstSportFragment) -> L
    void access$50(com.fox.exercise.newversion.act.MyFirstSportFragment,com.fox.exercise.newversion.entity.ExternalActivi) -> a
    android.content.SharedPreferences access$51(com.fox.exercise.newversion.act.MyFirstSportFragment) -> M
    com.fox.exercise.newversion.entity.ExternalActivi access$52(com.fox.exercise.newversion.act.MyFirstSportFragment) -> N
    void access$53(com.fox.exercise.newversion.act.MyFirstSportFragment,com.fox.exercise.api.entity.ActivityInfo) -> a
    android.app.Dialog access$54(com.fox.exercise.newversion.act.MyFirstSportFragment) -> O
    android.content.SharedPreferences access$55(com.fox.exercise.newversion.act.MyFirstSportFragment) -> P
    void access$56(com.fox.exercise.newversion.act.MyFirstSportFragment,int) -> g
    int access$57(com.fox.exercise.newversion.act.MyFirstSportFragment) -> Q
com.fox.exercise.newversion.act.MyFirstSportFragment$1 -> com.fox.exercise.newversion.act.az:
    android.content.SharedPreferences spf -> a
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.MyFirstSportFragment$10 -> com.fox.exercise.newversion.act.ba:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.newversion.act.MyFirstSportFragment$11 -> com.fox.exercise.newversion.act.bb:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void onDismiss() -> onDismiss
com.fox.exercise.newversion.act.MyFirstSportFragment$12 -> com.fox.exercise.newversion.act.bc:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.fox.exercise.newversion.act.MyFirstSportFragment$13 -> com.fox.exercise.newversion.act.bd:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.newversion.act.MyFirstSportFragment$14 -> com.fox.exercise.newversion.act.be:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.act.MyFirstSportFragment access$0(com.fox.exercise.newversion.act.MyFirstSportFragment$14) -> a
com.fox.exercise.newversion.act.MyFirstSportFragment$14$1 -> com.fox.exercise.newversion.act.bf:
    com.fox.exercise.newversion.act.MyFirstSportFragment$14 this$1 -> a
    void run() -> run
com.fox.exercise.newversion.act.MyFirstSportFragment$15 -> com.fox.exercise.newversion.act.bg:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.MyFirstSportFragment$16 -> com.fox.exercise.newversion.act.bh:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.fox.exercise.newversion.act.MyFirstSportFragment$17 -> com.fox.exercise.newversion.act.bi:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.MyFirstSportFragment$18 -> com.fox.exercise.newversion.act.bj:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    int val$activity_id -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.MyFirstSportFragment$2 -> com.fox.exercise.newversion.act.bk:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.MyFirstSportFragment$3 -> com.fox.exercise.newversion.act.bl:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.MyFirstSportFragment$4 -> com.fox.exercise.newversion.act.bm:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.MyFirstSportFragment$5 -> com.fox.exercise.newversion.act.bn:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    com.fox.exercise.newversion.entity.ExternalActivi doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.newversion.entity.ExternalActivi) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.newversion.act.MyFirstSportFragment access$2(com.fox.exercise.newversion.act.MyFirstSportFragment$5) -> a
com.fox.exercise.newversion.act.MyFirstSportFragment$5$1 -> com.fox.exercise.newversion.act.bo:
    com.fox.exercise.newversion.act.MyFirstSportFragment$5 this$1 -> a
    com.fox.exercise.api.entity.ActivityInfo doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.ActivityInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.MyFirstSportFragment$6 -> com.fox.exercise.newversion.act.bp:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.newversion.act.MyFirstSportFragment$7 -> com.fox.exercise.newversion.act.bq:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.newversion.act.MyFirstSportFragment$8 -> com.fox.exercise.newversion.act.br:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.MyFirstSportFragment$9 -> com.fox.exercise.newversion.act.bs:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    com.fox.exercise.api.entity.UserDetail doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.UserDetail) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.MyFirstSportFragment$MsgReceiver -> com.fox.exercise.newversion.act.MyFirstSportFragment$MsgReceiver:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.newversion.act.MyFirstSportFragment$MyAdapter -> com.fox.exercise.newversion.act.bt:
    android.content.Context myContext -> b
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.act.MyFirstSportFragment$MyItemClick -> com.fox.exercise.newversion.act.bu:
    com.fox.exercise.newversion.act.MyFirstSportFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.act.MyFirstSportFragment$MyLocationListenner -> com.fox.exercise.newversion.act.bv:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.fox.exercise.newversion.act.NewHuoDongListFrg -> com.fox.exercise.newversion.act.bw:
    android.view.View view -> m
    com.fox.exercise.view.PullToRefreshListView activitylistView -> n
    android.widget.ListView mListView -> o
    com.fox.exercise.ActivityListAdapter activityAdapter -> p
    java.util.List actionLists -> q
    int times -> r
    android.widget.TextView no_data -> s
    cn.ingenic.indroidsync.SportsApp mSportsApp -> t
    java.lang.String activityTime -> u
    java.text.SimpleDateFormat formatter -> v
    java.util.Date curDate -> w
    java.util.Date activityDate -> x
    android.graphics.ColorMatrix matrix -> y
    android.content.Context mContext -> z
    android.app.Dialog mLoadProgressDialog -> l
    android.widget.AdapterView$OnItemClickListener listViewClick -> A
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void Init() -> h
    void waitShow() -> f
    void waitCloset() -> g
    void GetActionData() -> i
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> a
    java.util.List access$1(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> b
    void access$2(com.fox.exercise.newversion.act.NewHuoDongListFrg,java.lang.String) -> a
    java.lang.String access$3(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> c
    java.text.SimpleDateFormat access$4(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> d
    void access$5(com.fox.exercise.newversion.act.NewHuoDongListFrg,java.util.Date) -> a
    java.util.Date access$6(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> e
    java.util.Date access$7(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> f
    android.content.Context access$8(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> g
    int access$9(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> h
    com.fox.exercise.ActivityListAdapter access$10(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> i
    void access$11(com.fox.exercise.newversion.act.NewHuoDongListFrg,com.fox.exercise.ActivityListAdapter) -> a
    android.widget.ListView access$12(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> j
    com.fox.exercise.view.PullToRefreshListView access$13(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> k
    android.widget.TextView access$14(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> l
    void access$15(com.fox.exercise.newversion.act.NewHuoDongListFrg,int) -> a
    void access$16(com.fox.exercise.newversion.act.NewHuoDongListFrg) -> m
com.fox.exercise.newversion.act.NewHuoDongListFrg$1 -> com.fox.exercise.newversion.act.bx:
    com.fox.exercise.newversion.act.NewHuoDongListFrg this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.act.NewHuoDongListFrg$2 -> com.fox.exercise.newversion.act.by:
    com.fox.exercise.newversion.act.NewHuoDongListFrg this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.act.NewHuoDongListFrg$GetActionDataTask -> com.fox.exercise.newversion.act.bz:
    com.fox.exercise.newversion.act.NewHuoDongListFrg this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.PerfectMainActivity -> com.fox.exercise.newversion.act.PerfectMainActivity:
    java.lang.String TAG -> b
    com.fox.exercise.util.RoundedImage perfect_image_icon -> c
    android.widget.EditText perfect_edit_name -> d
    android.widget.TextView perfect_bt_ok -> e
    android.widget.TextView top_title -> f
    android.widget.PopupWindow photoPopWindow -> g
    android.widget.RelativeLayout pop_menu_background -> h
    java.lang.String IMAGE_FILE_NAME -> i
    android.graphics.drawable.BitmapDrawable drawable -> j
    java.lang.String FACE_PATH -> k
    java.lang.String FACE_PATH_TWO -> l
    cn.ingenic.indroidsync.SportsApp mSportsApp -> a
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> m
    java.lang.String comeFrom -> n
    java.lang.String sex -> o
    java.lang.String weiBo_photo -> p
    android.content.SharedPreferences weiBo_sp -> q
    java.lang.String weiBo_type -> r
    com.fox.exercise.api.entity.UserDetail mUserDetail -> s
    java.lang.String weiboType -> t
    java.lang.String weiboName -> u
    java.lang.String token -> v
    android.content.Intent intent -> w
    java.lang.String argname -> x
    android.app.Dialog mLoadProgressDialog -> y
    android.widget.TextView mDialogMessage -> z
    android.os.Handler mHandler -> A
    void onCreate(android.os.Bundle) -> onCreate
    void shotSelectImages() -> a
    void onClick(android.view.View) -> onClick
    boolean judgeNum(java.lang.String) -> a
    void onDismiss() -> onDismiss
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri) -> a
    void getImageToView(android.content.Intent) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void waitShowDialog() -> b
    void onDestroy() -> onDestroy
    android.app.Dialog access$0(com.fox.exercise.newversion.act.PerfectMainActivity) -> a
    com.fox.exercise.SportsExceptionHandler access$1(com.fox.exercise.newversion.act.PerfectMainActivity) -> b
    void access$2(com.fox.exercise.newversion.act.PerfectMainActivity,com.fox.exercise.api.entity.UserDetail) -> a
    android.widget.EditText access$3(com.fox.exercise.newversion.act.PerfectMainActivity) -> c
    java.lang.String access$4(com.fox.exercise.newversion.act.PerfectMainActivity) -> d
    java.lang.String access$5(com.fox.exercise.newversion.act.PerfectMainActivity) -> e
    com.fox.exercise.util.RoundedImage access$6(com.fox.exercise.newversion.act.PerfectMainActivity) -> f
    java.lang.String access$7(com.fox.exercise.newversion.act.PerfectMainActivity) -> g
    java.lang.String access$8(com.fox.exercise.newversion.act.PerfectMainActivity) -> h
    java.lang.String access$9(com.fox.exercise.newversion.act.PerfectMainActivity) -> i
    void access$10(com.fox.exercise.newversion.act.PerfectMainActivity,java.lang.String) -> a
    com.fox.exercise.api.entity.UserDetail access$11(com.fox.exercise.newversion.act.PerfectMainActivity) -> j
    java.lang.String access$12(com.fox.exercise.newversion.act.PerfectMainActivity) -> k
com.fox.exercise.newversion.act.PerfectMainActivity$1 -> com.fox.exercise.newversion.act.ca:
    com.fox.exercise.newversion.act.PerfectMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.PerfectMainActivity$2 -> com.fox.exercise.newversion.act.cb:
    com.fox.exercise.newversion.act.PerfectMainActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.PerfectMainActivity$LoginFinishTask -> com.fox.exercise.newversion.act.cc:
    com.fox.exercise.newversion.act.PerfectMainActivity this$0 -> a
    com.fox.exercise.api.entity.UserDetail doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.UserDetail) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.newversion.act.PerfectMainActivity access$2(com.fox.exercise.newversion.act.PerfectMainActivity$LoginFinishTask) -> a
com.fox.exercise.newversion.act.PerfectMainActivity$LoginFinishTask$1 -> com.fox.exercise.newversion.act.cd:
    com.fox.exercise.newversion.act.PerfectMainActivity$LoginFinishTask this$1 -> a
    com.fox.exercise.api.entity.UserDetail val$result -> b
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.PersonalPageMainActivity -> com.fox.exercise.newversion.act.PersonalPageMainActivity:
    boolean isFromInvite -> o
    boolean isLoginer -> p
    int mUid -> q
    boolean mIn -> k
    cn.ingenic.indroidsync.SportsApp mSportsApp -> r
    android.app.Dialog loadProgressDialog -> s
    android.widget.TextView mDialogMessage -> t
    com.fox.exercise.view.PullToRefreshListView mPullSearchListView -> u
    android.widget.ListView mListView -> v
    com.fox.exercise.util.RoundedImage zhuye_image_icon1 -> w
    android.widget.TextView sports_find_othername1 -> x
    android.widget.TextView user_money -> y
    android.widget.TextView guanzhu_numbers -> z
    android.widget.TextView fensi_nums -> A
    android.widget.TextView personal_address -> B
    android.widget.TextView personal_sport_days -> C
    android.widget.TextView personal_sport_nums -> D
    android.widget.ImageView list_user_guanzhu -> E
    android.widget.ImageView list_user_sixin_imagview -> F
    android.widget.ImageView list_user_yuepao_imagview -> G
    android.widget.TextView getxing_qianming -> H
    int times -> I
    java.util.ArrayList mList -> J
    com.fox.exercise.FindOtherMoreAdapter sportsfindmoreAdapter -> K
    com.fox.exercise.newversion.act.PersonalPageMainActivity$PersonalFindHandler mPersonalFindHandler -> l
    int FRESH_LIST -> L
    int FRESH_FAILED -> M
    int FRESH_DONE -> N
    int FRESH_NULL -> O
    java.util.ArrayList mList_top -> P
    com.fox.exercise.newversion.entity.FindGroup findgroup -> Q
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> R
    com.fox.exercise.api.entity.UserDetail mUserDetail -> S
    android.widget.TextView no_jilu_txt -> T
    java.util.List listFinid -> U
    android.widget.LinearLayout personal_page_headview -> V
    android.widget.TextView look_history_sportrecord -> W
    android.widget.ImageView is_manorwomen_icon -> X
    java.util.List imgItems -> m
    java.lang.String[] imgStr -> Y
    java.util.List actionLists -> Z
    com.fox.exercise.newversion.act.FindFriendsFragment$SportsFindMoreHandler msportsFindMoreHandler -> n
    int status -> aa
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void init() -> f
    void loadPortrait() -> g
    void waitShowDialog() -> h
    void initSportPortrait(android.os.Message) -> a
    void initPortrait(com.fox.exercise.api.entity.UserDetail) -> a
    void onClick(android.view.View) -> onClick
    void addFriends() -> i
    void returnFindid(java.lang.String) -> a
    void setContent(android.widget.TextView,java.lang.String,int,int) -> a
    double getUnUpload() -> j
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> a
    int access$1(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> b
    int access$2(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> c
    android.app.Dialog access$3(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> d
    java.util.ArrayList access$4(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> e
    java.lang.String access$5(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> f
    android.widget.TextView access$6(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> g
    android.widget.ListView access$7(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> h
    java.util.List access$8(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> i
    void access$9(com.fox.exercise.newversion.act.PersonalPageMainActivity,com.fox.exercise.FindOtherMoreAdapter) -> a
    com.fox.exercise.FindOtherMoreAdapter access$10(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> j
    void access$11(com.fox.exercise.newversion.act.PersonalPageMainActivity,java.util.List) -> a
    com.fox.exercise.view.PullToRefreshListView access$12(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> k
    java.util.ArrayList access$13(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> l
    void access$14(com.fox.exercise.newversion.act.PersonalPageMainActivity,com.fox.exercise.newversion.entity.FindGroup) -> a
    com.fox.exercise.newversion.entity.FindGroup access$15(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> m
    void access$16(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> n
    void access$17(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> o
    void access$18(com.fox.exercise.newversion.act.PersonalPageMainActivity,android.os.Message) -> a
    android.widget.TextView access$19(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> p
    com.fox.exercise.api.entity.UserDetail access$20(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> q
    void access$21(com.fox.exercise.newversion.act.PersonalPageMainActivity,com.fox.exercise.api.entity.UserDetail) -> a
    void access$22(com.fox.exercise.newversion.act.PersonalPageMainActivity,int) -> a
    android.widget.TextView access$23(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> r
    void access$24(com.fox.exercise.newversion.act.PersonalPageMainActivity,int) -> b
    int access$25(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> s
    android.widget.ImageView access$26(com.fox.exercise.newversion.act.PersonalPageMainActivity) -> t
com.fox.exercise.newversion.act.PersonalPageMainActivity$1 -> com.fox.exercise.newversion.act.ce:
    com.fox.exercise.newversion.act.PersonalPageMainActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.act.PersonalPageMainActivity$2 -> com.fox.exercise.newversion.act.cf:
    com.fox.exercise.newversion.act.PersonalPageMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.PersonalPageMainActivity$3 -> com.fox.exercise.newversion.act.cg:
    com.fox.exercise.newversion.act.PersonalPageMainActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.PersonalPageMainActivity$4 -> com.fox.exercise.newversion.act.ch:
    com.fox.exercise.newversion.act.PersonalPageMainActivity this$0 -> a
    android.view.animation.Animation val$animation -> b
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.newversion.act.PersonalPageMainActivity access$2(com.fox.exercise.newversion.act.PersonalPageMainActivity$4) -> a
com.fox.exercise.newversion.act.PersonalPageMainActivity$4$1 -> com.fox.exercise.newversion.act.ci:
    com.fox.exercise.newversion.act.PersonalPageMainActivity$4 this$1 -> a
    void run() -> run
com.fox.exercise.newversion.act.PersonalPageMainActivity$GetActionDataTask -> com.fox.exercise.newversion.act.cj:
    com.fox.exercise.newversion.act.PersonalPageMainActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.PersonalPageMainActivity$PersonalFindHandler -> com.fox.exercise.newversion.act.ck:
    com.fox.exercise.newversion.act.PersonalPageMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.PersonalPageMainActivity$SportsFindMoreThread -> com.fox.exercise.newversion.act.cl:
    com.fox.exercise.newversion.act.PersonalPageMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.PersonalPageMainActivity$SportsFindMoreThread_top -> com.fox.exercise.newversion.act.cm:
    com.fox.exercise.newversion.act.PersonalPageMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.RecomMend -> com.fox.exercise.newversion.act.cn:
    android.view.View view -> n
    cn.ingenic.indroidsync.SportsApp mSportsApp -> o
    android.widget.TextView mMore -> p
    android.widget.TextView mMore_two -> q
    android.widget.TextView mMore_three -> r
    android.widget.TextView zzs -> s
    android.widget.TextView ddfl -> t
    android.widget.TextView ssj -> u
    android.widget.TextView jcdt -> v
    com.fox.exercise.ImageDownloader mDownloader2 -> w
    int FRESH_LIST -> x
    int FRESH_LIST_NULL -> y
    java.util.List mSquareInfo -> l
    java.util.List mList -> z
    java.lang.String IMAGE_CACHE_PATH -> m
    com.fox.exercise.newversion.view.MyViewPager adViewPager -> A
    java.util.List imageViews -> B
    java.util.List dots -> C
    java.util.List dotList -> D
    int currentItem -> E
    android.view.View dot0 -> F
    android.view.View dot1 -> G
    android.view.View dot2 -> H
    android.view.View dot3 -> I
    android.view.View dot4 -> J
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> K
    com.nostra13.universalimageloader.core.ImageLoader mImageLoader -> L
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> M
    com.fox.exercise.newversion.view.MyGridView tuijian_gridview1 -> N
    com.fox.exercise.newversion.view.MyGridView tuijian_gridview2 -> O
    com.fox.exercise.newversion.view.MyGridView tuijian_gridview3 -> P
    com.fox.exercise.newversion.view.MyGridView tuijian_gridview4 -> Q
    android.app.Dialog mLoadProgressDialog -> R
    com.fox.exercise.newversion.view.PullDownScrollView mPullDownScrollView -> S
    android.os.Handler mHandler -> T
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getListData() -> h
    void onClick(android.view.View) -> onClick
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void initImageLoader() -> i
    void initAdData() -> j
    void addDynamicView() -> k
    void startAd() -> l
    void setDate() -> m
    void tanOutCount(int) -> b
    void waitShowDialog() -> n
    void onRefresh(com.fox.exercise.newversion.view.PullDownScrollView) -> a
    com.fox.exercise.newversion.view.MyViewPager access$0(com.fox.exercise.newversion.act.RecomMend) -> a
    int access$1(com.fox.exercise.newversion.act.RecomMend) -> b
    void access$2(com.fox.exercise.newversion.act.RecomMend) -> c
    cn.ingenic.indroidsync.SportsApp access$3(com.fox.exercise.newversion.act.RecomMend) -> d
    android.os.Handler access$4(com.fox.exercise.newversion.act.RecomMend) -> e
    void access$5(com.fox.exercise.newversion.act.RecomMend,int) -> a
    java.util.List access$6(com.fox.exercise.newversion.act.RecomMend) -> f
    java.util.List access$7(com.fox.exercise.newversion.act.RecomMend) -> g
    java.util.List access$8(com.fox.exercise.newversion.act.RecomMend) -> h
    void access$9(com.fox.exercise.newversion.act.RecomMend,int) -> b
    void access$10(com.fox.exercise.newversion.act.RecomMend) -> i
    android.app.Dialog access$11(com.fox.exercise.newversion.act.RecomMend) -> j
    void access$12(com.fox.exercise.newversion.act.RecomMend) -> k
    void access$13(com.fox.exercise.newversion.act.RecomMend) -> l
com.fox.exercise.newversion.act.RecomMend$1 -> com.fox.exercise.newversion.act.co:
    com.fox.exercise.newversion.act.RecomMend this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.RecomMend$2 -> com.fox.exercise.newversion.act.cp:
    com.fox.exercise.newversion.act.RecomMend this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.RecomMend$3 -> com.fox.exercise.newversion.act.cq:
    com.fox.exercise.newversion.act.RecomMend this$0 -> a
    int val$activity_id -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.RecomMend$GridItemClick -> com.fox.exercise.newversion.act.cr:
    int pos -> b
    int position -> c
    com.fox.exercise.newversion.act.RecomMend this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.RecomMend$MyAdapter -> com.fox.exercise.newversion.act.cs:
    com.fox.exercise.newversion.act.RecomMend this$0 -> a
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
    void startUpdate(android.view.View) -> startUpdate
    void finishUpdate(android.view.View) -> finishUpdate
    com.fox.exercise.newversion.act.RecomMend access$1(com.fox.exercise.newversion.act.RecomMend$MyAdapter) -> a
com.fox.exercise.newversion.act.RecomMend$MyAdapter$1 -> com.fox.exercise.newversion.act.ct:
    com.fox.exercise.newversion.act.RecomMend$MyAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.act.RecomMend$MyAdapter access$0(com.fox.exercise.newversion.act.RecomMend$MyAdapter$1) -> a
com.fox.exercise.newversion.act.RecomMend$MyAdapter$1$1 -> com.fox.exercise.newversion.act.cu:
    com.fox.exercise.newversion.act.RecomMend$MyAdapter$1 this$2 -> a
    int val$position -> b
    com.fox.exercise.api.entity.ActivityInfo doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.entity.ActivityInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.RecomMend$MyGridAdapter -> com.fox.exercise.newversion.act.cv:
    java.util.ArrayList actinfoList -> b
    android.view.LayoutInflater mInflater -> c
    com.fox.exercise.ImageDownloader mDownloader -> d
    int pos -> e
    com.fox.exercise.newversion.act.RecomMend this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.act.RecomMend$MyGridAdapter$ViewHolder -> com.fox.exercise.newversion.act.cw:
    android.widget.ImageView tuijian_img -> a
    android.widget.TextView tuijian_txt -> b
    android.widget.TextView tuijian_time -> c
    android.widget.TextView tuijian_zan -> d
    com.fox.exercise.newversion.act.RecomMend$MyGridAdapter this$1 -> e
com.fox.exercise.newversion.act.RecomMend$MyPageChangeListener -> com.fox.exercise.newversion.act.cx:
    int oldPosition -> b
    com.fox.exercise.newversion.act.RecomMend this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.fox.exercise.newversion.act.RecomMend$ScrollTask -> com.fox.exercise.newversion.act.cy:
    com.fox.exercise.newversion.act.RecomMend this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.RecomMend$SquareListThread -> com.fox.exercise.newversion.act.cz:
    com.fox.exercise.newversion.act.RecomMend this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.ShareActivity -> com.fox.exercise.newversion.act.ShareActivity:
    android.widget.GridView mGridView -> q
    int[] myDjsImage -> r
    android.widget.TextView share_cacle_txt -> s
    com.tencent.tauth.Tencent mTencent -> t
    com.tencent.mm.sdk.openapi.IWXAPI api -> u
    java.lang.String Xiangqinurl -> v
    java.lang.String ActionUrl -> w
    java.lang.String info_title -> k
    java.lang.String img -> l
    android.content.Intent intent -> m
    int infoid -> n
    int bs -> o
    android.app.Activity mContext -> x
    android.graphics.Bitmap bt -> p
    com.fox.exercise.ImageDownloader mDownloader -> y
    void onCreate(android.os.Bundle) -> onCreate
    void getBit() -> d
    void ShareWxFriend(int,int) -> a
    void share2weixin(int,int) -> b
    android.graphics.Bitmap compressImage(android.graphics.Bitmap) -> a
    void onClickShare() -> e
    void onCancel() -> h
    void onComplete(java.lang.Object) -> a
    void onError(com.tencent.tauth.UiError) -> a
    int[] access$0(com.fox.exercise.newversion.act.ShareActivity) -> a
    void access$1(com.fox.exercise.newversion.act.ShareActivity) -> b
    void access$2(com.fox.exercise.newversion.act.ShareActivity,int,int) -> a
    com.fox.exercise.ImageDownloader access$3(com.fox.exercise.newversion.act.ShareActivity) -> c
    android.graphics.Bitmap access$4(com.fox.exercise.newversion.act.ShareActivity,android.graphics.Bitmap) -> a
com.fox.exercise.newversion.act.ShareActivity$1 -> com.fox.exercise.newversion.act.da:
    com.fox.exercise.newversion.act.ShareActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.ShareActivity$2 -> com.fox.exercise.newversion.act.db:
    com.fox.exercise.newversion.act.ShareActivity this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.Void[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.ShareActivity$3 -> com.fox.exercise.newversion.act.dc:
    com.fox.exercise.newversion.act.ShareActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.ShareActivity$MyAdapter -> com.fox.exercise.newversion.act.dd:
    android.view.LayoutInflater mInflater -> c
    java.lang.String[] stringArray -> a
    com.fox.exercise.newversion.act.ShareActivity this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.act.ShareActivity$ShareClicklistner -> com.fox.exercise.newversion.act.de:
    int position -> b
    com.fox.exercise.newversion.act.ShareActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.ShareActivity$ViewHolder -> com.fox.exercise.newversion.act.df:
    android.widget.TextView txt -> a
    android.widget.ImageView img -> b
    com.fox.exercise.newversion.act.ShareActivity this$0 -> c
com.fox.exercise.newversion.act.SleepExampleActivity -> com.fox.exercise.newversion.act.SleepExampleActivity:
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
com.fox.exercise.newversion.act.SleepHistoryActivity -> com.fox.exercise.newversion.act.SleepHistoryActivity:
    com.fox.exercise.newversion.view.RoundProgressBar roundProgressBar -> m
    com.fox.exercise.db.SportContentDB contentDB -> n
    cn.ingenic.indroidsync.SportsApp msApp -> o
    android.content.Context mContext -> p
    java.util.Map effectMap -> q
    android.widget.RadioGroup sleep_day_radiogroup -> r
    android.widget.RadioButton sleep_day_btn -> s
    android.widget.RadioButton sleep_night_btn -> t
    android.widget.LinearLayout mSleep_time_layout -> u
    android.widget.LinearLayout mSleep_time1 -> v
    android.widget.LinearLayout mSleep_time2 -> w
    android.widget.LinearLayout mSleep_time3 -> x
    android.widget.LinearLayout mSleep_time4 -> y
    android.widget.LinearLayout mSleep_time5 -> z
    android.widget.LinearLayout mSleep_time6 -> A
    android.widget.LinearLayout mSleep_time7 -> B
    android.widget.ImageView cal_1 -> C
    android.widget.ImageView km_1 -> D
    android.widget.ImageView cal_2 -> E
    android.widget.ImageView km_2 -> F
    android.widget.ImageView cal_3 -> G
    android.widget.ImageView km_3 -> H
    android.widget.ImageView cal_4 -> I
    android.widget.ImageView km_4 -> J
    android.widget.ImageView cal_5 -> K
    android.widget.ImageView km_5 -> L
    android.widget.ImageView cal_6 -> M
    android.widget.ImageView km_6 -> N
    android.widget.ImageView cal_7 -> O
    android.widget.ImageView km_7 -> P
    android.widget.TextView day1 -> Q
    android.widget.TextView day2 -> R
    android.widget.TextView day3 -> S
    android.widget.TextView day4 -> T
    android.widget.TextView day5 -> U
    android.widget.TextView day6 -> V
    android.widget.TextView day7 -> W
    com.fox.exercise.newversion.entity.SleepEffect radioEffect1 -> X
    com.fox.exercise.newversion.entity.SleepEffect radioEffect2 -> Y
    com.fox.exercise.newversion.entity.SleepEffect fromSleepEffect -> Z
    int cruZhu -> aa
    java.util.List sleepTimeList -> k
    java.util.List sleepYouTimeList -> l
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void init() -> f
    void getSleepDayDate(java.lang.String) -> a
    void setDate() -> g
    java.lang.String getStringDate(int,java.lang.String) -> a
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    double subtractTime(java.lang.String,java.lang.String) -> a
    void setprogressDate(int) -> b
    void onClick(android.view.View) -> onClick
    void checkDayOrNight(java.util.List) -> a
    int getHours(java.lang.String) -> b
    java.lang.String getOnTime(java.lang.String,java.lang.String) -> b
    com.fox.exercise.newversion.entity.SleepEffect getLastSleep(java.util.List) -> b
    com.fox.exercise.newversion.entity.SleepEffect getAllLastSleep() -> h
    com.fox.exercise.newversion.entity.SleepEffect getLongSleep(java.util.List) -> c
    java.lang.String timeToMillons(java.lang.String) -> c
    com.fox.exercise.newversion.entity.SleepEffect access$0(com.fox.exercise.newversion.act.SleepHistoryActivity) -> a
    com.fox.exercise.newversion.view.RoundProgressBar access$1(com.fox.exercise.newversion.act.SleepHistoryActivity) -> b
    int access$2(com.fox.exercise.newversion.act.SleepHistoryActivity) -> c
    java.lang.String access$3(com.fox.exercise.newversion.act.SleepHistoryActivity,int,java.lang.String) -> a
    com.fox.exercise.newversion.entity.SleepEffect access$4(com.fox.exercise.newversion.act.SleepHistoryActivity) -> d
com.fox.exercise.newversion.act.SleepHistoryActivity$1 -> com.fox.exercise.newversion.act.dg:
    com.fox.exercise.newversion.act.SleepHistoryActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.fox.exercise.newversion.act.SleepMainActivity -> com.fox.exercise.newversion.act.SleepMainActivity:
    android.hardware.SensorManager sensorManager -> r
    float mX -> s
    float mY -> t
    float mZ -> u
    boolean isStart -> v
    boolean isbright -> w
    boolean isallbright -> x
    cn.ingenic.indroidsync.SportsApp msApp -> y
    android.content.Context mContext -> z
    long mTroughTime -> A
    java.lang.String startTime -> B
    java.lang.String endTime -> C
    long startTimeSeconds -> D
    long endTimeSeconds -> E
    long screenStartTimeSeconds -> F
    long screenEndTimeSeconds -> G
    long sensorStartTimeSeconds -> H
    int flag -> I
    android.widget.TextView starttext -> J
    android.widget.TextView sleep_tip_content -> K
    long mTempCount -> L
    int num -> M
    java.lang.String unique_id -> N
    com.fox.exercise.db.SportContentDB contentDB -> O
    android.app.Dialog mLoadProgressDialog -> P
    android.widget.ImageButton iView -> Q
    int IVEW_ID -> R
    int LEFTIVEW_ID -> S
    int LEFTIOUT_ID -> T
    int RIGHT_ID -> U
    com.fox.exercise.newversion.entity.SleepEffect sleepEffect -> V
    android.widget.TextView mDialogMessage -> W
    java.lang.String[] pageContet -> X
    java.lang.String times -> Y
    android.os.Handler handler -> Z
    java.util.TimerTask task -> aa
    java.util.Timer timer -> ab
    int senserFlag -> ac
    com.fox.exercise.newversion.view.StopWatchView stopWatchView -> ad
    android.widget.TextView stopWatchView_time -> ae
    boolean isRun -> af
    android.hardware.SensorEventListener mSensorEventListener -> k
    android.content.BroadcastReceiver mBatInfoReceiver -> l
    android.os.Handler sleepHandler -> ag
    long timeCount -> m
    int sleepTime -> n
    int firstPointLeftIndex -> o
    java.lang.String[] timeDatas -> p
    java.util.ArrayList arrayList -> q
    void startTask() -> f
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void onClick(android.view.View) -> onClick
    void startSleep() -> g
    void endSleep() -> h
    void SwingCount(float,float,float) -> a
    void registPingmu() -> i
    java.lang.String calculate(long) -> a
    void uploadSleep(com.fox.exercise.newversion.entity.SleepEffect) -> a
    void waitShowDialog(java.lang.String) -> a
    void changeContent() -> j
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void updatView() -> k
    void healthCount() -> l
    void access$0(com.fox.exercise.newversion.act.SleepMainActivity,float) -> a
    void access$1(com.fox.exercise.newversion.act.SleepMainActivity,float) -> b
    void access$2(com.fox.exercise.newversion.act.SleepMainActivity,float) -> c
    float access$3(com.fox.exercise.newversion.act.SleepMainActivity) -> a
    float access$4(com.fox.exercise.newversion.act.SleepMainActivity) -> b
    float access$5(com.fox.exercise.newversion.act.SleepMainActivity) -> c
    java.lang.String access$6(com.fox.exercise.newversion.act.SleepMainActivity) -> d
    void access$7(com.fox.exercise.newversion.act.SleepMainActivity,boolean) -> a
    void access$8(com.fox.exercise.newversion.act.SleepMainActivity,long) -> a
    void access$9(com.fox.exercise.newversion.act.SleepMainActivity,boolean) -> b
    void access$10(com.fox.exercise.newversion.act.SleepMainActivity,long) -> b
    long access$11(com.fox.exercise.newversion.act.SleepMainActivity) -> e
    long access$12(com.fox.exercise.newversion.act.SleepMainActivity) -> f
    long access$13(com.fox.exercise.newversion.act.SleepMainActivity) -> g
    void access$14(com.fox.exercise.newversion.act.SleepMainActivity,long) -> c
    android.app.Dialog access$15(com.fox.exercise.newversion.act.SleepMainActivity) -> h
    android.content.Context access$16(com.fox.exercise.newversion.act.SleepMainActivity) -> i
    com.fox.exercise.newversion.entity.SleepEffect access$17(com.fox.exercise.newversion.act.SleepMainActivity) -> j
    android.os.Handler access$18(com.fox.exercise.newversion.act.SleepMainActivity) -> k
    void access$19(com.fox.exercise.newversion.act.SleepMainActivity) -> l
    long access$20(com.fox.exercise.newversion.act.SleepMainActivity) -> m
    boolean access$21(com.fox.exercise.newversion.act.SleepMainActivity) -> n
    android.widget.TextView access$22(com.fox.exercise.newversion.act.SleepMainActivity) -> o
    cn.ingenic.indroidsync.SportsApp access$23(com.fox.exercise.newversion.act.SleepMainActivity) -> p
    com.fox.exercise.db.SportContentDB access$24(com.fox.exercise.newversion.act.SleepMainActivity) -> q
    android.os.Handler access$25(com.fox.exercise.newversion.act.SleepMainActivity) -> r
    java.lang.String access$26(com.fox.exercise.newversion.act.SleepMainActivity) -> s
com.fox.exercise.newversion.act.SleepMainActivity$1 -> com.fox.exercise.newversion.act.dh:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.fox.exercise.newversion.act.SleepMainActivity$10 -> com.fox.exercise.newversion.act.di:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.SleepMainActivity$11 -> com.fox.exercise.newversion.act.dj:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.SleepMainActivity$2 -> com.fox.exercise.newversion.act.dk:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.newversion.act.SleepMainActivity$3 -> com.fox.exercise.newversion.act.dl:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.SleepMainActivity$4 -> com.fox.exercise.newversion.act.dm:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.SleepMainActivity$5 -> com.fox.exercise.newversion.act.dn:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.SleepMainActivity$6 -> com.fox.exercise.newversion.act.do:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.SleepMainActivity$7 -> com.fox.exercise.newversion.act.dp:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.SleepMainActivity$8 -> com.fox.exercise.newversion.act.dq:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    com.fox.exercise.newversion.entity.SleepEffect val$sleepEffect -> b
    void run() -> run
com.fox.exercise.newversion.act.SleepMainActivity$9 -> com.fox.exercise.newversion.act.dr:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.SleepMainActivity$rightOnClickListener -> com.fox.exercise.newversion.act.ds:
    com.fox.exercise.newversion.act.SleepMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.SportCircleFindEventActivity -> com.fox.exercise.newversion.act.SportCircleFindEventActivity:
    android.widget.TextView iView -> l
    android.widget.RelativeLayout qushi_tuijian_layout -> m
    android.widget.RelativeLayout qushi_all_layout -> n
    android.view.View qushi_tuijian__line -> o
    android.view.View qushi_all_line -> p
    int id -> q
    java.lang.String titles -> r
    int times -> s
    int add -> t
    android.app.Dialog mLoadProgressDialog -> u
    android.widget.TextView mDialogMessage -> v
    int allOrTuijian -> w
    cn.ingenic.indroidsync.SportsApp mSportsApp -> x
    android.content.Context mContext -> y
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> z
    com.fox.exercise.ImageDownloader mDownloader2 -> A
    int width -> k
    com.fox.exercise.view.PullToRefreshGridHeadView pullToRefreshGridView -> B
    com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter mGridView -> C
    com.fox.exercise.newversion.act.SportCircleFindEventActivity$MyAdapter myAdapter -> D
    android.view.View head_view -> E
    android.widget.ImageView find_qushi_icon -> F
    com.fox.exercise.newversion.view.CollapsibleTextView collaps_txtview -> G
    com.fox.exercise.newversion.entity.PointsSay pointsSay -> H
    java.util.List alllist -> I
    java.util.List recommendlist -> J
    int FRESH_LIST -> K
    int FRESH_FAILED -> L
    int FRESH_DONE -> M
    int REQUESTCODE -> N
    com.fox.exercise.newversion.act.SportCircleFindEventActivity$SportsFindMoreHandler mFindMoreHandler -> O
    android.view.animation.Animation animation -> P
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void setImageVoid(java.lang.String,android.widget.ImageView) -> a
    void onClick(android.view.View) -> onClick
    void waitShowDialog() -> f
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.content.Context access$0(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> a
    int access$1(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> b
    java.util.List access$2(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> c
    java.util.List access$3(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> d
    void access$4(com.fox.exercise.newversion.act.SportCircleFindEventActivity,java.lang.String,android.widget.ImageView) -> a
    int access$5(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> e
    void access$6(com.fox.exercise.newversion.act.SportCircleFindEventActivity,int) -> a
    cn.ingenic.indroidsync.SportsApp access$7(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> f
    int access$8(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> g
    int access$9(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> h
    com.fox.exercise.newversion.act.SportCircleFindEventActivity$SportsFindMoreHandler access$10(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> i
    com.fox.exercise.newversion.act.SportCircleFindEventActivity$MyAdapter access$11(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> j
    void access$12(com.fox.exercise.newversion.act.SportCircleFindEventActivity,com.fox.exercise.newversion.act.SportCircleFindEventActivity$MyAdapter) -> a
    void access$13(com.fox.exercise.newversion.act.SportCircleFindEventActivity,com.fox.exercise.newversion.entity.PointsSay) -> a
    com.fox.exercise.bitmap.util.ImageResizer access$14(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> k
    android.widget.ImageView access$15(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> l
    com.fox.exercise.ImageDownloader access$16(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> m
    com.fox.exercise.newversion.view.CollapsibleTextView access$17(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> n
    com.fox.exercise.newversion.entity.PointsSay access$18(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> o
    com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter access$19(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> p
    android.view.View access$20(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> q
    void access$21(com.fox.exercise.newversion.act.SportCircleFindEventActivity,java.util.List) -> a
    void access$22(com.fox.exercise.newversion.act.SportCircleFindEventActivity,java.util.List) -> b
    com.fox.exercise.view.PullToRefreshGridHeadView access$23(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> r
    android.app.Dialog access$24(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> s
    android.view.animation.Animation access$25(com.fox.exercise.newversion.act.SportCircleFindEventActivity) -> t
    void access$26(com.fox.exercise.newversion.act.SportCircleFindEventActivity,int) -> b
com.fox.exercise.newversion.act.SportCircleFindEventActivity$1 -> com.fox.exercise.newversion.act.dt:
    com.fox.exercise.newversion.act.SportCircleFindEventActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian -> com.fox.exercise.newversion.act.du:
    android.view.View view -> b
    com.fox.exercise.newversion.entity.CircleFindContent circleFindContent -> c
    int position -> d
    com.fox.exercise.newversion.act.SportCircleFindEventActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.entity.CircleFindContent access$0(com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian) -> a
    int access$1(com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian) -> b
    android.view.View access$2(com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian) -> c
    com.fox.exercise.newversion.act.SportCircleFindEventActivity access$3(com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian) -> d
com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian$1 -> com.fox.exercise.newversion.act.dv:
    com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian this$1 -> a
    android.widget.TextView val$textView -> b
    int val$theBeforeGoodPeople -> c
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian access$2(com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian$1) -> a
com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian$1$1 -> com.fox.exercise.newversion.act.dw:
    com.fox.exercise.newversion.act.SportCircleFindEventActivity$AddAnimian$1 this$2 -> a
    void run() -> run
com.fox.exercise.newversion.act.SportCircleFindEventActivity$MyAdapter -> com.fox.exercise.newversion.act.dx:
    android.content.Context context -> d
    android.view.LayoutInflater inflater -> e
    android.graphics.drawable.Drawable drawable1 -> a
    android.graphics.drawable.Drawable drawable2 -> b
    com.fox.exercise.newversion.act.SportCircleFindEventActivity this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.act.SportCircleFindEventActivity$SportsFindMoreHandler -> com.fox.exercise.newversion.act.dy:
    com.fox.exercise.newversion.act.SportCircleFindEventActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.SportCircleFindEventActivity$SportsFindMoreThread -> com.fox.exercise.newversion.act.dz:
    com.fox.exercise.newversion.act.SportCircleFindEventActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.SportCircleFindEventActivity$ToUserActivityListner -> com.fox.exercise.newversion.act.ea:
    com.fox.exercise.newversion.entity.CircleFindContent circleFindContent -> b
    com.fox.exercise.newversion.act.SportCircleFindEventActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder -> com.fox.exercise.newversion.act.eb:
    android.widget.ImageView all_tuijian_icon -> b
    android.widget.TextView all_tuijian_txt -> c
    android.widget.TextView list_user_zans -> d
    android.widget.TextView list_user_zan_addones -> e
    android.widget.TextView list_user_pingluns -> f
    com.fox.exercise.newversion.act.SportCircleFindEventActivity this$0 -> a
    void access$0(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder,android.widget.ImageView) -> a
    void access$1(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder,android.widget.TextView) -> a
    void access$2(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder,android.widget.TextView) -> b
    void access$3(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder,android.widget.TextView) -> c
    void access$4(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder,android.widget.TextView) -> d
    android.widget.ImageView access$5(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder) -> a
    android.widget.TextView access$6(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder) -> b
    android.widget.TextView access$7(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder) -> c
    android.widget.TextView access$8(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder) -> d
    android.widget.TextView access$9(com.fox.exercise.newversion.act.SportCircleFindEventActivity$ViewHolder) -> e
com.fox.exercise.newversion.act.SportCircleMainFragment -> com.fox.exercise.newversion.act.ec:
    android.widget.ImageButton iView -> p
    int IVEW_ID -> q
    cn.ingenic.indroidsync.SportsApp mSportsApp -> r
    android.support.v4.view.ViewPager mPager -> s
    java.util.ArrayList fragmentList -> l
    android.widget.TextView[] tViews -> t
    android.view.View[] Views -> u
    com.fox.exercise.FindOtherFragment findOtherFragment -> v
    com.fox.exercise.newversion.act.FindFriendsFragment findFriendsFragment -> w
    com.fox.exercise.newversion.act.RecomMend recomMend -> x
    com.fox.exercise.newversion.act.NewHuoDongListFrg newHuoDongListFrg -> y
    com.fox.exercise.newversion.act.SportCircleMainFragment$MyFragmentPagerAdapter adapter -> m
    int indexFlag -> n
    com.fox.exercise.newversion.act.SportCircleMainFragment$SportsCircleMainhandler msCircleMainhandler -> o
    android.view.View view -> z
    android.widget.LinearLayout title_newsorguanzhu_layout -> A
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void InitTextView() -> h
    void InitViewPager() -> i
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.support.v4.view.ViewPager access$0(com.fox.exercise.newversion.act.SportCircleMainFragment) -> a
    android.view.View[] access$1(com.fox.exercise.newversion.act.SportCircleMainFragment) -> b
    cn.ingenic.indroidsync.SportsApp access$2(com.fox.exercise.newversion.act.SportCircleMainFragment) -> c
com.fox.exercise.newversion.act.SportCircleMainFragment$MyFragmentPagerAdapter -> com.fox.exercise.newversion.act.ed:
    java.util.ArrayList list -> a
    com.fox.exercise.newversion.act.SportCircleMainFragment this$0 -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.fox.exercise.newversion.act.SportCircleMainFragment$MyOnPageChangeListener -> com.fox.exercise.newversion.act.ee:
    com.fox.exercise.newversion.act.SportCircleMainFragment this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageSelected(int) -> onPageSelected
com.fox.exercise.newversion.act.SportCircleMainFragment$SportsCircleMainhandler -> com.fox.exercise.newversion.act.ef:
    com.fox.exercise.newversion.act.SportCircleMainFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.SportCircleMainFragment$rightOnClickListener -> com.fox.exercise.newversion.act.eg:
    com.fox.exercise.newversion.act.SportCircleMainFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.SportCircleMainFragment$txListener -> com.fox.exercise.newversion.act.eh:
    int index -> b
    com.fox.exercise.newversion.act.SportCircleMainFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment -> com.fox.exercise.newversion.act.ei:
    com.amap.api.maps.MapView mMapView -> q
    com.amap.api.maps.UiSettings mUiSettings -> r
    com.amap.api.maps.AMap aMap -> s
    com.amap.api.location.LocationManagerProxy mAMapLocationManager -> t
    android.app.Dialog mLoadDialog -> u
    android.content.Context mContext -> v
    android.app.Dialog alertDialog -> w
    cn.ingenic.indroidsync.SportsApp mSportsApp -> x
    android.location.LocationManager locationManager -> y
    float zoomValue -> z
    android.widget.TextView startsports_btn -> A
    android.widget.ImageView startsports_type_icon -> B
    android.widget.PopupWindow mSportWindow -> C
    int[] mSportTypeImages -> D
    java.lang.String[] mSportTypeNames -> E
    android.widget.RelativeLayout timeLayout -> F
    int mSelectTypeID -> G
    java.lang.String deviceName -> H
    java.lang.Boolean isLocal -> I
    int type -> J
    int typeId -> K
    int typeDetailId -> L
    android.widget.TextView sport_week -> M
    android.widget.TextView sport_area -> N
    android.widget.TextView sport_weather_degree -> O
    android.widget.TextView sport_pm -> P
    android.widget.TextView weather_txt -> Q
    android.widget.TextView gps_txt -> R
    android.widget.TextView set_txt -> S
    android.widget.ImageView weather_icon -> T
    com.amap.api.location.LocationManagerProxy mLocationManagerProxy -> U
    android.content.SharedPreferences spf -> V
    java.util.concurrent.ExecutorService cachedThreadExecutor -> W
    android.widget.ImageView imageview_gps -> X
    android.os.Vibrator djs_vibrator -> Y
    android.widget.LinearLayout djs_layout -> Z
    android.widget.ImageView djs_image -> aa
    android.view.animation.Animation djs_animation -> ab
    int djs_count -> ac
    int djs_counts -> ad
    java.lang.Boolean djs_zd -> ae
    android.content.SharedPreferences djs_sp -> af
    com.fox.exercise.pedometer.TimingManager timingMgr -> ag
    com.fox.exercise.map.VoicePrompt vp -> ah
    com.amap.api.maps.model.LatLng locData -> ai
    double mLat -> k
    double mLng -> l
    android.widget.TextView gps_tishi_tx -> aj
    android.view.View view -> ak
    android.widget.TextView sport_type_txt -> al
    android.widget.LinearLayout start_sport_layout -> am
    android.widget.LinearLayout sport_type_txtlayout -> an
    com.fox.exercise.MainFragmentActivity mainFragmentActivity -> ao
    android.os.Handler pHandler -> ap
    java.lang.Runnable r -> m
    android.os.Handler mHandler -> aq
    android.location.GpsStatus$Listener listener -> n
    int gpsType -> o
    android.os.Handler mHandlerDjs -> ar
    android.content.BroadcastReceiver timeReceiver -> p
    int netError -> as
    void beforeInitView(android.os.Bundle) -> a
    void setViewStatus(android.os.Bundle) -> b
    void onPageResume() -> a
    void onPagePause() -> b
    void onPageDestroy() -> c
    void activate(com.amap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
    void onClick(android.view.View) -> onClick
    android.app.Dialog onCreateDialog(int,android.os.Bundle,int) -> a
    void setView() -> d
    void animateTo(com.amap.api.maps.model.LatLng) -> a
    void showRightLayout() -> e
    void init() -> f
    void saveAndExit() -> g
    void goStart() -> h
    void onCreateDialog() -> i
    java.lang.String getWeek() -> j
    void onWeatherForecaseSearched(com.amap.api.location.AMapLocalWeatherForecast) -> onWeatherForecaseSearched
    void onWeatherLiveSearched(com.amap.api.location.AMapLocalWeatherLive) -> onWeatherLiveSearched
    void initPM() -> k
    void getIcon(java.lang.String) -> a
    void initGPS() -> l
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    boolean LocationUpdate(com.amap.api.location.AMapLocation) -> a
    boolean isOPen(android.content.Context) -> a
    android.app.Dialog onCreateDialogs(int,android.os.Bundle) -> b
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    android.os.Handler access$5(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment) -> a
    java.lang.String access$7(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment) -> b
    void access$17(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment,int) -> a
    android.os.Handler access$18(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment) -> c
    void access$20(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment) -> d
    android.app.Dialog access$30(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment) -> e
    android.app.Dialog access$31(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment) -> f
    android.content.SharedPreferences access$32(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment) -> g
    void access$33(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment,int) -> b
    int access$34(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment) -> h
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$10 -> com.fox.exercise.newversion.act.ej:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$11 -> com.fox.exercise.newversion.act.ek:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment access$0(com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$11) -> a
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$11$1 -> com.fox.exercise.newversion.act.el:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$11 this$1 -> a
    void run() -> run
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$12 -> com.fox.exercise.newversion.act.em:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$13 -> com.fox.exercise.newversion.act.en:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$14 -> com.fox.exercise.newversion.act.eo:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$15 -> com.fox.exercise.newversion.act.ep:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$16 -> com.fox.exercise.newversion.act.eq:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$6 -> com.fox.exercise.newversion.act.er:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    void onMapLoaded() -> onMapLoaded
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$7 -> com.fox.exercise.newversion.act.es:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$8 -> com.fox.exercise.newversion.act.et:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment$9 -> com.fox.exercise.newversion.act.eu:
    com.fox.exercise.newversion.act.StartSportFirstGaoDeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity -> com.fox.exercise.newversion.act.UserActivityMainActivity:
    java.lang.String activityTime_2 -> z
    com.fox.exercise.ImageDownloader mDownloader -> A
    com.fox.exercise.pedometer.ImageWorkManager mImageWorkerMan_Icon -> B
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker_Icon -> C
    int a -> D
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker -> E
    cn.ingenic.indroidsync.SportsApp mSportsApp -> F
    int mItemHeight -> G
    com.fox.exercise.api.entity.UserDetail detail -> H
    com.fox.exercise.newversion.entity.FindGroup mFindMore -> I
    android.view.View activity_title_layout -> J
    com.fox.exercise.util.RoundedImage otherImage -> K
    com.fox.exercise.util.RoundedImage dianzan_one -> L
    com.fox.exercise.util.RoundedImage dianzan_two -> M
    com.fox.exercise.util.RoundedImage dianzan_three -> N
    com.fox.exercise.util.RoundedImage dianzan_four -> O
    com.fox.exercise.util.RoundedImage dianzan_five -> P
    com.fox.exercise.util.RoundedImage dianzan_six -> Q
    android.widget.TextView nametext -> R
    android.widget.TextView tdetils -> S
    android.widget.TextView good_and_text -> T
    android.widget.TextView start_time -> U
    android.widget.TextView tx_sport_days -> V
    android.widget.TextView tx_sport_huodong -> W
    android.widget.TextView tx_sport_address -> X
    android.widget.TextView list_user_pinglun_layout -> Y
    android.widget.TextView list_user_zan -> Z
    android.widget.TextView list_user_zan_addone -> aa
    android.widget.TextView list_user_pinglun -> ab
    android.widget.TextView list_user_fenxiang -> ac
    android.widget.TextView list_user_guanzhu_addone -> ad
    android.widget.Button list_user_guanzhu -> ae
    android.widget.ImageView list_user_fenxiang_layout -> af
    android.widget.RelativeLayout list_user_zan_layout -> ag
    android.widget.LinearLayout activity_pinglun_layout -> ah
    android.widget.LinearLayout findbottomLayout -> ai
    android.widget.LinearLayout lay -> aj
    android.widget.TextView activity_submit_pinglun_num -> ak
    android.widget.RelativeLayout activity_zan_layout -> al
    android.widget.RelativeLayout find_bottom -> am
    android.widget.TextView dianzan_nums -> an
    android.view.View pinglunDetails -> ao
    android.view.LayoutInflater mInflater -> ap
    java.lang.String theFirstName -> aq
    java.lang.String theSecondName -> ar
    java.lang.String theTalkDetils -> as
    java.lang.String thewavComment -> at
    java.lang.String thewavDuration -> au
    java.lang.String newMessageString -> av
    java.lang.String newNameString -> aw
    int numcom -> ax
    android.content.Context mContext -> ay
    int type -> k
    java.util.List imgList2 -> l
    java.util.List imgList3 -> m
    java.util.List imgList4 -> n
    java.util.List imgList5 -> o
    java.util.List imgList6 -> p
    java.util.List imgList7 -> q
    java.util.List imgList8 -> r
    java.util.List imgList9 -> s
    android.widget.ImageView img1 -> az
    android.widget.ImageView img2 -> aA
    android.widget.ImageView img3 -> aB
    android.widget.ImageView img4 -> aC
    android.widget.ImageView img5 -> aD
    android.widget.ImageView img6 -> aE
    android.widget.ImageView img7 -> aF
    android.widget.ImageView img8 -> aG
    android.widget.ImageView img9 -> aH
    java.lang.String[] urls -> t
    android.widget.ImageButton find_text_btn -> aI
    android.widget.ImageButton find_expression_text_btn -> aJ
    android.widget.Button find_press_btn -> aK
    android.widget.LinearLayout find_upcomment_text -> aL
    android.widget.EditText find_upcomment_edittext -> aM
    android.widget.Button find_upcomment_send -> aN
    android.widget.Button find_unavailable -> aO
    com.fox.exercise.RecordHelper mRecorder -> aP
    android.widget.LinearLayout layoutVoice -> aQ
    android.app.Dialog dialog -> aR
    java.lang.Boolean isShow -> aS
    boolean upTypeText -> aT
    android.widget.RelativeLayout rScrollLayout -> aU
    com.fox.exercise.util.ScrollLayout scrollLayout -> aV
    java.lang.String[] imgStr -> aW
    android.widget.LinearLayout imgLayout -> aX
    java.util.List imgItems -> aY
    int mViewCount -> aZ
    int mCurSel -> ba
    android.widget.LinearLayout zong_activity_layout -> bb
    java.util.List actionLists -> bc
    java.util.List activityNameList -> bd
    java.util.List activityURLList -> be
    java.util.List activityIdList -> bf
    java.util.List activitySendId -> bg
    java.util.List activityNameSize -> bh
    android.widget.ImageView wavBeginOne -> bi
    android.media.MediaPlayer mPlayer -> u
    boolean isStart -> bj
    boolean isPause -> v
    int currentDuration -> bk
    android.app.Dialog waitProgressDialog -> bl
    android.widget.ImageView is_manorwomen_icon -> bm
    android.view.animation.Animation animation -> bn
    int toFlag -> bo
    android.widget.ImageView zan_more_icon -> bp
    android.app.Dialog alertDialog -> bq
    java.lang.String toID -> br
    int isHuifuPinglun -> bs
    int findId -> bt
    android.widget.TextView tx_sport_del -> bu
    android.widget.AdapterView$OnItemClickListener listener -> w
    android.text.TextWatcher mTextWatcher -> x
    android.os.Handler mHandler -> y
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void init() -> g
    java.util.List getExpressionString(android.content.Context,java.lang.String,int,int,int) -> a
    java.util.List getNameString(android.content.Context,java.lang.String,int,int,int) -> b
    java.util.List getContentString(android.content.Context,java.lang.String,int) -> a
    void checkView() -> h
    void setImageVoid(int,int,java.util.List) -> a
    void hideedit() -> i
    void showedit() -> j
    void setCurPoint(int) -> b
    void initViews() -> f
    void delStr(android.widget.EditText) -> a
    java.lang.String filterEmoji(java.lang.String) -> a
    boolean containsEmoji(java.lang.String) -> b
    boolean isEmojiCharacter(char) -> a
    java.lang.Boolean stringFilter(java.lang.String) -> c
    java.lang.String ToDBC(java.lang.String) -> d
    void send(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void showWaitDialog(java.lang.String) -> f
    void setZanAndPinglun() -> k
    void onClick(android.view.View) -> onClick
    void showZanImage(java.util.ArrayList) -> a
    void setRoudImage(java.lang.String,android.widget.ImageView,java.lang.String) -> a
    void showDialogs(int,java.lang.String) -> a
    void showAdminDialogs(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void setAllView() -> l
    void showdeleteAllDialogs(java.lang.String) -> g
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int getActivityId(java.lang.String) -> e
    android.widget.EditText access$0(com.fox.exercise.newversion.act.UserActivityMainActivity) -> a
    void access$1(com.fox.exercise.newversion.act.UserActivityMainActivity,android.widget.EditText) -> a
    android.widget.Button access$2(com.fox.exercise.newversion.act.UserActivityMainActivity) -> b
    android.widget.Button access$3(com.fox.exercise.newversion.act.UserActivityMainActivity) -> c
    void access$4(com.fox.exercise.newversion.act.UserActivityMainActivity,boolean) -> a
    java.lang.String access$5(com.fox.exercise.newversion.act.UserActivityMainActivity) -> d
    android.content.Context access$6(com.fox.exercise.newversion.act.UserActivityMainActivity) -> e
    android.app.Dialog access$7(com.fox.exercise.newversion.act.UserActivityMainActivity) -> f
    void access$8(com.fox.exercise.newversion.act.UserActivityMainActivity,com.fox.exercise.newversion.entity.FindGroup) -> a
    com.fox.exercise.newversion.entity.FindGroup access$9(com.fox.exercise.newversion.act.UserActivityMainActivity) -> g
    android.widget.LinearLayout access$10(com.fox.exercise.newversion.act.UserActivityMainActivity) -> h
    void access$11(com.fox.exercise.newversion.act.UserActivityMainActivity) -> i
    void access$12(com.fox.exercise.newversion.act.UserActivityMainActivity,java.util.ArrayList) -> a
    android.widget.RelativeLayout access$13(com.fox.exercise.newversion.act.UserActivityMainActivity) -> j
    void access$14(com.fox.exercise.newversion.act.UserActivityMainActivity) -> k
    cn.ingenic.indroidsync.SportsApp access$15(com.fox.exercise.newversion.act.UserActivityMainActivity) -> l
    android.widget.Button access$16(com.fox.exercise.newversion.act.UserActivityMainActivity) -> m
    com.fox.exercise.RecordHelper access$17(com.fox.exercise.newversion.act.UserActivityMainActivity) -> n
    android.app.Dialog access$18(com.fox.exercise.newversion.act.UserActivityMainActivity) -> o
    void access$19(com.fox.exercise.newversion.act.UserActivityMainActivity,android.app.Dialog) -> a
    android.widget.LinearLayout access$20(com.fox.exercise.newversion.act.UserActivityMainActivity) -> p
    java.lang.String access$21(com.fox.exercise.newversion.act.UserActivityMainActivity) -> q
    android.widget.LinearLayout access$22(com.fox.exercise.newversion.act.UserActivityMainActivity) -> r
    void access$23(com.fox.exercise.newversion.act.UserActivityMainActivity) -> s
    java.lang.Boolean access$24(com.fox.exercise.newversion.act.UserActivityMainActivity) -> t
    void access$25(com.fox.exercise.newversion.act.UserActivityMainActivity,java.lang.Boolean) -> a
    android.widget.RelativeLayout access$26(com.fox.exercise.newversion.act.UserActivityMainActivity) -> u
    boolean access$27(com.fox.exercise.newversion.act.UserActivityMainActivity) -> v
    void access$28(com.fox.exercise.newversion.act.UserActivityMainActivity,boolean) -> b
    android.widget.ImageButton access$29(com.fox.exercise.newversion.act.UserActivityMainActivity) -> w
    void access$30(com.fox.exercise.newversion.act.UserActivityMainActivity) -> x
    android.view.animation.Animation access$31(com.fox.exercise.newversion.act.UserActivityMainActivity) -> y
    void access$32(com.fox.exercise.newversion.act.UserActivityMainActivity,java.lang.String) -> a
    com.fox.exercise.api.entity.UserDetail access$33(com.fox.exercise.newversion.act.UserActivityMainActivity) -> z
    void access$34(com.fox.exercise.newversion.act.UserActivityMainActivity,int,java.lang.String) -> a
    void access$35(com.fox.exercise.newversion.act.UserActivityMainActivity,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void access$36(com.fox.exercise.newversion.act.UserActivityMainActivity,java.lang.String) -> b
    void access$37(com.fox.exercise.newversion.act.UserActivityMainActivity,int) -> a
    int access$38(com.fox.exercise.newversion.act.UserActivityMainActivity) -> A
    void access$39(com.fox.exercise.newversion.act.UserActivityMainActivity,java.lang.String) -> c
    java.util.List access$40(com.fox.exercise.newversion.act.UserActivityMainActivity) -> B
    void access$41(com.fox.exercise.newversion.act.UserActivityMainActivity,int) -> b
    android.widget.ImageView access$42(com.fox.exercise.newversion.act.UserActivityMainActivity) -> C
    void access$43(com.fox.exercise.newversion.act.UserActivityMainActivity,android.widget.ImageView) -> a
    boolean access$44(com.fox.exercise.newversion.act.UserActivityMainActivity) -> D
    void access$45(com.fox.exercise.newversion.act.UserActivityMainActivity,int) -> c
    int access$46(com.fox.exercise.newversion.act.UserActivityMainActivity) -> E
    android.app.Dialog access$47(com.fox.exercise.newversion.act.UserActivityMainActivity) -> F
    java.util.List access$48(com.fox.exercise.newversion.act.UserActivityMainActivity) -> G
    java.util.List access$49(com.fox.exercise.newversion.act.UserActivityMainActivity) -> H
    java.util.List access$50(com.fox.exercise.newversion.act.UserActivityMainActivity) -> I
    void access$51(com.fox.exercise.newversion.act.UserActivityMainActivity,java.lang.String) -> d
    java.lang.String access$52(com.fox.exercise.newversion.act.UserActivityMainActivity) -> J
com.fox.exercise.newversion.act.UserActivityMainActivity$1 -> com.fox.exercise.newversion.act.ev:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.act.UserActivityMainActivity$10 -> com.fox.exercise.newversion.act.ew:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    java.lang.String val$commentID -> b
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.act.UserActivityMainActivity access$0(com.fox.exercise.newversion.act.UserActivityMainActivity$10) -> a
com.fox.exercise.newversion.act.UserActivityMainActivity$10$1 -> com.fox.exercise.newversion.act.ex:
    com.fox.exercise.newversion.act.UserActivityMainActivity$10 this$1 -> a
    java.lang.String val$commentID -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.UserActivityMainActivity$11 -> com.fox.exercise.newversion.act.ey:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$12 -> com.fox.exercise.newversion.act.ez:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    java.lang.String val$commentID -> b
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.act.UserActivityMainActivity access$0(com.fox.exercise.newversion.act.UserActivityMainActivity$12) -> a
com.fox.exercise.newversion.act.UserActivityMainActivity$12$1 -> com.fox.exercise.newversion.act.fa:
    com.fox.exercise.newversion.act.UserActivityMainActivity$12 this$1 -> a
    java.lang.String val$commentID -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.UserActivityMainActivity$13 -> com.fox.exercise.newversion.act.fb:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    java.lang.String val$commentID -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$14 -> com.fox.exercise.newversion.act.fc:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    java.lang.String val$name -> b
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.fox.exercise.newversion.act.UserActivityMainActivity$15 -> com.fox.exercise.newversion.act.fd:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    java.lang.String val$findID -> b
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.act.UserActivityMainActivity access$0(com.fox.exercise.newversion.act.UserActivityMainActivity$15) -> a
com.fox.exercise.newversion.act.UserActivityMainActivity$15$1 -> com.fox.exercise.newversion.act.fe:
    com.fox.exercise.newversion.act.UserActivityMainActivity$15 this$1 -> a
    java.lang.String val$findID -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.UserActivityMainActivity$16 -> com.fox.exercise.newversion.act.ff:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$2 -> com.fox.exercise.newversion.act.fg:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.newversion.act.UserActivityMainActivity$3 -> com.fox.exercise.newversion.act.fh:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.UserActivityMainActivity$4 -> com.fox.exercise.newversion.act.fi:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void OnViewChange(int) -> a
com.fox.exercise.newversion.act.UserActivityMainActivity$5 -> com.fox.exercise.newversion.act.fj:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.fox.exercise.newversion.act.UserActivityMainActivity$6 -> com.fox.exercise.newversion.act.fk:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$7 -> com.fox.exercise.newversion.act.fl:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    java.lang.String val$findID -> b
    java.lang.String val$commentText -> c
    java.lang.String val$commentWav -> d
    java.lang.String val$wavDuration -> e
    java.lang.String val$toID -> f
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.UserActivityMainActivity$8 -> com.fox.exercise.newversion.act.fm:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    java.lang.Object val$lock -> b
    java.lang.String val$mediaPath -> c
    android.widget.ImageView val$wavBegin -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.act.UserActivityMainActivity access$0(com.fox.exercise.newversion.act.UserActivityMainActivity$8) -> a
com.fox.exercise.newversion.act.UserActivityMainActivity$8$1 -> com.fox.exercise.newversion.act.fn:
    com.fox.exercise.newversion.act.UserActivityMainActivity$8 this$1 -> a
    android.widget.ImageView val$wavBegin -> b
    java.lang.String val$mediaPath -> c
    void run() -> run
    com.fox.exercise.newversion.act.UserActivityMainActivity$8 access$0(com.fox.exercise.newversion.act.UserActivityMainActivity$8$1) -> a
com.fox.exercise.newversion.act.UserActivityMainActivity$8$1$1 -> com.fox.exercise.newversion.act.fo:
    com.fox.exercise.newversion.act.UserActivityMainActivity$8$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.fox.exercise.newversion.act.UserActivityMainActivity$8$1$2 -> com.fox.exercise.newversion.act.fp:
    com.fox.exercise.newversion.act.UserActivityMainActivity$8$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.newversion.act.UserActivityMainActivity$8$1$3 -> com.fox.exercise.newversion.act.fq:
    com.fox.exercise.newversion.act.UserActivityMainActivity$8$1 this$2 -> a
    android.widget.ImageView val$wavBegin -> b
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.newversion.act.UserActivityMainActivity$9 -> com.fox.exercise.newversion.act.fr:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian -> com.fox.exercise.newversion.act.fs:
    android.view.View view -> b
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    android.view.View access$0(com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian) -> a
    com.fox.exercise.newversion.act.UserActivityMainActivity access$1(com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian) -> b
com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian$1 -> com.fox.exercise.newversion.act.ft:
    com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian this$1 -> a
    android.widget.TextView val$textView -> b
    int val$theBeforeGoodPeople -> c
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian access$2(com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian$1) -> a
com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian$1$1 -> com.fox.exercise.newversion.act.fu:
    com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian$1 this$2 -> a
    void run() -> run
com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian$2 -> com.fox.exercise.newversion.act.fv:
    com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian this$1 -> a
    android.view.View val$v -> b
    void onPreExecute() -> onPreExecute
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian$2$1 -> com.fox.exercise.newversion.act.fw:
    com.fox.exercise.newversion.act.UserActivityMainActivity$AddAnimian$2 this$2 -> a
    android.view.View val$v -> b
    void run() -> run
com.fox.exercise.newversion.act.UserActivityMainActivity$ExpressionImgAdapter -> com.fox.exercise.newversion.act.fx:
    java.util.List mList -> b
    android.content.Context mContext -> c
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.act.UserActivityMainActivity$ExpressionImgAdapter$ImgItem -> com.fox.exercise.newversion.act.fy:
    android.widget.ImageView mAppIcon -> a
    com.fox.exercise.newversion.act.UserActivityMainActivity$ExpressionImgAdapter this$1 -> b
com.fox.exercise.newversion.act.UserActivityMainActivity$GetActionDataTask -> com.fox.exercise.newversion.act.fz:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.UserActivityMainActivity$GetActionDataTask2 -> com.fox.exercise.newversion.act.ga:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    java.util.List doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.act.UserActivityMainActivity$GetInfoThread -> com.fox.exercise.newversion.act.gb:
    int findId -> b
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.UserActivityMainActivity$GetSingleThread -> com.fox.exercise.newversion.act.gc:
    int findId -> b
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.UserActivityMainActivity$commentOnClickListener -> com.fox.exercise.newversion.act.gd:
    int comment_number -> b
    java.lang.String findID -> c
    java.lang.String commentID -> d
    java.lang.String theFirstName -> e
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$deleteListener -> com.fox.exercise.newversion.act.ge:
    java.lang.String find_id -> b
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$findClickListener -> com.fox.exercise.newversion.act.gf:
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onLongClick(android.view.View) -> onLongClick
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$imgOnClickListener -> com.fox.exercise.newversion.act.gg:
    int index -> b
    java.lang.String[] urlString -> c
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$personalInformationOnClickListener -> com.fox.exercise.newversion.act.gh:
    int userId -> b
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserActivityMainActivity$personalOnClickListener -> com.fox.exercise.newversion.act.gi:
    int userId -> b
    com.fox.exercise.newversion.act.UserActivityMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.UserSetMainActivity -> com.fox.exercise.newversion.act.UserSetMainActivity:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> k
    android.widget.PopupWindow window -> l
    android.widget.LinearLayout mview -> m
    android.widget.RelativeLayout relativelayout_six -> n
    android.widget.RelativeLayout mPopMenuBack -> o
    android.widget.TextView now_version -> p
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    java.lang.String getVersion() -> f
    void onClick(android.view.View) -> onClick
    void init() -> h
    void shot() -> g
    void onDismiss() -> onDismiss
com.fox.exercise.newversion.act.ZhangzisiWebViewActivity -> com.fox.exercise.newversion.act.ZhangzisiWebViewActivity:
    android.webkit.WebView webView -> q
    java.lang.String webUrl -> r
    java.lang.String APP_CACAHE_DIRNAME -> s
    android.widget.LinearLayout loading_layout -> t
    android.widget.ImageView img_share -> u
    java.lang.String Xiangqinurl -> v
    int bs -> k
    int infoid -> l
    int tbs -> m
    java.lang.String info_title -> n
    java.lang.String img -> o
    com.fox.exercise.api.entity.ActListInfo list -> p
    cn.ingenic.indroidsync.SportsApp mSportsApp -> w
    android.os.Handler mHandler -> x
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPageDestroy() -> e
    void loadWebView() -> h
    void getActivioTitle() -> f
    void clearWebViewCache() -> g
    void deleteFile(java.io.File) -> a
    android.webkit.WebView access$0(com.fox.exercise.newversion.act.ZhangzisiWebViewActivity) -> a
    android.widget.ImageView access$1(com.fox.exercise.newversion.act.ZhangzisiWebViewActivity) -> b
    android.widget.LinearLayout access$2(com.fox.exercise.newversion.act.ZhangzisiWebViewActivity) -> c
    android.widget.LinearLayout access$3(com.fox.exercise.newversion.act.ZhangzisiWebViewActivity) -> d
    cn.ingenic.indroidsync.SportsApp access$4(com.fox.exercise.newversion.act.ZhangzisiWebViewActivity) -> e
    android.os.Handler access$5(com.fox.exercise.newversion.act.ZhangzisiWebViewActivity) -> f
com.fox.exercise.newversion.act.ZhangzisiWebViewActivity$1 -> com.fox.exercise.newversion.act.gj:
    com.fox.exercise.newversion.act.ZhangzisiWebViewActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.act.ZhangzisiWebViewActivity$2 -> com.fox.exercise.newversion.act.gk:
    com.fox.exercise.newversion.act.ZhangzisiWebViewActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.fox.exercise.newversion.act.ZhangzisiWebViewActivity$3 -> com.fox.exercise.newversion.act.gl:
    com.fox.exercise.newversion.act.ZhangzisiWebViewActivity this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.fox.exercise.newversion.act.ZhangzisiWebViewActivity$4 -> com.fox.exercise.newversion.act.gm:
    com.fox.exercise.newversion.act.ZhangzisiWebViewActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.act.ZhangzisiWebViewActivity$ZhangzisiShareLister -> com.fox.exercise.newversion.act.gn:
    com.fox.exercise.newversion.act.ZhangzisiWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.act.ZhangzisiWebViewActivity$mClickListen -> com.fox.exercise.newversion.act.go:
    com.fox.exercise.newversion.act.ZhangzisiWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.adapter.HorizontalScrollViewAdapter -> i.a:
    android.view.LayoutInflater mInflater -> a
    java.util.ArrayList mDatas -> b
    com.fox.exercise.ImageDownloader mDownloader -> c
    int getCount() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> a
com.fox.exercise.newversion.adapter.HorizontalScrollViewAdapter$ViewHolder -> i.b:
    android.widget.ImageView mImg -> a
    com.fox.exercise.newversion.adapter.HorizontalScrollViewAdapter this$0 -> b
com.fox.exercise.newversion.adapter.MsgboxNewAdapter -> i.c:
    java.lang.String[] title -> a
    int[] imgid -> b
    java.util.ArrayList al -> c
    android.view.LayoutInflater mInflater -> d
    android.content.Context mContext -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.adapter.MsgboxNewAdapter$ViewHolder -> i.d:
    android.widget.Button tiptxt -> a
    android.widget.TextView txt -> b
    android.widget.ImageView img -> c
    com.fox.exercise.newversion.adapter.MsgboxNewAdapter this$0 -> d
com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter -> i.e:
    android.content.Context mContext -> b
    java.util.ArrayList mList -> c
    com.fox.exercise.ImageDownloader mDownloader -> d
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder holder -> a
    android.view.LayoutInflater mInflater -> e
    cn.ingenic.indroidsync.SportsApp mSportsApp -> f
    android.app.Dialog loadProgressDialog -> g
    android.widget.TextView message -> h
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ChangeHandler mHandler -> i
    android.view.View addView -> j
    int DELETES -> k
    int ADDS -> l
    int positions -> m
    int addStatus -> n
    com.fox.exercise.pedometer.ImageWorkManager mImageWorkerMan_Icon -> o
    com.fox.exercise.bitmap.util.ImageResizer mImageWorker_Icon -> p
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter) -> a
    int access$1(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter) -> b
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ChangeHandler access$2(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter) -> c
    android.app.Dialog access$3(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter) -> d
    android.view.View access$4(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter) -> e
    android.content.Context access$5(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter) -> f
    void access$6(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter,android.view.View) -> a
    void access$7(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter,int) -> a
    void access$8(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter,int) -> b
    android.widget.TextView access$9(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter) -> g
    java.util.ArrayList access$10(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter) -> h
com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$1 -> i.f:
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$2 -> i.g:
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ChangeHandler -> i.h:
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ChangeThread -> i.i:
    int uid -> b
    int status -> c
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter this$0 -> a
    void run() -> run
com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder -> i.j:
    android.widget.TextView tx_day_juli -> b
    com.fox.exercise.util.RoundedImage iconImg -> c
    android.widget.TextView nameTxt -> d
    android.widget.Button followBtn -> e
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter this$0 -> a
    void access$1(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder,android.widget.TextView) -> a
    void access$2(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder,com.fox.exercise.util.RoundedImage) -> a
    void access$3(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder,android.widget.TextView) -> b
    void access$4(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder,android.widget.Button) -> a
    com.fox.exercise.util.RoundedImage access$5(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder) -> a
    android.widget.TextView access$6(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder) -> b
    android.widget.TextView access$7(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder) -> c
    android.widget.Button access$8(com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter$ViewHolder) -> d
com.fox.exercise.newversion.adapter.TrainPlanListAdapter -> i.k:
    java.util.ArrayList mlist -> a
    android.view.LayoutInflater mInflater -> b
    android.content.Context mContext -> c
    com.fox.exercise.ImageDownloader mDownloader -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.adapter.TrainPlanListAdapter$ViewHolder -> i.l:
    android.widget.TextView train_name -> a
    android.widget.TextView trainplan_time -> b
    android.widget.TextView traincount -> c
    android.widget.ImageView img -> d
    com.fox.exercise.newversion.adapter.TrainPlanListAdapter this$0 -> e
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart -> com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart:
    java.lang.String TAG -> k
    java.lang.String SHARE_PATH -> l
    int page -> m
    int listNum -> n
    java.util.ArrayList list -> o
    int GET_FROM_LOCAL -> p
    int GET_FROM_NETWORK -> q
    int UPDATE_DATA -> r
    int OUTPUT_VIEW -> s
    int SHARE_RESULT -> t
    int SAVE_TO_LOCAL -> u
    int SAVE_TO_NETWORK -> v
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDB db -> w
    android.view.LayoutInflater mInflater -> x
    int screenHeight -> y
    int selectPosition -> z
    com.fox.exercise.newversion.bushutongji.HorizontalListView listview -> A
    android.widget.TextView tv_steps -> B
    android.widget.TextView tv_juli -> C
    android.widget.TextView tv_reliang -> D
    com.tencent.mm.sdk.openapi.IWXAPI api -> E
    com.fox.exercise.ImageDownloader mDownloader -> F
    android.app.Dialog shareDialog -> G
    int shareId -> H
    com.tencent.tauth.Tencent mTencent -> I
    java.lang.String today -> J
    java.lang.String yestoday -> K
    android.app.Dialog alertDialog -> L
    android.app.Dialog mLoadProgressDialog -> M
    android.widget.TextView mDialogMessage -> N
    android.widget.BaseAdapter mAdapter -> O
    android.os.Handler updateHandler -> P
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void TyrLoginAction(android.content.Context,java.lang.String,java.lang.String) -> a
    void initTryLoginDialog(android.content.Context,java.lang.String,java.lang.String) -> b
    int saveBuShuTongJiToLocal(com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail) -> a
    void shareToQQ() -> f
    void shareToWeixin() -> g
    void shareToWeixinHaoYou() -> i
    java.lang.String getFormatedDate(java.lang.String) -> a
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void onCancel() -> h
    void onComplete(java.lang.Object) -> a
    void onError(com.tencent.tauth.UiError) -> a
    java.util.ArrayList access$0(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> a
    android.view.LayoutInflater access$1(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> b
    int access$2(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> c
    void access$3(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,int) -> a
    android.os.Handler access$4(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> d
    int access$5(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> e
    java.lang.String access$6(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,java.lang.String) -> a
    void access$7(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,com.fox.exercise.newversion.bushutongji.BuShuTongJiDB) -> a
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDB access$8(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> f
    int access$9(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> g
    void access$10(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,int) -> b
    com.fox.exercise.newversion.bushutongji.HorizontalListView access$11(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> h
    android.widget.BaseAdapter access$12(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> i
    android.widget.TextView access$13(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> j
    android.widget.TextView access$14(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> k
    android.widget.TextView access$15(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> l
    java.lang.String access$16(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> m
    void access$17(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,java.lang.String) -> b
    void access$18(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,java.lang.String) -> c
    int access$19(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail) -> a
    void access$20(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,android.app.Dialog) -> a
    android.app.Dialog access$21(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> n
    void access$22(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,int) -> c
    android.app.Dialog access$23(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> o
    void access$24(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,android.app.Dialog) -> b
    void access$25(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,android.widget.TextView) -> a
    android.widget.TextView access$26(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> p
    int access$27(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> q
    void access$28(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,int) -> d
    cn.ingenic.indroidsync.SportsApp access$29(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> r
    void access$30(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,com.fox.exercise.ImageDownloader) -> a
    com.fox.exercise.ImageDownloader access$31(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> s
    java.lang.String access$32(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> t
    int access$33(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> u
    void access$34(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> v
    void access$35(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> w
    void access$36(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> x
    android.app.Dialog access$37(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart) -> y
    void access$38(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart,android.app.Dialog) -> c
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1 -> com.fox.exercise.newversion.bushutongji.a:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart access$0(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1) -> a
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1$1 -> com.fox.exercise.newversion.bushutongji.b:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1 this$1 -> a
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1$ViewHolder val$holder -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1$2 -> com.fox.exercise.newversion.bushutongji.c:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1 this$1 -> a
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1$ViewHolder val$holder -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1$ViewHolder -> com.fox.exercise.newversion.bushutongji.d:
    android.widget.TextView title -> a
    android.widget.ImageView image -> b
    android.widget.ImageView image_bg -> c
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$1 this$1 -> d
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$2 -> com.fox.exercise.newversion.bushutongji.e:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$3 -> com.fox.exercise.newversion.bushutongji.f:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    android.content.Context val$context -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$4 -> com.fox.exercise.newversion.bushutongji.g:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$5 -> com.fox.exercise.newversion.bushutongji.h:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$6 -> com.fox.exercise.newversion.bushutongji.i:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$GetAllDayBuShuFromNetwork -> com.fox.exercise.newversion.bushutongji.j:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    com.fox.exercise.api.ApiMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$GetShareData -> com.fox.exercise.newversion.bushutongji.k:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    com.fox.exercise.api.ApiMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$goShare -> com.fox.exercise.newversion.bushutongji.l:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$rightOnClickListener -> com.fox.exercise.newversion.bushutongji.m:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart access$0(com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$rightOnClickListener) -> a
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$rightOnClickListener$1 -> com.fox.exercise.newversion.bushutongji.n:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$rightOnClickListener this$1 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$rightOnClickListener$2 -> com.fox.exercise.newversion.bushutongji.o:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$rightOnClickListener this$1 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart$saveBuShuTongJiToNetWork -> com.fox.exercise.newversion.bushutongji.p:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail detail -> b
    com.fox.exercise.newversion.bushutongji.BuShuTongJiBarChart this$0 -> a
    com.fox.exercise.api.ApiMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.bushutongji.BuShuTongJiDB -> com.fox.exercise.newversion.bushutongji.q:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDB mInstance -> b
    android.content.Context context -> c
    android.database.sqlite.SQLiteDatabase db -> d
    java.lang.String CREATE_TAB -> a
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDB getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    int insert(android.content.ContentValues,java.lang.Boolean) -> a
    int update(android.content.ContentValues,int,java.lang.String,java.lang.Boolean) -> a
    void deleteRecord(int,java.lang.String) -> a
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail getUnLoginRecord() -> a
    int getBuShuByDay(int,java.lang.String) -> b
    java.lang.String getFirstRecord(int) -> a
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail getRecordByDay(int,java.lang.String) -> c
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail getUnUploadTasksList(int) -> b
    java.util.ArrayList getTasksList(int,int) -> a
    android.database.Cursor query(int,java.lang.String) -> d
    void close() -> close
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail -> com.fox.exercise.newversion.bushutongji.r:
    int uid -> a
    int id -> b
    int step_num -> c
    double distance -> d
    double step_Calorie -> e
    java.lang.String day -> f
    int is_upload -> g
    int getUid() -> a
    int getId() -> b
    void setId(int) -> a
    int getStep_num() -> c
    double getDistance() -> d
    double getStep_Calorie() -> e
    java.lang.String getDay() -> f
    int getIs_upload() -> g
    void setIs_upload(int) -> b
com.fox.exercise.newversion.bushutongji.BuShuTongJiReceiver -> com.fox.exercise.newversion.bushutongji.BuShuTongJiReceiver:
    java.lang.String TAG -> a
    java.lang.String user_present -> b
    java.lang.String restart_service -> c
    boolean service_running -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.newversion.bushutongji.BuShuTongJiService -> com.fox.exercise.newversion.bushutongji.BuShuTongJiService:
    java.lang.String TAG -> a
    com.fox.exercise.newversion.bushutongji.BuShuTongJiReceiver receiver -> b
    android.content.IntentFilter filter -> c
    android.hardware.SensorManager sensorManager -> d
    boolean mTroughAppear -> e
    int steps -> f
    android.content.Intent jibuIntent -> g
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDB db -> h
    java.util.TimerTask task -> i
    java.util.Timer timer -> j
    int GET_FROM_LOCAL -> k
    int UPDATE_STEPS -> l
    int SAVE_TO_LOCAL -> m
    int SAVE_TO_NETWORK -> n
    int height -> o
    int weight -> p
    int lastUid -> q
    android.os.Handler updateStepsHandler -> r
    android.hardware.SensorEventListener JiBuListener -> s
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void addMissRecord(int) -> a
    void syncDatabase(int) -> b
    int saveBuShuTongJiToLocal(com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail) -> a
    void CountStep(float,float,float) -> a
    void access$0(com.fox.exercise.newversion.bushutongji.BuShuTongJiService,com.fox.exercise.newversion.bushutongji.BuShuTongJiDB) -> a
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDB access$1(com.fox.exercise.newversion.bushutongji.BuShuTongJiService) -> a
    java.lang.String access$2(com.fox.exercise.newversion.bushutongji.BuShuTongJiService) -> b
    int access$3(com.fox.exercise.newversion.bushutongji.BuShuTongJiService) -> c
    void access$4(com.fox.exercise.newversion.bushutongji.BuShuTongJiService,int) -> a
    android.os.Handler access$5(com.fox.exercise.newversion.bushutongji.BuShuTongJiService) -> d
    int access$6(com.fox.exercise.newversion.bushutongji.BuShuTongJiService) -> e
    int access$7(com.fox.exercise.newversion.bushutongji.BuShuTongJiService) -> f
    android.content.Intent access$8(com.fox.exercise.newversion.bushutongji.BuShuTongJiService) -> g
    int access$9(com.fox.exercise.newversion.bushutongji.BuShuTongJiService,com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail) -> a
    void access$10(com.fox.exercise.newversion.bushutongji.BuShuTongJiService,float,float,float) -> a
com.fox.exercise.newversion.bushutongji.BuShuTongJiService$1 -> com.fox.exercise.newversion.bushutongji.s:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.bushutongji.BuShuTongJiService$2 -> com.fox.exercise.newversion.bushutongji.t:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiService this$0 -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.fox.exercise.newversion.bushutongji.BuShuTongJiService$3 -> com.fox.exercise.newversion.bushutongji.u:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiService this$0 -> a
    void run() -> run
com.fox.exercise.newversion.bushutongji.BuShuTongJiService$GetCurrentDayBuShu -> com.fox.exercise.newversion.bushutongji.v:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiService this$0 -> a
    com.fox.exercise.api.ApiMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.bushutongji.BuShuTongJiService$saveBuShuTongJiToNetWork -> com.fox.exercise.newversion.bushutongji.w:
    com.fox.exercise.newversion.bushutongji.BuShuTongJiDetail detail -> b
    com.fox.exercise.newversion.bushutongji.BuShuTongJiService this$0 -> a
    com.fox.exercise.api.ApiMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.bushutongji.HorizontalListView -> com.fox.exercise.newversion.bushutongji.HorizontalListView:
    boolean mAlwaysOverrideTouch -> a
    android.widget.ListAdapter mAdapter -> b
    int mLeftViewIndex -> f
    int mRightViewIndex -> g
    int mCurrentX -> c
    int mNextX -> d
    int mMaxX -> h
    int mDisplayOffset -> i
    android.widget.Scroller mScroller -> e
    android.view.GestureDetector mGesture -> j
    java.util.Queue mRemovedViewQueue -> k
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelected -> l
    android.widget.AdapterView$OnItemClickListener mOnItemClicked -> m
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClicked -> n
    boolean mDataChanged -> o
    java.util.TimerTask task -> p
    java.util.Timer timer -> q
    android.database.DataSetObserver mDataObserver -> r
    android.os.Handler updateHandler -> s
    android.view.GestureDetector$OnGestureListener mOnGesture -> t
    void initView() -> a
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    android.widget.ListAdapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void reset() -> b
    void setSelection(int) -> setSelection
    void addAndMeasureChild(android.view.View,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void fillList(int) -> b
    void fillListRight(int,int) -> a
    void fillListLeft(int,int) -> b
    void removeNonVisibleItems(int) -> c
    void positionItems(int) -> d
    void scrollTo(int) -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    boolean onDown(android.view.MotionEvent) -> a
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.fox.exercise.newversion.bushutongji.HorizontalListView,boolean) -> a
    void access$3(com.fox.exercise.newversion.bushutongji.HorizontalListView) -> a
    android.widget.AdapterView$OnItemClickListener access$4(com.fox.exercise.newversion.bushutongji.HorizontalListView) -> b
    int access$5(com.fox.exercise.newversion.bushutongji.HorizontalListView) -> c
    android.widget.AdapterView$OnItemSelectedListener access$6(com.fox.exercise.newversion.bushutongji.HorizontalListView) -> d
    android.widget.AdapterView$OnItemLongClickListener access$7(com.fox.exercise.newversion.bushutongji.HorizontalListView) -> e
    android.os.Handler access$8(com.fox.exercise.newversion.bushutongji.HorizontalListView) -> f
    java.util.TimerTask access$9(com.fox.exercise.newversion.bushutongji.HorizontalListView) -> g
    java.util.Timer access$10(com.fox.exercise.newversion.bushutongji.HorizontalListView) -> h
com.fox.exercise.newversion.bushutongji.HorizontalListView$1 -> com.fox.exercise.newversion.bushutongji.x:
    com.fox.exercise.newversion.bushutongji.HorizontalListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.fox.exercise.newversion.bushutongji.HorizontalListView$2 -> com.fox.exercise.newversion.bushutongji.y:
    com.fox.exercise.newversion.bushutongji.HorizontalListView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.bushutongji.HorizontalListView$3 -> com.fox.exercise.newversion.bushutongji.z:
    com.fox.exercise.newversion.bushutongji.HorizontalListView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean isEventWithinView(android.view.MotionEvent,android.view.View) -> a
com.fox.exercise.newversion.bushutongji.HorizontalListView$4 -> com.fox.exercise.newversion.bushutongji.aa:
    com.fox.exercise.newversion.bushutongji.HorizontalListView this$0 -> a
    android.view.ViewGroup val$vg -> b
    void run() -> run
com.fox.exercise.newversion.bushutongji.HorizontalListView$5 -> com.fox.exercise.newversion.bushutongji.ab:
    com.fox.exercise.newversion.bushutongji.HorizontalListView this$0 -> a
    void run() -> run
com.fox.exercise.newversion.city.CityPicker -> com.fox.exercise.newversion.city.CityPicker:
    com.fox.exercise.newversion.city.ScrollerNumberPicker provincePicker -> b
    com.fox.exercise.newversion.city.ScrollerNumberPicker cityPicker -> c
    com.fox.exercise.newversion.city.ScrollerNumberPicker counyPicker -> d
    com.fox.exercise.newversion.city.CityPicker$OnSelectingListener onSelectingListener -> e
    int tempProvinceIndex -> f
    int temCityIndex -> g
    int tempCounyIndex -> h
    android.content.Context context -> i
    java.util.List province_list -> j
    java.util.HashMap city_map -> k
    java.util.HashMap couny_map -> l
    com.fox.exercise.newversion.city.CitycodeUtil citycodeUtil -> m
    java.lang.String city_code_string -> n
    android.os.Handler handler -> a
    java.lang.String provinceString -> o
    java.lang.String cityString -> p
    java.lang.String conuyString -> q
    void getaddressinfo() -> getaddressinfo
    void onFinishInflate() -> onFinishInflate
    void setOnSelectingListener(com.fox.exercise.newversion.city.CityPicker$OnSelectingListener) -> setOnSelectingListener
    java.lang.String getCity_code_string() -> getCity_code_string
    java.lang.String getProvince_string() -> getProvince_string
    java.lang.String getCity_string() -> getCity_string
    java.lang.String getCouny_string() -> getCouny_string
    com.fox.exercise.newversion.city.CityPicker$OnSelectingListener access$0(com.fox.exercise.newversion.city.CityPicker) -> a
    int access$1(com.fox.exercise.newversion.city.CityPicker) -> b
    com.fox.exercise.newversion.city.ScrollerNumberPicker access$2(com.fox.exercise.newversion.city.CityPicker) -> c
    com.fox.exercise.newversion.city.ScrollerNumberPicker access$3(com.fox.exercise.newversion.city.CityPicker) -> d
    com.fox.exercise.newversion.city.CitycodeUtil access$4(com.fox.exercise.newversion.city.CityPicker) -> e
    java.util.HashMap access$5(com.fox.exercise.newversion.city.CityPicker) -> f
    java.util.HashMap access$6(com.fox.exercise.newversion.city.CityPicker) -> g
    com.fox.exercise.newversion.city.ScrollerNumberPicker access$7(com.fox.exercise.newversion.city.CityPicker) -> h
    void access$8(com.fox.exercise.newversion.city.CityPicker,int) -> a
    int access$9(com.fox.exercise.newversion.city.CityPicker) -> i
    void access$10(com.fox.exercise.newversion.city.CityPicker,int) -> b
    int access$11(com.fox.exercise.newversion.city.CityPicker) -> j
    void access$12(com.fox.exercise.newversion.city.CityPicker,java.lang.String) -> a
    void access$13(com.fox.exercise.newversion.city.CityPicker,int) -> c
com.fox.exercise.newversion.city.CityPicker$1 -> com.fox.exercise.newversion.city.a:
    com.fox.exercise.newversion.city.CityPicker this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.city.CityPicker$2 -> com.fox.exercise.newversion.city.b:
    com.fox.exercise.newversion.city.CityPicker this$0 -> a
    void endSelect(int,java.lang.String) -> a
    void selecting(int,java.lang.String) -> b
com.fox.exercise.newversion.city.CityPicker$3 -> com.fox.exercise.newversion.city.c:
    com.fox.exercise.newversion.city.CityPicker this$0 -> a
    void endSelect(int,java.lang.String) -> a
    void selecting(int,java.lang.String) -> b
com.fox.exercise.newversion.city.CityPicker$4 -> com.fox.exercise.newversion.city.d:
    com.fox.exercise.newversion.city.CityPicker this$0 -> a
    void endSelect(int,java.lang.String) -> a
    void selecting(int,java.lang.String) -> b
com.fox.exercise.newversion.city.CityPicker$JSONParser -> com.fox.exercise.newversion.city.e:
    java.util.ArrayList province_list_code -> a
    java.util.ArrayList city_list_code -> b
    java.util.List getJSONParserResult(java.lang.String,java.lang.String) -> a
    java.util.HashMap getJSONParserResultArray(java.lang.String,java.lang.String) -> b
com.fox.exercise.newversion.city.CityPicker$OnSelectingListener -> com.fox.exercise.newversion.city.f:
    void selected(boolean) -> a
com.fox.exercise.newversion.city.CitycodeUtil -> com.fox.exercise.newversion.city.g:
    java.util.ArrayList province_list -> e
    java.util.ArrayList city_list -> f
    java.util.ArrayList couny_list -> g
    java.util.ArrayList province_list_code -> a
    java.util.ArrayList city_list_code -> b
    java.util.ArrayList couny_list_code -> c
    com.fox.exercise.newversion.city.CitycodeUtil model -> d
    java.util.ArrayList getProvince_list_code() -> a
    java.util.ArrayList getCity_list_code() -> b
    java.util.ArrayList getCouny_list_code() -> c
    com.fox.exercise.newversion.city.CitycodeUtil getSingleton() -> d
    java.util.ArrayList getProvince(java.util.List) -> a
    java.util.ArrayList getCity(java.util.HashMap,java.lang.String) -> a
    java.util.ArrayList getCouny(java.util.HashMap,java.lang.String) -> b
com.fox.exercise.newversion.city.Cityinfo -> com.fox.exercise.newversion.city.h:
    java.lang.String id -> a
    java.lang.String city_name -> b
    java.lang.String getId() -> a
    void setId(java.lang.String) -> a
    java.lang.String getCity_name() -> b
    void setCity_name(java.lang.String) -> b
    java.lang.String toString() -> toString
com.fox.exercise.newversion.city.FileUtil -> com.fox.exercise.newversion.city.i:
    java.lang.String readAssets(android.content.Context,java.lang.String) -> a
com.fox.exercise.newversion.city.ScrollerNumberPicker -> com.fox.exercise.newversion.city.ScrollerNumberPicker:
    float controlWidth -> b
    float controlHeight -> c
    boolean isScrolling -> d
    java.util.ArrayList itemList -> e
    java.util.ArrayList dataList -> f
    int downY -> g
    long downTime -> h
    long goonTime -> i
    int goonDistence -> j
    android.graphics.Paint linePaint -> k
    int lineColor -> l
    float normalFont -> m
    float selectedFont -> n
    int unitHeight -> o
    int itemNumber -> p
    int normalColor -> q
    int selectedColor -> r
    float maskHight -> s
    com.fox.exercise.newversion.city.ScrollerNumberPicker$OnSelectListener onSelectListener -> t
    boolean isEnable -> u
    boolean noEmpty -> v
    boolean isClearing -> w
    android.os.Handler handler -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawList(android.graphics.Canvas) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void goonMove(int) -> a
    void noEmpty() -> a
    void initData() -> b
    void actionMove(int) -> b
    void actionThreadMove(int) -> c
    void actionUp(int) -> d
    void slowMove(int) -> e
    void defaultMove(int) -> f
    void onSelectListener() -> c
    void drawLine(android.graphics.Canvas) -> b
    void drawMask(android.graphics.Canvas) -> c
    void init(android.content.Context,android.util.AttributeSet) -> a
    void setData(java.util.ArrayList) -> setData
    int getSelected() -> getSelected
    java.lang.String getSelectedText() -> getSelectedText
    void setEnable(boolean) -> setEnable
    void setDefault(int) -> setDefault
    int getListSize() -> getListSize
    void setOnSelectListener(com.fox.exercise.newversion.city.ScrollerNumberPicker$OnSelectListener) -> setOnSelectListener
    int access$0(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> a
    float access$1(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> b
    float access$2(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> c
    int access$3(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> d
    int access$4(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> e
    float access$5(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> f
    float access$6(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> g
    void access$7(com.fox.exercise.newversion.city.ScrollerNumberPicker,int) -> a
    void access$8(com.fox.exercise.newversion.city.ScrollerNumberPicker,int) -> b
    void access$9(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> h
    java.util.ArrayList access$10(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> i
    com.fox.exercise.newversion.city.ScrollerNumberPicker$OnSelectListener access$11(com.fox.exercise.newversion.city.ScrollerNumberPicker) -> j
com.fox.exercise.newversion.city.ScrollerNumberPicker$1 -> com.fox.exercise.newversion.city.j:
    com.fox.exercise.newversion.city.ScrollerNumberPicker this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.city.ScrollerNumberPicker$2 -> com.fox.exercise.newversion.city.k:
    com.fox.exercise.newversion.city.ScrollerNumberPicker this$0 -> a
    int val$move -> b
    void run() -> run
com.fox.exercise.newversion.city.ScrollerNumberPicker$3 -> com.fox.exercise.newversion.city.l:
    com.fox.exercise.newversion.city.ScrollerNumberPicker this$0 -> a
    int val$move -> b
    void run() -> run
com.fox.exercise.newversion.city.ScrollerNumberPicker$ItemObject -> com.fox.exercise.newversion.city.m:
    int id -> a
    java.lang.String itemText -> b
    int x -> c
    int y -> d
    int move -> e
    android.graphics.Paint textPaint -> g
    android.graphics.Rect textRect -> h
    com.fox.exercise.newversion.city.ScrollerNumberPicker this$0 -> f
    void drawSelf(android.graphics.Canvas) -> a
    boolean isInView() -> a
    void move(int) -> a
    void newY(int) -> b
    boolean isSelected() -> b
    float moveToSelected() -> c
com.fox.exercise.newversion.city.ScrollerNumberPicker$OnSelectListener -> com.fox.exercise.newversion.city.n:
    void endSelect(int,java.lang.String) -> a
    void selecting(int,java.lang.String) -> b
com.fox.exercise.newversion.copy.OtCrashHandler -> j.a:
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> a
    com.fox.exercise.newversion.copy.OtCrashHandler INSTANCE -> b
    android.content.Context mContext -> c
    java.util.Map infos -> d
    java.text.DateFormat formatter -> e
    com.fox.exercise.newversion.copy.OtCrashHandler getInstance() -> a
    void init(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void collectDeviceInfo(android.content.Context) -> b
    java.lang.String saveCrashInfo2File(java.lang.Throwable) -> b
    android.content.Context access$0(com.fox.exercise.newversion.copy.OtCrashHandler) -> a
com.fox.exercise.newversion.copy.OtCrashHandler$1 -> j.b:
    com.fox.exercise.newversion.copy.OtCrashHandler this$0 -> a
    void run() -> run
com.fox.exercise.newversion.entity.CircleFindContent -> k.a:
    int id -> a
    int uid -> b
    java.lang.String content -> c
    java.lang.String[] imgs -> d
    java.lang.String[] biggerImgs -> e
    int pic_width -> f
    int pic_height -> g
    java.lang.String comefrom -> h
    int likenum -> i
    int commentnum -> j
    int ilike -> k
    int getIlike() -> a
    void setIlike(int) -> a
    int getId() -> b
    void setId(int) -> b
    void setUid(int) -> c
    java.lang.String getContent() -> c
    void setContent(java.lang.String) -> a
    java.lang.String[] getImgs() -> d
    void setImgs(java.lang.String[]) -> a
    void setBiggerImgs(java.lang.String[]) -> b
    void setPic_width(int) -> d
    void setPic_height(int) -> e
    void setComefrom(java.lang.String) -> b
    int getLikenum() -> e
    void setLikenum(int) -> f
    int getCommentnum() -> f
    void setCommentnum(int) -> g
com.fox.exercise.newversion.entity.CircleFindDetailContent -> k.b:
    com.fox.exercise.newversion.entity.PointsSay pointsSay -> a
    java.util.List alllist -> b
    java.util.List recommendlist -> c
    com.fox.exercise.newversion.entity.PointsSay getPointsSay() -> a
    void setPointsSay(com.fox.exercise.newversion.entity.PointsSay) -> a
    java.util.List getAlllist() -> b
    void setAlllist(java.util.List) -> a
    java.util.List getRecommendlist() -> c
    void setRecommendlist(java.util.List) -> b
com.fox.exercise.newversion.entity.CircleFindsCat -> k.c:
    int id -> a
    java.lang.String title -> b
    int getId() -> a
    java.lang.String getTitle() -> b
com.fox.exercise.newversion.entity.CircleFindsLists -> k.d:
    int id -> a
    int getId() -> a
com.fox.exercise.newversion.entity.ExternalActivi -> k.e:
    int id -> a
    java.lang.String title -> b
    java.lang.String thumb -> c
    java.lang.String start_time -> d
    java.lang.String end_time -> e
    java.lang.String url -> f
    int price -> g
    int href_id -> h
    int web_id -> i
    int getHref_id() -> a
    void setHref_id(int) -> a
    int getWeb_id() -> b
    void setWeb_id(int) -> b
    int getPrice() -> c
    void setPrice(int) -> c
    int getId() -> d
    void setId(int) -> d
    java.lang.String getTitle() -> e
    void setTitle(java.lang.String) -> a
    java.lang.String getThumb() -> f
    void setThumb(java.lang.String) -> b
    java.lang.String getStart_time() -> g
    void setStart_time(java.lang.String) -> c
    java.lang.String getEnd_time() -> h
    void setEnd_time(java.lang.String) -> d
    java.lang.String getUrl() -> i
    void setUrl(java.lang.String) -> e
com.fox.exercise.newversion.entity.FindGroup -> k.f:
    int otheruid -> a
    java.lang.String findId -> b
    java.lang.String otherimg -> c
    java.lang.String othername -> d
    java.lang.String detils -> e
    java.lang.String[] imgs -> f
    java.lang.String[] biggerImgs -> g
    java.lang.Long times -> h
    java.lang.String sex -> i
    int width -> j
    int height -> k
    java.util.ArrayList talkdetils -> l
    java.util.ArrayList pArrayList -> m
    com.fox.exercise.newversion.entity.SportRecord sportRecord -> n
    java.util.ArrayList topicList -> o
    int flog -> p
    boolean isShow -> q
    boolean good -> r
    int goodpeople -> s
    int cCount -> t
    java.lang.String comefrom -> u
    int isFriends -> v
    boolean isShow() -> a
    void setShow(boolean) -> a
    int getFlog() -> b
    void setFlog(int) -> a
    int getOtheruid() -> c
    void setOtheruid(int) -> b
    java.lang.String getFindId() -> d
    void setFindId(java.lang.String) -> a
    java.lang.String getOtherimg() -> e
    void setOtherimg(java.lang.String) -> b
    java.lang.String getOthername() -> f
    void setOthername(java.lang.String) -> c
    java.lang.String getDetils() -> g
    void setDetils(java.lang.String) -> d
    java.lang.String[] getImgs() -> h
    void setImgs(java.lang.String[]) -> a
    java.lang.String[] getBiggerImgs() -> i
    void setBiggerImgs(java.lang.String[]) -> b
    java.lang.Long getTimes() -> j
    void setTimes(java.lang.Long) -> a
    java.lang.String getSex() -> k
    void setSex(java.lang.String) -> e
    int getWidth() -> l
    void setWidth(int) -> c
    int getHeight() -> m
    void setHeight(int) -> d
    java.util.ArrayList getTalkdetils() -> n
    void setTalkdetils(java.util.ArrayList) -> a
    java.util.ArrayList getpArrayList() -> o
    void setpArrayList(java.util.ArrayList) -> b
    java.util.ArrayList getTopicList() -> p
    void setTopicList(java.util.ArrayList) -> c
    boolean isGood() -> q
    void setGood(boolean) -> b
    int getGoodpeople() -> r
    void setGoodpeople(int) -> e
    int getcCount() -> s
    void setcCount(int) -> f
    java.lang.String getComefrom() -> t
    void setComefrom(java.lang.String) -> f
    int getIsFriends() -> u
    void setIsFriends(int) -> g
    com.fox.exercise.newversion.entity.SportRecord getSportRecord() -> v
    void setSportRecord(com.fox.exercise.newversion.entity.SportRecord) -> a
com.fox.exercise.newversion.entity.FirstPageContent -> k.g:
    int uid -> a
    java.lang.String time -> b
    int index -> c
    void setUid(int) -> a
    java.lang.String getTime() -> a
    void setTime(java.lang.String) -> a
    int getIndex() -> b
    void setIndex(int) -> b
com.fox.exercise.newversion.entity.PointsSay -> k.h:
    int id -> a
    java.lang.String title -> b
    java.lang.String connent -> c
    java.lang.String img -> d
    java.lang.String start_time -> e
    java.lang.String end_time -> f
    java.util.ArrayList fList -> g
    java.util.ArrayList getfList() -> a
    void setfList(java.util.ArrayList) -> a
    int getId() -> b
    void setId(int) -> a
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> a
    java.lang.String getConnent() -> d
    void setConnent(java.lang.String) -> b
    java.lang.String getImg() -> e
    void setImg(java.lang.String) -> c
    java.lang.String getStart_time() -> f
    void setStart_time(java.lang.String) -> d
    void setEnd_time(java.lang.String) -> e
com.fox.exercise.newversion.entity.PraiseUsers -> k.i:
    java.lang.String uid -> a
    java.lang.String name -> b
    java.lang.String img -> c
    java.lang.String sex -> d
    java.lang.String getUid() -> a
    void setUid(java.lang.String) -> a
    void setName(java.lang.String) -> b
    java.lang.String getImg() -> b
    void setImg(java.lang.String) -> c
    java.lang.String getSex() -> c
    void setSex(java.lang.String) -> d
com.fox.exercise.newversion.entity.ScreenListener -> k.j:
    android.content.Context mContext -> a
    com.fox.exercise.newversion.entity.ScreenListener$ScreenBroadcastReceiver mScreenReceiver -> b
    com.fox.exercise.newversion.entity.ScreenListener$ScreenStateListener mScreenStateListener -> c
    void begin(com.fox.exercise.newversion.entity.ScreenListener$ScreenStateListener) -> a
    void getScreenState() -> b
    void unregisterListener() -> a
    void registerListener() -> c
    com.fox.exercise.newversion.entity.ScreenListener$ScreenStateListener access$0(com.fox.exercise.newversion.entity.ScreenListener) -> a
com.fox.exercise.newversion.entity.ScreenListener$ScreenBroadcastReceiver -> k.k:
    java.lang.String action -> b
    com.fox.exercise.newversion.entity.ScreenListener this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.newversion.entity.ScreenListener$ScreenStateListener -> k.l:
    void onScreenOn() -> a
    void onScreenOff() -> b
    void onUserPresent() -> c
com.fox.exercise.newversion.entity.ShopPayDingDan -> k.m:
    int id -> a
    int uid -> b
    java.lang.String order_nu -> c
    int gid -> d
    java.lang.String goods_name -> e
    int goods_xjprice -> f
    java.lang.String user_name -> g
    java.lang.String create_time -> h
    int pay_status -> i
    java.lang.String transaction_id -> j
    java.lang.String openid -> k
    int pay_money -> l
    java.lang.String pay_time -> m
    void setId(int) -> a
    void setUid(int) -> b
    java.lang.String getOrder_nu() -> a
    void setOrder_nu(java.lang.String) -> a
    void setGid(int) -> c
    java.lang.String getGoods_name() -> b
    void setGoods_name(java.lang.String) -> b
    int getGoods_xjprice() -> c
    void setGoods_xjprice(int) -> d
    void setUser_name(java.lang.String) -> c
    java.lang.String getCreate_time() -> d
    void setCreate_time(java.lang.String) -> d
    int getPay_status() -> e
    void setPay_status(int) -> e
    void setTransaction_id(java.lang.String) -> e
    void setOpenid(java.lang.String) -> f
    void setPay_money(int) -> f
    void setPay_time(java.lang.String) -> g
com.fox.exercise.newversion.entity.SleepEffect -> k.n:
    java.lang.String uid -> a
    java.lang.String starttime -> b
    java.lang.String endtime -> c
    java.lang.String hart_rate -> d
    java.lang.String unique_id -> e
    java.lang.String shock_num -> f
    java.lang.String bright_time -> g
    java.lang.String getShock_num() -> a
    void setShock_num(java.lang.String) -> a
    java.lang.String getBright_time() -> b
    void setBright_time(java.lang.String) -> b
    java.lang.String getUid() -> c
    void setUid(java.lang.String) -> c
    java.lang.String getStarttime() -> d
    void setStarttime(java.lang.String) -> d
    java.lang.String getEndtime() -> e
    void setEndtime(java.lang.String) -> e
    java.lang.String getHart_rate() -> f
    void setHart_rate(java.lang.String) -> f
    java.lang.String getUnique_id() -> g
    void setUnique_id(java.lang.String) -> g
com.fox.exercise.newversion.entity.SportCircleComments -> k.o:
    java.lang.String id -> a
    java.lang.String uid -> b
    java.lang.String content -> c
    java.lang.String wav -> d
    java.lang.String wavtime -> e
    java.lang.String inputtime -> f
    java.lang.String name -> g
    java.lang.String img -> h
    java.lang.String to_name -> i
    java.lang.String to_img -> j
    java.lang.String sex -> k
    java.lang.String to_sex -> l
    java.lang.String getId() -> a
    void setId(java.lang.String) -> a
    void setUid(java.lang.String) -> b
    java.lang.String getContent() -> b
    void setContent(java.lang.String) -> c
    java.lang.String getWav() -> c
    void setWav(java.lang.String) -> d
    java.lang.String getWavtime() -> d
    void setWavtime(java.lang.String) -> e
    java.lang.String getInputtime() -> e
    void setInputtime(java.lang.String) -> f
    java.lang.String getName() -> f
    void setName(java.lang.String) -> g
    java.lang.String getImg() -> g
    void setImg(java.lang.String) -> h
    java.lang.String getTo_name() -> h
    void setTo_name(java.lang.String) -> i
    void setTo_img(java.lang.String) -> j
    java.lang.String getSex() -> i
    void setSex(java.lang.String) -> k
    void setTo_sex(java.lang.String) -> l
com.fox.exercise.newversion.entity.SportRecord -> k.p:
    java.lang.String time -> a
    java.lang.String sport_distance -> b
    java.lang.String getTime() -> a
    void setTime(java.lang.String) -> a
    void setSport_distance(java.lang.String) -> b
com.fox.exercise.newversion.entity.SportsLike -> k.q:
    int find_id -> a
    int uid -> b
    java.lang.String name -> c
    java.lang.String img -> d
    int sex -> e
    int If_fans -> f
    java.lang.String time -> g
    com.fox.exercise.newversion.entity.SportRecord sportsdata -> h
    void setFind_id(int) -> a
    int getUid() -> a
    void setUid(int) -> b
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    java.lang.String getImg() -> c
    void setImg(java.lang.String) -> b
    int getSex() -> d
    void setSex(int) -> c
    int getIf_fans() -> e
    void setIf_fans(int) -> d
    java.lang.String getTime() -> f
    void setTime(java.lang.String) -> c
    com.fox.exercise.newversion.entity.SportRecord getSportsdata() -> g
    void setSportsdata(com.fox.exercise.newversion.entity.SportRecord) -> a
com.fox.exercise.newversion.entity.SysSportCircleComments -> k.r:
    java.lang.String id -> a
    java.lang.String uid -> b
    java.lang.String content -> c
    java.lang.String wav -> d
    java.lang.String wavtime -> e
    java.lang.String inputtime -> f
    java.lang.String name -> g
    java.lang.String img -> h
    java.lang.String to_name -> i
    java.lang.String to_img -> j
    java.lang.String sex -> k
    java.lang.String to_sex -> l
    java.lang.String province -> m
    java.lang.String city -> n
    java.lang.String getProvince() -> a
    void setProvince(java.lang.String) -> a
    void setCity(java.lang.String) -> b
    java.lang.String getId() -> b
    void setId(java.lang.String) -> c
    void setUid(java.lang.String) -> d
    java.lang.String getContent() -> c
    void setContent(java.lang.String) -> e
    java.lang.String getWav() -> d
    void setWav(java.lang.String) -> f
    java.lang.String getWavtime() -> e
    void setWavtime(java.lang.String) -> g
    java.lang.String getInputtime() -> f
    void setInputtime(java.lang.String) -> h
    java.lang.String getName() -> g
    void setName(java.lang.String) -> i
    java.lang.String getImg() -> h
    void setImg(java.lang.String) -> j
    java.lang.String getTo_name() -> i
    void setTo_name(java.lang.String) -> k
    void setTo_img(java.lang.String) -> l
    java.lang.String getSex() -> j
    void setSex(java.lang.String) -> m
    void setTo_sex(java.lang.String) -> n
com.fox.exercise.newversion.entity.TopicContent -> k.s:
    java.lang.String id -> a
    java.lang.String title -> b
    void setId(java.lang.String) -> a
    java.lang.String getTitle() -> a
    void setTitle(java.lang.String) -> b
com.fox.exercise.newversion.entity.TrainAction -> k.t:
    int id -> a
    java.lang.String name -> b
    java.lang.String thumb -> c
    int listorder -> d
    int resttime -> e
    int actnum -> f
    int videotime -> g
    int getResttime() -> a
    void setResttime(int) -> a
    int getActnum() -> b
    void setActnum(int) -> b
    int getVideotime() -> c
    void setVideotime(int) -> c
    int getId() -> d
    void setId(int) -> d
    java.lang.String getName() -> e
    void setName(java.lang.String) -> a
    java.lang.String getThumb() -> f
    void setThumb(java.lang.String) -> b
    void setListorder(int) -> e
com.fox.exercise.newversion.entity.TrainCount -> k.u:
    int traintime -> a
    double train_calorie -> b
    int countnum -> c
    int countday -> d
    int getTraintime() -> a
    void setTraintime(int) -> a
    double getTrain_calorie() -> b
    void setTrain_calorie(double) -> a
    int getCountnum() -> c
    void setCountnum(int) -> b
    int getCountday() -> d
    void setCountday(int) -> c
com.fox.exercise.newversion.entity.TrainInfo -> k.v:
    int id -> a
    java.lang.String train_name -> b
    java.lang.String thumb -> c
    int grade -> d
    java.lang.String position -> e
    int train_time -> f
    double train_calorie -> g
    java.lang.String train_fileurl -> h
    int action_num -> i
    int traincount -> j
    java.util.ArrayList tUserList -> k
    java.util.ArrayList actionlist -> l
    void setId(int) -> a
    java.lang.String getTrain_name() -> a
    void setTrain_name(java.lang.String) -> a
    java.lang.String getThumb() -> b
    void setThumb(java.lang.String) -> b
    void setGrade(int) -> b
    java.lang.String getPosition() -> c
    void setPosition(java.lang.String) -> c
    int getTrain_time() -> d
    void setTrain_time(int) -> c
    void setTrain_calorie(double) -> a
    java.lang.String getTrain_fileurl() -> e
    void setTrain_fileurl(java.lang.String) -> d
    void setAction_num(int) -> d
    int getTraincount() -> f
    void setTraincount(int) -> e
    java.util.ArrayList gettUserList() -> g
    void settUserList(java.util.ArrayList) -> a
    java.util.ArrayList getActionlist() -> h
    void setActionlist(java.util.ArrayList) -> b
com.fox.exercise.newversion.entity.TrainJsonInfo -> k.w:
    java.lang.String playname -> a
    int posion -> b
    double size -> c
    int time -> d
    int actionNum -> e
    java.lang.String actionName -> f
    int actionFlag -> g
    double actionCal -> h
    int otherFlag -> i
    int sleepTime -> j
    int getSleepTime() -> a
    void setSleepTime(int) -> a
    int getOtherFlag() -> b
    void setOtherFlag(int) -> b
    double getActionCal() -> c
    void setActionCal(double) -> a
    int getActionFlag() -> d
    void setActionFlag(int) -> c
    java.lang.String getPlayname() -> e
    void setPlayname(java.lang.String) -> a
    int getPosion() -> f
    void setPosion(int) -> d
    void setSize(double) -> b
    int getTime() -> g
    void setTime(int) -> e
    int getActionNum() -> h
    void setActionNum(int) -> f
    java.lang.String getActionName() -> i
    void setActionName(java.lang.String) -> b
com.fox.exercise.newversion.entity.TrainPlanList -> k.x:
    int Id -> a
    java.lang.String train_name -> b
    java.lang.String thumb -> c
    int grade -> d
    java.lang.String position -> e
    int train_time -> f
    double train_calorie -> g
    int traincount -> h
    int getId() -> a
    void setId(int) -> a
    java.lang.String getTrain_name() -> b
    void setTrain_name(java.lang.String) -> a
    java.lang.String getThumb() -> c
    void setThumb(java.lang.String) -> b
    void setGrade(int) -> b
    void setPosition(java.lang.String) -> c
    int getTrain_time() -> d
    void setTrain_time(int) -> c
    void setTrain_calorie(double) -> a
    int getTraincount() -> e
    void setTraincount(int) -> d
com.fox.exercise.newversion.entity.TrainResultsInfo -> k.y:
    java.lang.String sessionId -> a
    int train_id -> b
    int traintime -> c
    double train_calorie -> d
    java.lang.String train_action -> e
    java.lang.String train_position -> f
    int train_completion -> g
    java.lang.String train_starttime -> h
    java.lang.String train_endtime -> i
    int is_total -> j
    java.lang.String unique_id -> k
    java.lang.String datasource -> l
    java.lang.String getSessionId() -> a
    void setSessionId(java.lang.String) -> a
    int getTrain_id() -> b
    void setTrain_id(int) -> a
    int getTraintime() -> c
    void setTraintime(int) -> b
    double getTrain_calorie() -> d
    void setTrain_calorie(double) -> a
    java.lang.String getTrain_action() -> e
    void setTrain_action(java.lang.String) -> b
    java.lang.String getTrain_position() -> f
    void setTrain_position(java.lang.String) -> c
    int getTrain_completion() -> g
    void setTrain_completion(int) -> c
    java.lang.String getTrain_starttime() -> h
    void setTrain_starttime(java.lang.String) -> d
    java.lang.String getTrain_endtime() -> i
    void setTrain_endtime(java.lang.String) -> e
    int getIs_total() -> j
    void setIs_total(int) -> d
    java.lang.String getUnique_id() -> k
    void setUnique_id(java.lang.String) -> f
    void setDatasource(java.lang.String) -> g
com.fox.exercise.newversion.entity.TrainUserInfo -> k.z:
    java.lang.String name -> a
    java.lang.String img -> b
    int id -> c
    int uid -> d
    java.lang.String train_starttime -> e
    java.lang.String train_endtime -> f
    double train_calorie -> g
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getImg() -> b
    void setImg(java.lang.String) -> b
    void setId(int) -> a
    void setUid(int) -> b
    void setTrain_starttime(java.lang.String) -> c
    java.lang.String getTrain_endtime() -> c
    void setTrain_endtime(java.lang.String) -> d
    double getTrain_calorie() -> d
    void setTrain_calorie(double) -> a
com.fox.exercise.newversion.entity.WXPaylist -> k.aa:
    int id -> a
    int uid -> b
    int gid -> c
    java.lang.String goods_name -> d
    int goods_price -> e
    int goods_xjprice -> f
    int goods_num -> g
    java.lang.String user_name -> h
    java.lang.String order_nu -> i
    java.lang.String getOrder_nu() -> a
    void setOrder_nu(java.lang.String) -> a
    void setUser_name(java.lang.String) -> b
    void setId(int) -> a
    void setUid(int) -> b
    void setGid(int) -> c
    java.lang.String getGoods_name() -> b
    void setGoods_name(java.lang.String) -> c
    int getGoods_price() -> c
    void setGoods_price(int) -> d
    int getGoods_xjprice() -> d
    void setGoods_xjprice(int) -> e
    void setGoods_num(int) -> f
com.fox.exercise.newversion.entity.WXxdback -> k.ab:
    int flag -> a
    java.lang.String msg -> b
    java.lang.String appid -> c
    java.lang.String partnerid -> d
    java.lang.String packageVaue -> e
    java.lang.String prepayid -> f
    java.lang.String noncestr -> g
    java.lang.String timestamp -> h
    java.lang.String sign -> i
    void setFlag(int) -> a
    void setMsg(java.lang.String) -> a
    java.lang.String getAppid() -> a
    void setAppid(java.lang.String) -> b
    java.lang.String getPartnerid() -> b
    void setPartnerid(java.lang.String) -> c
    java.lang.String getPackageVaue() -> c
    void setPackageVaue(java.lang.String) -> d
    java.lang.String getPrepayid() -> d
    void setPrepayid(java.lang.String) -> e
    java.lang.String getNoncestr() -> e
    void setNoncestr(java.lang.String) -> f
    java.lang.String getTimestamp() -> f
    void setTimestamp(java.lang.String) -> g
    java.lang.String getSign() -> g
    void setSign(java.lang.String) -> h
com.fox.exercise.newversion.entity.YeDindanInfo -> k.ac:
    int id -> a
    java.lang.String order_nu -> b
    int uid -> c
    int mlsid -> d
    java.lang.String mls_name -> e
    int mls_price -> f
    java.lang.String user_name -> g
    java.lang.String create_time -> h
    int pay_status -> i
    java.lang.String transaction_id -> j
    java.lang.String opened -> k
    int pay_money -> l
    java.lang.String pay_time -> m
    void setId(int) -> a
    java.lang.String getOrder_nu() -> a
    void setOrder_nu(java.lang.String) -> a
    void setUid(int) -> b
    void setMlsid(int) -> c
    void setMls_name(java.lang.String) -> b
    void setMls_price(int) -> d
    void setUser_name(java.lang.String) -> c
    void setCreate_time(java.lang.String) -> d
    int getPay_status() -> b
    void setPay_status(int) -> e
    void setTransaction_id(java.lang.String) -> e
    void setOpened(java.lang.String) -> f
    void setPay_money(int) -> f
    void setPay_time(java.lang.String) -> g
com.fox.exercise.newversion.entity.YePaoInfo -> k.ad:
    int id -> a
    java.lang.String order_nu -> b
    int uid -> c
    int mlsid -> d
    int mls_name -> e
    int mls_price -> f
    java.lang.String user_name -> g
    void setId(int) -> a
    java.lang.String getOrder_nu() -> a
    void setOrder_nu(java.lang.String) -> a
    void setUid(int) -> b
    void setMlsid(int) -> c
    void setMls_name(int) -> d
    void setMls_price(int) -> e
    void setUser_name(java.lang.String) -> b
com.fox.exercise.newversion.newact.CelebrationMainActivity -> com.fox.exercise.newversion.newact.CelebrationMainActivity:
    java.lang.String APP_CACAHE_DIRNAME -> n
    android.webkit.WebView webView -> o
    android.widget.LinearLayout lodingLayout -> p
    java.lang.String Url -> q
    java.lang.String shareurl -> r
    android.widget.ImageView share_icon -> s
    android.widget.PopupWindow mSportWindow -> t
    com.tencent.mm.sdk.openapi.IWXAPI api -> u
    int GETIMAGE_SUCCESS -> k
    int DLFINISH -> l
    int DLFAIL -> m
    android.content.SharedPreferences spf -> v
    com.fox.exercise.util.ImageFileUtil imageFileUtil -> w
    java.lang.String imagename -> x
    com.fox.exercise.ImageDownloader mDownloader -> y
    android.os.Handler mHandler -> z
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void loadWebView() -> g
    void clearWebViewCache() -> f
    void deleteFile(java.io.File) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void showSportWindow() -> h
    void shareToWeixin(int) -> b
    void share2weixin(int) -> c
    void access$0(com.fox.exercise.newversion.newact.CelebrationMainActivity,android.content.SharedPreferences) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.newversion.newact.CelebrationMainActivity) -> a
    android.content.SharedPreferences access$2(com.fox.exercise.newversion.newact.CelebrationMainActivity) -> b
    android.os.Handler access$3(com.fox.exercise.newversion.newact.CelebrationMainActivity) -> c
    android.widget.LinearLayout access$4(com.fox.exercise.newversion.newact.CelebrationMainActivity) -> d
    com.fox.exercise.util.ImageFileUtil access$5(com.fox.exercise.newversion.newact.CelebrationMainActivity) -> e
    java.lang.String access$6(com.fox.exercise.newversion.newact.CelebrationMainActivity) -> f
    void access$8(com.fox.exercise.newversion.newact.CelebrationMainActivity) -> g
    android.widget.PopupWindow access$9(com.fox.exercise.newversion.newact.CelebrationMainActivity) -> h
    void access$10(com.fox.exercise.newversion.newact.CelebrationMainActivity,int) -> a
com.fox.exercise.newversion.newact.CelebrationMainActivity$1 -> com.fox.exercise.newversion.newact.a:
    com.fox.exercise.newversion.newact.CelebrationMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.newversion.newact.CelebrationMainActivity access$0(com.fox.exercise.newversion.newact.CelebrationMainActivity$1) -> a
com.fox.exercise.newversion.newact.CelebrationMainActivity$1$1 -> com.fox.exercise.newversion.newact.b:
    com.fox.exercise.newversion.newact.CelebrationMainActivity$1 this$1 -> a
    java.util.ArrayList val$list_bitmap_path_upload -> b
    void run() -> run
com.fox.exercise.newversion.newact.CelebrationMainActivity$1$2 -> com.fox.exercise.newversion.newact.c:
    com.fox.exercise.newversion.newact.CelebrationMainActivity$1 this$1 -> a
    com.fox.exercise.api.ApiBack val$apiBack -> b
    void run() -> run
com.fox.exercise.newversion.newact.CelebrationMainActivity$2 -> com.fox.exercise.newversion.newact.d:
    com.fox.exercise.newversion.newact.CelebrationMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.CelebrationMainActivity$3 -> com.fox.exercise.newversion.newact.e:
    com.fox.exercise.newversion.newact.CelebrationMainActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.fox.exercise.newversion.newact.CelebrationMainActivity$4 -> com.fox.exercise.newversion.newact.f:
    com.fox.exercise.newversion.newact.CelebrationMainActivity this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.fox.exercise.newversion.newact.CelebrationMainActivity$5 -> com.fox.exercise.newversion.newact.g:
    com.fox.exercise.newversion.newact.CelebrationMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.newact.CelebrationMainActivity access$0(com.fox.exercise.newversion.newact.CelebrationMainActivity$5) -> a
com.fox.exercise.newversion.newact.CelebrationMainActivity$5$1 -> com.fox.exercise.newversion.newact.h:
    com.fox.exercise.newversion.newact.CelebrationMainActivity$5 this$1 -> a
    void run() -> run
com.fox.exercise.newversion.newact.CelebrationMainActivity$6 -> com.fox.exercise.newversion.newact.i:
    com.fox.exercise.newversion.newact.CelebrationMainActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.newversion.newact.CelebrationMainActivity$RightClickLiser -> com.fox.exercise.newversion.newact.j:
    com.fox.exercise.newversion.newact.CelebrationMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.NewCommentsActivity -> com.fox.exercise.newversion.newact.NewCommentsActivity:
    cn.ingenic.indroidsync.SportsApp mSportsApp -> a
    android.widget.Button btBack -> b
    android.widget.ListView mListView -> c
    java.util.List listFM -> d
    com.fox.exercise.newversion.entity.FindGroup fm -> e
    java.lang.String findId -> f
    com.fox.exercise.CommentListAdapter mAdapter -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.newversion.newact.NewCommentsActivity) -> a
    void access$1(com.fox.exercise.newversion.newact.NewCommentsActivity,java.util.List) -> a
    java.util.List access$2(com.fox.exercise.newversion.newact.NewCommentsActivity) -> b
    void access$3(com.fox.exercise.newversion.newact.NewCommentsActivity,com.fox.exercise.CommentListAdapter) -> a
    android.widget.ListView access$4(com.fox.exercise.newversion.newact.NewCommentsActivity) -> c
    com.fox.exercise.CommentListAdapter access$5(com.fox.exercise.newversion.newact.NewCommentsActivity) -> d
    java.lang.String access$6(com.fox.exercise.newversion.newact.NewCommentsActivity) -> e
    void access$9(com.fox.exercise.newversion.newact.NewCommentsActivity,java.lang.String) -> a
com.fox.exercise.newversion.newact.NewCommentsActivity$1 -> com.fox.exercise.newversion.newact.k:
    com.fox.exercise.newversion.newact.NewCommentsActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.newact.NewCommentsActivity$2 -> com.fox.exercise.newversion.newact.l:
    com.fox.exercise.newversion.newact.NewCommentsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.NewCommentsActivity$GetNewCommnetListTask -> com.fox.exercise.newversion.newact.m:
    com.fox.exercise.newversion.newact.NewCommentsActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.newact.NewGuanZhuActivity -> com.fox.exercise.newversion.newact.NewGuanZhuActivity:
    android.support.v4.view.ViewPager mPager -> x
    java.util.ArrayList fragmentList -> y
    int mSelectionPosition -> z
    android.widget.TextView[] tViews -> A
    android.widget.ImageButton iView -> B
    android.graphics.drawable.Drawable[] iDrawables -> C
    android.widget.Button sinxin_num -> D
    cn.ingenic.indroidsync.SportsApp fSportsApp -> E
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> F
    android.os.Handler fHandler -> w
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void InitViewPager() -> g
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.widget.Button access$0(com.fox.exercise.newversion.newact.NewGuanZhuActivity) -> a
    cn.ingenic.indroidsync.SportsApp access$1(com.fox.exercise.newversion.newact.NewGuanZhuActivity) -> b
    com.fox.exercise.SportsExceptionHandler access$11(com.fox.exercise.newversion.newact.NewGuanZhuActivity) -> c
com.fox.exercise.newversion.newact.NewGuanZhuActivity$1 -> com.fox.exercise.newversion.newact.n:
    com.fox.exercise.newversion.newact.NewGuanZhuActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.newact.NewGuanZhuActivity$2 -> com.fox.exercise.newversion.newact.o:
    com.fox.exercise.newversion.newact.NewGuanZhuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.NewGuanZhuActivity$GetUserNameThread -> com.fox.exercise.newversion.newact.p:
    com.fox.exercise.newversion.newact.NewGuanZhuActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NewGuanZhuActivity$MyFragmentPagerAdapter -> com.fox.exercise.newversion.newact.q:
    java.util.ArrayList list -> a
    com.fox.exercise.newversion.newact.NewGuanZhuActivity this$0 -> b
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.fox.exercise.newversion.newact.NewGuanZhuActivity$rightOnClickListener -> com.fox.exercise.newversion.newact.r:
    int index -> b
    com.fox.exercise.newversion.newact.NewGuanZhuActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.NewRanksActivity -> com.fox.exercise.newversion.newact.NewRanksActivity:
    android.support.v4.view.ViewPager mPager_sub -> y
    int currIndex_sub -> z
    int sex -> w
    android.app.ProgressDialog mypDialog -> A
    android.widget.TextView title_week -> B
    android.widget.TextView title_month -> C
    android.widget.GridView listView -> D
    com.fox.exercise.view.PullToRefreshGridView mPullRefreshGridView -> E
    android.app.Dialog mProgressDialog -> F
    java.util.Map persistUserRanks -> G
    java.util.Map loadTimesIndex -> H
    com.fox.exercise.SportExceptionHandler mExceptionHandler -> I
    android.widget.TextView mydate -> J
    long preTime -> K
    android.widget.ImageView image -> L
    int mMoveSize -> M
    java.util.ArrayList fragmentList -> N
    cn.ingenic.indroidsync.SportsApp mSportsApp -> x
    android.content.Context mContext -> O
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void InitImage() -> i
    void initProgressDialog() -> j
    void InitViewPager() -> g
    void initSubCoursor() -> k
    java.lang.String getDateOfYesterday() -> h
    void showProgressDialog(boolean) -> b
    void onClick(android.view.View) -> onClick
    int access$0(com.fox.exercise.newversion.newact.NewRanksActivity) -> a
    int access$1(com.fox.exercise.newversion.newact.NewRanksActivity) -> b
    android.widget.ImageView access$2(com.fox.exercise.newversion.newact.NewRanksActivity) -> c
    android.widget.TextView access$3(com.fox.exercise.newversion.newact.NewRanksActivity) -> d
    android.widget.TextView access$4(com.fox.exercise.newversion.newact.NewRanksActivity) -> e
    void access$5(com.fox.exercise.newversion.newact.NewRanksActivity,int) -> a
    android.support.v4.view.ViewPager access$6(com.fox.exercise.newversion.newact.NewRanksActivity) -> f
    com.fox.exercise.SportExceptionHandler access$7(com.fox.exercise.newversion.newact.NewRanksActivity) -> g
    android.app.ProgressDialog access$8(com.fox.exercise.newversion.newact.NewRanksActivity) -> h
com.fox.exercise.newversion.newact.NewRanksActivity$1 -> com.fox.exercise.newversion.newact.s:
    com.fox.exercise.newversion.newact.NewRanksActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.fox.exercise.newversion.newact.NewRanksActivity$GetUserNameThread -> com.fox.exercise.newversion.newact.t:
    com.fox.exercise.newversion.newact.NewRanksActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NewRanksActivity$MyOnClickListener_sub -> com.fox.exercise.newversion.newact.u:
    int index -> b
    com.fox.exercise.newversion.newact.NewRanksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.NewRanksActivity$MyOnPageChangeListener_sub -> com.fox.exercise.newversion.newact.v:
    com.fox.exercise.newversion.newact.NewRanksActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.fox.exercise.newversion.newact.NewRanksActivity$MyPagerAdapter -> com.fox.exercise.newversion.newact.w:
    java.util.ArrayList list -> a
    com.fox.exercise.newversion.newact.NewRanksActivity this$0 -> b
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity -> com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity:
    com.baidu.mapapi.map.MapView mMapView -> C
    com.baidu.mapapi.map.BaiduMap aMap -> D
    com.baidu.location.LocationClient mLocClient -> E
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$MyLocationListenner myListener -> w
    com.baidu.mapapi.map.Marker mMarkerView -> F
    com.baidu.mapapi.map.UiSettings mUiSettings -> G
    android.content.Context mContext -> H
    com.baidu.mapapi.map.MarkerOptions mMarkerOpStart -> I
    int times -> J
    com.fox.exercise.view.PullToRefreshListView mPullListView -> K
    android.widget.ListView mListView -> L
    com.fox.exercise.NearByListViewAdapter mAdapter -> M
    android.app.Dialog loadProgressDialog -> N
    android.widget.TextView mDialogMessage -> O
    android.view.View rootView -> P
    boolean startAddMore -> Q
    java.util.ArrayList mList -> R
    java.util.List mNearbayView -> S
    java.util.List mNearbayMark -> T
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$NearByHandler mhandler -> U
    boolean nearbyBool -> V
    com.fox.exercise.api.entity.UserDetail self -> W
    cn.ingenic.indroidsync.SportsApp mSportsApp -> X
    android.widget.EditText sports_nearby_edittext -> Y
    java.lang.String editname -> Z
    int mSearchNearByName -> aa
    int SEARCH_BASIC -> ab
    int SEARCH_NAME -> ac
    int edittextCnt -> ad
    long preTime -> ae
    boolean initSuccess -> af
    boolean uploadLocSuccess -> ag
    int sex -> ah
    android.widget.PopupWindow mPopWindow -> x
    com.fox.exercise.view.SwitchView switch_MAIN -> ai
    android.widget.RelativeLayout nearbyMap -> aj
    int mapNum -> y
    com.fox.exercise.SportExceptionHandler mExceptionHandler -> ak
    int threadNum -> z
    android.text.TextWatcher nearby_edittextChangedListener -> al
    android.widget.AdapterView$OnItemClickListener listViewClick -> am
    int count -> A
    int netError -> B
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void onStop() -> onStop
    void init() -> g
    void onClick(android.view.View) -> onClick
    void initlocation() -> h
    void onActivityCreatedNearby() -> i
    void animateTo(com.baidu.mapapi.model.LatLng) -> a
    void loadMapData() -> j
    void nearbyMarkerOptions() -> k
    android.widget.EditText access$0(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> a
    void access$1(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,java.lang.String) -> a
    java.lang.String access$2(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> b
    int access$3(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> c
    void access$4(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,int) -> a
    void access$5(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,int) -> b
    void access$6(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,int) -> c
    void access$7(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,boolean) -> a
    android.app.Dialog access$8(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> d
    cn.ingenic.indroidsync.SportsApp access$9(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> e
    com.fox.exercise.SportExceptionHandler access$10(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> f
    boolean access$11(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> g
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$NearByHandler access$12(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> h
    void access$13(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,boolean) -> b
    int access$14(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> i
    int access$15(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> j
    com.fox.exercise.api.entity.UserDetail access$16(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> k
    int access$17(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> l
    java.util.ArrayList access$18(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> m
    void access$19(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,boolean) -> c
    java.lang.String access$20(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> n
    android.widget.ListView access$21(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> o
    android.content.Context access$22(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> p
    void access$23(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,com.fox.exercise.NearByListViewAdapter) -> a
    com.fox.exercise.NearByListViewAdapter access$24(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> q
    com.fox.exercise.view.PullToRefreshListView access$25(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> r
    boolean access$26(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> s
    void access$27(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,boolean) -> d
    android.widget.TextView access$28(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> t
    boolean access$29(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> u
    java.util.List access$30(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> v
    java.util.List access$31(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> w
    void access$32(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> x
    void access$33(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,com.baidu.mapapi.map.MarkerOptions) -> a
    com.baidu.mapapi.map.BaiduMap access$34(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> y
    com.baidu.mapapi.map.MarkerOptions access$35(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> z
    void access$36(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity,com.baidu.mapapi.model.LatLng) -> a
    android.widget.RelativeLayout access$37(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> A
    void access$38(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> B
    android.view.View access$39(com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity) -> C
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$1 -> com.fox.exercise.newversion.newact.x:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$2 -> com.fox.exercise.newversion.newact.y:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$3 -> com.fox.exercise.newversion.newact.z:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$4 -> com.fox.exercise.newversion.newact.aa:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void onCheckedChanged(boolean) -> a
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$5 -> com.fox.exercise.newversion.newact.ab:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void onMapLoaded() -> onMapLoaded
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$6 -> com.fox.exercise.newversion.newact.ac:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void onMapLoaded() -> onMapLoaded
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$7 -> com.fox.exercise.newversion.newact.ad:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$GetNearByThread -> com.fox.exercise.newversion.newact.ae:
    long startTime -> b
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$GetUserNameThread -> com.fox.exercise.newversion.newact.af:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$MapNearByThread -> com.fox.exercise.newversion.newact.ag:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$MyLocationListenner -> com.fox.exercise.newversion.newact.ah:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity$NearByHandler -> com.fox.exercise.newversion.newact.ai:
    com.fox.exercise.newversion.newact.NewYuePaoBaiDuActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity -> com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity:
    com.amap.api.maps.UiSettings mUiSettings -> A
    com.amap.api.maps.AMap aMap -> B
    com.amap.api.maps.SupportMapFragment mapFragment -> C
    com.amap.api.maps.model.Marker mMarkerView -> D
    android.content.Context mContext -> E
    com.amap.api.maps.model.MarkerOptions mMarkerOpStart -> F
    int times -> G
    com.fox.exercise.view.PullToRefreshListView mPullListView -> H
    android.widget.ListView mListView -> I
    com.fox.exercise.NearByListViewAdapter mAdapter -> J
    android.app.Dialog loadProgressDialog -> K
    android.widget.TextView mDialogMessage -> L
    android.view.View rootView -> M
    boolean startAddMore -> N
    java.util.List mNearbayView -> O
    java.util.List mNearbayMark -> P
    java.util.ArrayList mList -> Q
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$NearByHandler mhandler -> R
    boolean nearbyBool -> S
    com.fox.exercise.api.entity.UserDetail self -> T
    cn.ingenic.indroidsync.SportsApp mSportsApp -> U
    android.widget.EditText sports_nearby_edittext -> V
    java.lang.String editname -> W
    int mSearchNearByName -> X
    int SEARCH_BASIC -> Y
    int SEARCH_NAME -> Z
    int edittextCnt -> aa
    long preTime -> ab
    boolean initSuccess -> ac
    boolean uploadLocSuccess -> ad
    int sex -> ae
    android.widget.PopupWindow mPopWindow -> w
    com.fox.exercise.view.SwitchView switch_MAIN -> af
    android.widget.RelativeLayout nearbyMap -> ag
    int mapNum -> x
    android.app.Dialog mLoadProgressDialog -> y
    com.fox.exercise.SportExceptionHandler mExceptionHandler -> ah
    int threadNum -> z
    android.text.TextWatcher nearby_edittextChangedListener -> ai
    android.widget.AdapterView$OnItemClickListener listViewClick -> aj
    int num -> ak
    int count -> al
    int netError -> am
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void init() -> g
    void initMap() -> h
    void loadMapData() -> j
    void nearbyMarkerOptions() -> k
    void onClick(android.view.View) -> onClick
    void initlocation() -> i
    void animateTo(com.amap.api.maps.model.LatLng) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.widget.EditText access$0(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> a
    void access$1(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity,java.lang.String) -> a
    java.lang.String access$2(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> b
    int access$3(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> c
    void access$4(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity,int) -> a
    void access$5(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity,int) -> b
    void access$6(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity,int) -> c
    void access$7(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity,boolean) -> a
    android.app.Dialog access$8(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> d
    boolean access$9(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> e
    java.util.List access$10(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> f
    java.util.List access$11(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> g
    void access$12(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> h
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$NearByHandler access$13(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> i
    boolean access$14(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> j
    cn.ingenic.indroidsync.SportsApp access$15(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> k
    void access$16(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity,boolean) -> b
    int access$17(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> l
    int access$18(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> m
    com.fox.exercise.api.entity.UserDetail access$19(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> n
    int access$20(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> o
    java.util.ArrayList access$21(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> p
    void access$22(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity,boolean) -> c
    android.widget.ListView access$23(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> q
    android.content.Context access$24(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> r
    void access$25(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity,com.fox.exercise.NearByListViewAdapter) -> a
    com.fox.exercise.NearByListViewAdapter access$26(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> s
    com.fox.exercise.view.PullToRefreshListView access$27(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> t
    boolean access$28(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> u
    void access$29(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity,boolean) -> d
    android.widget.TextView access$30(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> v
    com.fox.exercise.SportExceptionHandler access$41(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> w
    android.widget.RelativeLayout access$42(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> x
    void access$43(com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity) -> y
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$1 -> com.fox.exercise.newversion.newact.aj:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$2 -> com.fox.exercise.newversion.newact.ak:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$3 -> com.fox.exercise.newversion.newact.al:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$4 -> com.fox.exercise.newversion.newact.am:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void onCheckedChanged(boolean) -> a
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$5 -> com.fox.exercise.newversion.newact.an:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void onMapLoaded() -> onMapLoaded
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$6 -> com.fox.exercise.newversion.newact.ao:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$7 -> com.fox.exercise.newversion.newact.ap:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void onMapClick(com.amap.api.maps.model.LatLng) -> onMapClick
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$GetNearByThread -> com.fox.exercise.newversion.newact.aq:
    long startTime -> b
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$GetUserNameThread -> com.fox.exercise.newversion.newact.ar:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$MapNearByThread -> com.fox.exercise.newversion.newact.as:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity$NearByHandler -> com.fox.exercise.newversion.newact.at:
    com.fox.exercise.newversion.newact.NewYuePaoGaoDeActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.newact.NightRunWebViewActivity -> com.fox.exercise.newversion.newact.NightRunWebViewActivity:
    com.fox.exercise.newversion.entity.WXxdback wb -> r
    com.fox.exercise.newversion.entity.WXxdback wbpay -> s
    android.webkit.WebView webView -> t
    android.widget.LinearLayout lodingLayout -> u
    com.fox.exercise.SportsExceptionHandler mExceptionHandler -> v
    android.widget.TextView money_rule -> w
    int biaoshi -> k
    com.fox.exercise.newversion.entity.ExternalActivi exActivi -> x
    java.lang.String uus -> y
    java.lang.String texturi -> z
    android.widget.LinearLayout mls_fl -> A
    android.widget.Button mls_btnpay -> B
    com.fox.exercise.newversion.entity.YePaoInfo yp -> C
    com.tencent.mm.sdk.openapi.IWXAPI msgApi -> l
    com.tencent.mm.sdk.modelpay.PayReq req -> m
    java.lang.String ip -> D
    java.lang.String entity -> E
    java.lang.String type -> F
    java.lang.String sjzf -> G
    java.lang.String wxurl -> n
    java.lang.String sessionid -> o
    java.lang.String numid -> p
    int returnFlg -> H
    android.app.Dialog mLoadProgressDialog -> I
    android.os.Handler mHandler -> J
    java.lang.StringBuffer xml -> q
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void Data() -> f
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void loadWebView() -> i
    void clearWebViewCache() -> g
    void deleteFile(java.io.File) -> a
    java.lang.String toXml(java.util.List) -> a
    java.lang.String genProductArgs() -> j
    void waitShowDialog() -> k
    java.lang.String genNonceStr() -> l
    void genPayReq() -> m
    void sendPayReq() -> n
    java.lang.String getLocalHostIp() -> h
    void access$0(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> a
    android.widget.LinearLayout access$1(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> b
    android.webkit.WebView access$2(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> c
    java.lang.String access$3(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> d
    void access$4(com.fox.exercise.newversion.newact.NightRunWebViewActivity,int) -> a
    android.app.Dialog access$5(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> e
    void access$6(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> f
    cn.ingenic.indroidsync.SportsApp access$7(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> g
    com.fox.exercise.SportsExceptionHandler access$8(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> h
    com.fox.exercise.newversion.entity.ExternalActivi access$9(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> i
    void access$10(com.fox.exercise.newversion.newact.NightRunWebViewActivity,com.fox.exercise.newversion.entity.YePaoInfo) -> a
    java.lang.String access$11(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> j
    com.fox.exercise.newversion.entity.YePaoInfo access$12(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> k
    java.lang.String access$13(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> l
    java.lang.String access$14(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> m
    void access$15(com.fox.exercise.newversion.newact.NightRunWebViewActivity,com.fox.exercise.newversion.entity.WXxdback) -> a
    java.lang.String access$16(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> n
    void access$17(com.fox.exercise.newversion.newact.NightRunWebViewActivity,java.lang.String) -> a
    java.lang.String access$18(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> o
    void access$19(com.fox.exercise.newversion.newact.NightRunWebViewActivity,com.fox.exercise.newversion.entity.WXxdback) -> b
    android.os.Handler access$20(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> p
    void access$21(com.fox.exercise.newversion.newact.NightRunWebViewActivity,java.lang.String) -> b
    java.lang.String access$22(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> q
    android.widget.LinearLayout access$23(com.fox.exercise.newversion.newact.NightRunWebViewActivity) -> r
com.fox.exercise.newversion.newact.NightRunWebViewActivity$1 -> com.fox.exercise.newversion.newact.au:
    com.fox.exercise.newversion.newact.NightRunWebViewActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.newact.NightRunWebViewActivity$2 -> com.fox.exercise.newversion.newact.av:
    com.fox.exercise.newversion.newact.NightRunWebViewActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NightRunWebViewActivity$3 -> com.fox.exercise.newversion.newact.aw:
    com.fox.exercise.newversion.newact.NightRunWebViewActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.fox.exercise.newversion.newact.NightRunWebViewActivity$4 -> com.fox.exercise.newversion.newact.ax:
    com.fox.exercise.newversion.newact.NightRunWebViewActivity this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.fox.exercise.newversion.newact.NightRunWebViewActivity$GetUserNameThread -> com.fox.exercise.newversion.newact.ay:
    com.fox.exercise.newversion.newact.NightRunWebViewActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.newact.NightRunWebViewActivity$RightClickLiser -> com.fox.exercise.newversion.newact.az:
    com.fox.exercise.newversion.newact.NightRunWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.NightRunWebViewActivity$clickListener -> com.fox.exercise.newversion.newact.ba:
    com.fox.exercise.newversion.newact.NightRunWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.NightRunWebViewActivity$payListener -> com.fox.exercise.newversion.newact.bb:
    com.fox.exercise.newversion.newact.NightRunWebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.ShareDialogMainActivity -> com.fox.exercise.newversion.newact.ShareDialogMainActivity:
    android.widget.GridView mGridView -> k
    int[] myDjsImage -> l
    cn.ingenic.indroidsync.SportsApp mSportsApp -> m
    android.app.Activity mContext -> n
    com.fox.exercise.newversion.entity.FindGroup findGroup -> o
    com.tencent.tauth.Tencent mTencent -> p
    com.tencent.mm.sdk.openapi.IWXAPI api -> q
    com.fox.exercise.ImageDownloader mDownloader -> r
    android.widget.TextView share_cacle_txt -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onCancel() -> h
    void onComplete(java.lang.Object) -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onClickShare() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void shareToWeixin(int) -> a
    void share2weixin(int) -> b
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    int[] access$0(com.fox.exercise.newversion.newact.ShareDialogMainActivity) -> a
    void access$1(com.fox.exercise.newversion.newact.ShareDialogMainActivity) -> b
    void access$2(com.fox.exercise.newversion.newact.ShareDialogMainActivity,int) -> a
com.fox.exercise.newversion.newact.ShareDialogMainActivity$1 -> com.fox.exercise.newversion.newact.bc:
    com.fox.exercise.newversion.newact.ShareDialogMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.ShareDialogMainActivity$2 -> com.fox.exercise.newversion.newact.bd:
    com.fox.exercise.newversion.newact.ShareDialogMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.newact.ShareDialogMainActivity$MyAdapter -> com.fox.exercise.newversion.newact.be:
    android.view.LayoutInflater mInflater -> c
    java.lang.String[] stringArray -> a
    com.fox.exercise.newversion.newact.ShareDialogMainActivity this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.newact.ShareDialogMainActivity$ShareClicklistner -> com.fox.exercise.newversion.newact.bf:
    int position -> b
    com.fox.exercise.newversion.newact.ShareDialogMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.newact.ShareDialogMainActivity$ViewHolder -> com.fox.exercise.newversion.newact.bg:
    android.widget.TextView txt -> a
    android.widget.ImageView img -> b
    com.fox.exercise.newversion.newact.ShareDialogMainActivity this$0 -> c
com.fox.exercise.newversion.newact.ZanListUserActivity -> com.fox.exercise.newversion.newact.ZanListUserActivity:
    android.app.Dialog mLoadProgressDialog -> w
    android.content.Context mcontext -> x
    com.fox.exercise.view.PullToRefreshListView mPullSearchListView -> y
    android.widget.ListView mListView -> z
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter addFriendAdapter -> A
    java.util.ArrayList mList -> B
    cn.ingenic.indroidsync.SportsApp mSportsApp -> C
    int times -> D
    boolean mIsAddTask -> E
    boolean mIsRefreshing -> F
    com.fox.exercise.newversion.newact.ZanListUserActivity$AddFriendTask task -> G
    int find_id -> H
    int uid -> I
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void startAddTask() -> g
    void cancelAndStartTask() -> h
    void init() -> i
    void waitShow() -> j
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.newversion.newact.ZanListUserActivity) -> a
    int access$1(com.fox.exercise.newversion.newact.ZanListUserActivity) -> b
    int access$2(com.fox.exercise.newversion.newact.ZanListUserActivity) -> c
    int access$3(com.fox.exercise.newversion.newact.ZanListUserActivity) -> d
    java.util.ArrayList access$4(com.fox.exercise.newversion.newact.ZanListUserActivity) -> e
    com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter access$5(com.fox.exercise.newversion.newact.ZanListUserActivity) -> f
    android.content.Context access$6(com.fox.exercise.newversion.newact.ZanListUserActivity) -> g
    void access$7(com.fox.exercise.newversion.newact.ZanListUserActivity,com.fox.exercise.newversion.adapter.ShowLikeListViewAdapter) -> a
    android.widget.ListView access$8(com.fox.exercise.newversion.newact.ZanListUserActivity) -> h
    com.fox.exercise.view.PullToRefreshListView access$9(com.fox.exercise.newversion.newact.ZanListUserActivity) -> i
    android.app.Dialog access$10(com.fox.exercise.newversion.newact.ZanListUserActivity) -> j
    void access$11(com.fox.exercise.newversion.newact.ZanListUserActivity,boolean) -> a
    void access$12(com.fox.exercise.newversion.newact.ZanListUserActivity,boolean) -> b
    boolean access$13(com.fox.exercise.newversion.newact.ZanListUserActivity) -> k
    void access$14(com.fox.exercise.newversion.newact.ZanListUserActivity,int) -> a
    void access$15(com.fox.exercise.newversion.newact.ZanListUserActivity) -> l
com.fox.exercise.newversion.newact.ZanListUserActivity$1 -> com.fox.exercise.newversion.newact.bh:
    com.fox.exercise.newversion.newact.ZanListUserActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.newact.ZanListUserActivity$AddFriendTask -> com.fox.exercise.newversion.newact.bi:
    com.fox.exercise.newversion.newact.ZanListUserActivity this$0 -> a
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.trainingplan.DownloadRoundProgressBar -> com.fox.exercise.newversion.trainingplan.DownloadRoundProgressBar:
    android.graphics.Paint paint -> a
    int roundColor -> b
    int roundProgressColor -> c
    int textColor -> d
    float textSize -> e
    float roundWidth -> f
    int max -> g
    int progress -> h
    boolean textIsDisplayable -> i
    int style -> j
    void onDraw(android.graphics.Canvas) -> onDraw
    int getMax() -> getMax
    void setMax(int) -> setMax
    int getProgress() -> getProgress
    void setProgress(int,java.lang.String,java.lang.String) -> a
    int getCricleColor() -> getCricleColor
    void setCricleColor(int) -> setCricleColor
    int getCricleProgressColor() -> getCricleProgressColor
    void setCricleProgressColor(int) -> setCricleProgressColor
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getRoundWidth() -> getRoundWidth
    void setRoundWidth(float) -> setRoundWidth
com.fox.exercise.newversion.trainingplan.FileDownload -> com.fox.exercise.newversion.trainingplan.a:
    java.lang.String TAG -> a
    java.io.InputStream is -> b
    java.io.FileOutputStream fos -> c
    java.io.File file -> d
    java.lang.String urlstr -> e
    java.lang.String sdcard -> f
    java.net.HttpURLConnection urlcon -> g
    boolean cancelDownload -> h
    java.net.HttpURLConnection getConnection() -> c
    int getLength() -> a
    int down2sd(java.lang.String,java.lang.String,com.fox.exercise.newversion.trainingplan.FileDownload$downhandler) -> a
    void cancelDownload() -> b
com.fox.exercise.newversion.trainingplan.FileDownload$downhandler -> com.fox.exercise.newversion.trainingplan.b:
    com.fox.exercise.newversion.trainingplan.FileDownload this$0 -> a
    void setSize(int) -> a
com.fox.exercise.newversion.trainingplan.FileDownloadActivity -> com.fox.exercise.newversion.trainingplan.FileDownloadActivity:
    android.widget.TextView download_label -> b
    android.widget.ProgressBar download_bar -> c
    java.lang.String dir -> d
    java.lang.String url -> e
    java.lang.String downLoadPath -> f
    java.lang.String fileName -> g
    com.fox.exercise.ImageDownloader bg_Downloader -> h
    android.widget.ImageView iv_background -> i
    android.widget.RelativeLayout RelativeLayout1 -> j
    android.os.Handler handler -> a
    void onCreate(android.os.Bundle) -> onCreate
    int upZipFile(java.lang.String,java.lang.String) -> a
    java.io.File getRealFileName(java.lang.String,java.lang.String) -> b
    android.widget.ProgressBar access$0(com.fox.exercise.newversion.trainingplan.FileDownloadActivity) -> a
    android.widget.TextView access$1(com.fox.exercise.newversion.trainingplan.FileDownloadActivity) -> b
    java.lang.String access$2(com.fox.exercise.newversion.trainingplan.FileDownloadActivity) -> c
    java.lang.String access$3(com.fox.exercise.newversion.trainingplan.FileDownloadActivity) -> d
    java.lang.String access$4(com.fox.exercise.newversion.trainingplan.FileDownloadActivity) -> e
    java.lang.String access$5(com.fox.exercise.newversion.trainingplan.FileDownloadActivity) -> f
com.fox.exercise.newversion.trainingplan.FileDownloadActivity$1 -> com.fox.exercise.newversion.trainingplan.c:
    com.fox.exercise.newversion.trainingplan.FileDownloadActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.trainingplan.FileDownloadActivity$2 -> com.fox.exercise.newversion.trainingplan.d:
    com.fox.exercise.newversion.trainingplan.FileDownloadActivity this$0 -> a
    void run() -> run
    com.fox.exercise.newversion.trainingplan.FileDownloadActivity access$0(com.fox.exercise.newversion.trainingplan.FileDownloadActivity$2) -> a
com.fox.exercise.newversion.trainingplan.FileDownloadActivity$2$1 -> com.fox.exercise.newversion.trainingplan.e:
    com.fox.exercise.newversion.trainingplan.FileDownloadActivity$2 this$1 -> b
    void setSize(int) -> a
com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg -> com.fox.exercise.newversion.trainingplan.f:
    android.view.View view -> l
    com.fox.exercise.view.PullToRefreshListView mPullSearchListView -> m
    android.widget.ListView mListView -> n
    cn.ingenic.indroidsync.SportsApp mSportsApp -> o
    int times -> p
    java.util.ArrayList mlist -> q
    int FRESH_LIST -> r
    int FRESH_FAILED -> s
    int FRESH_NULL -> t
    int HEAD_ID -> u
    com.fox.exercise.newversion.adapter.TrainPlanListAdapter mAdapter -> v
    android.widget.ImageView bind_device_text -> w
    android.widget.TextView tipNumtx -> x
    android.view.View head_view -> y
    android.widget.TextView yundong_cishu -> z
    android.widget.TextView yundong_laluli -> A
    android.widget.TextView yundong_di_day -> B
    android.widget.TextView tv_xiaoshi_value -> C
    android.widget.TextView tv_fenzhong_value -> D
    android.os.Handler mHandler -> E
    void beforeInitView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void updateTip() -> h
    void setMsgbox(int) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void healthCount() -> i
    java.util.ArrayList access$0(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> a
    void access$1(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg,com.fox.exercise.newversion.adapter.TrainPlanListAdapter) -> a
    android.widget.ListView access$2(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> b
    com.fox.exercise.newversion.adapter.TrainPlanListAdapter access$3(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> c
    com.fox.exercise.view.PullToRefreshListView access$4(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> d
    android.widget.TextView access$5(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> e
    android.widget.TextView access$6(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> f
    cn.ingenic.indroidsync.SportsApp access$7(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> g
    int access$8(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> h
    java.lang.String access$9(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> i
    android.os.Handler access$10(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> j
    void access$11(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg,int) -> a
    void access$12(com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg) -> k
com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg$1 -> com.fox.exercise.newversion.trainingplan.g:
    com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg$2 -> com.fox.exercise.newversion.trainingplan.h:
    com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg$3 -> com.fox.exercise.newversion.trainingplan.i:
    com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg$4 -> com.fox.exercise.newversion.trainingplan.j:
    com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg$5 -> com.fox.exercise.newversion.trainingplan.k:
    com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg this$0 -> a
    java.lang.String val$startTime -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg$GetTotalTrainTask -> com.fox.exercise.newversion.trainingplan.l:
    com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg this$0 -> a
    com.fox.exercise.api.ApiMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg$TrainPlanMoreThread -> com.fox.exercise.newversion.trainingplan.m:
    com.fox.exercise.newversion.trainingplan.IndexTrainPlanFrg this$0 -> a
    void run() -> run
com.fox.exercise.newversion.trainingplan.TrainCompleteActivity -> com.fox.exercise.newversion.trainingplan.TrainCompleteActivity:
    android.widget.Button btn_complete -> a
    com.fox.exercise.newversion.trainingplan.TrainPlanDataBase db -> b
    int uid -> c
    java.lang.String sessionId -> d
    int train_id -> e
    int traintime -> f
    int train_calorie -> g
    java.lang.String train_action -> h
    java.lang.String train_position -> i
    int train_completion -> j
    java.lang.String train_starttime -> k
    java.lang.String train_endtime -> l
    int is_total -> m
    java.lang.String unique_id -> n
    int is_upload -> o
    android.content.Intent mintent -> p
    com.fox.exercise.newversion.entity.TrainResultsInfo resultsInfo -> q
    android.widget.TextView train_time -> r
    android.widget.TextView train_posion -> s
    android.widget.TextView train_cal -> t
    int mNum -> u
    cn.ingenic.indroidsync.SportsApp msApp -> v
    android.os.Handler sportHandler -> w
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void uploadTrainTask(java.lang.String,int,int,double,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String) -> a
    void saveTrainTask(int,int,int,double,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,int) -> a
    void healthCount() -> b
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void access$0(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity,int) -> a
    int access$1(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> a
    int access$2(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> b
    int access$3(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> c
    int access$4(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> d
    int access$5(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> e
    java.lang.String access$6(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> f
    java.lang.String access$7(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> g
    int access$8(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> h
    java.lang.String access$9(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> i
    java.lang.String access$10(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> j
    int access$11(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> k
    void access$12(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity,int,int,int,double,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,int) -> a
    java.lang.String access$13(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> l
    java.lang.String access$14(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> m
    void access$15(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity,java.lang.String,int,int,double,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.os.Handler access$16(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> n
    void access$17(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity,com.fox.exercise.newversion.trainingplan.TrainPlanDataBase) -> a
    com.fox.exercise.newversion.trainingplan.TrainPlanDataBase access$18(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> o
    cn.ingenic.indroidsync.SportsApp access$19(com.fox.exercise.newversion.trainingplan.TrainCompleteActivity) -> p
com.fox.exercise.newversion.trainingplan.TrainCompleteActivity$1 -> com.fox.exercise.newversion.trainingplan.n:
    com.fox.exercise.newversion.trainingplan.TrainCompleteActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.trainingplan.TrainCompleteActivity$2 -> com.fox.exercise.newversion.trainingplan.o:
    com.fox.exercise.newversion.trainingplan.TrainCompleteActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.TrainCompleteActivity$3 -> com.fox.exercise.newversion.trainingplan.p:
    com.fox.exercise.newversion.trainingplan.TrainCompleteActivity this$0 -> a
    java.lang.String val$sessionId -> b
    int val$train_id -> c
    int val$traintime -> d
    double val$train_calorie -> e
    java.lang.String val$train_action -> f
    java.lang.String val$train_position -> g
    int val$train_completion -> h
    java.lang.String val$train_starttime -> i
    java.lang.String val$train_endtime -> j
    int val$is_total -> k
    java.lang.String val$unique_id -> l
    void run() -> run
com.fox.exercise.newversion.trainingplan.TrainCompleteActivity$4 -> com.fox.exercise.newversion.trainingplan.q:
    com.fox.exercise.newversion.trainingplan.TrainCompleteActivity this$0 -> a
    java.lang.String val$train_endtime -> b
    int val$uid -> c
    int val$train_id -> d
    int val$traintime -> e
    double val$train_calorie -> f
    java.lang.String val$train_action -> g
    java.lang.String val$train_position -> h
    int val$train_completion -> i
    java.lang.String val$train_starttime -> j
    int val$is_total -> k
    int val$is_upload -> l
    void run() -> run
com.fox.exercise.newversion.trainingplan.TrainCompleteActivity$5 -> com.fox.exercise.newversion.trainingplan.r:
    com.fox.exercise.newversion.trainingplan.TrainCompleteActivity this$0 -> a
    java.lang.String val$startTime -> b
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.trainingplan.TrainPlanDataBase -> com.fox.exercise.newversion.trainingplan.s:
    com.fox.exercise.newversion.trainingplan.TrainPlanDataBase mInstance -> b
    android.content.Context context -> c
    android.database.sqlite.SQLiteDatabase db -> d
    java.lang.String CREATE_TAB -> a
    com.fox.exercise.newversion.trainingplan.TrainPlanDataBase getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    int insert(android.content.ContentValues,java.lang.Boolean) -> a
    int update(android.content.ContentValues,int,java.lang.String,java.lang.Boolean,java.lang.String) -> a
    java.util.ArrayList getTasksList(int,int) -> a
    android.database.Cursor query(int,java.lang.String,java.lang.String) -> a
    void close() -> close
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity -> com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity:
    android.app.Dialog dialog -> x
    com.fox.exercise.newversion.trainingplan.FileDownload l -> y
    com.fox.exercise.newversion.entity.TrainPlanList trainPlanList -> z
    cn.ingenic.indroidsync.SportsApp mApp -> A
    com.fox.exercise.newversion.entity.TrainInfo mTrainInfo -> B
    android.widget.GridView mGridView -> C
    android.widget.GridView train_usergrid -> D
    android.widget.ImageView train_planimg -> E
    android.widget.Button ib_download_cancel -> F
    com.fox.exercise.ImageDownloader mDownloader -> G
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserGridAdapter trainUserGridAdapter -> H
    android.widget.LinearLayout trainicon_gridlayout -> I
    android.widget.TextView no_trainuser_txt -> J
    android.widget.TextView play_detailinfo -> K
    android.widget.ListView tarinuser_infolist -> L
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserListAdapter trainUserListAdapter -> M
    android.widget.Button startplay_btn -> N
    com.fox.exercise.newversion.trainingplan.DownloadRoundProgressBar startplay_probar -> O
    java.lang.String url -> P
    java.lang.String downLoadPath -> Q
    java.lang.String fileName -> R
    java.lang.String dir -> S
    android.widget.TextView num_train -> T
    android.widget.TextView time_train -> U
    android.widget.TextView train_userNum -> V
    boolean isDownLoad -> W
    int max -> X
    android.os.Handler mHandler -> Y
    android.os.Handler downloadHandler -> w
    void initIntentParam(android.content.Intent) -> a
    void initView() -> b
    void setViewStatus() -> c
    void onPageResume() -> d
    void onPagePause() -> e
    void onPageDestroy() -> f
    void setGridView() -> g
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int upZipFile(java.lang.String,java.lang.String) -> a
    java.io.File getRealFileName(java.lang.String,java.lang.String) -> b
    void access$0(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity,com.fox.exercise.newversion.entity.TrainInfo) -> a
    com.fox.exercise.newversion.entity.TrainInfo access$1(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> a
    com.fox.exercise.ImageDownloader access$2(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> b
    android.widget.ImageView access$3(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> c
    android.widget.TextView access$4(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> d
    void access$5(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> e
    android.widget.TextView access$6(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> f
    android.widget.LinearLayout access$7(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> g
    android.widget.ListView access$8(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> h
    android.widget.TextView access$9(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> i
    android.widget.TextView access$10(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> j
    void access$11(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity,com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserGridAdapter) -> a
    android.widget.GridView access$12(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> k
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserGridAdapter access$13(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> l
    void access$14(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity,com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserListAdapter) -> a
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserListAdapter access$15(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> m
    void access$16(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity,boolean) -> a
    com.fox.exercise.newversion.trainingplan.DownloadRoundProgressBar access$17(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> n
    com.fox.exercise.newversion.trainingplan.FileDownload access$18(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> o
    android.widget.Button access$19(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> p
    android.widget.Button access$20(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> q
    android.widget.TextView access$21(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> r
    java.lang.String access$22(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> s
    android.app.Dialog access$23(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> t
    void access$24(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity,android.app.Dialog) -> a
    java.lang.String access$25(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> u
    java.lang.String access$26(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> v
    java.lang.String access$27(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> w
    com.fox.exercise.newversion.entity.TrainPlanList access$28(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> x
    cn.ingenic.indroidsync.SportsApp access$29(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> y
    android.os.Handler access$30(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> z
    java.lang.String access$31(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> A
    void access$32(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity,com.fox.exercise.newversion.trainingplan.FileDownload) -> a
    void access$33(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity,int) -> a
    int access$34(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity) -> B
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$1 -> com.fox.exercise.newversion.trainingplan.t:
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$2 -> com.fox.exercise.newversion.trainingplan.u:
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$3 -> com.fox.exercise.newversion.trainingplan.v:
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$4 -> com.fox.exercise.newversion.trainingplan.w:
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$5 -> com.fox.exercise.newversion.trainingplan.x:
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$6 -> com.fox.exercise.newversion.trainingplan.y:
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$7 -> com.fox.exercise.newversion.trainingplan.z:
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> a
    void run() -> run
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity access$0(com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$7) -> a
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$7$1 -> com.fox.exercise.newversion.trainingplan.aa:
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$7 this$1 -> b
    void setSize(int) -> a
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$GridViewAdapter -> com.fox.exercise.newversion.trainingplan.ab:
    android.content.Context context -> a
    java.util.ArrayList actionlist -> b
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$GridViewAdapter$ViewHolder -> com.fox.exercise.newversion.trainingplan.ac:
    android.widget.ImageView mImg -> a
    android.widget.TextView traincount -> b
    android.widget.TextView trainplan_time -> c
    android.widget.TextView train_playname -> d
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$GridViewAdapter this$1 -> e
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$LoadThread -> com.fox.exercise.newversion.trainingplan.ad:
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserGridAdapter -> com.fox.exercise.newversion.trainingplan.ae:
    android.content.Context context -> a
    java.util.ArrayList userlist -> b
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserGridAdapter$ViewHolder -> com.fox.exercise.newversion.trainingplan.af:
    com.fox.exercise.util.RoundedImage mImg -> a
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserGridAdapter this$1 -> b
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserListAdapter -> com.fox.exercise.newversion.trainingplan.ag:
    android.content.Context context -> a
    java.util.ArrayList userlist -> b
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserListAdapter$ViewHolder -> com.fox.exercise.newversion.trainingplan.ah:
    com.fox.exercise.util.RoundedImage mImg -> a
    android.widget.TextView user_name -> b
    android.widget.TextView complete_time -> c
    android.widget.TextView complete_cal -> d
    android.widget.TextView submit_content -> e
    com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$TrainUserListAdapter this$1 -> f
com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$URLSpanNoUnderline -> com.fox.exercise.newversion.trainingplan.TrainPlanMainActivity$URLSpanNoUnderline:
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.fox.exercise.newversion.trainingplan.TrainTaskListActivity -> com.fox.exercise.newversion.trainingplan.TrainTaskListActivity:
    java.lang.String TAG -> k
    android.widget.TextView no_history -> l
    android.widget.ListView listView -> m
    com.fox.exercise.view.PullToRefreshListView mPullListView -> n
    com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter mAdapter -> o
    java.util.ArrayList mList -> p
    android.widget.TextView tv_total_time -> q
    android.widget.TextView tv_train_cal -> r
    android.widget.TextView tv_train_times -> s
    android.widget.TextView tv_train_dates -> t
    android.widget.TextView tv_total_fenzhong -> u
    int serverPage -> v
    int localPage -> w
    com.fox.exercise.newversion.trainingplan.TrainPlanDataBase db -> x
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    int saveTrainTask(com.fox.exercise.newversion.trainingplan.TrainTaskListDetail) -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    java.lang.String access$0(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> a
    android.widget.TextView access$1(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> b
    android.widget.TextView access$2(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> c
    android.widget.TextView access$3(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> d
    android.widget.TextView access$4(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> e
    android.widget.TextView access$5(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> f
    cn.ingenic.indroidsync.SportsApp access$6(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> g
    int access$7(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> h
    int access$8(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity,com.fox.exercise.newversion.trainingplan.TrainTaskListDetail) -> a
    void access$9(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity,int) -> a
    void access$10(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity,com.fox.exercise.newversion.trainingplan.TrainPlanDataBase) -> a
    com.fox.exercise.newversion.trainingplan.TrainPlanDataBase access$11(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> i
    int access$12(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> j
    java.util.ArrayList access$13(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> k
    void access$14(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity,int) -> b
    com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter access$15(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> l
    void access$16(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity,com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter) -> a
    android.widget.ListView access$17(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> m
    com.fox.exercise.view.PullToRefreshListView access$18(com.fox.exercise.newversion.trainingplan.TrainTaskListActivity) -> n
com.fox.exercise.newversion.trainingplan.TrainTaskListActivity$1 -> com.fox.exercise.newversion.trainingplan.ai:
    com.fox.exercise.newversion.trainingplan.TrainTaskListActivity this$0 -> a
    void onRefresh(int) -> a
com.fox.exercise.newversion.trainingplan.TrainTaskListActivity$GetTotalTrainTask -> com.fox.exercise.newversion.trainingplan.aj:
    com.fox.exercise.newversion.trainingplan.TrainTaskListActivity this$0 -> a
    com.fox.exercise.api.ApiMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.trainingplan.TrainTaskListActivity$GetTrainTaskList -> com.fox.exercise.newversion.trainingplan.ak:
    com.fox.exercise.newversion.trainingplan.TrainTaskListActivity this$0 -> a
    com.fox.exercise.api.ApiMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter -> com.fox.exercise.newversion.trainingplan.al:
    java.util.ArrayList mList -> a
    android.content.Context mContext -> b
    android.view.LayoutInflater mInflater -> c
    int pos -> d
    android.os.Handler sportHandler -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void uploadTrainTask(com.fox.exercise.newversion.trainingplan.TrainTaskListDetail) -> a
    void saveTrainTask(com.fox.exercise.newversion.trainingplan.TrainTaskListDetail) -> b
    android.content.Context access$0(com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter) -> a
    java.util.ArrayList access$1(com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter) -> b
    int access$2(com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter) -> c
    void access$3(com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter,com.fox.exercise.newversion.trainingplan.TrainTaskListDetail) -> a
    void access$4(com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter,com.fox.exercise.newversion.trainingplan.TrainTaskListDetail) -> b
    void access$5(com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter,int) -> a
    android.os.Handler access$6(com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter) -> d
com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter$1 -> com.fox.exercise.newversion.trainingplan.am:
    com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter$2 -> com.fox.exercise.newversion.trainingplan.an:
    com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter this$0 -> a
    android.widget.TextView val$tv_list_tip -> b
    android.widget.ImageButton val$tv_list_tipicon -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter access$0(com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter$2) -> a
com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter$2$1 -> com.fox.exercise.newversion.trainingplan.ao:
    com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter$2 this$1 -> a
    android.app.Dialog val$dialog -> b
    android.widget.TextView val$tv_list_tip -> c
    android.widget.ImageButton val$tv_list_tipicon -> d
    int val$position -> e
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter$2$2 -> com.fox.exercise.newversion.trainingplan.ap:
    com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter$2 this$1 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter$3 -> com.fox.exercise.newversion.trainingplan.aq:
    com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter this$0 -> a
    com.fox.exercise.newversion.trainingplan.TrainTaskListDetail val$detail -> b
    void run() -> run
com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter$4 -> com.fox.exercise.newversion.trainingplan.ar:
    com.fox.exercise.newversion.trainingplan.TrainTaskListAdapter this$0 -> a
    com.fox.exercise.newversion.trainingplan.TrainTaskListDetail val$detail -> b
    void run() -> run
com.fox.exercise.newversion.trainingplan.TrainTaskListDetail -> com.fox.exercise.newversion.trainingplan.as:
    int uid -> a
    int train_id -> b
    int traintime -> c
    double train_calorie -> d
    java.lang.String train_action -> e
    java.lang.String train_position -> f
    int train_completion -> g
    java.lang.String train_starttime -> h
    java.lang.String train_endtime -> i
    int is_total -> j
    int is_upload -> k
    java.lang.String unique_id -> l
    int getUid() -> a
    void setUid(int) -> a
    int getTrain_id() -> b
    void setTrain_id(int) -> b
    int getTraintime() -> c
    void setTraintime(int) -> c
    double getTrain_calorie() -> d
    void setTrain_calorie(double) -> a
    java.lang.String getTrain_action() -> e
    void setTrain_action(java.lang.String) -> a
    java.lang.String getTrain_position() -> f
    void setTrain_position(java.lang.String) -> b
    int getTrain_completion() -> g
    void setTrain_completion(int) -> d
    java.lang.String getTrain_starttime() -> h
    void setTrain_starttime(java.lang.String) -> c
    java.lang.String getTrain_endtime() -> i
    void setTrain_endtime(java.lang.String) -> d
    int getIs_total() -> j
    void setIs_total(int) -> e
    int getIs_upload() -> k
    void setIs_upload(int) -> f
    java.lang.String getUnique_id() -> l
    void setUnique_id(java.lang.String) -> e
com.fox.exercise.newversion.trainingplan.TrainingActionActivity -> com.fox.exercise.newversion.trainingplan.TrainingActionActivity:
    android.widget.VideoView vv_video -> l
    android.widget.TextView tv_action_name -> m
    android.widget.TextView tv_action_info -> n
    android.widget.TextView tv_current_action -> o
    android.widget.TextView tv_total_action -> p
    java.lang.String trainActionUrl -> q
    java.lang.String filePath -> r
    java.lang.String picPath -> s
    java.lang.String downLoadPath -> t
    java.lang.String fileName -> u
    int fileSize -> v
    java.lang.String dir -> w
    android.widget.Button btn_train_task_list -> x
    android.widget.Button btn_before -> y
    android.widget.Button btn_next -> z
    java.util.ArrayList actionList -> A
    int current_action -> B
    android.widget.ImageButton iv_star1 -> C
    android.widget.ImageButton iv_star2 -> D
    android.widget.ImageButton iv_star3 -> E
    android.widget.ImageButton iv_star4 -> F
    android.widget.ImageButton iv_star5 -> G
    boolean downloading -> H
    android.os.Handler downloadHandler -> k
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setStarSel(int) -> b
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    int access$0(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> a
    void access$1(com.fox.exercise.newversion.trainingplan.TrainingActionActivity,int) -> a
    android.widget.VideoView access$2(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> b
    java.lang.String access$3(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> c
    void access$4(com.fox.exercise.newversion.trainingplan.TrainingActionActivity,boolean) -> a
    java.util.ArrayList access$5(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> d
    int access$6(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> e
    android.widget.TextView access$7(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> f
    void access$8(com.fox.exercise.newversion.trainingplan.TrainingActionActivity,java.lang.String) -> a
    void access$9(com.fox.exercise.newversion.trainingplan.TrainingActionActivity,int) -> b
    android.widget.TextView access$10(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> g
    void access$11(com.fox.exercise.newversion.trainingplan.TrainingActionActivity,java.lang.String) -> b
    java.lang.String access$12(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> h
    java.lang.String access$13(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> i
    void access$14(com.fox.exercise.newversion.trainingplan.TrainingActionActivity,java.lang.String) -> c
    void access$15(com.fox.exercise.newversion.trainingplan.TrainingActionActivity,java.lang.String) -> d
    void access$16(com.fox.exercise.newversion.trainingplan.TrainingActionActivity,java.lang.String) -> e
    java.lang.String access$17(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> j
    java.lang.String access$18(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> k
    boolean access$19(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> l
    void access$20(com.fox.exercise.newversion.trainingplan.TrainingActionActivity,int) -> c
    android.widget.TextView access$21(com.fox.exercise.newversion.trainingplan.TrainingActionActivity) -> m
com.fox.exercise.newversion.trainingplan.TrainingActionActivity$1 -> com.fox.exercise.newversion.trainingplan.at:
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.newversion.trainingplan.TrainingActionActivity$2 -> com.fox.exercise.newversion.trainingplan.au:
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.TrainingActionActivity$3 -> com.fox.exercise.newversion.trainingplan.av:
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.TrainingActionActivity$4 -> com.fox.exercise.newversion.trainingplan.aw:
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.newversion.trainingplan.TrainingActionActivity$5 -> com.fox.exercise.newversion.trainingplan.ax:
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.newversion.trainingplan.TrainingActionActivity$GetTrainActionInfo -> com.fox.exercise.newversion.trainingplan.ay:
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity this$0 -> a
    com.fox.exercise.api.ApiMessage doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiMessage) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity access$3(com.fox.exercise.newversion.trainingplan.TrainingActionActivity$GetTrainActionInfo) -> a
com.fox.exercise.newversion.trainingplan.TrainingActionActivity$GetTrainActionInfo$1 -> com.fox.exercise.newversion.trainingplan.az:
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity$GetTrainActionInfo this$1 -> a
    void run() -> run
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity$GetTrainActionInfo access$0(com.fox.exercise.newversion.trainingplan.TrainingActionActivity$GetTrainActionInfo$1) -> a
com.fox.exercise.newversion.trainingplan.TrainingActionActivity$GetTrainActionInfo$1$1 -> com.fox.exercise.newversion.trainingplan.ba:
    com.fox.exercise.newversion.trainingplan.TrainingActionActivity$GetTrainActionInfo$1 this$2 -> b
    void setSize(int) -> a
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity -> com.fox.exercise.newversion.trainingplan.VideoViewMainActivity:
    android.widget.VideoView main_videoview -> a
    android.widget.MediaController mController -> b
    java.util.ArrayList VideoListQueue -> c
    int currentVideoIndex -> d
    android.widget.ImageView last_btn -> e
    android.widget.ImageView next_btn -> f
    android.widget.ImageView pause_btn -> g
    android.widget.ImageView back_btn -> h
    android.widget.ImageView music_btn -> i
    com.fox.exercise.newversion.view.MyProgressView progress_viewid -> j
    java.lang.String videoDir -> k
    java.util.ArrayList lJsonInfos -> l
    android.widget.TextView train_actionname -> m
    android.widget.TextView train_position -> n
    android.widget.TextView train_time -> o
    android.widget.TextView train_action_nextname -> p
    boolean isPause -> q
    boolean isStart -> r
    boolean isSleep -> s
    boolean isScreen -> t
    int cureNum -> u
    java.util.Map hashMap -> v
    com.fox.exercise.newversion.TrainVoicePrompt trainVoicePrompt -> w
    boolean isYuPlay -> x
    android.widget.PopupWindow myWindow -> y
    android.widget.LinearLayout myView -> z
    android.widget.PopupWindow comPleteWindow -> A
    java.util.ArrayList lsList -> B
    int num1 -> C
    int num2 -> D
    int num3 -> E
    int num4 -> F
    int runNum -> G
    int sleepTime -> H
    android.widget.RelativeLayout set_music_background -> I
    android.widget.LinearLayout set_menu_background -> J
    android.widget.TextView background_sleeptime -> K
    android.widget.TextView background_train_action_nextname -> L
    android.widget.ImageView close_set_music -> M
    android.content.SharedPreferences foxSportSetting -> N
    android.widget.ToggleButton train_isclose_tbtn -> O
    android.widget.SeekBar mySeekBar1 -> P
    int maxVolume -> Q
    int seekBarNum -> R
    float curVolume -> S
    double train_calorie -> T
    java.util.ArrayList train_actionList -> U
    cn.ingenic.indroidsync.SportsApp mSportsApp -> V
    int train_id -> W
    java.lang.String train_name -> X
    android.widget.LinearLayout pause_menu_background -> Y
    android.widget.TextView background_train_action_cruname -> Z
    android.widget.LinearLayout start_play_layout -> aa
    com.fox.exercise.newversion.TrainVoiceBgPrompt trainVoiceBgPrompt -> ab
    boolean isopen_bgMusic -> ac
    com.fox.exercise.newversion.trainingplan.TrainPlanDataBase db -> ad
    android.app.Activity mContext -> ae
    java.lang.String markCode -> af
    java.lang.Boolean isFirstSave -> ag
    int isUpload -> ah
    android.app.Dialog mUploadDialog -> ai
    android.widget.LinearLayout train_sleep_layout -> aj
    com.fox.exercise.newversion.entity.ScreenListener screenListener -> ak
    java.util.Timer timer -> al
    java.util.TimerTask task -> am
    long startTimeSeconds -> an
    java.lang.String startTime -> ao
    java.lang.String endTime -> ap
    int recLen -> aq
    int progress -> ar
    int mTempCount -> as
    int mCuNum -> at
    int curSleepNum -> au
    android.os.Handler mHandler -> av
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void getVideoUrls() -> b
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void setPlayJinDu(java.lang.String,java.lang.String) -> a
    java.lang.String getVoiceName(java.lang.String) -> a
    void backPopWindow() -> c
    void comPlePopWindow() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int save(boolean) -> a
    android.app.Dialog onCreateDialog(int,android.os.Bundle,int) -> a
    void uploadTrainTask() -> e
    int access$0(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> a
    long access$1(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> b
    void access$2(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> a
    int access$3(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> c
    java.util.ArrayList access$4(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> d
    void access$5(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,java.lang.String) -> a
    int access$6(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,boolean) -> a
    int access$7(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> e
    java.util.ArrayList access$8(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> f
    int access$9(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> g
    void access$10(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> b
    com.fox.exercise.newversion.view.MyProgressView access$11(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> h
    android.widget.TextView access$12(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> i
    int access$13(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> j
    void access$14(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> c
    int access$15(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> k
    int access$16(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> l
    java.util.ArrayList access$17(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> m
    java.util.Map access$18(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> n
    java.lang.String access$19(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> o
    android.os.Handler access$20(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> p
    void access$21(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,com.fox.exercise.newversion.TrainVoicePrompt) -> a
    com.fox.exercise.newversion.TrainVoicePrompt access$22(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> q
    int access$23(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> r
    void access$24(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,boolean) -> b
    void access$25(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,boolean) -> c
    void access$26(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,long) -> a
    void access$27(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> d
    java.util.ArrayList access$28(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> s
    boolean access$29(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> t
    void access$30(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,boolean) -> d
    java.util.Timer access$31(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> u
    java.util.TimerTask access$32(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> v
    void access$33(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,java.lang.String) -> b
    void access$34(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,java.lang.String) -> c
    cn.ingenic.indroidsync.SportsApp access$35(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> w
    int access$36(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> x
    int access$37(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> y
    double access$38(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> z
    java.lang.String access$39(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> A
    java.lang.String access$40(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> B
    java.lang.String access$41(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> C
    java.lang.String access$42(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> D
    int access$43(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> E
    void access$44(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> e
    android.widget.TextView access$45(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> F
    int access$46(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> G
    void access$47(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,boolean) -> e
    android.widget.LinearLayout access$48(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> H
    android.widget.ImageView access$49(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> I
    android.widget.ImageView access$50(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> J
    android.widget.ImageView access$51(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> K
    android.widget.ImageView access$52(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> L
    java.lang.String access$53(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,java.lang.String) -> d
    android.app.Dialog access$54(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> M
    void access$55(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> f
    boolean access$56(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> N
    boolean access$57(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> O
    com.fox.exercise.newversion.TrainVoiceBgPrompt access$58(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> P
    android.widget.SeekBar access$59(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> Q
    android.widget.ToggleButton access$60(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> R
    int access$61(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> S
    void access$62(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,float) -> a
    float access$63(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> T
    android.content.SharedPreferences access$64(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> U
    android.widget.ImageView access$65(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> V
    int access$66(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> W
    void access$67(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> g
    void access$68(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,double) -> a
    boolean access$69(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> X
    void access$70(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> h
    void access$71(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> i
    void access$72(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,int) -> j
    int access$73(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> Y
    android.widget.RelativeLayout access$74(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> Z
    android.widget.TextView access$75(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> aa
    android.widget.TextView access$76(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> ab
    android.widget.TextView access$77(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> ac
    void access$78(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity,java.lang.String,java.lang.String) -> a
    boolean access$79(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity) -> ad
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$1 -> com.fox.exercise.newversion.trainingplan.bb:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity access$0(com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$1) -> a
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$1$1 -> com.fox.exercise.newversion.trainingplan.bc:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$1 this$1 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$2 -> com.fox.exercise.newversion.trainingplan.bd:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity this$0 -> a
    void onUserPresent() -> c
    void onScreenOn() -> a
    void onScreenOff() -> b
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$3 -> com.fox.exercise.newversion.trainingplan.be:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity this$0 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$4 -> com.fox.exercise.newversion.trainingplan.bf:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$5 -> com.fox.exercise.newversion.trainingplan.bg:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$6 -> com.fox.exercise.newversion.trainingplan.bh:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$7 -> com.fox.exercise.newversion.trainingplan.bi:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$8 -> com.fox.exercise.newversion.trainingplan.bj:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.fox.exercise.newversion.trainingplan.VideoViewMainActivity$9 -> com.fox.exercise.newversion.trainingplan.bk:
    com.fox.exercise.newversion.trainingplan.VideoViewMainActivity this$0 -> a
    void run() -> run
com.fox.exercise.newversion.view.ChineseTextView -> com.fox.exercise.newversion.view.ChineseTextView:
    com.fox.exercise.newversion.view.ChineseTextView$InnerView tfView -> a
    void setText(java.lang.CharSequence) -> setText
com.fox.exercise.newversion.view.ChineseTextView$InnerView -> com.fox.exercise.newversion.view.ChineseTextView$InnerView:
    java.lang.String namespace -> b
    android.graphics.Paint mPaint -> c
    float y -> d
    float textSize -> e
    int lines -> f
    java.lang.String txt -> g
    android.widget.LinearLayout lin -> h
    com.fox.exercise.newversion.view.ChineseTextView this$0 -> a
    void init(android.util.AttributeSet) -> a
    void setText(java.lang.CharSequence) -> setText
    void onDraw(android.graphics.Canvas) -> onDraw
    java.lang.String[] autoSplit(java.lang.String,android.graphics.Paint,float) -> a
    float getRawSize(int,float) -> a
com.fox.exercise.newversion.view.CollapsibleTextView -> com.fox.exercise.newversion.view.CollapsibleTextView:
    android.widget.TextView desc -> a
    android.widget.TextView descOp -> b
    java.lang.String shrinkup -> c
    java.lang.String spread -> d
    int mState -> e
    boolean flag -> f
    void setDesc(java.lang.CharSequence,android.widget.TextView$BufferType) -> a
    void onClick(android.view.View) -> onClick
    void onLayout(boolean,int,int,int,int) -> onLayout
    int access$0(com.fox.exercise.newversion.view.CollapsibleTextView) -> a
    android.widget.TextView access$1(com.fox.exercise.newversion.view.CollapsibleTextView) -> b
    android.widget.TextView access$2(com.fox.exercise.newversion.view.CollapsibleTextView) -> c
    java.lang.String access$3(com.fox.exercise.newversion.view.CollapsibleTextView) -> d
    void access$4(com.fox.exercise.newversion.view.CollapsibleTextView,int) -> a
    java.lang.String access$5(com.fox.exercise.newversion.view.CollapsibleTextView) -> e
com.fox.exercise.newversion.view.CollapsibleTextView$InnerRunnable -> com.fox.exercise.newversion.view.a:
    com.fox.exercise.newversion.view.CollapsibleTextView this$0 -> a
    void run() -> run
com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter -> com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter:
    boolean DEBUG -> a
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> b
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> c
    int mNumColumns -> d
    android.view.View mViewForMeasureRowHeight -> e
    int mRowHeight -> f
    java.util.ArrayList mHeaderViewInfos -> g
    java.util.ArrayList mFooterViewInfos -> h
    android.widget.ListAdapter mOriginalAdapter -> i
    com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter$ItemClickHandler mItemClickHandler -> j
    void initHeaderGridView() -> a
    void onMeasure(int,int) -> onMeasure
    void setClipChildren(boolean) -> setClipChildren
    void setClipChildrenSupper(boolean) -> setClipChildrenSupper
    void addHeaderView(android.view.View) -> a
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> a
    int getHeaderViewCount() -> getHeaderViewCount
    int getFooterViewCount() -> getFooterViewCount
    int getNumColumnsCompatible() -> getNumColumnsCompatible
    int getColumnWidthCompatible() -> getColumnWidthCompatible
    void onDetachedFromWindow() -> onDetachedFromWindow
    int getVerticalSpacing() -> getVerticalSpacing
    int getHorizontalSpacing() -> getHorizontalSpacing
    int getRowHeight() -> getRowHeight
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.widget.ListAdapter getOriginalAdapter() -> getOriginalAdapter
    void setNumColumns(int) -> setNumColumns
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter$ItemClickHandler getItemClickHandler() -> getItemClickHandler
    android.widget.AdapterView$OnItemClickListener access$0(com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter) -> a
    int access$1(com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter) -> b
    android.widget.AdapterView$OnItemLongClickListener access$2(com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter) -> c
com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter$FixedViewInfo -> com.fox.exercise.newversion.view.b:
    android.view.View view -> a
    android.view.ViewGroup viewContainer -> b
    java.lang.Object data -> c
    boolean isSelectable -> d
com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter$FullWidthFixedViewLayout -> com.fox.exercise.newversion.view.c:
    com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter this$0 -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter$HeaderViewGridAdapter -> com.fox.exercise.newversion.view.d:
    android.database.DataSetObservable mDataSetObservable -> e
    android.widget.ListAdapter mAdapter -> f
    java.util.ArrayList EMPTY_INFO_LIST -> a
    java.util.ArrayList mHeaderViewInfos -> b
    java.util.ArrayList mFooterViewInfos -> c
    int mNumColumns -> g
    int mRowHeight -> h
    boolean mAreAllFixedViewsSelectable -> d
    boolean mIsFilterable -> i
    boolean mCachePlaceHoldView -> j
    boolean mCacheFirstHeaderView -> k
    void setNumColumns(int) -> a
    void setRowHeight(int) -> b
    int getHeadersCount() -> a
    int getFootersCount() -> b
    boolean isEmpty() -> isEmpty
    boolean areAllListInfosSelectable(java.util.ArrayList) -> a
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getAdapterAndPlaceHolderCount() -> d
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    android.widget.Filter getFilter() -> getFilter
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
    void notifyDataSetChanged() -> c
com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter$ItemClickHandler -> com.fox.exercise.newversion.view.e:
    com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.fox.exercise.newversion.view.IPullDownElastic -> com.fox.exercise.newversion.view.f:
    android.view.View getElasticLayout() -> a
    int getElasticHeight() -> b
    void showArrow(int) -> a
    void startAnimation(android.view.animation.Animation) -> a
    void clearAnimation() -> c
    void showProgressBar(int) -> b
    void setTips(java.lang.String) -> a
    void showLastUpdate(int) -> c
    void setLastUpdateText(java.lang.String) -> b
    void changeElasticState(int,boolean) -> a
com.fox.exercise.newversion.view.MyGridView -> com.fox.exercise.newversion.view.MyGridView:
    void onMeasure(int,int) -> onMeasure
com.fox.exercise.newversion.view.MyHorizontalScrollView -> com.fox.exercise.newversion.view.MyHorizontalScrollView:
    com.fox.exercise.newversion.view.MyHorizontalScrollView$CurrentImageChangeListener mListener -> a
    com.fox.exercise.newversion.view.MyHorizontalScrollView$OnItemClickListener mOnClickListener -> b
    android.widget.LinearLayout mContainer -> c
    int mChildWidth -> d
    int mCurrentIndex -> e
    int mFristIndex -> f
    com.fox.exercise.newversion.adapter.HorizontalScrollViewAdapter mAdapter -> g
    int mCountOneScreen -> h
    int mScreenWitdh -> i
    java.util.Map mViewPos -> j
    void onMeasure(int,int) -> onMeasure
    void loadNextImg() -> a
    void loadPreImg() -> b
    void notifyCurrentImgChanged() -> c
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void setOnItemClickListener(com.fox.exercise.newversion.view.MyHorizontalScrollView$OnItemClickListener) -> setOnItemClickListener
    void setCurrentImageChangeListener(com.fox.exercise.newversion.view.MyHorizontalScrollView$CurrentImageChangeListener) -> setCurrentImageChangeListener
com.fox.exercise.newversion.view.MyHorizontalScrollView$CurrentImageChangeListener -> com.fox.exercise.newversion.view.g:
    void onCurrentImgChanged(int,android.view.View) -> a
com.fox.exercise.newversion.view.MyHorizontalScrollView$OnItemClickListener -> com.fox.exercise.newversion.view.h:
    void onClick(android.view.View,int) -> a
com.fox.exercise.newversion.view.MyProgressView -> com.fox.exercise.newversion.view.MyProgressView:
    android.graphics.Paint paint -> a
    android.graphics.Paint shuLinePaint -> b
    android.graphics.Paint txPaint -> c
    android.graphics.Paint prPaint -> d
    float recWidth -> e
    float recHeight -> f
    float max -> g
    int progress -> h
    java.util.List list -> i
    void onDraw(android.graphics.Canvas) -> onDraw
    void setProgress(int) -> setProgress
    void setMax(float,java.util.ArrayList) -> a
    int getProgress() -> getProgress
com.fox.exercise.newversion.view.MyViewPager -> com.fox.exercise.newversion.view.MyViewPager:
    int downX -> a
    int downY -> b
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
com.fox.exercise.newversion.view.PullDownElasticImp -> com.fox.exercise.newversion.view.i:
    android.view.View refreshView -> a
    android.widget.ImageView arrowImageView -> b
    int headContentHeight -> c
    android.widget.ProgressBar progressBar -> d
    android.widget.TextView tipsTextview -> e
    android.widget.TextView lastUpdatedTextView -> f
    android.content.Context mContext -> g
    void init() -> d
    android.view.View getElasticLayout() -> a
    int getElasticHeight() -> b
    void showArrow(int) -> a
    void startAnimation(android.view.animation.Animation) -> a
    void clearAnimation() -> c
    void showProgressBar(int) -> b
    void setTips(java.lang.String) -> a
    void showLastUpdate(int) -> c
    void setLastUpdateText(java.lang.String) -> b
    void changeElasticState(int,boolean) -> a
com.fox.exercise.newversion.view.PullDownScrollView -> com.fox.exercise.newversion.view.PullDownScrollView:
    int refreshTargetTop -> a
    int headContentHeight -> b
    com.fox.exercise.newversion.view.PullDownScrollView$RefreshListener refreshListener -> c
    android.view.animation.RotateAnimation animation -> d
    android.view.animation.RotateAnimation reverseAnimation -> e
    int preY -> f
    boolean isElastic -> g
    int startY -> h
    int state -> i
    java.lang.String note_release_to_refresh -> j
    java.lang.String note_pull_to_refresh -> k
    java.lang.String note_refreshing -> l
    com.fox.exercise.newversion.view.IPullDownElastic mElastic -> m
    void init() -> a
    void setRefreshListener(com.fox.exercise.newversion.view.PullDownScrollView$RefreshListener) -> setRefreshListener
    void setPullDownElastic(com.fox.exercise.newversion.view.IPullDownElastic) -> setPullDownElastic
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleHeadElastic(android.view.MotionEvent) -> a
    void setMargin(int) -> setMargin
    void changeHeaderViewByState(int,boolean) -> a
    void onRefresh() -> b
    void computeScroll() -> computeScroll
    void finishRefresh(java.lang.String) -> a
    boolean canScroll() -> c
    boolean canScroll(com.fox.exercise.newversion.view.PullDownScrollView) -> a
    void printMotionEvent(android.view.MotionEvent) -> b
com.fox.exercise.newversion.view.PullDownScrollView$RefreshListener -> com.fox.exercise.newversion.view.j:
    void onRefresh(com.fox.exercise.newversion.view.PullDownScrollView) -> a
com.fox.exercise.newversion.view.RoundProgressBar -> com.fox.exercise.newversion.view.RoundProgressBar:
    android.graphics.Paint paint -> a
    int roundColor -> b
    int roundProgressColor -> c
    int textColor -> d
    float textSize -> e
    float roundWidth -> f
    int max -> g
    int progress -> h
    boolean textIsDisplayable -> i
    int style -> j
    java.lang.String sleepTime -> k
    java.lang.String sleepQuality -> l
    void onDraw(android.graphics.Canvas) -> onDraw
    int getMax() -> getMax
    void setMax(int) -> setMax
    int getProgress() -> getProgress
    void setProgress(int,java.lang.String,java.lang.String) -> a
    int getCricleColor() -> getCricleColor
    void setCricleColor(int) -> setCricleColor
    int getCricleProgressColor() -> getCricleProgressColor
    void setCricleProgressColor(int) -> setCricleProgressColor
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getRoundWidth() -> getRoundWidth
    void setRoundWidth(float) -> setRoundWidth
com.fox.exercise.newversion.view.StopWatchView -> com.fox.exercise.newversion.view.StopWatchView:
    int width -> a
    int height -> b
    android.graphics.Paint linePaint -> c
    android.graphics.Paint shuLinePaint -> d
    android.graphics.Paint timeTextPaint -> e
    android.graphics.Paint bluePaint -> f
    java.lang.String[] timeDatas -> g
    int firstPointLeftIndex -> h
    java.util.ArrayList arrayList -> i
    float singleHeight -> j
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawLine(android.graphics.Canvas) -> a
    void drawTimeText(android.graphics.Canvas) -> b
    void drawTimeSplitLine(android.graphics.Canvas) -> c
    void drawVoidLine(android.graphics.Canvas) -> d
    void init() -> a
    void update(java.lang.String[],int,java.util.ArrayList) -> a
    void onMeasure(int,int) -> onMeasure
    int measureHeight(int) -> a
com.fox.exercise.pedometer.AlarmReceiver -> com.fox.exercise.pedometer.AlarmReceiver:
    int sportUid -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.pedometer.BadmintonUtils -> com.fox.exercise.pedometer.a:
    double getCalories(int) -> a
com.fox.exercise.pedometer.CaloriesNotifier -> com.fox.exercise.pedometer.b:
    com.fox.exercise.pedometer.CaloriesNotifier$Listener mListener -> f
    double METRIC_RUNNING_FACTOR -> g
    double IMPERIAL_RUNNING_FACTOR -> h
    double METRIC_WALKING_FACTOR -> i
    double IMPERIAL_WALKING_FACTOR -> j
    double mCalories -> k
    com.fox.exercise.pedometer.PedometerSettings mSettings -> a
    boolean mIsMetric -> b
    boolean mIsRunning -> c
    float mStepLength -> d
    float mBodyWeight -> e
    void setCalories(float) -> a
    void reloadSettings() -> a
    void onStep() -> b
    void notifyListener() -> c
com.fox.exercise.pedometer.CaloriesNotifier$Listener -> com.fox.exercise.pedometer.c:
    void valueChanged(float) -> a
com.fox.exercise.pedometer.DistanceNotifier -> com.fox.exercise.pedometer.d:
    com.fox.exercise.pedometer.DistanceNotifier$Listener mListener -> e
    float mDistance -> a
    com.fox.exercise.pedometer.PedometerSettings mSettings -> b
    boolean mIsMetric -> c
    float mStepLength -> d
    void reloadSettings() -> a
    void onStep() -> b
    void notifyListener() -> c
com.fox.exercise.pedometer.DistanceNotifier$Listener -> com.fox.exercise.pedometer.e:
    void valueChanged(float) -> a
com.fox.exercise.pedometer.FootballUtils -> com.fox.exercise.pedometer.f:
    double getCalories(double) -> a
com.fox.exercise.pedometer.GolfingUtils -> com.fox.exercise.pedometer.g:
    double getCalories(double) -> a
com.fox.exercise.pedometer.ImageWorkManager -> com.fox.exercise.pedometer.h:
    android.content.Context mContext -> a
    int width -> b
    int height -> c
    com.fox.exercise.bitmap.util.ImageResizer mReqImageWorker -> d
    com.fox.exercise.bitmap.util.ImageCache$ImageCacheParams cacheParams -> e
    com.fox.exercise.bitmap.util.ImageCache imageCache -> f
    com.fox.exercise.bitmap.util.ImageResizer getImageWorker() -> a
com.fox.exercise.pedometer.MofflistGaodeUtil -> com.fox.exercise.pedometer.i:
    java.lang.String cityName -> a
    int completeCode -> b
    java.lang.String completeCodeStr -> c
    java.util.List cities -> d
    int state -> e
    int getState() -> a
    void setState(int) -> a
    java.lang.String getCompleteCodeStr() -> b
    void setCompleteCodeStr(java.lang.String) -> a
    void setCities(java.util.List) -> a
    java.lang.String getCityName() -> c
    void setCityName(java.lang.String) -> b
    int getCompleteCode() -> d
    void setCompleteCode(int) -> b
com.fox.exercise.pedometer.MountainUtils -> com.fox.exercise.pedometer.j:
    double getCalories(double) -> a
com.fox.exercise.pedometer.PaceNotifier -> com.fox.exercise.pedometer.k:
    java.util.ArrayList mListeners -> d
    int mCounter -> a
    long mLastStepTime -> e
    long[] mLastStepDeltas -> f
    int mLastStepDeltasIndex -> g
    long mPace -> h
    com.fox.exercise.pedometer.PedometerSettings mSettings -> b
    boolean mShouldTellFasterslower -> c
    void reloadSettings() -> a
    void onStep() -> b
    void notifyListener() -> c
com.fox.exercise.pedometer.PaceNotifier$Listener -> com.fox.exercise.pedometer.l:
    void paceChanged(int) -> a
com.fox.exercise.pedometer.PedometerSettings -> com.fox.exercise.pedometer.m:
    android.content.SharedPreferences mSettings -> a
    int M_NONE -> b
    int M_PACE -> c
    int M_SPEED -> d
    boolean isMetric() -> a
    float getStepLength() -> b
    float getBodyWeight() -> c
    boolean isRunning() -> d
    int getMaintainOption() -> e
    boolean shouldSpeak() -> f
    float getSpeakingInterval() -> g
    boolean shouldTellSpeed() -> h
    boolean shouldTellFasterslower() -> i
com.fox.exercise.pedometer.RidingUtils -> com.fox.exercise.pedometer.n:
    double getCalories(double) -> a
com.fox.exercise.pedometer.RollerSportsUtils -> com.fox.exercise.pedometer.o:
    double getCalories(double) -> a
com.fox.exercise.pedometer.RowingUtils -> com.fox.exercise.pedometer.p:
    double getCalories(double) -> a
com.fox.exercise.pedometer.RunningUtils -> com.fox.exercise.pedometer.q:
    double speed -> a
    double getCalories(double) -> a
    double cckg(int,double,double) -> a
com.fox.exercise.pedometer.SkatingUtils -> com.fox.exercise.pedometer.r:
    double getCalories(double) -> a
com.fox.exercise.pedometer.SpeakingTimer -> com.fox.exercise.pedometer.s:
    com.fox.exercise.pedometer.PedometerSettings mSettings -> a
    boolean mShouldSpeak -> b
    float mInterval -> c
    long mLastSpeakTime -> d
    java.util.ArrayList mListeners -> e
    void reloadSettings() -> a
    void onStep() -> b
    void notifyListeners() -> c
com.fox.exercise.pedometer.SpeakingTimer$Listener -> com.fox.exercise.pedometer.t:
    void speak() -> a
com.fox.exercise.pedometer.SpeedNotifier -> com.fox.exercise.pedometer.u:
    com.fox.exercise.pedometer.SpeedNotifier$Listener mListener -> g
    float mSpeed -> a
    boolean mIsMetric -> b
    float mStepLength -> c
    com.fox.exercise.pedometer.PedometerSettings mSettings -> d
    boolean mShouldTellFasterslower -> e
    boolean mShouldTellSpeed -> f
    void reloadSettings() -> a
    void notifyListener() -> b
    void paceChanged(int) -> a
com.fox.exercise.pedometer.SpeedNotifier$Listener -> com.fox.exercise.pedometer.v:
    void valueChanged(float) -> a
com.fox.exercise.pedometer.SportConditionDetail -> com.fox.exercise.pedometer.w:
    int sports_type -> a
    int score_step -> b
    int score_calorie -> c
    int gain_step -> d
    int gain_calorie -> e
    int uid -> f
    java.lang.String current_times -> g
    int calorieCount -> h
    java.util.List sportTasksPhone -> i
    java.util.List sportTasksWatch -> j
    void setSportTasks(java.util.List) -> a
    java.lang.String toString() -> toString
com.fox.exercise.pedometer.SportContionTaskDetail -> com.fox.exercise.pedometer.x:
    java.lang.String times -> b
    int sprots_Calorie -> c
    int taskid -> d
    java.lang.String latlng -> e
    int sports_type -> f
    java.lang.String startTime -> g
    int monitoringEquipment -> h
    double sportDistance -> i
    java.lang.String sportTime -> j
    double sportVelocity -> k
    double heartRate -> l
    int userId -> m
    int stepNum -> n
    java.lang.String sportDate -> o
    int swimType -> p
    int mapType -> q
    int sport_isupload -> a
    com.fox.exercise.newversion.entity.SportRecord sportRecord -> r
    java.lang.String sport_markcode -> s
    java.lang.String getSport_markcode() -> a
    void setSportRecord(com.fox.exercise.newversion.entity.SportRecord) -> a
    int getSport_isupload() -> b
    void setSport_isupload(int) -> a
    int getMapType() -> c
    void setMapType(int) -> b
    int getSwimType() -> d
    void setSwimType(int) -> c
    java.lang.String getSportDate() -> e
    void setSportDate(java.lang.String) -> a
    int getMonitoringEquipment() -> f
    void setMonitoringEquipment(int) -> d
    double getSportDistance() -> g
    void setSportDistance(double) -> a
    java.lang.String getSportTime() -> h
    void setSportTime(java.lang.String) -> b
    double getSportVelocity() -> i
    void setSportVelocity(double) -> b
    double getHeartRate() -> j
    void setHeartRate(double) -> c
    int getUserId() -> k
    void setUserId(int) -> e
    int getStepNum() -> l
    void setStepNum(int) -> f
    java.lang.String getStartTime() -> m
    void setStartTime(java.lang.String) -> c
    void setTimes(java.lang.String) -> d
    int getSprots_Calorie() -> n
    void setSprots_Calorie(int) -> g
    int getTaskid() -> o
    void setTaskid(int) -> h
    java.lang.String getLatlng() -> p
    void setLatlng(java.lang.String) -> e
    int getSports_type() -> q
    void setSports_type(int) -> i
    java.lang.String toString() -> toString
com.fox.exercise.pedometer.SportUtils -> com.fox.exercise.pedometer.y:
    double IMPERIAL_WALKING_FACTOR -> a
    double IMPERIAL_RUNNING_FACTOR -> b
    java.lang.String getFormatTime(int) -> a
    java.lang.String format(java.util.Date) -> a
    double getBaseCalories(android.content.Context) -> a
    void saveSportDB(android.content.Context,int) -> a
    void uploadSport(android.content.Context,java.lang.String) -> a
com.fox.exercise.pedometer.SportUtils$SportThread -> com.fox.exercise.pedometer.z:
    java.lang.String session_id -> a
    int step -> b
    int calories -> c
    int score_step -> d
    int score_calories -> e
    int type -> f
    void run() -> run
com.fox.exercise.pedometer.SportsReceiver -> com.fox.exercise.pedometer.SportsReceiver:
    android.os.Vibrator vibrator -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.fox.exercise.pedometer.StepDetector -> com.fox.exercise.pedometer.aa:
    float mSensitiveValue -> a
    float mLimit -> b
    float[] mLastValues -> c
    float[] mScale -> d
    float mYOffset -> e
    boolean mTroughAppear -> f
    float mX -> g
    float mY -> h
    float mZ -> i
    long mPrevStepTime -> j
    float[] mLastDirections -> k
    float[][] mLastExtremes -> l
    float[] mLastDiff -> m
    int mLastMatch -> n
    java.util.ArrayList mStepListeners -> o
    java.lang.Boolean accelLeft -> p
    float oldValue -> q
    void setSensitivity(float) -> a
    void addStepListener(com.fox.exercise.pedometer.StepListener) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void stepCounter(android.hardware.Sensor,android.hardware.SensorEvent) -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.fox.exercise.pedometer.StepDisplayer -> com.fox.exercise.pedometer.ab:
    int mCount -> b
    com.fox.exercise.pedometer.PedometerSettings mSettings -> a
    java.util.ArrayList mListeners -> c
    void setSteps(int) -> a
    void onStep() -> b
    void reloadSettings() -> a
    void addListener(com.fox.exercise.pedometer.StepDisplayer$Listener) -> a
    void notifyListener() -> c
com.fox.exercise.pedometer.StepDisplayer$Listener -> com.fox.exercise.pedometer.ac:
    void stepsChanged(int) -> a
com.fox.exercise.pedometer.StepListener -> com.fox.exercise.pedometer.ad:
    void onStep() -> b
com.fox.exercise.pedometer.StepService -> com.fox.exercise.pedometer.StepService:
    int mSteps -> a
    cn.ingenic.indroidsync.SportsApp mSportsApp -> b
    android.os.IBinder mBinder -> c
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.fox.exercise.pedometer.StepService$StepBinder -> com.fox.exercise.pedometer.ae:
    com.fox.exercise.pedometer.StepService this$0 -> a
com.fox.exercise.pedometer.SwimmingUtils -> com.fox.exercise.pedometer.af:
    double getCalories(double,int,int) -> a
    double getMet(double,int) -> a
    double cckg(double,int,double) -> a
    double getSpeedFactor(double,int) -> b
com.fox.exercise.pedometer.TennisUtils -> com.fox.exercise.pedometer.ag:
    double getCalories(int) -> a
com.fox.exercise.pedometer.TimingManager -> com.fox.exercise.pedometer.ah:
    com.fox.exercise.pedometer.TimingManager mTimingManager -> a
    android.content.Context mContext -> b
    com.fox.exercise.pedometer.TimingManager getInstance(android.content.Context) -> a
    void repeatTimingFiveMinutes() -> a
    void cancleRepeatTimingFiveMinutes() -> b
com.fox.exercise.pedometer.WalkingRaceUtils -> com.fox.exercise.pedometer.ai:
    double getCalories(double) -> a
com.fox.exercise.pedometer.WalkingUtils -> com.fox.exercise.pedometer.aj:
    double getCalories(double) -> a
    double cckg(int,double) -> a
com.fox.exercise.publish.AlbumHelper -> com.fox.exercise.publish.a:
    java.lang.String TAG -> a
    android.content.Context context -> b
    android.content.ContentResolver cr -> c
    java.util.HashMap thumbnailList -> d
    java.util.List albumList -> e
    java.util.HashMap bucketList -> f
    com.fox.exercise.publish.AlbumHelper instance -> h
    boolean hasBuildImagesBucketList -> g
    com.fox.exercise.publish.AlbumHelper getHelper() -> a
    void init(android.content.Context) -> a
    void getThumbnail() -> c
    void getThumbnailColumnData(android.database.Cursor) -> a
    void buildImagesBucketList() -> b
    java.util.List getImagesBucketList(boolean) -> a
com.fox.exercise.publish.Bimp -> com.fox.exercise.publish.b:
    int max -> a
    boolean act_bool -> b
    java.util.List bmp -> c
    java.util.List drr -> d
    android.graphics.Bitmap revitionImageSize(java.lang.String) -> a
com.fox.exercise.publish.BitmapCache -> com.fox.exercise.publish.BitmapCache:
    android.os.Handler h -> a
    java.lang.String TAG -> b
    java.util.HashMap imageCache -> c
    void put(java.lang.String,android.graphics.Bitmap) -> a
    void displayBmp(android.widget.ImageView,java.lang.String,java.lang.String,com.fox.exercise.publish.BitmapCache$ImageCallback) -> a
    android.graphics.Bitmap revitionImageSize(java.lang.String) -> a
    int getBitmapDegree(java.lang.String) -> b
    android.graphics.Bitmap rotateBitmapByDegree(android.graphics.Bitmap,int) -> a
com.fox.exercise.publish.BitmapCache$1 -> com.fox.exercise.publish.c:
    android.graphics.Bitmap thumb -> a
    com.fox.exercise.publish.BitmapCache this$0 -> b
    boolean val$isThumbPath -> c
    java.lang.String val$thumbPath -> d
    java.lang.String val$sourcePath -> e
    java.lang.String val$path -> f
    com.fox.exercise.publish.BitmapCache$ImageCallback val$callback -> g
    android.widget.ImageView val$iv -> h
    void run() -> run
com.fox.exercise.publish.BitmapCache$1$1 -> com.fox.exercise.publish.d:
    com.fox.exercise.publish.BitmapCache$1 this$1 -> a
    com.fox.exercise.publish.BitmapCache$ImageCallback val$callback -> b
    android.widget.ImageView val$iv -> c
    java.lang.String val$sourcePath -> d
    void run() -> run
com.fox.exercise.publish.BitmapCache$ImageCallback -> com.fox.exercise.publish.e:
    void imageLoad(android.widget.ImageView,android.graphics.Bitmap,java.lang.Object[]) -> a
com.fox.exercise.publish.FileUtils -> com.fox.exercise.publish.f:
    java.lang.String SDPATH -> a
    void saveBitmap(android.graphics.Bitmap,java.lang.String) -> a
    java.io.File createSDDir(java.lang.String) -> a
    boolean isFileExist(java.lang.String) -> b
    void delFile(java.lang.String) -> c
    void deleteDir() -> a
com.fox.exercise.publish.ImageBucket -> com.fox.exercise.publish.g:
    int count -> a
    java.lang.String bucketName -> b
    java.util.List imageList -> c
com.fox.exercise.publish.ImageBucketAdapter -> com.fox.exercise.publish.h:
    java.lang.String TAG -> a
    android.app.Activity act -> b
    java.util.List dataList -> c
    com.fox.exercise.publish.BitmapCache cache -> d
    com.fox.exercise.publish.BitmapCache$ImageCallback callback -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.fox.exercise.publish.ImageBucketAdapter$1 -> com.fox.exercise.publish.i:
    com.fox.exercise.publish.ImageBucketAdapter this$0 -> a
    void imageLoad(android.widget.ImageView,android.graphics.Bitmap,java.lang.Object[]) -> a
com.fox.exercise.publish.ImageBucketAdapter$Holder -> com.fox.exercise.publish.j:
    android.widget.ImageView iv -> b
    android.widget.ImageView selected -> c
    android.widget.TextView name -> d
    android.widget.TextView count -> e
    com.fox.exercise.publish.ImageBucketAdapter this$0 -> a
    void access$0(com.fox.exercise.publish.ImageBucketAdapter$Holder,android.widget.ImageView) -> a
    void access$1(com.fox.exercise.publish.ImageBucketAdapter$Holder,android.widget.ImageView) -> b
    void access$2(com.fox.exercise.publish.ImageBucketAdapter$Holder,android.widget.TextView) -> a
    void access$3(com.fox.exercise.publish.ImageBucketAdapter$Holder,android.widget.TextView) -> b
    android.widget.TextView access$4(com.fox.exercise.publish.ImageBucketAdapter$Holder) -> a
    android.widget.TextView access$5(com.fox.exercise.publish.ImageBucketAdapter$Holder) -> b
    android.widget.ImageView access$6(com.fox.exercise.publish.ImageBucketAdapter$Holder) -> c
    android.widget.ImageView access$7(com.fox.exercise.publish.ImageBucketAdapter$Holder) -> d
com.fox.exercise.publish.ImageGridActivity -> com.fox.exercise.publish.ImageGridActivity:
    java.util.List dataList -> m
    android.widget.GridView gridView -> n
    com.fox.exercise.publish.ImageGridAdapter adapter -> o
    com.fox.exercise.publish.AlbumHelper helper -> p
    android.widget.TextView tv_send -> k
    android.os.Handler mHandler -> l
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void initViews() -> f
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.fox.exercise.publish.ImageGridAdapter access$0(com.fox.exercise.publish.ImageGridActivity) -> a
com.fox.exercise.publish.ImageGridActivity$1 -> com.fox.exercise.publish.k:
    com.fox.exercise.publish.ImageGridActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.publish.ImageGridActivity$2 -> com.fox.exercise.publish.l:
    com.fox.exercise.publish.ImageGridActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.publish.ImageGridActivity$3 -> com.fox.exercise.publish.m:
    com.fox.exercise.publish.ImageGridActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.publish.ImageGridActivity$4 -> com.fox.exercise.publish.n:
    com.fox.exercise.publish.ImageGridActivity this$0 -> a
    void onListen(int) -> a
com.fox.exercise.publish.ImageGridActivity$5 -> com.fox.exercise.publish.o:
    com.fox.exercise.publish.ImageGridActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.publish.ImageGridAdapter -> com.fox.exercise.publish.p:
    com.fox.exercise.publish.ImageGridAdapter$TextCallback textcallback -> g
    java.lang.String TAG -> a
    android.app.Activity act -> b
    java.util.List dataList -> c
    java.util.Map map -> d
    com.fox.exercise.publish.BitmapCache cache -> e
    android.os.Handler mHandler -> h
    int selectTotal -> i
    com.fox.exercise.publish.BitmapCache$ImageCallback callback -> f
    void setTextCallback(com.fox.exercise.publish.ImageGridAdapter$TextCallback) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List getNewList(java.util.List) -> a
    int access$0(com.fox.exercise.publish.ImageGridAdapter) -> a
    void access$1(com.fox.exercise.publish.ImageGridAdapter,int) -> a
    com.fox.exercise.publish.ImageGridAdapter$TextCallback access$2(com.fox.exercise.publish.ImageGridAdapter) -> b
    android.os.Handler access$3(com.fox.exercise.publish.ImageGridAdapter) -> c
com.fox.exercise.publish.ImageGridAdapter$1 -> com.fox.exercise.publish.q:
    com.fox.exercise.publish.ImageGridAdapter this$0 -> a
    void imageLoad(android.widget.ImageView,android.graphics.Bitmap,java.lang.Object[]) -> a
com.fox.exercise.publish.ImageGridAdapter$2 -> com.fox.exercise.publish.r:
    com.fox.exercise.publish.ImageGridAdapter this$0 -> a
    int val$position -> b
    com.fox.exercise.publish.ImageItem val$item -> c
    com.fox.exercise.publish.ImageGridAdapter$Holder val$holder -> d
    void onClick(android.view.View) -> onClick
com.fox.exercise.publish.ImageGridAdapter$Holder -> com.fox.exercise.publish.s:
    android.widget.ImageView iv -> b
    android.widget.ImageView selected -> c
    android.widget.TextView text -> d
    com.fox.exercise.publish.ImageGridAdapter this$0 -> a
    void access$0(com.fox.exercise.publish.ImageGridAdapter$Holder,android.widget.ImageView) -> a
    void access$1(com.fox.exercise.publish.ImageGridAdapter$Holder,android.widget.ImageView) -> b
    void access$2(com.fox.exercise.publish.ImageGridAdapter$Holder,android.widget.TextView) -> a
    android.widget.ImageView access$3(com.fox.exercise.publish.ImageGridAdapter$Holder) -> a
    android.widget.ImageView access$4(com.fox.exercise.publish.ImageGridAdapter$Holder) -> b
    android.widget.TextView access$5(com.fox.exercise.publish.ImageGridAdapter$Holder) -> c
com.fox.exercise.publish.ImageGridAdapter$TextCallback -> com.fox.exercise.publish.t:
    void onListen(int) -> a
com.fox.exercise.publish.ImageItem -> com.fox.exercise.publish.u:
    java.lang.String imageId -> a
    java.lang.String thumbnailPath -> b
    java.lang.String imagePath -> c
    boolean isSelected -> d
com.fox.exercise.publish.PhotoActivity -> com.fox.exercise.publish.PhotoActivity:
    java.util.ArrayList listViews -> o
    android.support.v4.view.ViewPager pager -> p
    com.fox.exercise.publish.PhotoActivity$MyPageAdapter adapter -> q
    int count -> r
    java.util.List bmp -> k
    java.util.List drr -> l
    java.util.List del -> m
    int max -> n
    int index -> s
    java.lang.Boolean is_delete -> t
    android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener -> u
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    void initListViews(android.graphics.Bitmap) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void access$0(com.fox.exercise.publish.PhotoActivity,java.lang.String) -> a
    android.widget.TextView access$1(com.fox.exercise.publish.PhotoActivity) -> a
    java.lang.String access$2(com.fox.exercise.publish.PhotoActivity) -> b
    void access$3(com.fox.exercise.publish.PhotoActivity,int) -> a
    java.lang.Boolean access$4(com.fox.exercise.publish.PhotoActivity) -> c
    java.util.ArrayList access$5(com.fox.exercise.publish.PhotoActivity) -> d
    int access$6(com.fox.exercise.publish.PhotoActivity) -> e
    android.support.v4.view.ViewPager access$7(com.fox.exercise.publish.PhotoActivity) -> f
    com.fox.exercise.publish.PhotoActivity$MyPageAdapter access$8(com.fox.exercise.publish.PhotoActivity) -> g
    void access$9(com.fox.exercise.publish.PhotoActivity,java.lang.Boolean) -> a
com.fox.exercise.publish.PhotoActivity$1 -> com.fox.exercise.publish.v:
    com.fox.exercise.publish.PhotoActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.fox.exercise.publish.PhotoActivity$2 -> com.fox.exercise.publish.w:
    com.fox.exercise.publish.PhotoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.publish.PhotoActivity$3 -> com.fox.exercise.publish.x:
    com.fox.exercise.publish.PhotoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.publish.PhotoActivity$MyPageAdapter -> com.fox.exercise.publish.y:
    java.util.ArrayList listViews -> b
    int size -> c
    com.fox.exercise.publish.PhotoActivity this$0 -> a
    void setListViews(java.util.ArrayList) -> a
    int getCount() -> getCount
    int getItemPosition(java.lang.Object) -> getItemPosition
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void finishUpdate(android.view.View) -> finishUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
com.fox.exercise.publish.SendMsgDetail -> com.fox.exercise.publish.z:
    java.lang.String method_str -> a
    java.lang.Long times -> b
    java.lang.String findId -> c
    java.lang.String[] urls -> d
    int width -> e
    java.lang.String[] bigurls -> f
    java.util.ArrayList topicList -> g
    java.lang.String comeFrom -> h
    int height -> i
    java.lang.String getComeFrom() -> a
    void setComeFrom(java.lang.String) -> a
    java.util.ArrayList getTopicList() -> b
    void setTopicList(java.util.ArrayList) -> a
    java.lang.String[] getBigurls() -> c
    void setBigurls(java.lang.String[]) -> a
    int getWidth() -> d
    void setWidth(int) -> a
    int getHeight() -> e
    void setHeight(int) -> b
    java.lang.String getFindId() -> f
    void setFindId(java.lang.String) -> b
    java.lang.String[] getUrls() -> g
    void setUrls(java.lang.String[]) -> b
    java.lang.String getMethod_str() -> h
    void setMethod_str(java.lang.String) -> c
    java.lang.Long getTimes() -> i
    void setTimes(java.lang.Long) -> a
com.fox.exercise.publish.TestPicActivity -> com.fox.exercise.publish.TestPicActivity:
    android.widget.GridView gridView -> l
    java.util.List dataList -> m
    com.fox.exercise.publish.ImageBucketAdapter adapter -> n
    com.fox.exercise.publish.AlbumHelper helper -> o
    android.graphics.Bitmap bimap -> k
    void initIntentParam(android.content.Intent) -> a
    void initView() -> a
    void setViewStatus() -> b
    void initData() -> f
    void initViews() -> g
    void onPageResume() -> c
    void onPagePause() -> d
    void onPageDestroy() -> e
    java.util.List access$0(com.fox.exercise.publish.TestPicActivity) -> a
com.fox.exercise.publish.TestPicActivity$1 -> com.fox.exercise.publish.aa:
    com.fox.exercise.publish.TestPicActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.fox.exercise.util.FileSaveRead -> com.fox.exercise.util.a:
    java.lang.String SDCardPath -> a
    java.lang.String readJsonFile(java.lang.String) -> a
com.fox.exercise.util.ImageFileUtil -> com.fox.exercise.util.b:
    java.lang.String SDPATH -> c
    android.app.Activity context -> d
    android.os.Handler handler -> e
    int DLFINISH -> a
    int DLFAIL -> b
    java.io.File creatSDDir(java.lang.String) -> a
    java.io.File creatSDFile(java.lang.String) -> b
    boolean isFileExist(java.lang.String) -> c
    android.graphics.Bitmap writeToSDFromPhoto(java.lang.String,java.lang.String) -> a
    java.lang.String writeToSDFromNet(java.lang.String,java.lang.String) -> b
    java.lang.String writeToSDFromVoice(java.lang.String,java.lang.String) -> c
    byte[] getBytes(java.lang.String) -> d
    byte[] readStream(java.io.InputStream) -> a
    android.graphics.Bitmap getImg(java.lang.String) -> e
com.fox.exercise.util.MediaFileDownloader -> com.fox.exercise.util.c:
    java.io.InputStream inputStream -> b
    java.io.FileOutputStream outputStream -> a
    java.net.URLConnection connection -> c
    java.lang.String urlString -> d
    java.lang.String saveFileDirEx -> e
    java.lang.String saveFileDirIn -> f
    java.lang.String saveFileFullName -> g
    java.lang.String filePath -> h
    android.os.Handler mHandler -> i
    android.content.Context mContext -> j
    boolean mCancel -> k
    int mIndex -> l
    void clearMediaCache(android.content.Context) -> a
    void cancel() -> a
    java.lang.String getSubDirFromType(int) -> b
    java.lang.String urlToFileName(java.lang.String) -> a
    boolean fileExit() -> c
    void sendMessage(int,java.lang.Object) -> a
    void makeInerDir() -> d
    void DownFile() -> b
    java.lang.String access$0(int) -> a
com.fox.exercise.util.MediaFileDownloader$1 -> com.fox.exercise.util.d:
    android.content.Context val$context -> a
    void run() -> run
com.fox.exercise.util.OffLineMapUtils -> com.fox.exercise.util.e:
    java.lang.String getSdCacheDir(android.content.Context) -> a
com.fox.exercise.util.RoundedImage -> com.fox.exercise.util.RoundedImage:
    android.graphics.Xfermode MASK_XFERMODE -> a
    android.graphics.Bitmap mask -> b
    android.graphics.Paint paint -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Bitmap createMask() -> a
com.fox.exercise.util.ScrollLayout -> com.fox.exercise.util.ScrollLayout:
    android.widget.Scroller mScroller -> a
    android.view.VelocityTracker mVelocityTracker -> b
    int mCurScreen -> c
    int mDefaultScreen -> d
    int mTouchState -> e
    int mTouchSlop -> f
    float mLastMotionX -> g
    float mLastMotionY -> h
    com.fox.exercise.util.ScrollLayout$OnViewChangeListener mOnViewChangeListener -> i
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void snapToDestination() -> a
    void snapToScreen(int) -> a
    void setToScreen(int) -> setToScreen
    int getCurScreen() -> getCurScreen
    void computeScroll() -> computeScroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void removeViewAt(int) -> removeViewAt
    void SetOnViewChangeListener(com.fox.exercise.util.ScrollLayout$OnViewChangeListener) -> a
com.fox.exercise.util.ScrollLayout$OnViewChangeListener -> com.fox.exercise.util.f:
    void OnViewChange(int) -> a
com.fox.exercise.util.SportTaskUtil -> com.fox.exercise.util.g:
    java.lang.String[] device -> a
    int[] type -> b
    java.lang.String[] swimDetail -> c
    java.lang.String[] walkDetail -> d
    int[][] detailType -> e
    java.lang.String path1 -> f
    java.lang.String path2 -> g
    double IMPERIAL_WALKING_FACTOR -> h
    double IMPERIAL_RUNNING_FACTOR -> i
    java.lang.String sharePath1 -> j
    java.lang.String sharePath2 -> k
    java.lang.String showTimeCount(long) -> a
    java.lang.String showMsCount(long) -> b
    java.lang.String getDoubleNum(double) -> a
    java.lang.String getDoubleOneNum(double) -> b
    java.lang.String getDoubleNumber(double) -> c
    int getTypeName(int) -> a
    int getDetailTypeName(int,int) -> a
    double gps2m(double,double,double,double) -> a
    java.lang.String readCoinsFromFile(java.lang.String,java.lang.String,int) -> a
    java.lang.String readShareCoinsFromFile(int) -> b
    java.lang.Boolean getNormalRange(int,double,int) -> a
    void jump2CoinsDialog(android.content.Context,java.lang.String) -> a
    java.lang.String dis2step(double) -> d
    java.lang.String date2seconds(java.lang.String) -> a
    boolean send2QQ(android.content.Context,int,int,java.lang.String,java.lang.String,int,com.fox.exercise.api.QQHealthTask$QQHealthResult) -> a
com.fox.exercise.util.SportTrajectoryUtil -> com.fox.exercise.util.h:
    double INVALID_LATLNG -> a
    java.lang.String listLatLngToString(java.util.List) -> a
    java.lang.String LatLngToString(com.baidu.mapapi.model.LatLng) -> a
com.fox.exercise.util.SportTrajectoryUtilGaode -> com.fox.exercise.util.i:
    double INVALID_LATLNG -> a
    com.amap.api.maps.model.LatLng bd_decrypt(double,double,double,double) -> a
    java.lang.String listLatLngToString(java.util.List) -> a
    java.lang.String LatLngToString(com.amap.api.maps.model.LatLng) -> a
    java.util.List stringToLatLng(java.lang.String,double,double) -> a
    com.amap.api.maps.model.LatLng stringToLatLngPoint(java.lang.String,double,double) -> b
com.fox.exercise.util.SportsForgetPwdUtil -> com.fox.exercise.util.j:
    java.lang.String path1 -> a
    java.lang.String path2 -> b
    void saveToatlNumberToFile(java.lang.String,int,java.lang.String) -> a
    java.lang.String readTotalNumberFromFile(java.lang.String) -> a
com.fox.exercise.view.DrawImageView -> com.fox.exercise.view.DrawImageView:
    android.graphics.Paint paint -> a
    android.content.Context context -> b
    int mFilletRadius -> c
    int mExcircleWidth -> d
    int mState -> e
    int NORMAL -> f
    int EXCESS -> g
    int startAngle -> h
    int mProgressBarA -> i
    int mProgressBarR -> j
    int mProgressBarG -> k
    int mProgressBarB -> l
    void init(android.content.Context) -> a
    void setState(int) -> setState
    void onDraw(android.graphics.Canvas) -> onDraw
    void initNormal(android.graphics.Canvas,int,int,int) -> a
    void initExcess(android.graphics.Canvas,int,int,int) -> b
    int dip2px(android.content.Context,float) -> a
com.fox.exercise.view.DrawNewImageView -> com.fox.exercise.view.DrawNewImageView:
    android.graphics.Paint paint -> a
    android.content.Context context -> b
    int mFilletRadius -> c
    int mExcircleWidth -> d
    int mState -> e
    int NORMAL -> f
    int EXCESS -> g
    int startAngle -> h
    int displayWidth -> i
    void init(android.content.Context) -> a
    void setState(int) -> setState
    void setDisplayWidth(int) -> setDisplayWidth
    void setAngle(double,int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void initNormal(android.graphics.Canvas,int,int,int) -> a
    void initExcess(android.graphics.Canvas,int,int,int) -> b
    int dip2px(android.content.Context,float) -> a
com.fox.exercise.view.EmptyViewMethodAccessor -> com.fox.exercise.view.a:
    void setEmptyViewInternal(android.view.View) -> a_
com.fox.exercise.view.LoadingLayout -> com.fox.exercise.view.LoadingLayout:
    android.widget.ImageView headerImage -> a
    android.widget.ProgressBar headerProgress -> b
    android.widget.TextView headerText -> c
    java.lang.String pullLabel -> d
    java.lang.String refreshingLabel -> e
    java.lang.String releaseLabel -> f
    android.view.animation.Animation rotateAnimation -> g
    android.view.animation.Animation resetRotateAnimation -> h
    void reset() -> a
    void releaseToRefresh() -> b
    void setPullLabel(java.lang.String) -> setPullLabel
    void refreshing() -> c
    void setRefreshingLabel(java.lang.String) -> setRefreshingLabel
    void setReleaseLabel(java.lang.String) -> setReleaseLabel
    void pullToRefresh() -> d
    void setTextColor(int) -> setTextColor
com.fox.exercise.view.MoffMapSwitchView -> com.fox.exercise.view.MoffMapSwitchView:
    android.content.Context context -> a
    android.widget.ImageView iv_switch_cursor -> b
    android.widget.TextView switch_moff_true -> c
    android.widget.TextView switch_moff_false -> d
    boolean isChecked -> e
    int mSelectionLeft -> f
    int mSelectionRight -> g
    com.fox.exercise.view.MoffMapSwitchView$OnCheckedChangeListener onCheckedChangeListener -> h
    void initView() -> a
    void changeTextColor() -> b
    void moveSelection(int) -> b
    void setOnCheckedChangeListener(com.fox.exercise.view.MoffMapSwitchView$OnCheckedChangeListener) -> setOnCheckedChangeListener
    void onCheckPosition(int) -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.view.MoffMapSwitchView$OnCheckedChangeListener -> com.fox.exercise.view.b:
    void onCheckedChanged(boolean) -> a
com.fox.exercise.view.PullToRefreshAdapterViewBase -> com.fox.exercise.view.PullToRefreshAdapterViewBase:
    int lastSavedFirstVisibleItem -> b
    android.widget.AbsListView$OnScrollListener onScrollListener -> c
    com.fox.exercise.view.PullToRefreshBase$OnLastItemVisibleListener onLastItemVisibleListener -> d
    android.view.View emptyView -> e
    android.widget.FrameLayout refreshableViewHolder -> f
    android.widget.ImageView mTopImageView -> g
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setBackToTopView(android.widget.ImageView) -> setBackToTopView
    void setEmptyView(android.view.View) -> setEmptyView
    void setOnLastItemVisibleListener(com.fox.exercise.view.PullToRefreshBase$OnLastItemVisibleListener) -> setOnLastItemVisibleListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void addRefreshableView(android.content.Context,android.widget.AbsListView) -> a
    boolean isReadyForPullDown() -> a
    boolean isReadyForPullUp() -> b
    boolean isFirstItemVisible() -> f
    boolean isLastItemVisible() -> g
    void addRefreshableView(android.content.Context,android.view.View) -> a
com.fox.exercise.view.PullToRefreshAdapterViewBase$1 -> com.fox.exercise.view.c:
    com.fox.exercise.view.PullToRefreshAdapterViewBase this$0 -> a
    void onClick(android.view.View) -> onClick
com.fox.exercise.view.PullToRefreshBase -> com.fox.exercise.view.PullToRefreshBase:
    int touchSlop -> b
    float initialMotionY -> c
    float lastMotionX -> d
    float lastMotionY -> e
    boolean isBeingDragged -> f
    int state -> g
    int mode -> h
    int currentMode -> i
    boolean disableScrollingWhileRefreshing -> j
    android.view.View refreshableView -> a
    boolean isPullToRefreshEnabled -> k
    com.fox.exercise.view.LoadingLayout headerLayout -> l
    com.fox.exercise.view.LoadingLayout footerLayout -> m
    int headerHeight -> n
    android.os.Handler handler -> o
    com.fox.exercise.view.PullToRefreshBase$OnRefreshListener onRefreshListener -> p
    com.fox.exercise.view.PullToRefreshBase$SmoothScrollRunnable currentSmoothScrollRunnable -> q
    android.view.View getAdapterView() -> getAdapterView
    android.view.View getRefreshableView() -> getRefreshableView
    boolean isRefreshing() -> c
    void setDisableScrollingWhileRefreshing(boolean) -> setDisableScrollingWhileRefreshing
    void onRefreshComplete() -> d
    void setOnRefreshListener(com.fox.exercise.view.PullToRefreshBase$OnRefreshListener) -> setOnRefreshListener
    void setPullToRefreshEnabled(boolean) -> setPullToRefreshEnabled
    void setReleaseLabel(java.lang.String) -> setReleaseLabel
    void setPullLabel(java.lang.String) -> setPullLabel
    void setRefreshingLabel(java.lang.String) -> setRefreshingLabel
    void setRefreshing(boolean) -> setRefreshing
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void addRefreshableView(android.content.Context,android.view.View) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    int getCurrentMode() -> getCurrentMode
    com.fox.exercise.view.LoadingLayout getFooterLayout() -> getFooterLayout
    com.fox.exercise.view.LoadingLayout getHeaderLayout() -> getHeaderLayout
    int getHeaderHeight() -> getHeaderHeight
    int getMode() -> getMode
    boolean isReadyForPullDown() -> a
    boolean isReadyForPullUp() -> b
    void resetHeader() -> e
    void setRefreshingInternal(boolean) -> setRefreshingInternal
    void setHeaderScroll(int) -> setHeaderScroll
    void smoothScrollTo(int) -> a
    void init(android.content.Context,android.util.AttributeSet) -> b
    void measureView(android.view.View) -> a
    boolean pullEvent() -> f
    boolean isReadyForPull() -> g
    void setLongClickable(boolean) -> setLongClickable
com.fox.exercise.view.PullToRefreshBase$OnLastItemVisibleListener -> com.fox.exercise.view.d:
    void onLastItemVisible() -> a
com.fox.exercise.view.PullToRefreshBase$OnRefreshListener -> com.fox.exercise.view.e:
    void onRefresh(int) -> a
com.fox.exercise.view.PullToRefreshBase$SmoothScrollRunnable -> com.fox.exercise.view.f:
    android.view.animation.Interpolator interpolator -> b
    int scrollToY -> c
    int scrollFromY -> d
    android.os.Handler handler -> e
    boolean continueRunning -> f
    long startTime -> g
    int currentY -> h
    com.fox.exercise.view.PullToRefreshBase this$0 -> a
    void run() -> run
    void stop() -> a
com.fox.exercise.view.PullToRefreshGridHeadView -> com.fox.exercise.view.PullToRefreshGridHeadView:
    com.fox.exercise.newversion.view.GridViewWithHeaderAndFooter createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.fox.exercise.view.PullToRefreshGridHeadView$InternalGridView -> com.fox.exercise.view.g:
    com.fox.exercise.view.PullToRefreshGridHeadView this$0 -> b
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> a_
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
com.fox.exercise.view.PullToRefreshGridView -> com.fox.exercise.view.PullToRefreshGridView:
    android.widget.GridView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.fox.exercise.view.PullToRefreshGridView$InternalGridView -> com.fox.exercise.view.h:
    com.fox.exercise.view.PullToRefreshGridView this$0 -> a
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> a_
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
com.fox.exercise.view.PullToRefreshListView -> com.fox.exercise.view.PullToRefreshListView:
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
    android.widget.ListView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.fox.exercise.view.PullToRefreshListView$InternalListView -> com.fox.exercise.view.i:
    com.fox.exercise.view.PullToRefreshListView this$0 -> a
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> a_
    android.view.ContextMenu$ContextMenuInfo getContextMenuInfo() -> getContextMenuInfo
com.fox.exercise.view.SwitchView -> com.fox.exercise.view.SwitchView:
    android.content.Context context -> c
    android.widget.RelativeLayout sv_container -> d
    android.widget.ImageButton iv_switch_cursor -> e
    android.widget.TextView switch_text_true -> f
    android.widget.TextView switch_text_false -> g
    boolean isChecked -> h
    boolean checkedChange -> i
    int mSelectionLeft -> j
    int mSelectionRight -> k
    com.fox.exercise.view.SwitchView$OnCheckedChangeListener onCheckedChangeListener -> l
    int colorNumA -> a
    int colorNumB -> b
    void initView() -> a
    void changeTextColor() -> b
    void moveSelection(int) -> a
    void setOnCheckedChangeListener(com.fox.exercise.view.SwitchView$OnCheckedChangeListener) -> setOnCheckedChangeListener
    void onClick(android.view.View) -> onClick
com.fox.exercise.view.SwitchView$OnCheckedChangeListener -> com.fox.exercise.view.j:
    void onCheckedChanged(boolean) -> a
com.fox.exercise.view.SwitchViewGaoDe -> com.fox.exercise.view.SwitchViewGaoDe:
    android.content.Context context -> c
    android.widget.RelativeLayout sv_container -> d
    android.widget.ImageButton iv_switch_cursor -> e
    android.widget.TextView switch_text_true -> f
    android.widget.TextView switch_text_false -> g
    boolean isChecked -> h
    boolean checkedChange -> i
    int mSelectionLeft -> j
    int mSelectionRight -> k
    com.fox.exercise.view.SwitchViewGaoDe$OnCheckedChangeListener onCheckedChangeListener -> l
    int colorNumA -> a
    int colorNumB -> b
    void initView() -> a
    void changeTextColor() -> b
    void moveSelection(int) -> a
    void setOnCheckedChangeListener(com.fox.exercise.view.SwitchViewGaoDe$OnCheckedChangeListener) -> setOnCheckedChangeListener
    void onClick(android.view.View) -> onClick
com.fox.exercise.view.SwitchViewGaoDe$OnCheckedChangeListener -> com.fox.exercise.view.k:
    void onCheckedChanged(boolean) -> a
com.fox.exercise.weibo._FakeX509TrustManager -> l.a:
    javax.net.ssl.TrustManager[] trustManagers -> a
    java.security.cert.X509Certificate[] _AcceptedIssuers -> b
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void allowAllSSL() -> a
com.fox.exercise.weibo._FakeX509TrustManager$1 -> l.b:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.fox.exercise.weibo.renren.RenRenDataBaseContext -> m.a:
    com.fox.exercise.weibo.renren.RenrenDataHelper dataHelper -> a
    java.lang.Object INSTANCE_LOCK -> b
    com.fox.exercise.weibo.renren.RenrenDataHelper getInstance(android.content.Context) -> a
com.fox.exercise.weibo.renren.RenrenDataHelper -> m.b:
    java.lang.String DB_NAME -> a
    int DB_VERSION -> b
    android.database.sqlite.SQLiteDatabase db -> c
    com.fox.exercise.weibo.renren.RenrenSqliteHelper dbHelper -> d
com.fox.exercise.weibo.renren.RenrenSqliteHelper -> m.c:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.weibo.sina.AccessInfo -> n.a:
    java.lang.String userID -> a
    java.lang.String accessToken -> b
    java.lang.String accessSecret -> c
    java.lang.String nickName -> d
    java.lang.String getUserID() -> a
    void setUserID(java.lang.String) -> a
    java.lang.String getAccessToken() -> b
    void setAccessToken(java.lang.String) -> b
    java.lang.String getAccessSecret() -> c
    void setAccessSecret(java.lang.String) -> c
    java.lang.String getNickName() -> d
    void setNickName(java.lang.String) -> d
com.fox.exercise.weibo.sina.AccessInfoColumn -> n.b:
    java.lang.String[] PROJECTION -> a
com.fox.exercise.weibo.sina.AccessInfoHelper -> n.c:
    com.fox.exercise.weibo.sina.DBHelper dbHelper -> a
    android.database.sqlite.SQLiteDatabase newsDB -> b
    android.content.Context context -> c
    int mutext -> d
    com.fox.exercise.weibo.sina.AccessInfoHelper open() -> a
    void close() -> b
    long create(com.fox.exercise.weibo.sina.AccessInfo) -> a
    java.util.ArrayList getAccessInfos() -> c
    void clear() -> d
    boolean delete() -> e
com.fox.exercise.weibo.sina.AuthoSharePreference -> n.d:
    boolean putToken(android.content.Context,java.lang.String) -> a
    java.lang.String getToken(android.content.Context) -> a
    boolean putExpires(android.content.Context,java.lang.String) -> b
    boolean putRemind(android.content.Context,java.lang.String) -> c
    boolean putUid(android.content.Context,java.lang.String) -> d
com.fox.exercise.weibo.sina.DBHelper -> n.e:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.weibo.sina.InfoHelper -> n.f:
    boolean checkNetWork(android.content.Context) -> a
    void clearAccessInfo(android.content.Context) -> b
    com.fox.exercise.weibo.sina.AccessInfo getAccessInfo(android.content.Context) -> c
com.fox.exercise.weibo.sina.oauth2.AccessToken -> o.a:
com.fox.exercise.weibo.sina.oauth2.AsyncWeiboRunner -> o.b:
    com.fox.exercise.weibo.sina.oauth2.Weibo mWeibo -> a
    void request(android.content.Context,java.lang.String,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,java.lang.String,com.fox.exercise.weibo.sina.oauth2.AsyncWeiboRunner$RequestListener) -> a
com.fox.exercise.weibo.sina.oauth2.AsyncWeiboRunner$RequestListener -> o.c:
    void onComplete(java.lang.String) -> a
    void onError(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> a
com.fox.exercise.weibo.sina.oauth2.DialogError -> o.d:
    int mErrorCode -> a
    java.lang.String mFailingUrl -> b
com.fox.exercise.weibo.sina.oauth2.HttpHeaderFactory -> o.e:
    java.lang.String getWeiboAuthHeader(java.lang.String,java.lang.String,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,java.lang.String,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    java.lang.String generateAuthSignature(java.lang.String,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    com.fox.exercise.weibo.sina.oauth2.WeiboParameters generateSignatureParameters(com.fox.exercise.weibo.sina.oauth2.WeiboParameters,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,java.lang.String) -> a
    com.fox.exercise.weibo.sina.oauth2.WeiboParameters generateAuthParameters(long,long,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    com.fox.exercise.weibo.sina.oauth2.WeiboParameters generateSignatureList(com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> a
    void addAdditionalParams(com.fox.exercise.weibo.sina.oauth2.WeiboParameters,com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> a
    void parseUrlParameters(java.lang.String,com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> a
    java.lang.String generateSignature(java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    java.lang.String encodeParameters(com.fox.exercise.weibo.sina.oauth2.WeiboParameters,java.lang.String,boolean) -> a
    java.lang.String constructRequestURL(java.lang.String) -> a
    java.lang.String encode(java.lang.String) -> b
com.fox.exercise.weibo.sina.oauth2.Oauth2AccessTokenHeader -> o.f:
    java.lang.String getWeiboAuthHeader(java.lang.String,java.lang.String,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,java.lang.String,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    com.fox.exercise.weibo.sina.oauth2.WeiboParameters generateSignatureList(com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> a
    java.lang.String generateSignature(java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    void addAdditionalParams(com.fox.exercise.weibo.sina.oauth2.WeiboParameters,com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> a
com.fox.exercise.weibo.sina.oauth2.RequestToken -> o.g:
com.fox.exercise.weibo.sina.oauth2.Token -> o.h:
    java.lang.String mToken -> c
    java.lang.String mRefreshToken -> d
    long mExpiresIn -> e
    java.lang.String mOauth_verifier -> f
    java.lang.String mOauth_Token_Secret -> a
    java.lang.String[] responseStr -> b
    java.lang.String getToken() -> a
    java.lang.String getRefreshToken() -> b
    long getExpiresIn() -> c
    void setExpiresIn(long) -> a
    void setExpiresIn(java.lang.String) -> a
    void setToken(java.lang.String) -> b
com.fox.exercise.weibo.sina.oauth2.Utility -> o.i:
    com.fox.exercise.weibo.sina.oauth2.WeiboParameters mRequestHeader -> a
    com.fox.exercise.weibo.sina.oauth2.HttpHeaderFactory mAuth -> b
    com.fox.exercise.weibo.sina.oauth2.Token mToken -> c
    void setTokenObject(com.fox.exercise.weibo.sina.oauth2.Token) -> a
    void setAuthorization(com.fox.exercise.weibo.sina.oauth2.HttpHeaderFactory) -> a
    void setHeader(java.lang.String,org.apache.http.client.methods.HttpUriRequest,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    boolean isBundleEmpty(com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> a
    void setRequestHeader(java.lang.String,java.lang.String) -> a
    java.lang.String encodeUrl(com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> b
    android.os.Bundle decodeUrl(java.lang.String) -> a
    android.os.Bundle parseUrl(java.lang.String) -> b
    java.lang.String openUrl(android.content.Context,java.lang.String,java.lang.String,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    java.lang.String openUrl(android.content.Context,java.lang.String,java.lang.String,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    org.apache.http.client.HttpClient getNewHttpClient(android.content.Context) -> a
    void imageContentToUpload(java.io.OutputStream,android.graphics.Bitmap) -> a
    void paramToUpload(java.io.OutputStream,com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> a
    java.lang.String read(org.apache.http.HttpResponse) -> a
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String encodeParameters(com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> c
com.fox.exercise.weibo.sina.oauth2.Utility$MySSLSocketFactory -> o.j:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.fox.exercise.weibo.sina.oauth2.Utility$MySSLSocketFactory$1 -> o.k:
    com.fox.exercise.weibo.sina.oauth2.Utility$MySSLSocketFactory this$1 -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.fox.exercise.weibo.sina.oauth2.Weibo -> o.l:
    java.lang.String SERVER -> a
    java.lang.String URL_OAUTH_TOKEN -> b
    java.lang.String URL_AUTHORIZE -> c
    java.lang.String URL_ACCESS_TOKEN -> d
    java.lang.String URL_AUTHENTICATION -> e
    java.lang.String URL_OAUTH2_ACCESS_TOKEN -> f
    java.lang.String URL_OAUTH2_ACCESS_AUTHORIZE -> g
    java.lang.String APP_KEY -> h
    java.lang.String APP_SECRET -> i
    com.fox.exercise.weibo.sina.oauth2.Weibo mWeiboInstance -> j
    com.fox.exercise.weibo.sina.oauth2.Token mAccessToken -> k
    com.fox.exercise.weibo.sina.oauth2.RequestToken mRequestToken -> l
    com.fox.exercise.weibo.sina.oauth2.WeiboDialogListener mAuthDialogListener -> m
    java.lang.String mRedirectUrl -> n
    com.fox.exercise.weibo.sina.oauth2.Weibo getInstance() -> a
    void setAccessToken(com.fox.exercise.weibo.sina.oauth2.AccessToken) -> a
    com.fox.exercise.weibo.sina.oauth2.Token getAccessToken() -> b
    void setupConsumerConfig(java.lang.String,java.lang.String) -> a
    java.lang.String getAppKey() -> c
    java.lang.String getAppSecret() -> d
    java.lang.String getRedirectUrl() -> e
    void setRedirectUrl(java.lang.String) -> a
    java.lang.String request(android.content.Context,java.lang.String,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,java.lang.String,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    boolean startSingleSignOn(android.app.Activity,java.lang.String,java.lang.String[],int) -> a
    void startDialogAuth(android.app.Activity,java.lang.String[]) -> a
    void authorize(android.app.Activity,com.fox.exercise.weibo.sina.oauth2.WeiboDialogListener) -> a
    void authorize(android.app.Activity,java.lang.String[],int,com.fox.exercise.weibo.sina.oauth2.WeiboDialogListener) -> a
    void dialog(android.content.Context,com.fox.exercise.weibo.sina.oauth2.WeiboParameters,com.fox.exercise.weibo.sina.oauth2.WeiboDialogListener) -> a
    boolean isSessionValid() -> f
    com.fox.exercise.weibo.sina.oauth2.Token access$0(com.fox.exercise.weibo.sina.oauth2.Weibo) -> a
    void access$1(com.fox.exercise.weibo.sina.oauth2.Weibo,com.fox.exercise.weibo.sina.oauth2.Token) -> a
    com.fox.exercise.weibo.sina.oauth2.WeiboDialogListener access$2(com.fox.exercise.weibo.sina.oauth2.Weibo) -> b
com.fox.exercise.weibo.sina.oauth2.Weibo$1 -> o.m:
    com.fox.exercise.weibo.sina.oauth2.Weibo this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void onError(com.fox.exercise.weibo.sina.oauth2.DialogError) -> a
    void onWeiboException(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> b
    void onCancel() -> a
    com.fox.exercise.weibo.sina.oauth2.Weibo access$0(com.fox.exercise.weibo.sina.oauth2.Weibo$1) -> a
com.fox.exercise.weibo.sina.oauth2.Weibo$1$1 -> o.n:
    com.fox.exercise.weibo.sina.oauth2.Weibo$1 this$1 -> a
    java.lang.String val$code -> b
    void run() -> run
com.fox.exercise.weibo.sina.oauth2.WeiboDialog -> o.o:
    android.widget.FrameLayout$LayoutParams FILL -> a
    com.fox.exercise.weibo.sina.oauth2.Weibo mWeibo -> b
    java.lang.String mUrl -> c
    com.fox.exercise.weibo.sina.oauth2.WeiboDialogListener mListener -> d
    android.app.ProgressDialog mSpinner -> e
    android.webkit.WebView mWebView -> f
    android.widget.RelativeLayout webViewContainer -> g
    android.widget.RelativeLayout mContent -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void setUpWebView() -> a
    void handleRedirectUrl(android.webkit.WebView,java.lang.String) -> a
    com.fox.exercise.weibo.sina.oauth2.Weibo access$0(com.fox.exercise.weibo.sina.oauth2.WeiboDialog) -> a
    void access$1(com.fox.exercise.weibo.sina.oauth2.WeiboDialog,android.webkit.WebView,java.lang.String) -> a
    com.fox.exercise.weibo.sina.oauth2.WeiboDialogListener access$2(com.fox.exercise.weibo.sina.oauth2.WeiboDialog) -> b
    android.app.ProgressDialog access$3(com.fox.exercise.weibo.sina.oauth2.WeiboDialog) -> c
    android.widget.RelativeLayout access$4(com.fox.exercise.weibo.sina.oauth2.WeiboDialog) -> d
    android.webkit.WebView access$5(com.fox.exercise.weibo.sina.oauth2.WeiboDialog) -> e
com.fox.exercise.weibo.sina.oauth2.WeiboDialog$WeiboWebViewClient -> o.p:
    com.fox.exercise.weibo.sina.oauth2.WeiboDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
com.fox.exercise.weibo.sina.oauth2.WeiboDialogListener -> o.q:
    void onComplete(android.os.Bundle) -> a
    void onWeiboException(com.fox.exercise.weibo.sina.oauth2.WeiboException) -> b
    void onError(com.fox.exercise.weibo.sina.oauth2.DialogError) -> a
    void onCancel() -> a
com.fox.exercise.weibo.sina.oauth2.WeiboException -> o.r:
    int statusCode -> a
com.fox.exercise.weibo.sina.oauth2.WeiboParameters -> o.s:
    android.os.Bundle mParameters -> a
    java.util.List mKeys -> b
    void add(java.lang.String,java.lang.String) -> a
    void remove(java.lang.String) -> a
    java.lang.String getKey(int) -> a
    java.lang.String getValue(java.lang.String) -> b
    java.lang.String getValue(int) -> b
    int size() -> a
    void addAll(com.fox.exercise.weibo.sina.oauth2.WeiboParameters) -> a
com.fox.exercise.weibo.tencent.DataBaseContext -> p.a:
    com.fox.exercise.weibo.tencent.TencentDataHelper dataHelper -> a
    java.lang.Object INSTANCE_LOCK -> b
    com.fox.exercise.weibo.tencent.TencentDataHelper getInstance(android.content.Context) -> a
com.fox.exercise.weibo.tencent.ErrorCodeConstants -> p.b:
    com.fox.exercise.weibo.tencent.MyErrorCodeHashMap myErrorCodeHashMap -> a
    java.lang.String getErrmsg(java.lang.String) -> a
com.fox.exercise.weibo.tencent.MyErrorCodeHashMap -> p.c:
com.fox.exercise.weibo.tencent.OAuth -> p.d:
    java.lang.String seqid -> a
    java.lang.String clientIP -> b
    java.lang.String appFrom -> c
    java.lang.String openid -> d
    java.lang.String openkey -> e
    java.lang.String oauthVersion -> f
    java.lang.String scope -> g
    int status -> h
    java.lang.String msg -> i
    java.util.Random random -> j
    void setClientIP(java.lang.String) -> a
    java.lang.String getOpenid() -> a
    void setOpenid(java.lang.String) -> b
    java.lang.String getOpenkey() -> b
    void setOpenkey(java.lang.String) -> c
    void setStatus(int) -> a
    void setMsg(java.lang.String) -> d
com.fox.exercise.weibo.tencent.OAuthClientException -> p.e:
    java.lang.String errcode -> a
    java.lang.String errmsg -> b
com.fox.exercise.weibo.tencent.OAuthV2 -> p.f:
    java.lang.String redirectUri -> l
    java.lang.String clientId -> m
    java.lang.String clientSecret -> n
    java.lang.String responseType -> o
    java.lang.String type -> p
    java.lang.String authorizeCode -> q
    java.lang.String accessToken -> r
    java.lang.String expiresIn -> s
    java.lang.String grantType -> t
    java.lang.String refreshToken -> u
    java.lang.String scope -> k
    java.util.List getAuthorizationParamsList() -> c
    java.util.List getTokenParamsList() -> d
    void setClientId(java.lang.String) -> e
    void setClientSecret(java.lang.String) -> f
    void setResponseType(java.lang.String) -> g
    java.lang.String getAccessToken() -> e
    void setAccessToken(java.lang.String) -> h
    java.lang.String getExpiresIn() -> f
    void setExpiresIn(java.lang.String) -> i
com.fox.exercise.weibo.tencent.OAuthV2Client -> p.g:
    java.lang.String TAG -> a
    com.fox.exercise.weibo.tencent.QHttpClient Q_HTTP_CLIENT -> b
    java.lang.String generateImplicitGrantUrl(com.fox.exercise.weibo.tencent.OAuthV2) -> a
    boolean parseAccessTokenAndOpenId(java.lang.String,com.fox.exercise.weibo.tencent.OAuthV2) -> a
com.fox.exercise.weibo.tencent.OAuthV2Request -> p.h:
    com.fox.exercise.weibo.tencent.QHttpClient qHttpClient -> a
    java.lang.String getResource(java.lang.String,java.util.List,com.fox.exercise.weibo.tencent.OAuth) -> a
    void removeExtraClientip(java.util.List,com.fox.exercise.weibo.tencent.OAuthV2) -> a
    java.lang.String postContent(java.lang.String,java.util.List,com.fox.exercise.weibo.tencent.OAuth) -> b
    java.lang.String postFile(java.lang.String,java.util.List,java.util.List,com.fox.exercise.weibo.tencent.OAuth) -> a
    void shutdownConnection() -> a
com.fox.exercise.weibo.tencent.QArrayList -> p.i:
    boolean add(org.apache.http.NameValuePair) -> a
    boolean add(java.lang.Object) -> add
com.fox.exercise.weibo.tencent.QHttpClient -> p.j:
    java.lang.String TAG -> a
    org.apache.http.client.HttpClient httpClient -> b
    java.lang.String httpGet(java.lang.String,java.lang.String) -> a
    java.lang.String httpPost(java.lang.String,java.lang.String) -> b
    java.lang.String httpPostWithFile(java.lang.String,java.lang.String,java.util.List) -> a
    void shutdownConnection() -> a
com.fox.exercise.weibo.tencent.QSSLSocketFactory -> p.k:
    javax.net.ssl.SSLContext sslcontext -> a
    javax.net.ssl.SSLContext getEasySSLContext() -> a
    javax.net.ssl.SSLContext getSSLContext() -> b
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fox.exercise.weibo.tencent.QSSLSocketFactory$1 -> p.l:
    com.fox.exercise.weibo.tencent.QSSLSocketFactory this$0 -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.fox.exercise.weibo.tencent.QStrOperate -> p.m:
    boolean hasValue(java.lang.String) -> a
    java.lang.String paramEncode(java.lang.String) -> b
    java.lang.String ParamDecode(java.lang.String) -> c
    java.util.List getQueryParamsList(java.lang.String) -> d
    java.lang.String getQueryString(java.util.List) -> a
com.fox.exercise.weibo.tencent.SqliteHelper -> p.n:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.fox.exercise.weibo.tencent.TencentDataHelper -> p.o:
    java.lang.String DB_NAME -> a
    int DB_VERSION -> b
    android.database.sqlite.SQLiteDatabase db -> c
    com.fox.exercise.weibo.tencent.SqliteHelper dbHelper -> d
    void Close() -> a
    void clear() -> b
    java.util.List GetUserList(java.lang.Boolean) -> a
    java.lang.Boolean HaveUserInfo(java.lang.String) -> a
    int UpdateUserInfo(com.fox.exercise.weibo.tencent.UserInfo) -> a
    void clearDB() -> c
    java.lang.Long SaveUserInfo(com.fox.exercise.weibo.tencent.UserInfo) -> b
    int DelUserInfo(java.lang.String) -> b
    boolean delete() -> d
com.fox.exercise.weibo.tencent.UserInfo -> p.p:
    java.lang.String id -> a
    java.lang.String userId -> b
    java.lang.String token -> c
    java.lang.String tokenSecret -> d
    java.lang.String userName -> e
    java.lang.String userNick -> f
    android.graphics.drawable.Drawable userIcon -> g
    java.lang.String expires_in -> h
    java.lang.String openID -> i
    java.lang.String openKey -> j
    void setId(java.lang.String) -> a
    java.lang.String getUserId() -> a
    void setUserId(java.lang.String) -> b
    java.lang.String getToken() -> b
    void setToken(java.lang.String) -> c
    java.lang.String getTokenSecret() -> c
    java.lang.String getUserName() -> d
    void setUserName(java.lang.String) -> d
    void setUserIcon(android.graphics.drawable.Drawable) -> a
    java.lang.String getUserNick() -> e
    void setUserNick(java.lang.String) -> e
    java.lang.String getExpiresIn() -> f
    void setExpiresIn(java.lang.String) -> f
    java.lang.String getOpenID() -> g
    void setOpenID(java.lang.String) -> g
    java.lang.String getOpenKey() -> h
    void setOpenKey(java.lang.String) -> h
com.fox.exercise.weibo.tencent.proxy.BasicAPI -> q.a:
    com.fox.exercise.weibo.tencent.proxy.RequestAPI requestAPI -> a
    java.lang.String apiBaseUrl -> b
    void shutdownConnection() -> a
com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy -> q.b:
    com.fox.exercise.weibo.tencent.OAuthV2 mAuthV2 -> a
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy mWeiboManager -> b
    com.fox.exercise.weibo.tencent.proxy.QQWeiboProxy getInstance() -> a
    java.lang.String getAuthoUrl() -> b
    void setAccesToakenString(java.lang.String) -> a
    void setOpenid(java.lang.String) -> b
    void setOpenKey(java.lang.String) -> c
    void setExpireIn(java.lang.String) -> d
    boolean parseAccessTokenAndOpenId(java.lang.String) -> e
    java.lang.String getAccessToken() -> c
    java.lang.String getOpenID() -> d
    java.lang.String getOpenKey() -> e
    java.lang.String getExpireIn() -> f
    java.lang.String getUserInfo() -> g
    java.lang.String sendPicWeibo(java.lang.String,java.lang.String) -> a
com.fox.exercise.weibo.tencent.proxy.RequestAPI -> q.c:
    java.lang.String getResource(java.lang.String,java.util.List,com.fox.exercise.weibo.tencent.OAuth) -> a
    java.lang.String postContent(java.lang.String,java.util.List,com.fox.exercise.weibo.tencent.OAuth) -> b
    java.lang.String postFile(java.lang.String,java.util.List,java.util.List,com.fox.exercise.weibo.tencent.OAuth) -> a
    void shutdownConnection() -> a
com.fox.exercise.weibo.tencent.proxy.TAPI -> q.d:
    java.lang.String tShowUrl -> c
    java.lang.String tAddUrl -> d
    java.lang.String tAddPicUrl -> e
    java.lang.String tAddPicUrlUrl -> f
    java.lang.String tAddVideoUrl -> g
    java.lang.String tCommentUrl -> h
    java.lang.String tDelUrl -> i
    java.lang.String tReAddUrl -> j
    java.lang.String tReCountUrl -> k
    java.lang.String tReListUrl -> l
    java.lang.String tReplyUrl -> m
    java.lang.String addPic(com.fox.exercise.weibo.tencent.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String addPic(com.fox.exercise.weibo.tencent.OAuth,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.fox.exercise.weibo.tencent.proxy.UserAPI -> q.e:
    java.lang.String userInfoUrl -> c
    java.lang.String userOtherInfoUrl -> d
    java.lang.String userInfosUrl -> e
    java.lang.String info(com.fox.exercise.weibo.tencent.OAuth,java.lang.String) -> a
com.fox.exercise.widght.MutilTouchImageView -> com.fox.exercise.widght.MutilTouchImageView:
    android.graphics.Matrix mBaseMatrix -> a
    android.graphics.Matrix mSuppMatrix -> b
    android.graphics.Matrix mDisplayMatrix -> i
    float[] mMatrixValues -> j
    android.graphics.Bitmap mBitmapDisplayed -> c
    int mThisWidth -> d
    int mThisHeight -> e
    float mMaxZoom -> f
    float mBeforeLenght -> g
    float mAfterLenght -> k
    boolean mIsCanScale -> l
    long mLastDialogTime -> m
    android.os.Handler mHandler -> h
    java.lang.Runnable mOnLayoutRunnable -> n
    void onLayout(boolean,int,int,int,int) -> onLayout
    void scaleWithFinger(android.view.MotionEvent) -> a
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageBitmapResetBase(android.graphics.Bitmap,boolean) -> a
    void setImageRotateBitmapResetBase(android.graphics.Bitmap,boolean,boolean) -> a
    void center(boolean,boolean) -> a
    float getValue(android.graphics.Matrix,int) -> a
    float getScale(android.graphics.Matrix) -> a
    float getScale() -> getScale
    void getProperBaseMatrix(android.graphics.Bitmap,android.graphics.Matrix) -> a
    android.graphics.Matrix getImageViewMatrix() -> getImageViewMatrix
    boolean zoomTo(float,float,float) -> a
    boolean zoomTo(float) -> a
    void zoomToPoint(float,float,float) -> b
    void postTranslate(float,float) -> a
    void panBy(float,float) -> b
    void postTranslateCenter(float,float) -> c
    boolean isScrollOver(float) -> b
com.fox.exercise.widght.MutilTouchImageView$1 -> com.fox.exercise.widght.a:
    com.fox.exercise.widght.MutilTouchImageView this$0 -> a
    android.graphics.Bitmap val$bitmap -> b
    boolean val$resetSupp -> c
    boolean val$canScale -> d
    void run() -> run
com.fox.exercise.widght.MutilTouchScrollLayout -> com.fox.exercise.widght.MutilTouchScrollLayout:
    android.widget.Scroller mScroller -> b
    int mCurScreen -> c
    int mDefaultScreen -> d
    int mTouchState -> e
    int mTouchSlop -> f
    float mLastMotionX -> g
    float mLastMotionY -> h
    com.fox.exercise.widght.MutilTouchScrollLayout$OnViewChangeListener mOnViewChangeListener -> i
    android.view.GestureDetector mListener -> j
    android.content.Context context -> k
    com.fox.exercise.widght.MutilTouchImageView childView -> l
    boolean isSingleTouch -> a
    android.view.VelocityTracker mVelocityTracker -> m
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void snapToDestination() -> a
    void snapToScreen(int) -> a
    void setToScreen(int) -> setToScreen
    int getCurScreen() -> getCurScreen
    void computeScroll() -> computeScroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void removeViewAt(int) -> removeViewAt
    void SetOnViewChangeListener(com.fox.exercise.widght.MutilTouchScrollLayout$OnViewChangeListener) -> a
    com.fox.exercise.widght.MutilTouchImageView access$0(com.fox.exercise.widght.MutilTouchScrollLayout) -> a
    android.content.Context access$1(com.fox.exercise.widght.MutilTouchScrollLayout) -> b
com.fox.exercise.widght.MutilTouchScrollLayout$MyGestureListener -> com.fox.exercise.widght.b:
    com.fox.exercise.widght.MutilTouchScrollLayout this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
com.fox.exercise.widght.MutilTouchScrollLayout$OnViewChangeListener -> com.fox.exercise.widght.c:
    void OnViewChange(int,com.fox.exercise.widght.MutilTouchImageView) -> a
com.fox.exercise.widght.NumericWheelAdapter -> com.fox.exercise.widght.d:
    int minValue -> a
    int maxValue -> b
    java.lang.String format -> c
    java.lang.String getItem(int) -> a
    int getItemsCount() -> a
    int getMaximumLength() -> b
com.fox.exercise.widght.OnWheelChangedListener -> com.fox.exercise.widght.e:
    void onChanged(com.fox.exercise.widght.WheelView,int,int) -> a
com.fox.exercise.widght.OnWheelScrollListener -> com.fox.exercise.widght.f:
    void onScrollingStarted(com.fox.exercise.widght.WheelView) -> a
    void onScrollingFinished(com.fox.exercise.widght.WheelView) -> b
com.fox.exercise.widght.WheelAdapter -> com.fox.exercise.widght.g:
    int getItemsCount() -> a
    java.lang.String getItem(int) -> a
    int getMaximumLength() -> b
com.fox.exercise.widght.WheelView -> com.fox.exercise.widght.WheelView:
    int[] SHADOWS_COLORS -> b
    int TEXT_SIZE -> c
    int ITEM_OFFSET -> d
    com.fox.exercise.widght.WheelAdapter adapter -> e
    int currentItem -> f
    int itemsWidth -> g
    int labelWidth -> h
    int visibleItems -> i
    int itemHeight -> j
    android.text.TextPaint itemsPaint -> k
    android.text.TextPaint valuePaint -> l
    android.text.StaticLayout itemsLayout -> m
    android.text.StaticLayout labelLayout -> n
    android.text.StaticLayout valueLayout -> o
    java.lang.String label -> p
    android.graphics.drawable.Drawable centerDrawable -> q
    android.graphics.drawable.GradientDrawable topShadow -> r
    android.graphics.drawable.GradientDrawable bottomShadow -> s
    boolean isScrollingPerformed -> t
    int scrollingOffset -> u
    android.view.GestureDetector gestureDetector -> v
    android.widget.Scroller scroller -> w
    int lastScrollY -> x
    boolean isCyclic -> a
    java.util.List changingListeners -> y
    java.util.List scrollingListeners -> z
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> A
    int MESSAGE_SCROLL -> B
    int MESSAGE_JUSTIFY -> C
    android.os.Handler animationHandler -> D
    void initData(android.content.Context) -> a
    com.fox.exercise.widght.WheelAdapter getAdapter() -> getAdapter
    void setAdapter(com.fox.exercise.widght.WheelAdapter) -> setAdapter
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    int getVisibleItems() -> getVisibleItems
    void setVisibleItems(int) -> setVisibleItems
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    void notifyChangingListeners(int,int) -> a
    void addScrollingListener(com.fox.exercise.widght.OnWheelScrollListener) -> a
    void notifyScrollingListenersAboutStart() -> a
    void notifyScrollingListenersAboutEnd() -> b
    int getCurrentItem() -> getCurrentItem
    void setCurrentItem(int,boolean) -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCyclic(boolean) -> setCyclic
    void invalidateLayouts() -> d
    void initResourcesIfNecessary() -> e
    int getDesiredHeight(android.text.Layout) -> a
    java.lang.String getTextItem(int) -> a
    java.lang.String buildText(boolean) -> a
    int getMaxTextLength() -> getMaxTextLength
    int getItemHeight() -> getItemHeight
    int calculateLayoutWidth(int,int) -> c
    void createLayouts(int,int) -> d
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawShadows(android.graphics.Canvas) -> a
    void drawValue(android.graphics.Canvas) -> b
    void drawItems(android.graphics.Canvas) -> c
    void drawCenterRect(android.graphics.Canvas) -> d
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doScroll(int) -> b
    void setNextMessage(int) -> setNextMessage
    void clearMessages() -> f
    void justify() -> g
    void startScrolling() -> h
    void finishScrolling() -> c
    void scroll(int,int) -> b
    boolean access$0(com.fox.exercise.widght.WheelView) -> a
    android.widget.Scroller access$1(com.fox.exercise.widght.WheelView) -> b
    void access$2(com.fox.exercise.widght.WheelView) -> c
    void access$3(com.fox.exercise.widght.WheelView) -> d
    void access$4(com.fox.exercise.widght.WheelView,int) -> a
    int access$5(com.fox.exercise.widght.WheelView) -> e
    int access$6(com.fox.exercise.widght.WheelView) -> f
    int access$7(com.fox.exercise.widght.WheelView) -> g
    void access$8(com.fox.exercise.widght.WheelView,int) -> b
    com.fox.exercise.widght.WheelAdapter access$9(com.fox.exercise.widght.WheelView) -> h
    int access$10(com.fox.exercise.widght.WheelView) -> i
    void access$11(com.fox.exercise.widght.WheelView,int) -> c
    android.os.Handler access$12(com.fox.exercise.widght.WheelView) -> j
    void access$13(com.fox.exercise.widght.WheelView) -> k
com.fox.exercise.widght.WheelView$1 -> com.fox.exercise.widght.h:
    com.fox.exercise.widght.WheelView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.fox.exercise.widght.WheelView$2 -> com.fox.exercise.widght.i:
    com.fox.exercise.widght.WheelView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.widght.expandablelayout.ExpandableLayout -> com.fox.exercise.widght.expandablelayout.ExpandableLayout:
    java.lang.Boolean isAnimationRunning -> a
    java.lang.Boolean isOpened -> b
    java.lang.Integer duration -> c
    android.widget.FrameLayout contentLayout -> d
    android.widget.FrameLayout headerLayout -> e
    android.view.animation.Animation animation -> f
    android.content.Context mContext -> g
    void initView(java.lang.String,android.view.View) -> a
    void init(android.content.Context,android.util.AttributeSet) -> a
    void expand(android.view.View) -> a
    void collapse(android.view.View) -> b
    android.widget.FrameLayout getHeaderLayout() -> getHeaderLayout
    android.widget.FrameLayout getContentLayout() -> getContentLayout
    void setLayoutAnimationListener(android.view.animation.Animation$AnimationListener) -> setLayoutAnimationListener
    java.lang.Boolean access$0(com.fox.exercise.widght.expandablelayout.ExpandableLayout) -> a
    android.widget.FrameLayout access$1(com.fox.exercise.widght.expandablelayout.ExpandableLayout) -> b
    void access$2(com.fox.exercise.widght.expandablelayout.ExpandableLayout,android.view.View) -> a
    void access$3(com.fox.exercise.widght.expandablelayout.ExpandableLayout,android.view.View) -> b
    void access$4(com.fox.exercise.widght.expandablelayout.ExpandableLayout,java.lang.Boolean) -> a
    java.lang.Integer access$5(com.fox.exercise.widght.expandablelayout.ExpandableLayout) -> c
    void access$6(com.fox.exercise.widght.expandablelayout.ExpandableLayout,java.lang.Boolean) -> b
com.fox.exercise.widght.expandablelayout.ExpandableLayout$1 -> com.fox.exercise.widght.expandablelayout.a:
    com.fox.exercise.widght.expandablelayout.ExpandableLayout this$0 -> a
    void onClick(android.view.View) -> onClick
    com.fox.exercise.widght.expandablelayout.ExpandableLayout access$0(com.fox.exercise.widght.expandablelayout.ExpandableLayout$1) -> a
com.fox.exercise.widght.expandablelayout.ExpandableLayout$1$1 -> com.fox.exercise.widght.expandablelayout.b:
    com.fox.exercise.widght.expandablelayout.ExpandableLayout$1 this$1 -> a
    void run() -> run
com.fox.exercise.widght.expandablelayout.ExpandableLayout$2 -> com.fox.exercise.widght.expandablelayout.c:
    com.fox.exercise.widght.expandablelayout.ExpandableLayout this$0 -> a
    void onClick(android.view.View) -> onClick
    com.fox.exercise.widght.expandablelayout.ExpandableLayout access$0(com.fox.exercise.widght.expandablelayout.ExpandableLayout$2) -> a
com.fox.exercise.widght.expandablelayout.ExpandableLayout$2$1 -> com.fox.exercise.widght.expandablelayout.d:
    com.fox.exercise.widght.expandablelayout.ExpandableLayout$2 this$1 -> a
    void run() -> run
com.fox.exercise.widght.expandablelayout.ExpandableLayout$3 -> com.fox.exercise.widght.expandablelayout.e:
    com.fox.exercise.widght.expandablelayout.ExpandableLayout this$0 -> a
    android.view.View val$v -> b
    int val$targetHeight -> c
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    boolean willChangeBounds() -> willChangeBounds
com.fox.exercise.widght.expandablelayout.ExpandableLayout$4 -> com.fox.exercise.widght.expandablelayout.f:
    com.fox.exercise.widght.expandablelayout.ExpandableLayout this$0 -> a
    android.view.View val$v -> b
    int val$initialHeight -> c
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    boolean willChangeBounds() -> willChangeBounds
com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem -> com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem:
    java.lang.Boolean isAnimationRunning -> a
    java.lang.Boolean isOpened -> b
    java.lang.Integer duration -> c
    android.widget.FrameLayout contentLayout -> d
    android.widget.FrameLayout headerLayout -> e
    java.lang.Boolean closeByUser -> f
    void init(android.content.Context,android.util.AttributeSet) -> a
    void collapse(android.view.View) -> a
    java.lang.Boolean isOpened() -> a
    android.widget.FrameLayout getHeaderLayout() -> getHeaderLayout
    android.widget.FrameLayout getContentLayout() -> getContentLayout
    void hide() -> b
    java.lang.Boolean getCloseByUser() -> getCloseByUser
    void access$0(com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem,java.lang.Boolean) -> a
    void access$1(com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem,java.lang.Boolean) -> b
    void access$2(com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem,java.lang.Boolean) -> c
com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem$1 -> com.fox.exercise.widght.expandablelayout.g:
    com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem$3 -> com.fox.exercise.widght.expandablelayout.h:
    com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem this$0 -> a
    android.view.View val$v -> b
    int val$initialHeight -> c
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    boolean willChangeBounds() -> willChangeBounds
com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem$5 -> com.fox.exercise.widght.expandablelayout.i:
    com.fox.exercise.widght.expandablelayout.ExpandableLayoutItem this$0 -> a
    void run() -> run
com.fox.exercise.wxapi.WXEntryActivity -> com.fox.exercise.wxapi.WXEntryActivity:
    com.tencent.mm.sdk.openapi.IWXAPI api -> a
    cn.ingenic.indroidsync.SportsApp msApp -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> onResp
    void healthCount() -> a
    cn.ingenic.indroidsync.SportsApp access$0(com.fox.exercise.wxapi.WXEntryActivity) -> a
com.fox.exercise.wxapi.WXEntryActivity$1 -> com.fox.exercise.wxapi.a:
    com.fox.exercise.wxapi.WXEntryActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.fox.exercise.wxapi.WXEntryActivity$2 -> com.fox.exercise.wxapi.b:
    com.fox.exercise.wxapi.WXEntryActivity this$0 -> a
    java.lang.String val$weixindatacount -> b
    android.content.SharedPreferences val$sp -> c
    com.fox.exercise.api.ApiBack doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.fox.exercise.api.ApiBack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.fox.exercise.wxapi.WXPayEntryActivity -> com.fox.exercise.wxapi.WXPayEntryActivity:
    com.tencent.mm.sdk.openapi.IWXAPI api -> i
    com.fox.exercise.newversion.entity.YeDindanInfo ypinfo -> j
    com.fox.exercise.newversion.entity.YeDindanInfo shopinfo -> k
    int coode -> a
    int bs -> b
    int shopbs -> c
    java.lang.String sessionid -> d
    java.lang.String numid -> e
    java.lang.String shopnumid -> f
    cn.ingenic.indroidsync.SportsApp mSportsApp -> g
    android.app.Dialog mLoadProgressDialog -> l
    android.widget.TextView text -> h
    android.os.Handler mHandler -> m
    void onCreate(android.os.Bundle) -> onCreate
    void waitShowDialog() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> onReq
    void GetData() -> b
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> onResp
    android.app.Dialog access$0(com.fox.exercise.wxapi.WXPayEntryActivity) -> a
    com.fox.exercise.newversion.entity.YeDindanInfo access$1(com.fox.exercise.wxapi.WXPayEntryActivity) -> b
    com.fox.exercise.newversion.entity.YeDindanInfo access$2(com.fox.exercise.wxapi.WXPayEntryActivity) -> c
    void access$3(com.fox.exercise.wxapi.WXPayEntryActivity,com.fox.exercise.newversion.entity.YeDindanInfo) -> a
    void access$4(com.fox.exercise.wxapi.WXPayEntryActivity,com.fox.exercise.newversion.entity.YeDindanInfo) -> b
    android.os.Handler access$5(com.fox.exercise.wxapi.WXPayEntryActivity) -> d
com.fox.exercise.wxapi.WXPayEntryActivity$1 -> com.fox.exercise.wxapi.c:
    com.fox.exercise.wxapi.WXPayEntryActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.fox.exercise.wxapi.WXPayEntryActivity access$0(com.fox.exercise.wxapi.WXPayEntryActivity$1) -> a
com.fox.exercise.wxapi.WXPayEntryActivity$1$1 -> com.fox.exercise.wxapi.d:
    com.fox.exercise.wxapi.WXPayEntryActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.wxapi.WXPayEntryActivity$1$2 -> com.fox.exercise.wxapi.e:
    com.fox.exercise.wxapi.WXPayEntryActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.wxapi.WXPayEntryActivity$1$3 -> com.fox.exercise.wxapi.f:
    com.fox.exercise.wxapi.WXPayEntryActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.wxapi.WXPayEntryActivity$1$4 -> com.fox.exercise.wxapi.g:
    com.fox.exercise.wxapi.WXPayEntryActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.wxapi.WXPayEntryActivity$1$5 -> com.fox.exercise.wxapi.h:
    com.fox.exercise.wxapi.WXPayEntryActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.wxapi.WXPayEntryActivity$1$6 -> com.fox.exercise.wxapi.i:
    com.fox.exercise.wxapi.WXPayEntryActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.fox.exercise.wxapi.WXPayEntryActivity$2 -> com.fox.exercise.wxapi.j:
    com.fox.exercise.wxapi.WXPayEntryActivity this$0 -> a
    void run() -> run
com.fox.exercise.wxutil.MD5 -> r.a:
    java.lang.String getMessageDigest(byte[]) -> a
com.google.gson.JsonArray -> s.a:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    int size() -> a
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> a
    java.lang.Number getAsNumber() -> b
    java.lang.String getAsString() -> c
    boolean getAsBoolean() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonElement -> s.b:
    boolean isJsonArray() -> e
    boolean isJsonObject() -> f
    boolean isJsonPrimitive() -> g
    boolean isJsonNull() -> h
    com.google.gson.JsonObject getAsJsonObject() -> i
    com.google.gson.JsonArray getAsJsonArray() -> j
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> k
    boolean getAsBoolean() -> d
    java.lang.Boolean getAsBooleanWrapper() -> l
    java.lang.Number getAsNumber() -> b
    java.lang.String getAsString() -> c
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> s.c:
com.google.gson.JsonNull -> s.d:
    com.google.gson.JsonNull INSTANCE -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> s.e:
    com.google.gson.internal.LinkedTreeMap members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> a
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> s.f:
com.google.gson.JsonParser -> s.g:
    com.google.gson.JsonElement parse(java.lang.String) -> a
    com.google.gson.JsonElement parse(java.io.Reader) -> a
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> a
com.google.gson.JsonPrimitive -> s.h:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> a
    java.lang.Boolean getAsBooleanWrapper() -> l
    boolean getAsBoolean() -> d
    boolean isNumber() -> m
    java.lang.Number getAsNumber() -> b
    java.lang.String getAsString() -> c
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSyntaxException -> s.i:
com.google.gson.TypeAdapter -> s.j:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
com.google.gson.TypeAdapterFactory -> s.k:
com.google.gson.internal.$Gson$Preconditions -> t.a:
    void checkArgument(boolean) -> a
com.google.gson.internal.JsonReaderInternalAccess -> t.b:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> a
com.google.gson.internal.LazilyParsedNumber -> t.c:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.LinkedTreeMap -> t.d:
    java.util.Comparator NATURAL_ORDER -> g
    java.util.Comparator comparator -> a
    com.google.gson.internal.LinkedTreeMap$Node root -> b
    int size -> c
    int modCount -> d
    com.google.gson.internal.LinkedTreeMap$Node header -> e
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> h
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> i
    boolean $assertionsDisabled -> f
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> b
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> b
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
com.google.gson.internal.LinkedTreeMap$1 -> t.e:
    int compare(java.lang.Comparable,java.lang.Comparable) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> t.f:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> t.g:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> a
    java.util.Map$Entry next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> t.h:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> t.i:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> t.j:
    com.google.gson.internal.LinkedTreeMap$Node next -> b
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> c
    int expectedModCount -> d
    com.google.gson.internal.LinkedTreeMap this$0 -> e
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> b
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> t.k:
    com.google.gson.internal.LinkedTreeMap$Node parent -> a
    com.google.gson.internal.LinkedTreeMap$Node left -> b
    com.google.gson.internal.LinkedTreeMap$Node right -> c
    com.google.gson.internal.LinkedTreeMap$Node next -> d
    com.google.gson.internal.LinkedTreeMap$Node prev -> e
    java.lang.Object key -> f
    java.lang.Object value -> g
    int height -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> a
    com.google.gson.internal.LinkedTreeMap$Node last() -> b
com.google.gson.internal.Streams -> t.l:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
com.google.gson.internal.bind.TypeAdapters -> u.a:
    com.google.gson.TypeAdapter CLASS -> a
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> b
    com.google.gson.TypeAdapter BIT_SET -> c
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> d
    com.google.gson.TypeAdapter BOOLEAN -> e
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> f
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> g
    com.google.gson.TypeAdapter BYTE -> h
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> i
    com.google.gson.TypeAdapter SHORT -> j
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> k
    com.google.gson.TypeAdapter INTEGER -> l
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> m
    com.google.gson.TypeAdapter LONG -> n
    com.google.gson.TypeAdapter FLOAT -> o
    com.google.gson.TypeAdapter DOUBLE -> p
    com.google.gson.TypeAdapter NUMBER -> q
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> r
    com.google.gson.TypeAdapter CHARACTER -> s
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> t
    com.google.gson.TypeAdapter STRING -> u
    com.google.gson.TypeAdapter BIG_DECIMAL -> v
    com.google.gson.TypeAdapter BIG_INTEGER -> w
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> x
    com.google.gson.TypeAdapter STRING_BUILDER -> y
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> z
    com.google.gson.TypeAdapter STRING_BUFFER -> A
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> B
    com.google.gson.TypeAdapter URL -> C
    com.google.gson.TypeAdapterFactory URL_FACTORY -> D
    com.google.gson.TypeAdapter URI -> E
    com.google.gson.TypeAdapterFactory URI_FACTORY -> F
    com.google.gson.TypeAdapter INET_ADDRESS -> G
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> H
    com.google.gson.TypeAdapter UUID -> I
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> J
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> K
    com.google.gson.TypeAdapter CALENDAR -> L
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> M
    com.google.gson.TypeAdapter LOCALE -> N
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> O
    com.google.gson.TypeAdapter JSON_ELEMENT -> P
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> Q
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> R
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> b
com.google.gson.internal.bind.TypeAdapters$1 -> u.b:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$10 -> u.c:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$11 -> u.d:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$12 -> u.e:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$13 -> u.f:
    java.lang.String read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$14 -> u.g:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$15 -> u.h:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$16 -> u.i:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$17 -> u.j:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$18 -> u.k:
    java.net.URL read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$19 -> u.l:
    java.net.URI read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$2 -> u.m:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$20 -> u.n:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$21 -> u.o:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$22 -> u.p:
com.google.gson.internal.bind.TypeAdapters$23 -> u.q:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$24 -> u.r:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$25 -> u.s:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$26 -> u.t:
com.google.gson.internal.bind.TypeAdapters$28 -> u.u:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> u.v:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> u.w:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$30 -> u.x:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> u.y:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> u.z:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> u.aa:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$5 -> u.ab:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$6 -> u.ac:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$7 -> u.ad:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$8 -> u.ae:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$9 -> u.af:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.stream.JsonReader -> v.a:
    char[] NON_EXECUTE_PREFIX -> a
    java.io.Reader in -> b
    boolean lenient -> c
    char[] buffer -> d
    int pos -> e
    int limit -> f
    int lineNumber -> g
    int lineStart -> h
    int peeked -> i
    long peekedLong -> j
    int peekedNumberLength -> k
    java.lang.String peekedString -> l
    int[] stack -> m
    int stackSize -> n
    void setLenient(boolean) -> a
    boolean isLenient() -> a
    void beginArray() -> b
    void endArray() -> c
    void beginObject() -> d
    void endObject() -> e
    boolean hasNext() -> f
    com.google.gson.stream.JsonToken peek() -> g
    int doPeek() -> o
    int peekKeyword() -> p
    int peekNumber() -> q
    boolean isLiteral(char) -> a
    java.lang.String nextName() -> h
    java.lang.String nextString() -> i
    boolean nextBoolean() -> j
    void nextNull() -> k
    double nextDouble() -> l
    long nextLong() -> m
    java.lang.String nextQuotedValue(char) -> b
    java.lang.String nextUnquotedValue() -> r
    int nextInt() -> n
    void close() -> close
    void push(int) -> a
    boolean fillBuffer(int) -> b
    int getLineNumber() -> s
    int getColumnNumber() -> t
    int nextNonWhitespace(boolean) -> b
    void checkLenient() -> u
    void skipToEndOfLine() -> v
    boolean skipTo(java.lang.String) -> a
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> w
    java.io.IOException syntaxError(java.lang.String) -> b
    void consumeNonExecutePrefix() -> x
com.google.gson.stream.JsonReader$1 -> v.b:
com.google.gson.stream.JsonToken -> v.c:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> a
    com.google.gson.stream.JsonToken END_ARRAY -> b
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> c
    com.google.gson.stream.JsonToken END_OBJECT -> d
    com.google.gson.stream.JsonToken NAME -> e
    com.google.gson.stream.JsonToken STRING -> f
    com.google.gson.stream.JsonToken NUMBER -> g
    com.google.gson.stream.JsonToken BOOLEAN -> h
    com.google.gson.stream.JsonToken NULL -> i
    com.google.gson.stream.JsonToken END_DOCUMENT -> j
    com.google.gson.stream.JsonToken[] $VALUES -> k
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> v.d:
    java.lang.String[] REPLACEMENT_CHARS -> a
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> b
    java.io.Writer out -> c
    int[] stack -> d
    int stackSize -> e
    java.lang.String indent -> f
    java.lang.String separator -> g
    boolean lenient -> h
    boolean htmlSafe -> i
    java.lang.String deferredName -> j
    boolean serializeNulls -> k
    void setLenient(boolean) -> a
    com.google.gson.stream.JsonWriter beginArray() -> a
    com.google.gson.stream.JsonWriter endArray() -> b
    com.google.gson.stream.JsonWriter beginObject() -> c
    com.google.gson.stream.JsonWriter endObject() -> d
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> a
    void push(int) -> a
    int peek() -> f
    void replaceTop(int) -> b
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> g
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> e
    com.google.gson.stream.JsonWriter value(boolean) -> b
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> c
    void newline() -> h
    void beforeName() -> i
    void beforeValue(boolean) -> c
com.google.gson.stream.MalformedJsonException -> v.e:
com.jwetherell.heart_rate_monitor.ImageProcessing -> w.a:
    int decodeYUV420SPtoRedSum(byte[],int,int) -> b
    int decodeYUV420SPtoRedAvg(byte[],int,int) -> a
com.nostra13.universalimageloader.cache.disc.DiskCache -> x.a:
    java.io.File get(java.lang.String) -> a
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean save(java.lang.String,android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.cache.disc.impl.BaseDiskCache -> y.a:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    java.io.File cacheDir -> b
    java.io.File reserveCacheDir -> c
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> d
    int bufferSize -> e
    android.graphics.Bitmap$CompressFormat compressFormat -> f
    int compressQuality -> g
    java.io.File get(java.lang.String) -> a
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean save(java.lang.String,android.graphics.Bitmap) -> a
    java.io.File getFile(java.lang.String) -> b
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiskCache -> y.b:
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache -> z.a:
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> a
    java.io.File directory -> c
    java.io.File journalFile -> d
    java.io.File journalFileTmp -> e
    java.io.File journalFileBackup -> f
    int appVersion -> g
    long maxSize -> h
    int maxFileCount -> i
    int valueCount -> j
    long size -> k
    int fileCount -> l
    java.io.Writer journalWriter -> m
    java.util.LinkedHashMap lruEntries -> n
    int redundantOpCount -> o
    long nextSequenceNumber -> p
    java.util.concurrent.ThreadPoolExecutor executorService -> b
    java.util.concurrent.Callable cleanupCallable -> q
    java.io.OutputStream NULL_OUTPUT_STREAM -> r
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int) -> a
    void readJournal() -> c
    void readJournalLine(java.lang.String) -> d
    void processJournal() -> d
    void rebuildJournal() -> e
    void deleteIfExists(java.io.File) -> a
    void renameTo(java.io.File,java.io.File,boolean) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String) -> b
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String,long) -> a
    void completeEdit(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> f
    boolean remove(java.lang.String) -> c
    void checkNotClosed() -> g
    void close() -> close
    void trimToSize() -> h
    void trimToFileCount() -> i
    void delete() -> a
    void validateKey(java.lang.String) -> e
    java.io.Writer access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> a
    void access$100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> b
    void access$200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> c
    boolean access$300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> d
    void access$400(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> e
    int access$502(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,int) -> a
    int access$1900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> f
    java.io.File access$2000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> g
    java.io.OutputStream access$2100() -> b
    void access$2300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1 -> z.b:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2 -> z.c:
    void write(int) -> write
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor -> z.d:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry entry -> b
    boolean[] written -> c
    boolean hasErrors -> d
    boolean committed -> e
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.io.OutputStream newOutputStream(int) -> a
    void commit() -> a
    void abort() -> b
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry access$1500(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> a
    boolean[] access$1600(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> b
    boolean access$2402(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream -> z.e:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry -> z.f:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    boolean access$702(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,boolean) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$802(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> a
    void access$900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,java.lang.String[]) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$800(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> a
    long[] access$1100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> b
    java.lang.String access$1200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> c
    boolean access$700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> d
    long access$1300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> e
    long access$1302(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,long) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot -> z.g:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.File[] files -> d
    java.io.InputStream[] ins -> e
    long[] lengths -> f
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.io.File getFile(int) -> a
    void close() -> close
com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiskCache -> z.h:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache -> b
    java.io.File reserveCacheDir -> g
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> c
    int bufferSize -> d
    android.graphics.Bitmap$CompressFormat compressFormat -> e
    int compressQuality -> f
    void initCache(java.io.File,java.io.File,long,int) -> a
    java.io.File get(java.lang.String) -> a
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean save(java.lang.String,android.graphics.Bitmap) -> a
    java.lang.String getKey(java.lang.String) -> b
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader -> z.i:
    java.io.InputStream in -> a
    java.nio.charset.Charset charset -> b
    byte[] buf -> c
    int pos -> d
    int end -> e
    void close() -> close
    java.lang.String readLine() -> a
    void fillBuf() -> b
    java.nio.charset.Charset access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1 -> z.j:
    com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader this$0 -> a
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.cache.disc.impl.ext.Util -> z.k:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset UTF_8 -> b
    void deleteContents(java.io.File) -> a
    void closeQuietly(java.io.Closeable) -> a
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> aa.a:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> aa.b:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.memory.MemoryCache -> ab.a:
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    android.graphics.Bitmap remove(java.lang.String) -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> ac.a:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> a
    java.util.Comparator keyComparator -> b
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    android.graphics.Bitmap remove(java.lang.String) -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> ac.b:
    java.util.LinkedHashMap map -> a
    int maxSize -> b
    int size -> c
    android.graphics.Bitmap get(java.lang.String) -> a
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    void trimToSize(int) -> a
    android.graphics.Bitmap remove(java.lang.String) -> b
    java.util.Collection keys() -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> b
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> ad.a:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> a
    java.util.concurrent.Executor createTaskDistributor() -> a
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> b
    com.nostra13.universalimageloader.cache.disc.DiskCache createDiskCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int) -> a
    java.io.File createReserveDiskCacheDir(android.content.Context) -> b
    com.nostra13.universalimageloader.cache.memory.MemoryCache createMemoryCache(android.content.Context,int) -> a
    boolean hasHoneycomb() -> d
    boolean isLargeHeap(android.content.Context) -> c
    int getLargeMemoryClass(android.app.ActivityManager) -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> a
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> a
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> c
    java.util.concurrent.ThreadFactory createThreadFactory(int,java.lang.String) -> a
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> ad.b:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> a
    java.lang.ThreadGroup group -> b
    java.util.concurrent.atomic.AtomicInteger threadNumber -> c
    java.lang.String namePrefix -> d
    int threadPriority -> e
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> ad.c:
    android.graphics.Bitmap bitmap -> a
    java.lang.String imageUri -> b
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> c
    java.lang.String memoryCacheKey -> d
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> e
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> f
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> g
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> h
    void run() -> run
    boolean isViewWasReused() -> a
com.nostra13.universalimageloader.core.DisplayImageOptions -> ad.d:
    int imageResOnLoading -> a
    int imageResForEmptyUri -> b
    int imageResOnFail -> c
    android.graphics.drawable.Drawable imageOnLoading -> d
    android.graphics.drawable.Drawable imageForEmptyUri -> e
    android.graphics.drawable.Drawable imageOnFail -> f
    boolean resetViewBeforeLoading -> g
    boolean cacheInMemory -> h
    boolean cacheOnDisk -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> j
    android.graphics.BitmapFactory$Options decodingOptions -> k
    int delayBeforeLoading -> l
    boolean considerExifParams -> m
    java.lang.Object extraForDownloader -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> q
    android.os.Handler handler -> r
    boolean isSyncLoading -> s
    boolean shouldShowImageOnLoading() -> a
    boolean shouldShowImageForEmptyUri() -> b
    boolean shouldShowImageOnFail() -> c
    boolean shouldPreProcess() -> d
    boolean shouldPostProcess() -> e
    boolean shouldDelayBeforeLoading() -> f
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> a
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> b
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> c
    boolean isResetViewBeforeLoading() -> g
    boolean isCacheInMemory() -> h
    boolean isCacheOnDisk() -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> j
    android.graphics.BitmapFactory$Options getDecodingOptions() -> k
    int getDelayBeforeLoading() -> l
    boolean isConsiderExifParams() -> m
    java.lang.Object getExtraForDownloader() -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> q
    android.os.Handler getHandler() -> r
    boolean isSyncLoading() -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> t
    int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> b
    int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> c
    android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> d
    android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> e
    android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> f
    boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> g
    boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> h
    boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> j
    android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> k
    int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> l
    boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> m
    java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> q
    android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> r
    boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> s
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> ad.e:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> ad.f:
    int imageResOnLoading -> a
    int imageResForEmptyUri -> b
    int imageResOnFail -> c
    android.graphics.drawable.Drawable imageOnLoading -> d
    android.graphics.drawable.Drawable imageForEmptyUri -> e
    android.graphics.drawable.Drawable imageOnFail -> f
    boolean resetViewBeforeLoading -> g
    boolean cacheInMemory -> h
    boolean cacheOnDisk -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> j
    android.graphics.BitmapFactory$Options decodingOptions -> k
    int delayBeforeLoading -> l
    boolean considerExifParams -> m
    java.lang.Object extraForDownloader -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> q
    android.os.Handler handler -> r
    boolean isSyncLoading -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> c
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisk(boolean) -> c
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> a
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> a
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> b
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> c
    android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> d
    android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> e
    android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> f
    boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> g
    boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> h
    boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> j
    android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> k
    int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> l
    boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> m
    java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> q
    android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> r
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> s
com.nostra13.universalimageloader.core.ImageLoader -> ad.g:
    java.lang.String TAG -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> b
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> c
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener defaultListener -> d
    com.nostra13.universalimageloader.core.ImageLoader instance -> e
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> a
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> a
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> a
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    void checkConfiguration() -> b
    android.os.Handler defineHandler(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> ad.h:
    android.content.res.Resources resources -> a
    int maxImageWidthForMemoryCache -> b
    int maxImageHeightForMemoryCache -> c
    int maxImageWidthForDiskCache -> d
    int maxImageHeightForDiskCache -> e
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> f
    java.util.concurrent.Executor taskExecutor -> g
    java.util.concurrent.Executor taskExecutorForCachedImages -> h
    boolean customExecutor -> i
    boolean customExecutorForCachedImages -> j
    int threadPoolSize -> k
    int threadPriority -> l
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> m
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> n
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> o
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> p
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> q
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> r
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> s
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> t
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> ad.i:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> ad.j:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> a
    android.content.Context context -> b
    int maxImageWidthForMemoryCache -> c
    int maxImageHeightForMemoryCache -> d
    int maxImageWidthForDiskCache -> e
    int maxImageHeightForDiskCache -> f
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> g
    java.util.concurrent.Executor taskExecutor -> h
    java.util.concurrent.Executor taskExecutorForCachedImages -> i
    boolean customExecutor -> j
    boolean customExecutorForCachedImages -> k
    int threadPoolSize -> l
    int threadPriority -> m
    boolean denyCacheImageMultipleSizesInMemory -> n
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> o
    int memoryCacheSize -> p
    long diskCacheSize -> q
    int diskCacheFileCount -> r
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> s
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> t
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator diskCacheFileNameGenerator -> u
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> v
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> w
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> x
    boolean writeLogs -> y
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> b
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCache) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> c
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheSize(int) -> d
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> e
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileCount(int) -> f
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> a
    void initEmptyFieldsWithDefaultValues() -> b
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> a
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> b
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> c
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> d
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> e
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> f
    java.util.concurrent.Executor access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> g
    java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> h
    int access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> i
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> j
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> k
    com.nostra13.universalimageloader.cache.disc.DiskCache access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> l
    com.nostra13.universalimageloader.cache.memory.MemoryCache access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> m
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> n
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> o
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> p
    boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> q
    boolean access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> r
    boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> s
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader -> ad.k:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> a
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader -> ad.l:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> a
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.ImageLoaderEngine -> ad.m:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> a
    java.util.concurrent.Executor taskExecutor -> b
    java.util.concurrent.Executor taskExecutorForCachedImages -> c
    java.util.concurrent.Executor taskDistributor -> d
    java.util.Map cacheKeysForImageAwares -> e
    java.util.Map uriLocks -> f
    java.util.concurrent.atomic.AtomicBoolean paused -> g
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> h
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> i
    java.lang.Object pauseLock -> j
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> a
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> a
    void initExecutorsIfNeed() -> e
    java.util.concurrent.Executor createTaskExecutor() -> f
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> a
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> a
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> b
    void fireCallback(java.lang.Runnable) -> a
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> a
    java.util.concurrent.atomic.AtomicBoolean getPause() -> a
    java.lang.Object getPauseLock() -> b
    boolean isNetworkDenied() -> c
    boolean isSlowNetwork() -> d
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> a
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> b
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> c
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> ad.n:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> a
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> b
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> ad.o:
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> b
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> c
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> f
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> g
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> h
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> ad.p:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> f
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> g
    android.os.Handler handler -> h
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> j
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> k
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> l
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> m
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> n
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> b
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> o
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> c
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> d
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> e
    boolean syncLoading -> p
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> q
    void run() -> run
    boolean waitIfPaused() -> b
    boolean delayIfNeed() -> c
    android.graphics.Bitmap tryLoadBitmap() -> d
    android.graphics.Bitmap decodeImage(java.lang.String) -> a
    boolean tryCacheImageOnDisk() -> e
    boolean downloadImage() -> f
    boolean resizeAndSaveImage(int,int) -> b
    boolean onBytesCopied(int,int) -> a
    boolean fireProgressEvent(int,int) -> c
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> a
    void fireCancelEvent() -> g
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> h
    void checkTaskNotActual() -> i
    boolean isTaskNotActual() -> j
    void checkViewCollected() -> k
    boolean isViewCollected() -> l
    void checkViewReused() -> m
    boolean isViewReused() -> n
    void checkTaskInterrupted() -> o
    boolean isTaskInterrupted() -> p
    java.lang.String getLoadingUri() -> a
    void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> a
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> ad.q:
    int val$current -> a
    int val$total -> b
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> c
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> ad.r:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> a
    java.lang.Throwable val$failCause -> b
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> c
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> ad.s:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> ad.t:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> ad.u:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> a
    android.graphics.Bitmap bitmap -> b
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> c
    android.os.Handler handler -> d
    void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> ae.a:
    java.io.InputStream stream -> a
    int length -> b
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    boolean markSupported() -> markSupported
com.nostra13.universalimageloader.core.assist.FailReason -> ae.b:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> a
    java.lang.Throwable cause -> b
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> ae.c:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> a
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> b
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> c
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> d
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> e
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> f
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> ae.d:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageScaleType -> ae.e:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> a
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE_SAFE -> b
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> c
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> d
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> e
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> g
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> ae.f:
    int width -> a
    int height -> b
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> a
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> a
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> ae.g:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> a
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> b
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> c
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] $VALUES -> d
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> ae.h:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> a
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> b
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> c
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ViewScaleType -> ae.i:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> a
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> c
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> a
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> ae.j:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> a
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> af.a:
com.nostra13.universalimageloader.core.assist.deque.Deque -> af.b:
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> af.c:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> af.d:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> b
    int count -> d
    int capacity -> e
    java.util.concurrent.locks.ReentrantLock lock -> c
    java.util.concurrent.locks.Condition notEmpty -> f
    java.util.concurrent.locks.Condition notFull -> g
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> c
    java.lang.Object unlinkFirst() -> f
    java.lang.Object unlinkLast() -> g
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    void addLast(java.lang.Object) -> a
    boolean offerFirst(java.lang.Object) -> b
    boolean offerLast(java.lang.Object) -> c
    void putLast(java.lang.Object) -> d
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object removeFirst() -> a
    java.lang.Object pollFirst() -> b
    java.lang.Object takeFirst() -> c
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object getFirst() -> d
    java.lang.Object peekFirst() -> e
    boolean removeFirstOccurrence(java.lang.Object) -> e
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> af.e:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> af.f:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> a
    java.lang.Object nextItem -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> c
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    void advance() -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> af.g:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> af.h:
    java.lang.Object item -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> c
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> ag.a:
    boolean loggingEnabled -> a
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> b
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> a
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> a
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> b
    android.graphics.Bitmap considerExactScaleAndOrientatiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> a
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> ag.b:
    int rotation -> a
    boolean flipHorizontal -> b
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> ag.c:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> a
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> b
com.nostra13.universalimageloader.core.decode.ImageDecoder -> ag.d:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> ag.e:
    java.lang.String imageKey -> a
    java.lang.String imageUri -> b
    java.lang.String originalImageUri -> c
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> d
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> e
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> f
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> g
    java.lang.Object extraForDownloader -> h
    boolean considerExifParams -> i
    android.graphics.BitmapFactory$Options decodingOptions -> j
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> a
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> b
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> c
    java.lang.String getImageKey() -> a
    java.lang.String getImageUri() -> b
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> c
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> d
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> e
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> f
    java.lang.Object getExtraForDownloader() -> g
    boolean shouldConsiderExifParams() -> h
    android.graphics.BitmapFactory$Options getDecodingOptions() -> i
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> ah.a:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> a
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> ah.b:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> a
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> ai.a:
    android.content.Context context -> a
    int connectTimeout -> b
    int readTimeout -> c
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> b
    boolean shouldBeProcessed(java.net.HttpURLConnection) -> a
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> c
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> d
    java.io.InputStream getVideoThumbnailStream(java.lang.String) -> a
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> e
    java.io.InputStream getContactPhotoStream(android.net.Uri) -> a
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> f
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> g
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> h
    boolean isVideoContentUri(android.net.Uri) -> b
    boolean isVideoFileUri(java.lang.String) -> b
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> ai.b:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> a
com.nostra13.universalimageloader.core.download.ImageDownloader -> ai.c:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> ai.d:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> b
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> c
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> d
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> e
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> f
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> g
    java.lang.String scheme -> h
    java.lang.String uriPrefix -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> j
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> a
    boolean belongsTo(java.lang.String) -> d
    java.lang.String wrap(java.lang.String) -> b
    java.lang.String crop(java.lang.String) -> c
com.nostra13.universalimageloader.core.imageaware.ImageAware -> aj.a:
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> c
    android.view.View getWrappedView() -> d
    boolean isCollected() -> e
    int getId() -> f
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> a
    boolean setImageBitmap(android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> aj.b:
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> c
    android.widget.ImageView getWrappedView() -> g
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> a
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> a
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> a
    android.view.View getWrappedView() -> d
com.nostra13.universalimageloader.core.imageaware.ViewAware -> aj.c:
    java.lang.ref.Reference viewRef -> a
    boolean checkActualViewSize -> b
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> c
    android.view.View getWrappedView() -> d
    boolean isCollected() -> e
    int getId() -> f
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> a
    boolean setImageBitmap(android.graphics.Bitmap) -> a
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> a
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> a
com.nostra13.universalimageloader.core.listener.ImageLoadingListener -> ak.a:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener -> ak.b:
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> a
com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener -> ak.c:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.process.BitmapProcessor -> al.a:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.utils.ImageSizeUtils -> am.a:
    com.nostra13.universalimageloader.core.assist.ImageSize maxBitmapSize -> a
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> a
    int considerMaxTextureSize(int,int,int,boolean) -> a
    int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> b
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> am.b:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> a
com.nostra13.universalimageloader.utils.IoUtils -> am.c:
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> a
    boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> a
    void readAndCloseStream(java.io.InputStream) -> a
    void closeSilently(java.io.Closeable) -> a
com.nostra13.universalimageloader.utils.IoUtils$CopyListener -> am.d:
    boolean onBytesCopied(int,int) -> a
com.nostra13.universalimageloader.utils.L -> am.e:
    boolean writeDebugLogs -> a
    boolean writeLogs -> b
    void writeDebugLogs(boolean) -> a
    void d(java.lang.String,java.lang.Object[]) -> a
    void i(java.lang.String,java.lang.Object[]) -> b
    void w(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.Object[]) -> d
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.utils.MemoryCacheUtils -> am.f:
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    java.util.Comparator createFuzzyKeyComparator() -> a
com.nostra13.universalimageloader.utils.MemoryCacheUtils$1 -> am.g:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.utils.StorageUtils -> am.h:
    java.io.File getCacheDirectory(android.content.Context) -> a
    java.io.File getCacheDirectory(android.content.Context,boolean) -> a
    java.io.File getIndividualCacheDirectory(android.content.Context) -> b
    java.io.File getIndividualCacheDirectory(android.content.Context,java.lang.String) -> a
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> b
    java.io.File getExternalCacheDir(android.content.Context) -> c
    boolean hasExternalStoragePermission(android.content.Context) -> d
com.tencent.a.a.a.a.a -> an.a:
    java.util.List a(java.io.File) -> a
    java.io.File d(java.lang.String) -> a
com.tencent.a.a.a.a.b -> an.b:
    boolean a() -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.tencent.a.a.a.a.c -> an.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long T -> d
    java.lang.String a() -> a
    com.tencent.a.a.a.a.c e(java.lang.String) -> a
    java.lang.String toString() -> toString
    org.json.JSONObject n() -> b
com.tencent.a.a.a.a.d -> an.d:
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    boolean a() -> a
com.tencent.a.a.a.a.e -> an.e:
    boolean a() -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.tencent.a.a.a.a.f -> an.f:
    android.content.Context a -> a
    com.tencent.a.a.a.a.c o() -> c
    void a(com.tencent.a.a.a.a.c) -> a
    boolean a() -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.tencent.a.a.a.a.g -> an.g:
    java.util.Map U -> a
    int b -> b
    android.content.Context c -> c
    com.tencent.a.a.a.a.g V -> d
    com.tencent.a.a.a.a.g E(android.content.Context) -> a
    com.tencent.a.a.a.a.c p() -> a
    com.tencent.a.a.a.a.c b(java.util.List) -> a
    void a(java.lang.String) -> a
com.tencent.a.a.a.a.h -> an.h:
    void a(java.lang.String,java.lang.Throwable) -> a
    boolean b(java.lang.String) -> a
    boolean c(java.lang.String) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String f(java.lang.String) -> c
    java.lang.String g(java.lang.String) -> d
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.tencent.connect.UserInfo -> ao.a:
    void getUserInfo(com.tencent.tauth.IUiListener) -> a
com.tencent.connect.a.a -> ap.a:
    java.lang.Class a -> a
    java.lang.Class b -> b
    java.lang.reflect.Method c -> c
    java.lang.reflect.Method d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    boolean g -> g
    boolean a(android.content.Context,com.tencent.connect.auth.QQToken) -> a
    void b(android.content.Context,com.tencent.connect.auth.QQToken) -> b
    void c(android.content.Context,com.tencent.connect.auth.QQToken) -> c
    void d(android.content.Context,com.tencent.connect.auth.QQToken) -> d
    void a(android.content.Context,com.tencent.connect.auth.QQToken,java.lang.String,java.lang.String[]) -> a
com.tencent.connect.auth.AuthAgent -> aq.a:
    com.tencent.tauth.IUiListener a -> a
    java.lang.String b -> l
    android.app.Activity c -> m
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> a
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,boolean,android.support.v4.app.Fragment) -> a
    void releaseResource() -> a
    int a(boolean,com.tencent.tauth.IUiListener) -> a
    boolean a(android.app.Activity,android.support.v4.app.Fragment,boolean) -> a
    void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void a(java.lang.String) -> b
    com.tencent.connect.auth.QQToken a(com.tencent.connect.auth.AuthAgent) -> a
    com.tencent.connect.auth.QQToken b(com.tencent.connect.auth.AuthAgent) -> b
    com.tencent.connect.auth.QQToken c(com.tencent.connect.auth.AuthAgent) -> c
    com.tencent.connect.auth.QQToken d(com.tencent.connect.auth.AuthAgent) -> d
    android.app.Activity e(com.tencent.connect.auth.AuthAgent) -> e
    com.tencent.connect.auth.QQToken f(com.tencent.connect.auth.AuthAgent) -> f
    android.os.Bundle g(com.tencent.connect.auth.AuthAgent) -> g
    com.tencent.connect.auth.QQToken h(com.tencent.connect.auth.AuthAgent) -> h
com.tencent.connect.auth.AuthAgent$1 -> aq.b:
    java.lang.String a -> a
    com.tencent.tauth.IUiListener b -> b
    com.tencent.connect.auth.AuthAgent c -> c
    void run() -> run
com.tencent.connect.auth.AuthAgent$1$1 -> aq.c:
    com.tencent.connect.auth.AuthAgent$1 a -> a
    void run() -> run
com.tencent.connect.auth.AuthAgent$FeedConfirmListener -> aq.d:
    com.tencent.tauth.IUiListener a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.tencent.connect.auth.AuthAgent b -> b
    void onComplete(java.lang.Object) -> a
    void a(java.lang.String,com.tencent.tauth.IUiListener,java.lang.Object) -> a
    android.graphics.drawable.Drawable a(java.lang.String,android.content.Context) -> a
    android.view.View a(android.content.Context,android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    void a() -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onCancel() -> h
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$1 -> aq.e:
    com.tencent.tauth.IUiListener c -> a
    java.lang.Object d -> b
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener e -> c
    void onClick(android.view.View) -> onClick
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$2 -> aq.f:
    com.tencent.tauth.IUiListener c -> a
    java.lang.Object d -> b
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener e -> c
    void onClick(android.view.View) -> onClick
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$3 -> aq.g:
    com.tencent.tauth.IUiListener a -> a
    java.lang.Object b -> b
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener c -> c
    void onCancel(android.content.DialogInterface) -> onCancel
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$ButtonListener -> aq.h:
    android.app.Dialog a -> d
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener b -> e
com.tencent.connect.auth.AuthAgent$TokenListener -> aq.i:
    com.tencent.tauth.IUiListener b -> b
    boolean c -> c
    android.content.Context d -> d
    com.tencent.connect.auth.AuthAgent a -> a
    void onComplete(java.lang.Object) -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onCancel() -> h
com.tencent.connect.auth.AuthDialog -> aq.j:
    java.lang.String a -> a
    java.lang.String b -> b
    com.tencent.connect.auth.AuthDialog$OnTimeListener c -> c
    com.tencent.tauth.IUiListener d -> d
    android.os.Handler e -> e
    android.widget.FrameLayout f -> f
    android.widget.LinearLayout g -> g
    android.widget.FrameLayout h -> h
    android.widget.ProgressBar i -> i
    java.lang.String j -> j
    com.tencent.open.b.c k -> k
    android.content.Context l -> l
    com.tencent.open.web.security.c m -> m
    boolean n -> n
    int o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    long r -> r
    long s -> s
    java.util.HashMap t -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onStop() -> onStop
    java.lang.String a(java.lang.String) -> a
    java.lang.String b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    boolean f() -> f
    void b(android.content.Context,java.lang.String) -> b
    void callJs(java.lang.String,java.lang.String) -> a
    void dismiss() -> dismiss
    android.content.Context a(com.tencent.connect.auth.AuthDialog) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(com.tencent.connect.auth.AuthDialog,java.lang.String) -> a
    java.lang.String a() -> a
    boolean a(com.tencent.connect.auth.AuthDialog,boolean) -> a
    boolean b(com.tencent.connect.auth.AuthDialog) -> b
    boolean c(com.tencent.connect.auth.AuthDialog) -> c
    java.lang.String a(com.tencent.connect.auth.AuthDialog,java.lang.Object) -> a
    java.lang.String d(com.tencent.connect.auth.AuthDialog) -> d
    com.tencent.open.b.c e(com.tencent.connect.auth.AuthDialog) -> e
    com.tencent.connect.auth.AuthDialog$OnTimeListener f(com.tencent.connect.auth.AuthDialog) -> f
    android.widget.FrameLayout g(com.tencent.connect.auth.AuthDialog) -> g
    java.lang.String b(com.tencent.connect.auth.AuthDialog,java.lang.String) -> b
    com.tencent.open.web.security.c h(com.tencent.connect.auth.AuthDialog) -> h
    java.lang.String i(com.tencent.connect.auth.AuthDialog) -> i
    long j(com.tencent.connect.auth.AuthDialog) -> j
    int k(com.tencent.connect.auth.AuthDialog) -> k
    long l(com.tencent.connect.auth.AuthDialog) -> l
    int m(com.tencent.connect.auth.AuthDialog) -> m
    android.os.Handler n(com.tencent.connect.auth.AuthDialog) -> n
    java.lang.String o(com.tencent.connect.auth.AuthDialog) -> o
    long a(com.tencent.connect.auth.AuthDialog,long) -> a
    java.util.HashMap p(com.tencent.connect.auth.AuthDialog) -> p
    java.lang.String c(com.tencent.connect.auth.AuthDialog,java.lang.String) -> c
com.tencent.connect.auth.AuthDialog$1 -> aq.k:
    com.tencent.connect.auth.AuthDialog a -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.tencent.connect.auth.AuthDialog$2 -> aq.l:
    com.tencent.connect.auth.AuthDialog a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.tencent.connect.auth.AuthDialog$3 -> aq.m:
    com.tencent.connect.auth.AuthDialog a -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.tencent.connect.auth.AuthDialog$LoginWebViewClient -> aq.n:
    com.tencent.connect.auth.AuthDialog a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
com.tencent.connect.auth.AuthDialog$LoginWebViewClient$1 -> aq.o:
    com.tencent.connect.auth.AuthDialog$LoginWebViewClient a -> a
    void run() -> run
com.tencent.connect.auth.AuthDialog$OnTimeListener -> aq.p:
    java.lang.String d -> d
    java.lang.String a -> a
    java.lang.String b -> b
    com.tencent.tauth.IUiListener e -> e
    com.tencent.connect.auth.AuthDialog c -> c
    void a(java.lang.String) -> a
    void onComplete(java.lang.Object) -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onCancel() -> h
    void a(com.tencent.connect.auth.AuthDialog$OnTimeListener,java.lang.String) -> a
com.tencent.connect.auth.AuthDialog$THandler -> aq.q:
    com.tencent.connect.auth.AuthDialog$OnTimeListener b -> b
    com.tencent.connect.auth.AuthDialog a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.auth.AuthDialog$TimeOutRunable -> aq.r:
    java.lang.String a -> a
    com.tencent.connect.auth.AuthDialog b -> b
    void run() -> run
com.tencent.connect.auth.AuthMap -> aq.s:
    int b -> e
    com.tencent.connect.auth.AuthMap sInstance -> a
    java.util.HashMap authMap -> b
    java.lang.String KEY_CHAR_LIST -> c
    boolean a -> d
    com.tencent.connect.auth.AuthMap getInstance() -> a
    com.tencent.connect.auth.AuthMap$Auth get(java.lang.String) -> a
    int getSerial() -> b
    java.lang.String set(com.tencent.connect.auth.AuthMap$Auth) -> a
    void remove(java.lang.String) -> b
    java.lang.String makeKey() -> c
    java.lang.String decode(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> b
com.tencent.connect.auth.AuthMap$Auth -> aq.t:
    com.tencent.tauth.IUiListener listener -> a
    com.tencent.connect.auth.AuthDialog dialog -> b
    java.lang.String key -> c
com.tencent.connect.auth.QQAuth -> aq.u:
    com.tencent.connect.auth.AuthAgent a -> a
    com.tencent.connect.auth.QQToken b -> b
    com.tencent.connect.auth.QQAuth createInstance(java.lang.String,android.content.Context) -> a
    int login(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> a
    int login(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String) -> a
    int a(android.app.Activity,android.support.v4.app.Fragment,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String) -> a
    int loginWithOEM(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String,java.lang.String,java.lang.String) -> a
    int reAuth(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> b
    com.tencent.connect.auth.QQToken getQQToken() -> a
    void setAccessToken(java.lang.String,java.lang.String) -> a
    void setOpenId(android.content.Context,java.lang.String) -> a
com.tencent.connect.auth.QQToken -> aq.v:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    long e -> e
    boolean isSessionValid() -> a
    java.lang.String getAppId() -> b
    java.lang.String getAccessToken() -> c
    void setAccessToken(java.lang.String,java.lang.String) -> a
    java.lang.String getOpenId() -> d
    void setOpenId(java.lang.String) -> a
com.tencent.connect.avatar.ImageActivity -> com.tencent.connect.avatar.ImageActivity:
    com.tencent.connect.auth.QQToken b -> b
    java.lang.String c -> c
    android.os.Handler d -> d
    com.tencent.connect.avatar.b e -> e
    android.widget.Button f -> f
    android.widget.Button g -> g
    com.tencent.connect.avatar.g h -> h
    android.widget.TextView i -> i
    android.widget.ProgressBar j -> j
    int k -> k
    boolean l -> l
    long m -> m
    int n -> n
    int o -> o
    int p -> p
    android.graphics.Rect q -> q
    java.lang.String r -> r
    android.graphics.Bitmap s -> s
    android.widget.RelativeLayout a -> a
    android.view.View$OnClickListener t -> t
    android.view.View$OnClickListener u -> u
    com.tencent.tauth.IUiListener v -> v
    com.tencent.tauth.IUiListener w -> w
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.drawable.Drawable b(java.lang.String) -> b
    android.view.View a() -> a
    void b() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void c() -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String,int) -> b
    void a(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void d() -> d
    void e() -> e
    void c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    void a(java.lang.String,long) -> a
    android.graphics.drawable.Drawable a(com.tencent.connect.avatar.ImageActivity,java.lang.String) -> a
    android.graphics.Rect a(com.tencent.connect.avatar.ImageActivity,android.graphics.Rect) -> a
    com.tencent.connect.avatar.g a(com.tencent.connect.avatar.ImageActivity) -> a
    android.graphics.Rect b(com.tencent.connect.avatar.ImageActivity) -> b
    com.tencent.connect.avatar.b c(com.tencent.connect.avatar.ImageActivity) -> c
    android.widget.ProgressBar d(com.tencent.connect.avatar.ImageActivity) -> d
    android.widget.Button e(com.tencent.connect.avatar.ImageActivity) -> e
    android.widget.Button f(com.tencent.connect.avatar.ImageActivity) -> f
    void g(com.tencent.connect.avatar.ImageActivity) -> g
    boolean h(com.tencent.connect.avatar.ImageActivity) -> h
    long i(com.tencent.connect.avatar.ImageActivity) -> i
    void j(com.tencent.connect.avatar.ImageActivity) -> j
    void a(com.tencent.connect.avatar.ImageActivity,java.lang.String,int) -> a
    boolean a(com.tencent.connect.avatar.ImageActivity,boolean) -> a
    void b(com.tencent.connect.avatar.ImageActivity,java.lang.String,int) -> b
    com.tencent.connect.auth.QQToken k(com.tencent.connect.avatar.ImageActivity) -> k
    java.lang.String l(com.tencent.connect.avatar.ImageActivity) -> l
    void a(com.tencent.connect.avatar.ImageActivity,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void b(com.tencent.connect.avatar.ImageActivity,java.lang.String) -> b
    android.os.Handler m(com.tencent.connect.avatar.ImageActivity) -> m
    int n(com.tencent.connect.avatar.ImageActivity) -> n
    void o(com.tencent.connect.avatar.ImageActivity) -> o
com.tencent.connect.avatar.ImageActivity$1 -> com.tencent.connect.avatar.a:
    java.lang.String a -> a
    int b -> b
    com.tencent.connect.avatar.ImageActivity c -> c
    void run() -> run
com.tencent.connect.avatar.ImageActivity$2 -> com.tencent.connect.avatar.c:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onGlobalLayout() -> onGlobalLayout
com.tencent.connect.avatar.ImageActivity$QQAvatarImp -> com.tencent.connect.avatar.d:
    com.tencent.connect.avatar.ImageActivity a -> a
    void setAvator(android.graphics.Bitmap,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.avatar.ImageActivity$a -> com.tencent.connect.avatar.e:
    com.tencent.connect.avatar.ImageActivity a -> a
    void a(android.widget.Button) -> a
    void b(android.widget.Button) -> b
com.tencent.connect.avatar.a -> com.tencent.connect.avatar.f:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onComplete(java.lang.Object) -> a
    void onCancel() -> h
    void a(int) -> a
com.tencent.connect.avatar.a$1 -> com.tencent.connect.avatar.h:
    java.lang.String a -> a
    com.tencent.connect.avatar.a b -> b
    void run() -> run
com.tencent.connect.avatar.b -> com.tencent.connect.avatar.b:
    android.graphics.Matrix c -> c
    android.graphics.Matrix d -> d
    int e -> e
    float f -> f
    float g -> g
    android.graphics.Bitmap h -> h
    boolean i -> i
    float j -> j
    float k -> k
    java.lang.String a -> a
    android.graphics.PointF l -> l
    android.graphics.PointF m -> m
    float n -> n
    float o -> o
    boolean b -> b
    android.graphics.Rect p -> p
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    float a(android.view.MotionEvent) -> a
    void a() -> a
    void a(android.graphics.Rect) -> a
    void a(android.graphics.PointF) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void b() -> b
    void c() -> c
    void a(com.tencent.connect.avatar.b) -> a
    boolean a(com.tencent.connect.avatar.b,boolean) -> a
com.tencent.connect.avatar.b$1 -> com.tencent.connect.avatar.i:
    com.tencent.connect.avatar.b a -> a
    void run() -> run
com.tencent.connect.avatar.b$1$1 -> com.tencent.connect.avatar.j:
    com.tencent.connect.avatar.b$1 a -> a
    void run() -> run
com.tencent.connect.avatar.c -> com.tencent.connect.avatar.k:
    int a(android.content.Context,float) -> a
com.tencent.connect.avatar.d -> com.tencent.connect.avatar.l:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onClick(android.view.View) -> onClick
com.tencent.connect.avatar.d$1 -> com.tencent.connect.avatar.m:
    com.tencent.connect.avatar.d a -> a
    void run() -> run
com.tencent.connect.avatar.e -> com.tencent.connect.avatar.n:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onComplete(java.lang.Object) -> a
    void onCancel() -> h
com.tencent.connect.avatar.f -> com.tencent.connect.avatar.o:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onClick(android.view.View) -> onClick
com.tencent.connect.avatar.g -> com.tencent.connect.avatar.g:
    android.graphics.Rect a -> a
    android.graphics.Paint b -> b
    void b() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Rect a() -> a
com.tencent.connect.common.AssistActivity -> com.tencent.connect.common.AssistActivity:
    com.tencent.connect.common.BaseApi sApiObject -> c
    com.tencent.connect.common.BaseApi mAPiObject -> d
    boolean hackShareBack -> a
    boolean hackShareSend -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setApiObject(com.tencent.connect.common.BaseApi) -> a
    void setResultDataForLogin(android.app.Activity,android.content.Intent) -> a
    void openBrowser(android.os.Bundle) -> a
    boolean isTopActivity() -> a
com.tencent.connect.common.BaseApi -> com.tencent.connect.common.a:
    java.lang.String TAG -> a
    com.tencent.connect.auth.QQAuth mQQAuth -> b
    com.tencent.connect.auth.QQToken mToken -> c
    java.util.List mTaskList -> d
    android.content.Intent mActivityIntent -> e
    int sRequestCode -> f
    com.tencent.tauth.IUiListener mUiListener -> g
    java.lang.String registerChannel -> h
    java.lang.String installChannel -> i
    java.lang.String businessId -> j
    boolean isOEM -> k
    void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void handleDataToListener(android.content.Intent,com.tencent.tauth.IUiListener) -> a
    android.content.Intent getActivityIntent() -> b
    android.os.Bundle composeCGIParams() -> c
    android.os.Bundle composeActivityParams() -> d
    android.content.Intent getAssitIntent(android.app.Activity) -> a
    void startAssistActivity(android.app.Activity,int) -> a
    void startAssistActivity(android.app.Activity,android.os.Bundle,int) -> a
    void startAssitActivity(android.app.Activity,com.tencent.tauth.IUiListener) -> a
    void startAssitActivity(android.support.v4.app.Fragment,com.tencent.tauth.IUiListener) -> a
    boolean hasActivityForIntent() -> e
    android.content.Intent getTargetActivityIntent(java.lang.String) -> a
    void releaseResource() -> a
com.tencent.connect.common.BaseApi$ApiTask -> com.tencent.connect.common.b:
    int mRequestCode -> a
    com.tencent.tauth.IUiListener mListener -> b
    com.tencent.connect.common.BaseApi this$0 -> c
com.tencent.connect.common.BaseApi$TempRequestListener -> com.tencent.connect.common.c:
    com.tencent.tauth.IUiListener mListener -> b
    android.os.Handler mHandler -> c
    com.tencent.connect.common.BaseApi this$0 -> a
    void onComplete(org.json.JSONObject) -> a
    void onIOException(java.io.IOException) -> a
    void onMalformedURLException(java.net.MalformedURLException) -> a
    void onJSONException(org.json.JSONException) -> a
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> a
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> a
    void onNetworkUnavailableException(com.tencent.open.utils.HttpUtils$NetworkUnavailableException) -> a
    void onHttpStatusException(com.tencent.open.utils.HttpUtils$HttpStatusException) -> a
    void onUnknowException(java.lang.Exception) -> a
    com.tencent.tauth.IUiListener access$000(com.tencent.connect.common.BaseApi$TempRequestListener) -> a
com.tencent.connect.common.BaseApi$TempRequestListener$1 -> com.tencent.connect.common.d:
    com.tencent.connect.common.BaseApi val$this$0 -> a
    com.tencent.connect.common.BaseApi$TempRequestListener this$1 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.dataprovider.DataType -> com.tencent.connect.dataprovider.DataType:
com.tencent.connect.dataprovider.DataType$1 -> com.tencent.connect.dataprovider.a:
com.tencent.connect.dataprovider.DataType$TextAndMediaPath -> com.tencent.connect.dataprovider.DataType$TextAndMediaPath:
    java.lang.String a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.connect.dataprovider.DataType$TextAndMediaPath$1 -> com.tencent.connect.dataprovider.b:
    com.tencent.connect.dataprovider.DataType$TextAndMediaPath createFromParcel(android.os.Parcel) -> a
    com.tencent.connect.dataprovider.DataType$TextAndMediaPath[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.connect.dataprovider.DataType$TextOnly -> com.tencent.connect.dataprovider.DataType$TextOnly:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.connect.dataprovider.DataType$TextOnly$1 -> com.tencent.connect.dataprovider.c:
    com.tencent.connect.dataprovider.DataType$TextOnly createFromParcel(android.os.Parcel) -> a
    com.tencent.connect.dataprovider.DataType$TextOnly[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.connect.share.QQShare -> ar.a:
    java.lang.String a -> l
    java.lang.String mViaShareQQType -> a
    void shareToQQ(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    void a(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> b
    void b(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> c
    void c(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> d
    java.lang.StringBuffer a(java.lang.StringBuffer,android.os.Bundle) -> a
    void releaseResource() -> a
    void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    java.lang.String a() -> f
    void a(com.tencent.connect.share.QQShare,android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.share.QQShare$1 -> ar.b:
    android.os.Bundle a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.tencent.tauth.IUiListener d -> d
    android.app.Activity e -> e
    com.tencent.connect.share.QQShare f -> f
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.connect.share.QQShare$2 -> ar.c:
    android.os.Bundle a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.tencent.tauth.IUiListener d -> d
    android.app.Activity e -> e
    com.tencent.connect.share.QQShare f -> f
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.connect.share.QzoneShare -> ar.d:
    java.lang.String mViaShareQzoneType -> a
    boolean a -> l
    boolean b -> m
    boolean c -> n
    boolean d -> o
    void shareToQzone(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    void a(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> b
    void b(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> c
    java.lang.StringBuffer a(java.lang.StringBuffer,android.os.Bundle) -> a
    void releaseResource() -> a
    void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    void a(com.tencent.connect.share.QzoneShare,android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.share.QzoneShare$1 -> ar.e:
    android.os.Bundle a -> a
    android.app.Activity b -> b
    com.tencent.tauth.IUiListener c -> c
    com.tencent.connect.share.QzoneShare d -> d
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.connect.share.a -> ar.f:
    void a(android.content.Context,java.lang.String,com.tencent.open.utils.AsynLoadImgBack) -> a
    void a(android.content.Context,java.util.ArrayList,com.tencent.open.utils.AsynLoadImgBack) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    java.lang.String a(android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,int,int) -> b
    android.graphics.Bitmap a(java.lang.String,int) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    int b(android.graphics.BitmapFactory$Options,int,int) -> b
    boolean a(java.lang.String,int,int) -> a
com.tencent.connect.share.a$1 -> ar.g:
    com.tencent.open.utils.AsynLoadImgBack a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.share.a$2 -> ar.h:
    java.lang.String a -> a
    android.os.Handler b -> b
    void run() -> run
com.tencent.connect.share.a$3 -> ar.i:
    com.tencent.open.utils.AsynLoadImgBack a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.share.a$4 -> ar.j:
    java.util.ArrayList a -> a
    android.os.Handler b -> b
    void run() -> run
com.tencent.map.b.f -> com.tencent.map.b.f:
    android.net.wifi.WifiManager b -> a
    android.os.Handler d -> b
    java.lang.Runnable e -> c
    int f -> d
    com.tencent.map.b.f$a g -> e
    com.tencent.map.b.f$b h -> f
    boolean i -> g
    void a(long) -> a
    com.tencent.map.b.f$a b(com.tencent.map.b.f) -> a
    android.net.wifi.WifiManager c(com.tencent.map.b.f) -> b
    com.tencent.map.b.f$b a(com.tencent.map.b.f,com.tencent.map.b.f$b) -> a
    com.tencent.map.b.f$b d(com.tencent.map.b.f) -> c
    int e(com.tencent.map.b.f) -> d
com.tencent.map.b.f$a -> com.tencent.map.b.a:
    void a(com.tencent.map.b.f$b) -> a
    void b(int) -> a
com.tencent.map.b.f$b -> com.tencent.map.b.b:
    java.util.List a -> a
    java.lang.Object clone() -> clone
com.tencent.map.b.f$c -> com.tencent.map.b.f$c:
    int a -> a
    java.util.List b -> b
    boolean c -> c
    com.tencent.map.b.f d -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(java.util.List) -> a
com.tencent.mm.a.a -> as.a:
    java.lang.String c(byte[]) -> a
com.tencent.mm.sdk.a.a -> com.tencent.mm.sdk.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a$a) -> a
com.tencent.mm.sdk.a.a$a -> com.tencent.mm.sdk.a.a$a:
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    int flags -> flags
    android.os.Bundle Z -> Z
    java.lang.String toString() -> toString
com.tencent.mm.sdk.a.a.a -> com.tencent.mm.sdk.a.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a.a$a) -> a
com.tencent.mm.sdk.a.a.a$a -> com.tencent.mm.sdk.a.a.a$a:
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String Y -> Y
    android.os.Bundle Z -> Z
com.tencent.mm.sdk.a.a.b -> com.tencent.mm.sdk.a.a.b:
    byte[] a(java.lang.String,int,java.lang.String) -> a
com.tencent.mm.sdk.b.a -> com.tencent.mm.sdk.b.a:
    int a(android.os.Bundle,java.lang.String) -> a
    java.lang.String b(android.os.Bundle,java.lang.String) -> b
com.tencent.mm.sdk.b.b -> com.tencent.mm.sdk.b.b:
    int level -> level
    com.tencent.mm.sdk.b.b$a aG -> aG
    com.tencent.mm.sdk.b.b$a aH -> aH
    java.lang.String aI -> aI
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    int t() -> t
com.tencent.mm.sdk.b.b$a -> com.tencent.mm.sdk.b.b$a:
    void f(java.lang.String,java.lang.String) -> f
    void g(java.lang.String,java.lang.String) -> g
    void h(java.lang.String,java.lang.String) -> h
    void i(java.lang.String,java.lang.String) -> i
    int getLogLevel() -> getLogLevel
com.tencent.mm.sdk.b.c -> com.tencent.mm.sdk.b.c:
    android.os.Handler handler -> handler
    void f(java.lang.String,java.lang.String) -> f
    void g(java.lang.String,java.lang.String) -> g
    void h(java.lang.String,java.lang.String) -> h
    void i(java.lang.String,java.lang.String) -> i
    int getLogLevel() -> getLogLevel
com.tencent.mm.sdk.b.d -> com.tencent.mm.sdk.b.d:
    com.tencent.mm.sdk.b.e aJ -> aJ
    java.util.concurrent.ConcurrentHashMap aK -> aK
    int aL -> aL
    java.util.LinkedList aM -> aM
    boolean post(java.lang.Runnable) -> post
    java.lang.String toString() -> toString
    void a(java.lang.Runnable,com.tencent.mm.sdk.b.g) -> a
    void b(java.lang.Runnable,com.tencent.mm.sdk.b.g) -> b
com.tencent.mm.sdk.b.e -> com.tencent.mm.sdk.b.e:
    android.os.Looper aN -> aN
    android.os.Handler$Callback aO -> aO
    com.tencent.mm.sdk.b.e$a aP -> aP
    boolean sendMessageAtTime(android.os.Message,long) -> sendMessageAtTime
    void dispatchMessage(android.os.Message) -> dispatchMessage
    void handleMessage(android.os.Message) -> handleMessage
    java.lang.String toString() -> toString
    void c(java.lang.Runnable,com.tencent.mm.sdk.b.g) -> c
com.tencent.mm.sdk.b.e$a -> com.tencent.mm.sdk.b.e$a:
    void a(java.lang.Runnable,com.tencent.mm.sdk.b.g) -> a
    void b(java.lang.Runnable,com.tencent.mm.sdk.b.g) -> b
com.tencent.mm.sdk.b.f -> com.tencent.mm.sdk.b.f:
    java.lang.String toString() -> toString
com.tencent.mm.sdk.b.g -> com.tencent.mm.sdk.b.g:
    java.lang.Runnable aQ -> aQ
    java.lang.String aR -> aR
    java.lang.Object aS -> aS
    android.os.Handler handler -> handler
    java.lang.Thread aT -> aT
    java.lang.String aU -> aU
    long aV -> aV
    int priority -> priority
    com.tencent.mm.sdk.b.g$a aW -> aW
    long aX -> aX
    long aY -> aY
    long aZ -> aZ
    long ba -> ba
    long bb -> bb
    boolean started -> started
    long bc -> bc
    long bd -> bd
    float be -> be
    java.lang.String bf -> bf
    java.lang.String bg -> bg
    void run() -> run
com.tencent.mm.sdk.b.g$a -> com.tencent.mm.sdk.b.g$a:
    void c(java.lang.Runnable,com.tencent.mm.sdk.b.g) -> c
com.tencent.mm.sdk.b.h -> com.tencent.mm.sdk.b.h:
    long[] bh -> bh
    long[] bi -> bi
    java.util.TimeZone GMT -> GMT
    char[] bj -> bj
    java.lang.String[] bk -> bk
    boolean h(java.lang.String) -> h
    com.tencent.mm.sdk.b.f u() -> u
com.tencent.mm.sdk.c.a -> com.tencent.mm.sdk.c.a:
com.tencent.mm.sdk.c.a$a -> com.tencent.mm.sdk.c.a$a:
    java.lang.Object a(int,java.lang.String) -> a
com.tencent.mm.sdk.c.a$b -> com.tencent.mm.sdk.c.a$b:
    android.net.Uri CONTENT_URI -> CONTENT_URI
com.tencent.mm.sdk.constants.Build -> com.tencent.mm.sdk.constants.Build:
    int SDK_INT -> SDK_INT
    java.lang.String SDK_VERSION_NAME -> SDK_VERSION_NAME
    int MIN_SDK_INT -> MIN_SDK_INT
    int TIMELINE_SUPPORTED_SDK_INT -> TIMELINE_SUPPORTED_SDK_INT
    int EMOJI_SUPPORTED_SDK_INT -> EMOJI_SUPPORTED_SDK_INT
    int MUSIC_DATA_URL_SUPPORTED_SDK_INT -> MUSIC_DATA_URL_SUPPORTED_SDK_INT
    int PAY_SUPPORTED_SDK_INT -> PAY_SUPPORTED_SDK_INT
    int OPENID_SUPPORTED_SDK_INT -> OPENID_SUPPORTED_SDK_INT
    int FAVORITE_SUPPPORTED_SDK_INT -> FAVORITE_SUPPPORTED_SDK_INT
    int MESSAGE_ACTION_SUPPPORTED_SDK_INT -> MESSAGE_ACTION_SUPPPORTED_SDK_INT
    int SCAN_QRCODE_AUTH_SUPPORTED_SDK_INT -> SCAN_QRCODE_AUTH_SUPPORTED_SDK_INT
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
com.tencent.mm.sdk.constants.ConstantsAPI -> com.tencent.mm.sdk.constants.ConstantsAPI:
    java.lang.String ACTION_HANDLE_APP_REGISTER -> ACTION_HANDLE_APP_REGISTER
    java.lang.String ACTION_HANDLE_APP_UNREGISTER -> ACTION_HANDLE_APP_UNREGISTER
    java.lang.String ACTION_REFRESH_WXAPP -> ACTION_REFRESH_WXAPP
    int COMMAND_UNKNOWN -> COMMAND_UNKNOWN
    int COMMAND_SENDAUTH -> COMMAND_SENDAUTH
    int COMMAND_SENDMESSAGE_TO_WX -> COMMAND_SENDMESSAGE_TO_WX
    int COMMAND_GETMESSAGE_FROM_WX -> COMMAND_GETMESSAGE_FROM_WX
    int COMMAND_SHOWMESSAGE_FROM_WX -> COMMAND_SHOWMESSAGE_FROM_WX
    int COMMAND_PAY_BY_WX -> COMMAND_PAY_BY_WX
    int COMMAND_LAUNCH_BY_WX -> COMMAND_LAUNCH_BY_WX
    int COMMAND_JUMP_TO_BIZ_PROFILE -> COMMAND_JUMP_TO_BIZ_PROFILE
    int COMMAND_JUMP_BIZ_WEBVIEW -> COMMAND_JUMP_BIZ_WEBVIEW
    int COMMAND_ADD_CARD_TO_EX_CARD_PACKAGE -> COMMAND_ADD_CARD_TO_EX_CARD_PACKAGE
    int COMMAND_JUMP_BIZ_TEMPSESSION -> COMMAND_JUMP_BIZ_TEMPSESSION
    int COMMAND_OPEN_RANK_LIST -> COMMAND_OPEN_RANK_LIST
    int COMMAND_OPEN_WEBVIEW -> COMMAND_OPEN_WEBVIEW
    int COMMAND_OPEN_BUSI_LUCKY_MONEY -> COMMAND_OPEN_BUSI_LUCKY_MONEY
    int COMMAND_CREATE_CHATROOM -> COMMAND_CREATE_CHATROOM
    int COMMAND_JOIN_CHATROOM -> COMMAND_JOIN_CHATROOM
    java.lang.String APP_PACKAGE -> APP_PACKAGE
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String CONTENT -> CONTENT
    java.lang.String CHECK_SUM -> CHECK_SUM
com.tencent.mm.sdk.constants.ConstantsAPI$Token -> com.tencent.mm.sdk.constants.ConstantsAPI$Token:
    java.lang.String WX_TOKEN_KEY -> WX_TOKEN_KEY
    java.lang.String WX_TOKEN_VALUE_MSG -> WX_TOKEN_VALUE_MSG
    java.lang.String WX_TOKEN_PLATFORMID_KEY -> WX_TOKEN_PLATFORMID_KEY
    java.lang.String WX_TOKEN_PLATFORMID_VALUE -> WX_TOKEN_PLATFORMID_VALUE
    java.lang.String WX_LAUNCH_PARAM_KEY -> WX_LAUNCH_PARAM_KEY
com.tencent.mm.sdk.constants.ConstantsAPI$WXApp -> com.tencent.mm.sdk.constants.ConstantsAPI$WXApp:
    java.lang.String WXAPP_PACKAGE_NAME -> WXAPP_PACKAGE_NAME
    java.lang.String WXAPP_BROADCAST_PERMISSION -> WXAPP_BROADCAST_PERMISSION
    java.lang.String WXAPP_MSG_ENTRY_CLASSNAME -> WXAPP_MSG_ENTRY_CLASSNAME
com.tencent.mm.sdk.diffdev.DiffDevOAuthFactory -> com.tencent.mm.sdk.diffdev.DiffDevOAuthFactory:
    java.lang.String TAG -> TAG
    int VERSION_1 -> VERSION_1
    int MAX_SUPPORTED_VERSION -> MAX_SUPPORTED_VERSION
    com.tencent.mm.sdk.diffdev.IDiffDevOAuth v1Instance -> v1Instance
    com.tencent.mm.sdk.diffdev.IDiffDevOAuth getDiffDevOAuth() -> getDiffDevOAuth
    com.tencent.mm.sdk.diffdev.IDiffDevOAuth getDiffDevOAuth(int) -> getDiffDevOAuth
com.tencent.mm.sdk.diffdev.IDiffDevOAuth -> com.tencent.mm.sdk.diffdev.IDiffDevOAuth:
    boolean auth(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.mm.sdk.diffdev.OAuthListener) -> auth
    boolean stopAuth() -> stopAuth
    void addListener(com.tencent.mm.sdk.diffdev.OAuthListener) -> addListener
    void removeListener(com.tencent.mm.sdk.diffdev.OAuthListener) -> removeListener
    void removeAllListeners() -> removeAllListeners
    void detach() -> detach
com.tencent.mm.sdk.diffdev.OAuthErrCode -> com.tencent.mm.sdk.diffdev.OAuthErrCode:
    com.tencent.mm.sdk.diffdev.OAuthErrCode WechatAuth_Err_OK -> WechatAuth_Err_OK
    com.tencent.mm.sdk.diffdev.OAuthErrCode WechatAuth_Err_NormalErr -> WechatAuth_Err_NormalErr
    com.tencent.mm.sdk.diffdev.OAuthErrCode WechatAuth_Err_NetworkErr -> WechatAuth_Err_NetworkErr
    com.tencent.mm.sdk.diffdev.OAuthErrCode WechatAuth_Err_JsonDecodeErr -> WechatAuth_Err_JsonDecodeErr
    com.tencent.mm.sdk.diffdev.OAuthErrCode WechatAuth_Err_Cancel -> WechatAuth_Err_Cancel
    com.tencent.mm.sdk.diffdev.OAuthErrCode WechatAuth_Err_Timeout -> WechatAuth_Err_Timeout
    com.tencent.mm.sdk.diffdev.OAuthErrCode WechatAuth_Err_Auth_Stopped -> WechatAuth_Err_Auth_Stopped
    int code -> code
    com.tencent.mm.sdk.diffdev.OAuthErrCode[] $VALUES -> $VALUES
    com.tencent.mm.sdk.diffdev.OAuthErrCode[] values() -> values
    com.tencent.mm.sdk.diffdev.OAuthErrCode valueOf(java.lang.String) -> valueOf
    int getCode() -> getCode
    java.lang.String toString() -> toString
com.tencent.mm.sdk.diffdev.OAuthListener -> com.tencent.mm.sdk.diffdev.OAuthListener:
    void onAuthGotQrcode(java.lang.String,byte[]) -> onAuthGotQrcode
    void onQrcodeScanned() -> onQrcodeScanned
    void onAuthFinish(com.tencent.mm.sdk.diffdev.OAuthErrCode,java.lang.String) -> onAuthFinish
com.tencent.mm.sdk.diffdev.a.a -> com.tencent.mm.sdk.diffdev.a.a:
    com.tencent.mm.sdk.b.d ac -> ac
    java.util.List ad -> ad
    com.tencent.mm.sdk.diffdev.a.d ae -> ae
    com.tencent.mm.sdk.diffdev.OAuthListener af -> af
    boolean auth(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.mm.sdk.diffdev.OAuthListener) -> auth
    boolean stopAuth() -> stopAuth
    void addListener(com.tencent.mm.sdk.diffdev.OAuthListener) -> addListener
    void removeListener(com.tencent.mm.sdk.diffdev.OAuthListener) -> removeListener
    void removeAllListeners() -> removeAllListeners
    void detach() -> detach
    java.util.List a(com.tencent.mm.sdk.diffdev.a.a) -> a
    com.tencent.mm.sdk.b.d b(com.tencent.mm.sdk.diffdev.a.a) -> b
    com.tencent.mm.sdk.diffdev.a.d c(com.tencent.mm.sdk.diffdev.a.a) -> c
com.tencent.mm.sdk.diffdev.a.b -> com.tencent.mm.sdk.diffdev.a.b:
    com.tencent.mm.sdk.diffdev.a.a ag -> ag
    void onAuthGotQrcode(java.lang.String,byte[]) -> onAuthGotQrcode
    void onQrcodeScanned() -> onQrcodeScanned
    void onAuthFinish(com.tencent.mm.sdk.diffdev.OAuthErrCode,java.lang.String) -> onAuthFinish
com.tencent.mm.sdk.diffdev.a.c -> com.tencent.mm.sdk.diffdev.a.c:
    com.tencent.mm.sdk.diffdev.a.b ah -> ah
    void run() -> run
com.tencent.mm.sdk.diffdev.a.d -> com.tencent.mm.sdk.diffdev.a.d:
    boolean ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String appId -> appId
    java.lang.String scope -> scope
    java.lang.String al -> al
    java.lang.String am -> am
    java.lang.String signature -> signature
    com.tencent.mm.sdk.diffdev.OAuthListener an -> an
    com.tencent.mm.sdk.diffdev.a.f ao -> ao
    boolean q() -> q
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    boolean r() -> r
    java.lang.String s() -> s
com.tencent.mm.sdk.diffdev.a.d$a -> com.tencent.mm.sdk.diffdev.a.d$a:
    com.tencent.mm.sdk.diffdev.OAuthErrCode ap -> ap
    java.lang.String aq -> aq
    java.lang.String ar -> ar
    java.lang.String as -> as
    int at -> at
    java.lang.String au -> au
    byte[] av -> av
    com.tencent.mm.sdk.diffdev.a.d$a d(byte[]) -> d
    boolean a(java.lang.String,byte[]) -> a
com.tencent.mm.sdk.diffdev.a.e -> com.tencent.mm.sdk.diffdev.a.e:
    byte[] b(java.lang.String,int) -> b
com.tencent.mm.sdk.diffdev.a.f -> com.tencent.mm.sdk.diffdev.a.f:
    java.lang.String aq -> aq
    java.lang.String url -> url
    com.tencent.mm.sdk.diffdev.OAuthListener an -> an
    int aw -> aw
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.tencent.mm.sdk.diffdev.a.f$a -> com.tencent.mm.sdk.diffdev.a.f$a:
    com.tencent.mm.sdk.diffdev.OAuthErrCode ap -> ap
    java.lang.String ax -> ax
    int ay -> ay
    com.tencent.mm.sdk.diffdev.a.f$a e(byte[]) -> e
com.tencent.mm.sdk.diffdev.a.g -> com.tencent.mm.sdk.diffdev.a.g:
    com.tencent.mm.sdk.diffdev.a.g az -> az
    com.tencent.mm.sdk.diffdev.a.g aA -> aA
    com.tencent.mm.sdk.diffdev.a.g aB -> aB
    com.tencent.mm.sdk.diffdev.a.g aC -> aC
    com.tencent.mm.sdk.diffdev.a.g aD -> aD
    com.tencent.mm.sdk.diffdev.a.g aE -> aE
    int code -> code
    com.tencent.mm.sdk.diffdev.a.g[] aF -> aF
    com.tencent.mm.sdk.diffdev.a.g[] values() -> values
    com.tencent.mm.sdk.diffdev.a.g valueOf(java.lang.String) -> valueOf
    int getCode() -> getCode
    java.lang.String toString() -> toString
com.tencent.mm.sdk.modelbase.BaseReq -> com.tencent.mm.sdk.modelbase.BaseReq:
    java.lang.String transaction -> transaction
    java.lang.String openId -> openId
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbase.BaseResp -> com.tencent.mm.sdk.modelbase.BaseResp:
    int errCode -> errCode
    java.lang.String errStr -> errStr
    java.lang.String transaction -> transaction
    java.lang.String openId -> openId
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbase.BaseResp$ErrCode -> com.tencent.mm.sdk.modelbase.BaseResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
    int ERR_BAN -> ERR_BAN
com.tencent.mm.sdk.modelbiz.AddCardToWXCardPackage -> com.tencent.mm.sdk.modelbiz.AddCardToWXCardPackage:
com.tencent.mm.sdk.modelbiz.AddCardToWXCardPackage$Req -> com.tencent.mm.sdk.modelbiz.AddCardToWXCardPackage$Req:
    java.util.List cardArrary -> cardArrary
    int getType() -> getType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
com.tencent.mm.sdk.modelbiz.AddCardToWXCardPackage$Resp -> com.tencent.mm.sdk.modelbiz.AddCardToWXCardPackage$Resp:
    java.util.List cardArrary -> cardArrary
    int getType() -> getType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.tencent.mm.sdk.modelbiz.AddCardToWXCardPackage$WXCardItem -> com.tencent.mm.sdk.modelbiz.AddCardToWXCardPackage$WXCardItem:
    java.lang.String cardId -> cardId
    java.lang.String cardExtMsg -> cardExtMsg
    int cardState -> cardState
com.tencent.mm.sdk.modelbiz.CreateChatroom -> com.tencent.mm.sdk.modelbiz.CreateChatroom:
com.tencent.mm.sdk.modelbiz.CreateChatroom$Req -> com.tencent.mm.sdk.modelbiz.CreateChatroom$Req:
    java.lang.String groupId -> groupId
    java.lang.String chatroomName -> chatroomName
    java.lang.String chatroomNickName -> chatroomNickName
    java.lang.String extMsg -> extMsg
    int getType() -> getType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
com.tencent.mm.sdk.modelbiz.CreateChatroom$Resp -> com.tencent.mm.sdk.modelbiz.CreateChatroom$Resp:
    java.lang.String extMsg -> extMsg
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbiz.JoinChatroom -> com.tencent.mm.sdk.modelbiz.JoinChatroom:
com.tencent.mm.sdk.modelbiz.JoinChatroom$Req -> com.tencent.mm.sdk.modelbiz.JoinChatroom$Req:
    java.lang.String groupId -> groupId
    java.lang.String chatroomNickName -> chatroomNickName
    java.lang.String extMsg -> extMsg
    int getType() -> getType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
com.tencent.mm.sdk.modelbiz.JoinChatroom$Resp -> com.tencent.mm.sdk.modelbiz.JoinChatroom$Resp:
    java.lang.String extMsg -> extMsg
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbiz.JumpToBizProfile -> com.tencent.mm.sdk.modelbiz.JumpToBizProfile:
    int JUMP_TO_NORMAL_BIZ_PROFILE -> JUMP_TO_NORMAL_BIZ_PROFILE
    int JUMP_TO_HARD_WARE_BIZ_PROFILE -> JUMP_TO_HARD_WARE_BIZ_PROFILE
com.tencent.mm.sdk.modelbiz.JumpToBizProfile$Req -> com.tencent.mm.sdk.modelbiz.JumpToBizProfile$Req:
    java.lang.String TAG -> TAG
    int EXT_MSG_LENGTH -> EXT_MSG_LENGTH
    java.lang.String toUserName -> toUserName
    java.lang.String extMsg -> extMsg
    int profileType -> profileType
    int getType() -> getType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.tencent.mm.sdk.modelbiz.JumpToBizTempSession -> com.tencent.mm.sdk.modelbiz.JumpToBizTempSession:
    int SHOW_MENU -> SHOW_MENU
    int SHOW_CHAT -> SHOW_CHAT
com.tencent.mm.sdk.modelbiz.JumpToBizTempSession$Req -> com.tencent.mm.sdk.modelbiz.JumpToBizTempSession$Req:
    java.lang.String TAG -> TAG
    int MAX_SESSION_FROM_LENGTH -> MAX_SESSION_FROM_LENGTH
    java.lang.String toUserName -> toUserName
    java.lang.String sessionFrom -> sessionFrom
    int showType -> showType
    int getType() -> getType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
com.tencent.mm.sdk.modelbiz.JumpToBizWebview -> com.tencent.mm.sdk.modelbiz.JumpToBizWebview:
com.tencent.mm.sdk.modelbiz.JumpToBizWebview$Req -> com.tencent.mm.sdk.modelbiz.JumpToBizWebview$Req:
    java.lang.String TAG -> TAG
    int EXT_MSG_LENGTH -> EXT_MSG_LENGTH
    java.lang.String toUserName -> toUserName
    java.lang.String extMsg -> extMsg
    int webType -> webType
    int scene -> scene
    int getType() -> getType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
com.tencent.mm.sdk.modelbiz.OpenBusiLuckyMoney -> com.tencent.mm.sdk.modelbiz.OpenBusiLuckyMoney:
com.tencent.mm.sdk.modelbiz.OpenBusiLuckyMoney$Req -> com.tencent.mm.sdk.modelbiz.OpenBusiLuckyMoney$Req:
    int MAX_URL_LENGHT -> MAX_URL_LENGHT
    java.lang.String appId -> appId
    java.lang.String timeStamp -> timeStamp
    java.lang.String nonceStr -> nonceStr
    java.lang.String packageExt -> packageExt
    java.lang.String signType -> signType
    java.lang.String signature -> signature
    int getType() -> getType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
com.tencent.mm.sdk.modelbiz.OpenRankList -> com.tencent.mm.sdk.modelbiz.OpenRankList:
com.tencent.mm.sdk.modelbiz.OpenRankList$Req -> com.tencent.mm.sdk.modelbiz.OpenRankList$Req:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbiz.OpenWebview -> com.tencent.mm.sdk.modelbiz.OpenWebview:
com.tencent.mm.sdk.modelbiz.OpenWebview$Req -> com.tencent.mm.sdk.modelbiz.OpenWebview$Req:
    int MAX_URL_LENGHT -> MAX_URL_LENGHT
    java.lang.String url -> url
    int getType() -> getType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
com.tencent.mm.sdk.modelbiz.OpenWebview$Resp -> com.tencent.mm.sdk.modelbiz.OpenWebview$Resp:
    java.lang.String result -> result
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.GetMessageFromWX -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX:
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req:
    java.lang.String username -> username
    java.lang.String lang -> lang
    java.lang.String country -> country
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Resp -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Resp:
    java.lang.String TAG -> TAG
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.LaunchFromWX -> com.tencent.mm.sdk.modelmsg.LaunchFromWX:
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req -> com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req:
    java.lang.String TAG -> TAG
    int MESSAGE_ACTION_LENGTH_LIMIT -> MESSAGE_ACTION_LENGTH_LIMIT
    int MESSAGE_EXT_LENGTH_LIMIT -> MESSAGE_EXT_LENGTH_LIMIT
    java.lang.String messageAction -> messageAction
    java.lang.String messageExt -> messageExt
    java.lang.String lang -> lang
    java.lang.String country -> country
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Resp -> com.tencent.mm.sdk.modelmsg.LaunchFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendAuth -> com.tencent.mm.sdk.modelmsg.SendAuth:
com.tencent.mm.sdk.modelmsg.SendAuth$Req -> com.tencent.mm.sdk.modelmsg.SendAuth$Req:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String scope -> scope
    java.lang.String state -> state
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendAuth$Resp -> com.tencent.mm.sdk.modelmsg.SendAuth$Resp:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String code -> code
    java.lang.String state -> state
    java.lang.String url -> url
    java.lang.String lang -> lang
    java.lang.String country -> country
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendMessageToWX -> com.tencent.mm.sdk.modelmsg.SendMessageToWX:
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Req -> com.tencent.mm.sdk.modelmsg.SendMessageToWX$Req:
    int WXSceneSession -> WXSceneSession
    int WXSceneTimeline -> WXSceneTimeline
    int WXSceneFavorite -> WXSceneFavorite
    java.lang.String TAG -> TAG
    int FAV_CONTENT_LENGTH_LIMIT -> FAV_CONTENT_LENGTH_LIMIT
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int scene -> scene
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp -> com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp:
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX:
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req:
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    java.lang.String lang -> lang
    java.lang.String country -> country
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Resp -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXAppExtendObject -> com.tencent.mm.sdk.modelmsg.WXAppExtendObject:
    java.lang.String TAG -> TAG
    int EXTINFO_LENGTH_LIMIT -> EXTINFO_LENGTH_LIMIT
    int PATH_LENGTH_LIMIT -> PATH_LENGTH_LIMIT
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXAppLaunchData -> com.tencent.mm.sdk.modelmsg.WXAppLaunchData:
    java.lang.String ACTION_HANDLE_WXAPPLAUNCH -> ACTION_HANDLE_WXAPPLAUNCH
    java.lang.String ACTION_HANDLE_WXAPP_RESULT -> ACTION_HANDLE_WXAPP_RESULT
    java.lang.String ACTION_HANDLE_WXAPP_SHOW -> ACTION_HANDLE_WXAPP_SHOW
    int launchType -> launchType
    java.lang.String message -> message
com.tencent.mm.sdk.modelmsg.WXAppLaunchData$Builder -> com.tencent.mm.sdk.modelmsg.WXAppLaunchData$Builder:
    com.tencent.mm.sdk.modelmsg.WXAppLaunchData fromBundle(android.os.Bundle) -> fromBundle
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXAppLaunchData) -> toBundle
com.tencent.mm.sdk.modelmsg.WXDesignerSharedObject -> com.tencent.mm.sdk.modelmsg.WXDesignerSharedObject:
    java.lang.String TAG -> TAG
    java.lang.String thumburl -> thumburl
    int designerUIN -> designerUIN
    java.lang.String designerName -> designerName
    java.lang.String designerRediretctUrl -> designerRediretctUrl
    java.lang.String url -> url
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXEmojiObject -> com.tencent.mm.sdk.modelmsg.WXEmojiObject:
    java.lang.String TAG -> TAG
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXEmojiSharedObject -> com.tencent.mm.sdk.modelmsg.WXEmojiSharedObject:
    java.lang.String TAG -> TAG
    java.lang.String thumburl -> thumburl
    int packageflag -> packageflag
    java.lang.String packageid -> packageid
    java.lang.String url -> url
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXFileObject -> com.tencent.mm.sdk.modelmsg.WXFileObject:
    java.lang.String TAG -> TAG
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    int contentLengthLimit -> contentLengthLimit
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    void setContentLengthLimit(int) -> setContentLengthLimit
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXImageObject -> com.tencent.mm.sdk.modelmsg.WXImageObject:
    java.lang.String TAG -> TAG
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    int PATH_LENGTH_LIMIT -> PATH_LENGTH_LIMIT
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    void setImagePath(java.lang.String) -> setImagePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXMediaMessage -> com.tencent.mm.sdk.modelmsg.WXMediaMessage:
    java.lang.String TAG -> TAG
    int THUMB_LENGTH_LIMIT -> THUMB_LENGTH_LIMIT
    int TITLE_LENGTH_LIMIT -> TITLE_LENGTH_LIMIT
    int DESCRIPTION_LENGTH_LIMIT -> DESCRIPTION_LENGTH_LIMIT
    int MEDIA_TAG_NAME_LENGTH_LIMIT -> MEDIA_TAG_NAME_LENGTH_LIMIT
    int MESSAGE_ACTION_LENGTH_LIMIT -> MESSAGE_ACTION_LENGTH_LIMIT
    int MESSAGE_EXT_LENGTH_LIMIT -> MESSAGE_EXT_LENGTH_LIMIT
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    java.lang.String mediaTagName -> mediaTagName
    java.lang.String messageAction -> messageAction
    java.lang.String messageExt -> messageExt
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXMediaMessage$Builder -> com.tencent.mm.sdk.modelmsg.WXMediaMessage$Builder:
    java.lang.String KEY_IDENTIFIER -> KEY_IDENTIFIER
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXMediaMessage) -> toBundle
    com.tencent.mm.sdk.modelmsg.WXMediaMessage fromBundle(android.os.Bundle) -> fromBundle
    java.lang.String pathNewToOld(java.lang.String) -> pathNewToOld
    java.lang.String pathOldToNew(java.lang.String) -> pathOldToNew
com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject -> com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    int TYPE_PRODUCT -> TYPE_PRODUCT
    int TYPE_EMOTICON_GIFT -> TYPE_EMOTICON_GIFT
    int TYPE_DEVICE_ACCESS -> TYPE_DEVICE_ACCESS
    int TYPE_MALL_PRODUCT -> TYPE_MALL_PRODUCT
    int TYPE_OLD_TV -> TYPE_OLD_TV
    int TYPE_EMOTICON_SHARED -> TYPE_EMOTICON_SHARED
    int TYPE_CARD_SHARE -> TYPE_CARD_SHARE
    int TYPE_LOCATION_SHARE -> TYPE_LOCATION_SHARE
    int TYPE_RECORD -> TYPE_RECORD
    int TYPE_TV -> TYPE_TV
    int TYPE_DESIGNER_SHARED -> TYPE_DESIGNER_SHARED
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXMusicObject -> com.tencent.mm.sdk.modelmsg.WXMusicObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXTextObject -> com.tencent.mm.sdk.modelmsg.WXTextObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXVideoObject -> com.tencent.mm.sdk.modelmsg.WXVideoObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXWebpageObject -> com.tencent.mm.sdk.modelmsg.WXWebpageObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String webpageUrl -> webpageUrl
    java.lang.String extInfo -> extInfo
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelpay.PayReq -> com.tencent.mm.sdk.modelpay.PayReq:
    java.lang.String TAG -> TAG
    int EXTDATA_MAX_LENGTH -> EXTDATA_MAX_LENGTH
    java.lang.String appId -> appId
    java.lang.String partnerId -> partnerId
    java.lang.String prepayId -> prepayId
    java.lang.String nonceStr -> nonceStr
    java.lang.String timeStamp -> timeStamp
    java.lang.String packageValue -> packageValue
    java.lang.String sign -> sign
    java.lang.String extData -> extData
    com.tencent.mm.sdk.modelpay.PayReq$Options options -> options
    java.lang.String signType -> signType
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
com.tencent.mm.sdk.modelpay.PayReq$Options -> com.tencent.mm.sdk.modelpay.PayReq$Options:
    int INVALID_FLAGS -> INVALID_FLAGS
    java.lang.String callbackClassName -> callbackClassName
    int callbackFlags -> callbackFlags
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.tencent.mm.sdk.modelpay.PayResp -> com.tencent.mm.sdk.modelpay.PayResp:
    java.lang.String prepayId -> prepayId
    java.lang.String returnKey -> returnKey
    java.lang.String extData -> extData
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.IWXAPI -> com.tencent.mm.sdk.openapi.IWXAPI:
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> sendReq
    boolean sendResp(com.tencent.mm.sdk.modelbase.BaseResp) -> sendResp
    void detach() -> detach
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> com.tencent.mm.sdk.openapi.IWXAPIEventHandler:
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> onResp
com.tencent.mm.sdk.openapi.MMSharedPreferences -> com.tencent.mm.sdk.openapi.MMSharedPreferences:
    android.content.ContentResolver cr -> cr
    java.lang.String[] columns -> columns
    java.util.HashMap values -> values
    com.tencent.mm.sdk.openapi.MMSharedPreferences$REditor editor -> editor
    java.lang.Object getValue(java.lang.String) -> getValue
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
com.tencent.mm.sdk.openapi.MMSharedPreferences$REditor -> com.tencent.mm.sdk.openapi.MMSharedPreferences$REditor:
    java.util.Map values -> values
    java.util.Set remove -> remove
    boolean clear -> clear
    android.content.ContentResolver cr -> cr
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor clear() -> clear
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.tencent.mm.sdk.openapi.WXAPIFactory -> com.tencent.mm.sdk.openapi.WXAPIFactory:
    java.lang.String TAG -> TAG
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String) -> createWXAPI
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> createWXAPI
com.tencent.mm.sdk.openapi.WXApiImplComm -> com.tencent.mm.sdk.openapi.WXApiImplComm:
    java.lang.String TAG -> TAG
    java.lang.String WX_APP_SIGNATURE -> WX_APP_SIGNATURE
    boolean isIntentFromWx(android.content.Intent,java.lang.String) -> isIntentFromWx
    boolean validateAppSignatureForPackage(android.content.Context,java.lang.String,boolean) -> validateAppSignatureForPackage
    boolean validateAppSignature(android.content.Context,android.content.pm.Signature[],boolean) -> validateAppSignature
com.tencent.mm.sdk.openapi.WXApiImplV10 -> com.tencent.mm.sdk.openapi.WXApiImplV10:
    java.lang.String TAG -> TAG
    com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb activityCb -> activityCb
    android.content.Context context -> context
    java.lang.String appId -> appId
    boolean checkSignature -> checkSignature
    boolean detached -> detached
    java.lang.String wxappPayEntryClassname -> wxappPayEntryClassname
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> sendReq
    boolean sendPayReq(android.content.Context,android.os.Bundle) -> sendPayReq
    boolean sendJumpToBizProfileReq(android.content.Context,android.os.Bundle) -> sendJumpToBizProfileReq
    boolean sendJumpToBizWebviewReq(android.content.Context,android.os.Bundle) -> sendJumpToBizWebviewReq
    boolean sendJumpToBizTempSessionReq(android.content.Context,android.os.Bundle) -> sendJumpToBizTempSessionReq
    boolean sendAddCardToWX(android.content.Context,android.os.Bundle) -> sendAddCardToWX
    boolean sendOpenRankListReq(android.content.Context,android.os.Bundle) -> sendOpenRankListReq
    boolean sendOpenWebview(android.content.Context,android.os.Bundle) -> sendOpenWebview
    boolean sendOpenBusiLuckyMoney(android.content.Context,android.os.Bundle) -> sendOpenBusiLuckyMoney
    boolean createChatroom(android.content.Context,android.os.Bundle) -> createChatroom
    boolean joinChatroom(android.content.Context,android.os.Bundle) -> joinChatroom
    boolean sendResp(com.tencent.mm.sdk.modelbase.BaseResp) -> sendResp
    void detach() -> detach
    boolean checkSumConsistent(byte[],byte[]) -> checkSumConsistent
    void initMta(android.content.Context,java.lang.String) -> initMta
    com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb access$100() -> access$100
com.tencent.mm.sdk.openapi.WXApiImplV10$1 -> com.tencent.mm.sdk.openapi.WXApiImplV10$1:
com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb -> com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb:
    java.lang.String TAG -> TAG
    int DELAYED -> DELAYED
    boolean isForeground -> isForeground
    android.os.Handler handler -> handler
    android.content.Context context -> context
    java.lang.Runnable onPausedRunnable -> onPausedRunnable
    java.lang.Runnable onResumedRunnable -> onResumedRunnable
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void detach() -> detach
    boolean access$200(com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb) -> access$200
    android.content.Context access$300(com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb) -> access$300
    boolean access$202(com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb,boolean) -> access$202
com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb$1 -> com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb$1:
    com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb this$0 -> this$0
    void run() -> run
com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb$2 -> com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb$2:
    com.tencent.mm.sdk.openapi.WXApiImplV10$ActivityLifecycleCb this$0 -> this$0
    void run() -> run
com.tencent.open.a -> at.a:
    java.lang.String b -> b
    java.util.HashMap a -> a
    void a(com.tencent.open.a$a,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.util.List,com.tencent.open.a$b) -> a
    boolean a(android.webkit.WebView,java.lang.String) -> a
    java.lang.String a() -> a
com.tencent.open.a$a -> at.b:
    void call(java.lang.String,java.util.List,com.tencent.open.a$b) -> a
    boolean customCallback() -> a
com.tencent.open.a$b -> at.c:
    java.lang.ref.WeakReference a -> a
    long b -> b
    java.lang.String c -> c
    void a(java.lang.Object) -> a
    void a() -> a
    void a(java.lang.String) -> a
com.tencent.open.a.a -> au.a:
com.tencent.open.a.a$a -> au.b:
    boolean a(int,int) -> a
com.tencent.open.a.a$b -> au.c:
    boolean a() -> a
    com.tencent.open.a.a$e b() -> b
com.tencent.open.a.a$c -> au.d:
    java.text.SimpleDateFormat a(java.lang.String) -> a
com.tencent.open.a.a$d -> au.e:
    boolean a(java.io.File) -> a
com.tencent.open.a.a$e -> au.f:
    java.io.File a -> a
    long b -> b
    long c -> c
    java.io.File a() -> a
    void a(java.io.File) -> a
    long b() -> b
    void a(long) -> a
    long c() -> c
    void b(long) -> b
    com.tencent.open.a.a$e b(java.io.File) -> b
    java.lang.String toString() -> toString
com.tencent.open.a.b -> au.g:
    com.tencent.open.a.b a -> a
    com.tencent.open.a.k b -> b
    com.tencent.open.a.e c -> c
    java.lang.String d -> d
    com.tencent.open.a.b a() -> a
    void a(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void b() -> b
    java.io.File c() -> c
    void d() -> d
com.tencent.open.a.c -> au.h:
    java.util.concurrent.ConcurrentLinkedQueue a -> a
    java.util.concurrent.atomic.AtomicInteger b -> b
    int a(java.lang.String) -> a
    void a(java.io.Writer,char[]) -> a
    int a() -> a
    void b() -> b
    java.util.Iterator iterator() -> iterator
com.tencent.open.a.d -> au.i:
    com.tencent.open.a.d a -> a
    java.lang.String a(int) -> a
    java.lang.String a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.tencent.open.a.e -> au.j:
    java.text.SimpleDateFormat a -> a
    java.io.FileFilter b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    long g -> g
    java.io.File h -> h
    int i -> i
    java.lang.String j -> j
    long k -> k
    java.io.FileFilter l -> l
    java.util.Comparator m -> m
    long a(java.io.File) -> a
    java.io.File a() -> a
    java.io.File d(long) -> d
    java.io.File a(long) -> a
    java.io.File e(java.io.File) -> e
    java.io.File[] b(java.io.File) -> b
    void b() -> b
    java.io.File[] a(java.io.File[]) -> a
    int f(java.io.File) -> f
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    int d() -> d
    void a(int) -> a
    int e() -> e
    void b(int) -> b
    int f() -> f
    void c(int) -> c
    void b(long) -> b
    java.io.File g() -> g
    void c(java.io.File) -> c
    int h() -> h
    void d(int) -> d
    java.lang.String i() -> i
    void b(java.lang.String) -> b
    long j() -> j
    void c(long) -> c
    int d(java.io.File) -> d
com.tencent.open.a.f -> au.k:
    int a -> a
    boolean b -> b
    com.tencent.open.a.d c -> c
    void a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void b(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void a(int) -> a
    boolean a() -> a
    void a(boolean) -> a
    com.tencent.open.a.d b() -> b
    void a(com.tencent.open.a.d) -> a
com.tencent.open.a.g -> au.l:
    com.tencent.open.a.e a -> a
    boolean accept(java.io.File) -> accept
com.tencent.open.a.h -> au.m:
    boolean accept(java.io.File) -> accept
com.tencent.open.a.i -> au.n:
    com.tencent.open.a.e a -> a
    int a(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.open.a.j -> au.o:
    java.lang.String a -> a
    int b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    long l -> l
    int m -> m
    int n -> n
    int o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    int s -> s
    long t -> t
com.tencent.open.a.k -> au.p:
    com.tencent.open.a.e a -> a
    java.io.FileWriter b -> b
    java.io.File c -> c
    char[] d -> d
    com.tencent.open.a.c e -> e
    com.tencent.open.a.c f -> f
    com.tencent.open.a.c g -> g
    com.tencent.open.a.c h -> h
    boolean i -> i
    android.os.HandlerThread j -> j
    android.os.Handler k -> k
    void c() -> c
    void d() -> d
    void b(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void f() -> f
    java.io.Writer g() -> g
    void h() -> h
    void i() -> i
    com.tencent.open.a.e e() -> e
    void a(com.tencent.open.a.e) -> a
com.tencent.open.a.l -> au.q:
    com.tencent.open.a.l a -> a
    void b(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> b
com.tencent.open.b.a -> com.tencent.open.b.a:
    java.lang.String a -> a
    android.graphics.Rect b -> b
    boolean c -> c
    com.tencent.open.b.a$a d -> d
    void onMeasure(int,int) -> onMeasure
com.tencent.open.b.a$a -> com.tencent.open.b.d:
    void onKeyboardShown(int) -> a
    void onKeyboardHidden() -> a
com.tencent.open.b.b -> com.tencent.open.b.b:
    void onAttachedToWindow() -> onAttachedToWindow
com.tencent.open.b.c -> com.tencent.open.b.c:
    android.view.KeyEvent b -> b
    com.tencent.open.web.security.a c -> c
    boolean a -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.tencent.open.c.a -> av.a:
    java.lang.String d -> d
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b() -> b
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
com.tencent.open.c.b -> av.b:
    int a(java.lang.String) -> a
    int a() -> a
com.tencent.open.c.c -> av.c:
    com.tencent.open.c.c a -> a
    java.util.Random b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.concurrent.Executor e -> e
    android.os.HandlerThread f -> f
    android.os.Handler g -> g
    android.os.Handler h -> h
    com.tencent.open.c.c a() -> a
    void a(android.os.Bundle,java.lang.String,boolean) -> a
    void a(java.lang.String,long,long,long,int) -> a
    void a(java.lang.String,long,long,long,int,java.lang.String,boolean) -> a
    void a(com.tencent.open.c.g) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    int a(int) -> a
    android.os.Bundle b(com.tencent.open.c.g) -> b
    android.os.Bundle c(com.tencent.open.c.g) -> c
    void d(com.tencent.open.c.g) -> d
com.tencent.open.c.c$1 -> av.d:
    com.tencent.open.c.g a -> a
    com.tencent.open.c.c b -> b
    void run() -> run
com.tencent.open.c.c$2 -> av.e:
    android.os.Bundle a -> a
    com.tencent.open.c.c b -> b
    void run() -> run
com.tencent.open.c.c$3 -> av.f:
    com.tencent.open.c.g a -> a
    com.tencent.open.c.c b -> b
    void run() -> run
com.tencent.open.c.c$4 -> av.g:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    long e -> e
    long f -> f
    com.tencent.open.c.c g -> g
    void run() -> run
com.tencent.open.c.d -> av.h:
    com.tencent.open.c.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.open.c.e -> av.i:
    java.lang.String a -> a
    android.net.Uri b -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    int d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
com.tencent.open.c.f -> av.j:
    com.tencent.open.c.f a -> a
    com.tencent.open.c.f a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.tencent.open.c.g -> av.k:
    java.util.HashMap a -> a
com.tencent.open.utils.ApkExternalInfoTool -> aw.a:
    com.tencent.open.utils.ZipLong a -> a
    com.tencent.open.utils.ZipShort b -> b
    java.lang.String read(java.io.File,java.lang.String) -> a
    java.lang.String readChannelId(java.io.File) -> a
    byte[] a(java.io.RandomAccessFile) -> a
    com.tencent.open.utils.ZipShort a() -> a
com.tencent.open.utils.ApkExternalInfoTool$1 -> aw.b:
com.tencent.open.utils.ApkExternalInfoTool$ApkExternalInfo -> aw.c:
    java.util.Properties a -> a
    byte[] b -> b
    void a(byte[]) -> a
    java.lang.String toString() -> toString
com.tencent.open.utils.AsynLoadImg -> aw.d:
    java.lang.String a -> a
    com.tencent.open.utils.AsynLoadImgBack b -> b
    java.lang.String c -> c
    long d -> d
    android.os.Handler e -> e
    java.lang.Runnable f -> f
    void save(java.lang.String,com.tencent.open.utils.AsynLoadImgBack) -> a
    boolean saveFile(android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap getbitmap(java.lang.String) -> a
    com.tencent.open.utils.AsynLoadImgBack a(com.tencent.open.utils.AsynLoadImg) -> a
    java.lang.String b(com.tencent.open.utils.AsynLoadImg) -> b
    java.lang.String a() -> a
    android.os.Handler c(com.tencent.open.utils.AsynLoadImg) -> c
    long d(com.tencent.open.utils.AsynLoadImg) -> d
com.tencent.open.utils.AsynLoadImg$1 -> aw.e:
    com.tencent.open.utils.AsynLoadImg a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.open.utils.AsynLoadImg$2 -> aw.f:
    com.tencent.open.utils.AsynLoadImg a -> a
    void run() -> run
com.tencent.open.utils.AsynLoadImgBack -> aw.g:
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.open.utils.Global -> aw.h:
    android.content.Context a -> a
    android.content.Context getContext() -> a
    void setContext(android.content.Context) -> a
    java.lang.String getPackageName() -> b
    java.io.File getFilesDir() -> c
com.tencent.open.utils.HttpUtils -> aw.i:
    java.lang.String a -> a
    org.json.JSONObject request(com.tencent.connect.auth.QQToken,android.content.Context,java.lang.String,android.os.Bundle,java.lang.String) -> a
    void requestAsync(com.tencent.connect.auth.QQToken,android.content.Context,java.lang.String,android.os.Bundle,java.lang.String,com.tencent.tauth.IRequestListener) -> a
    void a(android.content.Context,com.tencent.connect.auth.QQToken,java.lang.String) -> a
    int getErrorCodeFromException(java.io.IOException) -> a
    com.tencent.open.utils.Util$Statistic openUrl2(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> a
    java.lang.String a(org.apache.http.HttpResponse) -> a
    org.apache.http.client.HttpClient getHttpClient(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String encodeUrl(android.os.Bundle) -> a
    java.lang.String encodePostBody(android.os.Bundle,java.lang.String) -> a
    com.tencent.open.utils.HttpUtils$NetworkProxy getProxy(android.content.Context) -> a
    int a(android.content.Context) -> b
    java.lang.String b(android.content.Context) -> c
com.tencent.open.utils.HttpUtils$1 -> aw.j:
    com.tencent.connect.auth.QQToken a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    android.os.Bundle d -> d
    java.lang.String e -> e
    com.tencent.tauth.IRequestListener f -> f
    void run() -> run
com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory -> aw.k:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.tencent.open.utils.HttpUtils$HttpStatusException -> aw.l:
com.tencent.open.utils.HttpUtils$MyX509TrustManager -> aw.m:
    javax.net.ssl.X509TrustManager a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.tencent.open.utils.HttpUtils$NetworkProxy -> aw.n:
    java.lang.String host -> a
    int port -> b
com.tencent.open.utils.HttpUtils$NetworkUnavailableException -> aw.o:
com.tencent.open.utils.OpenConfig -> aw.p:
    java.util.HashMap a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    org.json.JSONObject e -> e
    long f -> f
    int g -> g
    boolean h -> h
    com.tencent.open.utils.OpenConfig getInstance(android.content.Context,java.lang.String) -> a
    void a() -> a
    java.lang.String a(java.lang.String) -> c
    void a(java.lang.String,java.lang.String) -> a
    void b() -> b
    void a(org.json.JSONObject) -> a
    void c() -> c
    int getInt(java.lang.String) -> a
    boolean getBoolean(java.lang.String) -> b
    void b(java.lang.String) -> d
    android.content.Context a(com.tencent.open.utils.OpenConfig) -> a
    void a(com.tencent.open.utils.OpenConfig,org.json.JSONObject) -> a
    int a(com.tencent.open.utils.OpenConfig,int) -> a
com.tencent.open.utils.OpenConfig$1 -> aw.q:
    android.os.Bundle a -> a
    com.tencent.open.utils.OpenConfig b -> b
    void run() -> run
com.tencent.open.utils.ServerSetting -> aw.r:
    java.lang.String a -> a
    com.tencent.open.utils.ServerSetting b -> b
    java.lang.ref.WeakReference c -> c
    com.tencent.open.utils.ServerSetting getInstance() -> a
    java.lang.String getEnvUrl(android.content.Context,java.lang.String) -> a
com.tencent.open.utils.SystemUtils -> aw.s:
    java.lang.String a -> a
    java.lang.String getAppVersionName(android.content.Context,java.lang.String) -> a
    int compareVersion(java.lang.String,java.lang.String) -> a
    boolean isAppSignatureValid(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getAppSignatureMD5(android.content.Context,java.lang.String) -> b
    boolean isActivityExist(android.content.Context,android.content.Intent) -> a
    java.lang.String getAppName(android.content.Context) -> a
    int compareQQVersion(android.content.Context,java.lang.String) -> c
    int getAndroidSDKVersion() -> a
    boolean isSupportMultiTouch() -> b
    boolean extractSecureLib(java.lang.String,java.lang.String,int) -> a
    long a(java.io.InputStream,java.io.OutputStream) -> a
com.tencent.open.utils.TemporaryStorage -> aw.t:
    java.util.HashMap a -> a
    java.lang.Object set(java.lang.String,java.lang.Object) -> a
    java.lang.Object get(java.lang.String) -> a
    void remove(java.lang.String) -> b
com.tencent.open.utils.ThreadManager -> aw.u:
    java.util.concurrent.Executor NETWORK_EXECUTOR -> a
    android.os.Handler a -> b
    android.os.HandlerThread b -> c
    java.util.concurrent.Executor a() -> b
    android.os.Handler getSubThreadHandler() -> a
    void executeOnSubThread(java.lang.Runnable) -> a
com.tencent.open.utils.Util -> aw.v:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String encodeUrl(android.os.Bundle) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> a
    org.json.JSONObject decodeUrlToJson(org.json.JSONObject,java.lang.String) -> a
    android.os.Bundle parseUrl(java.lang.String) -> b
    org.json.JSONObject parseUrlToJson(java.lang.String) -> c
    org.json.JSONObject parseJson(java.lang.String) -> d
    void logd(java.lang.String,java.lang.String) -> a
    java.lang.String getUserIp() -> a
    boolean isEmpty(java.lang.String) -> e
    boolean a(android.content.Context) -> e
    boolean openBrowser(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean isMobileQQSupportShare(android.content.Context) -> a
    java.lang.String encrypt(java.lang.String) -> f
    char a(int) -> a
    void reportBernoulli(android.content.Context,java.lang.String,long,java.lang.String) -> a
    boolean hasSDCard() -> b
    java.lang.String toHexString(byte[]) -> a
    java.lang.String getApplicationLable(android.content.Context) -> b
    boolean isValidUrl(java.lang.String) -> g
    boolean isValidPath(java.lang.String) -> h
    boolean fileExists(java.lang.String) -> i
    java.lang.String subString(java.lang.String,int,java.lang.String,java.lang.String) -> a
    int parseIntValue(java.lang.String) -> j
    int parseIntValue(java.lang.String,int) -> a
    boolean checkNetWork(android.content.Context) -> c
    android.os.Bundle composeViaReportParams(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.os.Bundle composeViaReportParams(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getLocation(android.content.Context) -> d
    void getPackageInfo(android.content.Context,java.lang.String) -> b
    java.lang.String getVersionName(android.content.Context,java.lang.String) -> c
    java.lang.String getAppVersionName(android.content.Context,java.lang.String) -> d
    java.lang.String getQUA3(android.content.Context,java.lang.String) -> e
    byte[] getBytesUTF8(java.lang.String) -> k
com.tencent.open.utils.Util$1 -> aw.w:
    android.content.Context a -> a
    android.os.Bundle b -> b
    void run() -> run
com.tencent.open.utils.Util$Statistic -> aw.x:
    java.lang.String response -> a
    long reqSize -> b
    long rspSize -> c
com.tencent.open.utils.ZipLong -> aw.y:
    long a -> a
    boolean equals(java.lang.Object) -> equals
    byte[] getBytes() -> a
    long getValue() -> b
    int hashCode() -> hashCode
com.tencent.open.utils.ZipShort -> aw.z:
    int a -> a
    boolean equals(java.lang.Object) -> equals
    byte[] getBytes() -> a
    int getValue() -> b
    int hashCode() -> hashCode
com.tencent.open.web.security.JniInterface -> com.tencent.open.web.security.JniInterface:
    boolean clearAllPWD() -> clearAllPWD
com.tencent.open.web.security.SecureJsInterface -> com.tencent.open.web.security.a:
    java.lang.String a -> b
    boolean isPWDEdit -> a
    boolean customCallback() -> a
com.tencent.open.web.security.a -> com.tencent.open.web.security.b:
    java.lang.String a -> a
    boolean b -> b
    boolean c -> c
    boolean setComposingText(java.lang.CharSequence,int) -> setComposingText
    boolean commitText(java.lang.CharSequence,int) -> commitText
    boolean sendKeyEvent(android.view.KeyEvent) -> sendKeyEvent
com.tencent.open.web.security.b -> com.tencent.open.web.security.c:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.Object) -> a
    void a() -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
com.tencent.open.web.security.c -> com.tencent.open.web.security.d:
    java.lang.String b -> b
    void a(java.lang.String,java.lang.String,java.util.List,com.tencent.open.a$b) -> a
    boolean a(android.webkit.WebView,java.lang.String) -> a
com.tencent.open.yyb.AppbarActivity -> com.tencent.open.yyb.AppbarActivity:
    com.tencent.open.b.b mWebView -> b
    android.widget.LinearLayout mRootView -> c
    com.tencent.open.yyb.TitleBar mTitleBar -> d
    com.tencent.open.yyb.MoreFloatingDialog mFloatingDialog -> e
    com.tencent.open.yyb.AppbarJsBridge jsBridge -> f
    com.tencent.open.yyb.ShareModel model -> g
    com.tencent.tauth.Tencent tencent -> h
    com.tencent.connect.auth.QQToken mToken -> i
    android.app.ProgressDialog mProgressDialog -> a
    java.lang.String appid -> j
    java.lang.String url -> k
    java.util.ArrayList specialModel -> l
    android.webkit.DownloadListener mDownloadListener -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onBackPressed() -> onBackPressed
    void createViews() -> e
    void initViews() -> f
    boolean supportWebViewFullScreen() -> g
    com.tencent.tauth.Tencent getTencent() -> h
    com.tencent.connect.auth.QQToken getToken() -> i
    java.lang.String getWebViewCacheDir() -> j
    java.lang.String getCommonPath(java.lang.String) -> a
    com.tencent.open.yyb.MoreFloatingDialog getFloatingDialg() -> k
    java.lang.String getCommonRootDir() -> l
    boolean isSDCardExistAndCanWrite() -> m
    java.lang.String getPath(java.lang.String,boolean) -> a
    void setSupportZoom(boolean) -> a
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void shareToQQ() -> a
    void shareToQzone() -> b
    void shareToWX() -> c
    void shareToTimeline() -> d
    void shareToWX(boolean) -> b
    void showProgressDialog(android.content.Context,java.lang.String,java.lang.String) -> a
    com.tencent.open.yyb.TitleBar access$200(com.tencent.open.yyb.AppbarActivity) -> a
    void access$300(com.tencent.open.yyb.AppbarActivity,boolean) -> a
    com.tencent.open.yyb.AppbarJsBridge access$400(com.tencent.open.yyb.AppbarActivity) -> b
    com.tencent.connect.auth.QQToken access$500(com.tencent.open.yyb.AppbarActivity) -> c
    com.tencent.open.b.b access$600(com.tencent.open.yyb.AppbarActivity) -> d
com.tencent.open.yyb.AppbarActivity$1 -> com.tencent.open.yyb.a:
    com.tencent.connect.auth.QQToken a -> a
    com.tencent.open.yyb.AppbarActivity b -> b
    void onError(com.tencent.tauth.UiError) -> a
    void onComplete(java.lang.Object) -> a
    void onCancel() -> h
com.tencent.open.yyb.AppbarActivity$2 -> com.tencent.open.yyb.b:
    com.tencent.open.yyb.AppbarActivity a -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onComplete(java.lang.Object) -> a
    void onCancel() -> h
com.tencent.open.yyb.AppbarActivity$3 -> com.tencent.open.yyb.c:
    com.tencent.open.yyb.AppbarActivity a -> a
    void a(byte[]) -> a
com.tencent.open.yyb.AppbarActivity$4 -> com.tencent.open.yyb.d:
    com.tencent.connect.auth.QQToken a -> a
    com.tencent.open.yyb.AppbarActivity b -> b
    void onError(com.tencent.tauth.UiError) -> a
    void onComplete(java.lang.Object) -> a
    void onCancel() -> h
com.tencent.open.yyb.AppbarActivity$a -> com.tencent.open.yyb.e:
    com.tencent.open.yyb.AppbarActivity$b a -> a
    byte[] a(java.lang.String[]) -> a
    void a(byte[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.tencent.open.yyb.AppbarActivity$b -> com.tencent.open.yyb.f:
    void a(byte[]) -> a
com.tencent.open.yyb.AppbarActivity$c -> com.tencent.open.yyb.g:
    com.tencent.open.yyb.AppbarActivity a -> a
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
com.tencent.open.yyb.AppbarActivity$d -> com.tencent.open.yyb.h:
    com.tencent.open.yyb.AppbarActivity a -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.tencent.open.yyb.AppbarJsBridge -> com.tencent.open.yyb.i:
    android.webkit.WebView a -> a
    android.app.Activity b -> b
    void clickCallback() -> a
    int getVersion() -> b
    void invoke(java.lang.String) -> a
    void a(android.net.Uri,java.lang.String,int,java.lang.String) -> a
    boolean a(java.lang.String) -> b
    void ready() -> c
    void responseShare(int) -> a
    void responseShareFail(int) -> b
    void response(java.lang.String,int,java.lang.String,java.lang.String) -> a
    void response(java.lang.String,int,java.lang.String,java.lang.String,java.util.Map) -> a
    void responseFail(java.lang.String,int,java.lang.String,int) -> a
    void callback(java.lang.String,java.lang.String) -> a
com.tencent.open.yyb.MoreFloatingDialog -> com.tencent.open.yyb.j:
    android.widget.LinearLayout mRootView -> a
    android.widget.RelativeLayout mContentView -> b
    java.util.HashMap mShareItems -> c
    float density -> d
    android.graphics.Rect ninePatchRect -> e
    android.view.View getQQItem() -> a
    android.view.View getQzoneItem() -> b
    android.view.View getWXItem() -> c
    android.view.View getTimelineItem() -> d
    android.widget.TextView addShareItemText(android.graphics.drawable.Drawable,java.lang.String) -> a
    void addHorizontalDivider() -> e
    int dip2px(float) -> a
com.tencent.open.yyb.ShareModel -> com.tencent.open.yyb.ShareModel:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.open.yyb.TitleBar -> com.tencent.open.yyb.TitleBar:
    float density -> a
    android.widget.ImageView backBtn -> b
    android.widget.ImageView shareBtn -> c
    android.widget.TextView title -> d
    android.widget.RelativeLayout backLayout -> e
    void setTitle(java.lang.String) -> setTitle
    void initBackLayout() -> a
    void initBackBtn() -> b
    void initTitle() -> c
    void initShareBtn() -> d
    android.widget.RelativeLayout getBackBtn() -> getBackBtn
    android.widget.ImageView getSharBtn() -> getSharBtn
    int dip2px(float) -> a
com.tencent.open.yyb.a -> com.tencent.open.yyb.k:
    com.tencent.open.yyb.ShareModel a(android.os.Parcel) -> a
    com.tencent.open.yyb.ShareModel[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.open.yyb.b -> com.tencent.open.yyb.l:
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String,java.lang.String) -> b
    android.graphics.drawable.Drawable a(java.lang.String,android.content.Context) -> a
    android.graphics.drawable.Drawable a(java.lang.String,android.content.Context,android.graphics.Rect) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
com.tencent.open.yyb.b$1 -> com.tencent.open.yyb.m:
com.tencent.open.yyb.b$b -> com.tencent.open.yyb.n:
    java.lang.Void a(android.os.Bundle[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.tencent.open.yyb.c -> com.tencent.open.yyb.o:
    com.tencent.open.yyb.AppbarActivity a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath -> com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath:
    java.lang.String a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath$1 -> com.tencent.qqconnect.dataprovider.datatype.a:
    com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath createFromParcel(android.os.Parcel) -> a
    com.tencent.qqconnect.dataprovider.datatype.TextAndMediaPath[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.qqconnect.dataprovider.datatype.TextOnly -> com.tencent.qqconnect.dataprovider.datatype.TextOnly:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.qqconnect.dataprovider.datatype.TextOnly$1 -> com.tencent.qqconnect.dataprovider.datatype.b:
    com.tencent.qqconnect.dataprovider.datatype.TextOnly createFromParcel(android.os.Parcel) -> a
    com.tencent.qqconnect.dataprovider.datatype.TextOnly[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.stat.DeviceInfo -> com.tencent.stat.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    long g -> g
    com.tencent.stat.common.StatLogger h -> h
    int a() -> a
    void a(int) -> a
    long b() -> b
    void a(long) -> a
    com.tencent.stat.DeviceInfo a(java.lang.String) -> a
    int a(com.tencent.stat.DeviceInfo) -> a
    java.lang.String toString() -> toString
    org.json.JSONObject c() -> c
    void b(java.lang.String) -> b
    java.lang.String getMid() -> d
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    java.lang.String getImei() -> e
    void e(java.lang.String) -> e
    java.lang.String getMac() -> f
    void b(int) -> b
    int getUserType() -> g
com.tencent.stat.EasyActivity -> com.tencent.stat.EasyActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.stat.EasyListActivity -> com.tencent.stat.EasyListActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.stat.NetworkMonitor -> com.tencent.stat.b:
    long a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    void setMillisecondsConsume(long) -> a
    void setStatusCode(int) -> a
    void setDomain(java.lang.String) -> a
    void setPort(int) -> b
    void setRemoteIp(java.lang.String) -> b
    org.json.JSONObject toJSONObject() -> a
com.tencent.stat.StatConfig -> com.tencent.stat.c:
    com.tencent.stat.common.StatLogger e -> f
    com.tencent.stat.b a -> a
    com.tencent.stat.b b -> b
    com.tencent.stat.StatReportStrategy f -> g
    boolean g -> h
    int h -> i
    int i -> j
    int j -> k
    int k -> l
    int l -> m
    java.lang.String c -> c
    java.lang.String m -> n
    java.lang.String n -> o
    java.lang.String o -> p
    java.lang.String d -> d
    int p -> q
    int q -> r
    boolean r -> s
    long s -> t
    long t -> u
    boolean isAutoExceptionCaught -> e
    java.lang.String u -> v
    int v -> w
    int w -> x
    int x -> y
    int y -> z
    boolean z -> A
    int A -> B
    boolean B -> C
    java.lang.String C -> D
    com.tencent.stat.StatReportStrategy getStatSendStrategy() -> a
    void setStatSendStrategy(com.tencent.stat.StatReportStrategy) -> a
    boolean isEnableStatService() -> b
    void setEnableStatService(boolean) -> a
    int getSessionTimoutMillis() -> c
    int getMaxBatchReportCount() -> d
    int getMaxSendRetryCount() -> e
    int a() -> f
    int getMaxStoreEventCount() -> g
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.tencent.stat.b,org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    void a(com.tencent.stat.b) -> a
    void c(org.json.JSONObject) -> c
    org.apache.http.HttpHost b() -> h
    java.lang.String getAppKey(android.content.Context) -> a
    java.lang.String getInstallChannel(android.content.Context) -> b
    int getSendPeriodMinutes() -> i
    int getMaxParallelTimmingEvents() -> j
    boolean isEnableSmartReporting() -> k
    boolean isAutoExceptionCaught() -> l
    java.lang.String getStatReportUrl() -> m
    int getMaxSessionStatReportCount() -> n
    int getCurSessionStatReportCount() -> o
    void a(int) -> a
    void c() -> p
    int getMaxDaySessionNumbers() -> q
    void d() -> r
    void b(int) -> b
    int e() -> s
    int getMaxReportEventLength() -> t
    boolean isEnableConcurrentProcess() -> u
    java.lang.String getCustomUserId(android.content.Context) -> c
    java.lang.String getMid(android.content.Context) -> d
    com.tencent.stat.DeviceInfo getDeviceInfo(android.content.Context) -> e
com.tencent.stat.StatMid -> com.tencent.stat.d:
    com.tencent.stat.common.StatLogger a -> a
    com.tencent.stat.DeviceInfo b -> b
    java.lang.String getMid(android.content.Context) -> a
    com.tencent.stat.DeviceInfo getDeviceInfo(android.content.Context) -> b
    void updateDeviceInfo(android.content.Context,java.lang.String) -> a
    com.tencent.stat.DeviceInfo a(com.tencent.stat.DeviceInfo,com.tencent.stat.DeviceInfo) -> a
    com.tencent.stat.DeviceInfo a(com.tencent.stat.DeviceInfo,com.tencent.stat.DeviceInfo,com.tencent.stat.DeviceInfo) -> a
    com.tencent.stat.DeviceInfo a(android.content.Context) -> c
    com.tencent.stat.DeviceInfo a(java.lang.String) -> a
com.tencent.stat.StatNativeCrashReport -> com.tencent.stat.e:
    com.tencent.stat.common.StatLogger b -> b
    com.tencent.stat.StatNativeCrashReport a -> a
    boolean c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.String getTombstonesDir(android.content.Context) -> a
    java.lang.String a(java.io.File) -> a
    java.util.LinkedHashSet a(android.content.Context) -> b
    long b(java.io.File) -> b
com.tencent.stat.StatReportStrategy -> com.tencent.stat.f:
    com.tencent.stat.StatReportStrategy INSTANT -> a
    com.tencent.stat.StatReportStrategy ONLY_WIFI -> b
    com.tencent.stat.StatReportStrategy BATCH -> c
    com.tencent.stat.StatReportStrategy APP_LAUNCH -> d
    com.tencent.stat.StatReportStrategy DEVELOPER -> e
    com.tencent.stat.StatReportStrategy PERIOD -> f
    com.tencent.stat.StatReportStrategy ONLY_WIFI_NO_CACHE -> g
    int a -> h
    com.tencent.stat.StatReportStrategy[] b -> i
    com.tencent.stat.StatReportStrategy[] values() -> values
    com.tencent.stat.StatReportStrategy valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.tencent.stat.StatReportStrategy getStatReportStrategy(int) -> a
com.tencent.stat.StatService -> com.tencent.stat.g:
    android.os.Handler a -> a
    java.util.Map b -> b
    long c -> c
    long d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.Map h -> h
    com.tencent.stat.common.StatLogger i -> i
    java.lang.Thread$UncaughtExceptionHandler j -> j
    boolean k -> k
    void a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    android.os.Handler c(android.content.Context) -> c
    org.json.JSONObject a() -> a
    void d(android.content.Context) -> d
    int a(android.content.Context,boolean) -> a
    void trackBeginPage(android.content.Context,java.lang.String) -> a
    void trackEndPage(android.content.Context,java.lang.String) -> b
    void onResume(android.content.Context) -> e
    void onPause(android.content.Context) -> f
    void a(android.content.Context,java.lang.Throwable) -> a
    void e(android.content.Context) -> g
    void testSpeed(android.content.Context) -> h
    com.tencent.stat.common.StatLogger b() -> b
    java.lang.Thread$UncaughtExceptionHandler c() -> c
com.tencent.stat.a -> com.tencent.stat.h:
    com.tencent.stat.common.StatLogger a -> a
    com.tencent.stat.a b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    android.content.Context f -> f
    com.tencent.stat.a a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    boolean c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String,java.lang.String) -> d
    boolean e(java.lang.String,java.lang.String) -> e
    java.lang.String f(java.lang.String,java.lang.String) -> f
com.tencent.stat.a.d -> ax.a:
    java.lang.String a -> k
    int l -> l
    int m -> m
    void a(long) -> a
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.a.e -> ax.b:
    java.lang.String b -> a
    long c -> b
    int d -> c
    com.tencent.stat.DeviceInfo e -> d
    int f -> e
    java.lang.String g -> f
    java.lang.String h -> g
    java.lang.String i -> h
    java.lang.String j -> i
    boolean a -> k
    android.content.Context k -> j
    long b() -> b
    android.content.Context c() -> c
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
    boolean b(org.json.JSONObject) -> b
    java.lang.String d() -> d
com.tencent.stat.a.f -> ax.c:
    com.tencent.stat.a.f a -> a
    com.tencent.stat.a.f b -> b
    com.tencent.stat.a.f c -> c
    com.tencent.stat.a.f d -> d
    com.tencent.stat.a.f e -> e
    com.tencent.stat.a.f f -> f
    com.tencent.stat.a.f g -> g
    com.tencent.stat.a.f h -> h
    int i -> i
    com.tencent.stat.a.f[] j -> j
    int a() -> a
com.tencent.stat.a.i -> ax.d:
    java.lang.String a -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void a(java.lang.String) -> a
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.a.j -> ax.e:
    java.lang.Long a -> k
    java.lang.String l -> l
    java.lang.String m -> m
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.a.k -> ax.f:
    com.tencent.stat.common.a a -> k
    org.json.JSONObject l -> l
    com.tencent.stat.a.f a() -> a
    boolean a(org.json.JSONObject) -> a
com.tencent.stat.b -> com.tencent.stat.i:
    int a -> a
    org.json.JSONObject b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String a() -> a
com.tencent.stat.c -> com.tencent.stat.j:
    void a() -> a
    void b() -> b
com.tencent.stat.common.StatConstants -> ay.a:
    java.lang.String a -> a
com.tencent.stat.common.StatLogger -> ay.b:
    java.lang.String a -> a
    boolean b -> b
    int c -> c
    boolean isDebugEnable() -> a
    void setDebugEnable(boolean) -> a
    java.lang.String a() -> b
    void info(java.lang.Object) -> a
    void i(java.lang.Object) -> b
    void warn(java.lang.Object) -> c
    void w(java.lang.Object) -> d
    void error(java.lang.Object) -> e
    void error(java.lang.Exception) -> a
    void e(java.lang.Object) -> f
    void e(java.lang.Exception) -> b
    void debug(java.lang.Object) -> g
    void d(java.lang.Object) -> h
com.tencent.stat.common.a -> ay.c:
    com.tencent.stat.common.c a -> a
    com.tencent.stat.common.StatLogger d -> d
    java.lang.Integer b -> b
    java.lang.String c -> c
    org.json.JSONObject e -> e
    com.tencent.stat.common.c a(android.content.Context) -> a
    void a(org.json.JSONObject) -> a
com.tencent.stat.common.b -> ay.d:
com.tencent.stat.common.c -> ay.e:
    java.lang.String a -> a
    java.lang.String b -> b
    android.util.DisplayMetrics c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    java.lang.String m -> m
    android.content.Context n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    void a(org.json.JSONObject) -> a
com.tencent.stat.common.d -> ay.f:
    java.util.List a(java.io.File) -> a
    java.io.File a(java.lang.String) -> a
com.tencent.stat.common.e -> ay.g:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
com.tencent.stat.common.f -> ay.h:
    long a -> a
    long a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,long) -> a
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.tencent.stat.common.g -> ay.i:
    boolean a -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
    byte[] b(byte[],int) -> b
    byte[] b(byte[],int,int,int) -> b
com.tencent.stat.common.h -> ay.j:
    byte[] a -> a
    int b -> b
com.tencent.stat.common.i -> ay.k:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
com.tencent.stat.common.j -> ay.l:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int,int,boolean) -> a
com.tencent.stat.common.k -> ay.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Random e -> e
    com.tencent.stat.common.StatLogger f -> f
    java.lang.String g -> g
    com.tencent.stat.common.l h -> h
    com.tencent.stat.common.n i -> i
    java.lang.String j -> j
    int k -> k
    java.util.Random h() -> h
    int a() -> a
    byte[] a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
    org.apache.http.HttpHost a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    android.util.DisplayMetrics d(android.content.Context) -> d
    boolean a(android.content.Context,java.lang.String) -> a
    boolean e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    boolean g(android.content.Context) -> g
    boolean h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    java.lang.String l(android.content.Context) -> l
    java.lang.String m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    boolean o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.Integer q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    int s(android.content.Context) -> s
    com.tencent.stat.common.StatLogger b() -> b
    long c() -> c
    java.lang.Long a(java.lang.String,java.lang.String,int,int,java.lang.Long) -> a
    long b(java.lang.String) -> b
    java.lang.String t(android.content.Context) -> t
    java.lang.String a(long) -> a
    java.lang.String c(java.lang.String) -> c
    int d() -> d
    java.lang.String d(java.lang.String) -> d
    java.lang.String u(android.content.Context) -> u
    java.lang.String b(android.content.Context,java.lang.String) -> b
    java.lang.String v(android.content.Context) -> v
    java.lang.Integer w(android.content.Context) -> w
    java.lang.String e() -> e
    long f() -> f
    java.lang.String x(android.content.Context) -> x
    long G(android.content.Context) -> G
    long i() -> i
    com.tencent.stat.common.l y(android.content.Context) -> y
    org.json.JSONObject z(android.content.Context) -> z
    java.lang.String A(android.content.Context) -> A
    android.net.wifi.WifiInfo B(android.content.Context) -> B
    java.lang.String C(android.content.Context) -> C
    java.lang.String D(android.content.Context) -> D
    int E(android.content.Context) -> E
    void F(android.content.Context) -> F
    com.tencent.stat.common.StatLogger g() -> g
com.tencent.stat.common.l -> ay.n:
    int a() -> a
    int b() -> b
    int c() -> c
    java.lang.String d() -> d
com.tencent.stat.common.m -> ay.o:
    boolean accept(java.io.File) -> accept
com.tencent.stat.common.n -> ay.p:
com.tencent.stat.common.o -> ay.q:
    int a -> a
    boolean a() -> a
com.tencent.stat.common.p -> ay.r:
    android.content.SharedPreferences a -> a
    android.content.SharedPreferences a(android.content.Context) -> a
    long a(android.content.Context,java.lang.String,long) -> a
    void b(android.content.Context,java.lang.String,long) -> b
    int a(android.content.Context,java.lang.String,int) -> a
    void b(android.content.Context,java.lang.String,int) -> b
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
com.tencent.stat.d -> com.tencent.stat.k:
    com.tencent.stat.common.StatLogger c -> c
    long d -> d
    org.apache.http.impl.client.DefaultHttpClient a -> a
    android.os.Handler b -> b
    com.tencent.stat.d e -> e
    android.content.Context f -> f
    void a(android.content.Context) -> a
    android.content.Context a() -> a
    com.tencent.stat.d b() -> b
    void a(java.util.List,com.tencent.stat.c) -> a
    void b(java.util.List,com.tencent.stat.c) -> b
    void a(com.tencent.stat.a.e,com.tencent.stat.c) -> a
    com.tencent.stat.common.StatLogger c() -> c
com.tencent.stat.e -> com.tencent.stat.l:
    com.tencent.stat.d a -> a
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
com.tencent.stat.f -> com.tencent.stat.m:
    java.util.List a -> a
    com.tencent.stat.c b -> b
    com.tencent.stat.d c -> c
    void run() -> run
com.tencent.stat.g -> com.tencent.stat.n:
    android.content.Context a -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.tencent.stat.h -> com.tencent.stat.o:
    int[] a -> a
com.tencent.stat.i -> com.tencent.stat.p:
    android.content.Context a -> a
    void run() -> run
com.tencent.stat.j -> com.tencent.stat.q:
    android.content.Context a -> a
    java.util.Map b -> b
    java.util.Map a() -> a
    void run() -> run
    com.tencent.stat.NetworkMonitor a(java.lang.String,int) -> a
com.tencent.stat.k -> com.tencent.stat.r:
    com.tencent.stat.a.e a -> a
    com.tencent.stat.StatReportStrategy b -> b
    com.tencent.stat.c c -> c
    void a() -> a
    void a(boolean) -> a
    void run() -> run
    com.tencent.stat.a.e a(com.tencent.stat.k) -> a
com.tencent.stat.l -> com.tencent.stat.s:
    com.tencent.stat.k a -> a
    void a() -> a
    void b() -> b
com.tencent.stat.m -> com.tencent.stat.t:
    com.tencent.stat.k a -> a
    void a() -> a
    void b() -> b
com.tencent.stat.n -> com.tencent.stat.u:
    com.tencent.stat.w d -> d
    android.os.Handler a -> a
    int b -> b
    com.tencent.stat.DeviceInfo c -> c
    com.tencent.stat.common.StatLogger e -> e
    com.tencent.stat.n f -> f
    java.util.HashMap g -> g
    int a() -> a
    void e() -> e
    com.tencent.stat.n a(android.content.Context) -> a
    com.tencent.stat.n b() -> b
    com.tencent.stat.DeviceInfo b(android.content.Context) -> b
    void b(java.util.List) -> b
    void b(java.util.List,int) -> b
    void a(java.util.List,int) -> a
    void a(java.util.List) -> a
    void c(java.util.List,int) -> c
    void b(com.tencent.stat.a.e,com.tencent.stat.c) -> b
    void a(com.tencent.stat.a.e,com.tencent.stat.c) -> a
    void b(com.tencent.stat.b) -> b
    void a(com.tencent.stat.b) -> a
    void c() -> c
    void b(int) -> b
    void a(int) -> a
    void f() -> f
    void a(com.tencent.stat.n) -> a
    void a(com.tencent.stat.n,java.util.List,int) -> a
    void a(com.tencent.stat.n,java.util.List) -> a
    void a(com.tencent.stat.n,com.tencent.stat.a.e,com.tencent.stat.c) -> a
    void a(com.tencent.stat.n,com.tencent.stat.b) -> a
    com.tencent.stat.w b(com.tencent.stat.n) -> b
    com.tencent.stat.common.StatLogger d() -> d
    void a(com.tencent.stat.n,int) -> a
com.tencent.stat.o -> com.tencent.stat.v:
    com.tencent.stat.n a -> a
    void run() -> run
com.tencent.stat.p -> com.tencent.stat.w:
    java.util.List a -> a
    int b -> b
    com.tencent.stat.n c -> c
    void run() -> run
com.tencent.stat.q -> com.tencent.stat.x:
    java.util.List a -> a
    com.tencent.stat.n b -> b
    void run() -> run
com.tencent.stat.r -> com.tencent.stat.y:
    com.tencent.stat.a.e a -> a
    com.tencent.stat.c b -> b
    com.tencent.stat.n c -> c
    void run() -> run
com.tencent.stat.s -> com.tencent.stat.z:
    com.tencent.stat.b a -> a
    com.tencent.stat.n b -> b
    void run() -> run
com.tencent.stat.t -> com.tencent.stat.aa:
    com.tencent.stat.n a -> a
    void run() -> run
com.tencent.stat.u -> com.tencent.stat.ab:
    java.util.List a -> a
    int b -> b
    com.tencent.stat.n c -> c
    void a() -> a
    void b() -> b
com.tencent.stat.v -> com.tencent.stat.ac:
    int a -> a
    com.tencent.stat.n b -> b
    void run() -> run
com.tencent.stat.w -> com.tencent.stat.ad:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.stat.x -> com.tencent.stat.ae:
    long a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
com.tencent.tauth.AuthActivity -> com.tencent.tauth.AuthActivity:
    int mShareQzoneBackTime -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleActionUri(android.net.Uri) -> a
    void execAuthCallback(android.os.Bundle,java.lang.String) -> a
com.tencent.tauth.IRequestListener -> com.tencent.tauth.a:
    void onComplete(org.json.JSONObject) -> a
    void onIOException(java.io.IOException) -> a
    void onMalformedURLException(java.net.MalformedURLException) -> a
    void onJSONException(org.json.JSONException) -> a
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> a
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> a
    void onNetworkUnavailableException(com.tencent.open.utils.HttpUtils$NetworkUnavailableException) -> a
    void onHttpStatusException(com.tencent.open.utils.HttpUtils$HttpStatusException) -> a
    void onUnknowException(java.lang.Exception) -> a
com.tencent.tauth.IUiListener -> com.tencent.tauth.b:
    void onComplete(java.lang.Object) -> a
    void onError(com.tencent.tauth.UiError) -> a
    void onCancel() -> h
com.tencent.tauth.Tencent -> com.tencent.tauth.c:
    com.tencent.connect.auth.QQAuth mQQAuth -> a
    com.tencent.tauth.Tencent sInstance -> b
    com.tencent.tauth.Tencent createInstance(java.lang.String,android.content.Context) -> a
    boolean checkManifestConfig(android.content.Context,java.lang.String) -> a
    int login(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> a
    void logout(android.content.Context) -> a
    int reAuth(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> b
    void shareToQQ(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    boolean onActivityResult(int,int,android.content.Intent) -> a
    java.lang.String getAppId() -> a
    void setAccessToken(java.lang.String,java.lang.String) -> a
    void setOpenId(java.lang.String) -> a
    com.tencent.connect.auth.QQToken getQQToken() -> b
com.tencent.tauth.UiError -> com.tencent.tauth.d:
    int errorCode -> a
    java.lang.String errorMessage -> b
    java.lang.String errorDetail -> c
com.tencent.wxop.stat.EasyActivity -> com.tencent.wxop.stat.EasyActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.wxop.stat.EasyListActivity -> com.tencent.wxop.stat.EasyListActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.wxop.stat.MtaSDkException -> com.tencent.wxop.stat.a:
com.tencent.wxop.stat.NetworkMonitor -> com.tencent.wxop.stat.b:
    long a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    void setMillisecondsConsume(long) -> a
    void setStatusCode(int) -> a
    void setDomain(java.lang.String) -> a
    void setPort(int) -> b
    void setRemoteIp(java.lang.String) -> b
    org.json.JSONObject toJSONObject() -> a
com.tencent.wxop.stat.StatConfig -> com.tencent.wxop.stat.c:
    com.tencent.wxop.stat.common.StatLogger p -> q
    com.tencent.wxop.stat.f a -> a
    com.tencent.wxop.stat.f b -> b
    com.tencent.wxop.stat.StatReportStrategy q -> r
    boolean r -> s
    boolean s -> t
    int t -> u
    int u -> v
    int v -> w
    int w -> x
    int x -> y
    int y -> z
    int z -> A
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String A -> B
    java.lang.String B -> C
    java.lang.String C -> D
    java.lang.String D -> E
    java.lang.String f -> f
    int E -> F
    boolean g -> g
    int h -> h
    long i -> i
    int F -> G
    boolean j -> j
    long G -> H
    long H -> I
    boolean isAutoExceptionCaught -> k
    java.lang.String k -> l
    java.lang.String I -> J
    int J -> K
    int K -> L
    int L -> M
    int M -> N
    boolean N -> O
    int O -> P
    boolean P -> Q
    java.lang.String Q -> R
    boolean R -> S
    com.tencent.wxop.stat.g S -> T
    boolean l -> m
    int m -> n
    long n -> o
    int o -> p
    boolean a(int,int,int) -> a
    com.tencent.wxop.stat.StatReportStrategy getStatSendStrategy() -> a
    void setStatSendStrategy(com.tencent.wxop.stat.StatReportStrategy) -> a
    boolean isDebugEnable() -> b
    boolean isEnableStatService() -> c
    void setEnableStatService(boolean) -> a
    int getSessionTimoutMillis() -> d
    int getMaxImportantDataSendRetryCount() -> e
    int getMaxBatchReportCount() -> f
    int getMaxSendRetryCount() -> g
    int getNumEventsCommitPerSec() -> h
    int a() -> i
    int getMaxStoreEventCount() -> j
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context,com.tencent.wxop.stat.f,org.json.JSONObject) -> a
    void a(org.json.JSONObject) -> a
    void a(android.content.Context,com.tencent.wxop.stat.f) -> a
    void b(android.content.Context,org.json.JSONObject) -> b
    boolean a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    void b(org.json.JSONObject) -> b
    void a(long) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String getAppKey(android.content.Context) -> b
    boolean a(java.lang.String) -> c
    void setAppKey(android.content.Context,java.lang.String) -> b
    java.lang.String getInstallChannel(android.content.Context) -> c
    void setInstallChannel(java.lang.String) -> a
    void setInstallChannel(android.content.Context,java.lang.String) -> c
    java.lang.String getQQ(android.content.Context) -> d
    void setSendPeriodMinutes(int) -> a
    int getSendPeriodMinutes() -> k
    int getMaxParallelTimmingEvents() -> l
    void setEnableSmartReporting(boolean) -> b
    boolean isAutoExceptionCaught() -> m
    java.lang.String getStatReportUrl() -> n
    void setStatReportUrl(java.lang.String) -> b
    void a(int) -> b
    int getMaxDaySessionNumbers() -> o
    void b() -> p
    void b(int) -> c
    int c() -> q
    boolean isEnableConcurrentProcess() -> r
    java.lang.String getCustomUserId(android.content.Context) -> e
    java.lang.String getLocalMidOnly(android.content.Context) -> f
    com.tencent.wxop.stat.g getCustomLogger() -> s
com.tencent.wxop.stat.StatReportStrategy -> com.tencent.wxop.stat.d:
    com.tencent.wxop.stat.StatReportStrategy INSTANT -> a
    com.tencent.wxop.stat.StatReportStrategy ONLY_WIFI -> b
    com.tencent.wxop.stat.StatReportStrategy BATCH -> c
    com.tencent.wxop.stat.StatReportStrategy APP_LAUNCH -> d
    com.tencent.wxop.stat.StatReportStrategy DEVELOPER -> e
    com.tencent.wxop.stat.StatReportStrategy PERIOD -> f
    com.tencent.wxop.stat.StatReportStrategy ONLY_WIFI_NO_CACHE -> g
    int a -> h
    com.tencent.wxop.stat.StatReportStrategy[] b -> i
    com.tencent.wxop.stat.StatReportStrategy[] values() -> values
    com.tencent.wxop.stat.StatReportStrategy valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.tencent.wxop.stat.StatReportStrategy getStatReportStrategy(int) -> a
com.tencent.wxop.stat.StatService -> com.tencent.wxop.stat.e:
    void onResume(android.content.Context) -> a
    boolean startStatService(android.content.Context,java.lang.String,java.lang.String) -> a
    void onPause(android.content.Context) -> b
    void trackCustomKVEvent(android.content.Context,java.lang.String,java.util.Properties) -> a
com.tencent.wxop.stat.StatServiceImpl -> com.tencent.wxop.stat.f:
    com.tencent.wxop.stat.common.e d -> d
    java.util.Map e -> e
    java.util.Map f -> f
    java.util.Map g -> g
    long h -> h
    long i -> i
    long j -> j
    java.lang.String k -> k
    int l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.util.Map o -> o
    java.util.Map p -> p
    com.tencent.wxop.stat.common.StatLogger q -> q
    java.lang.Thread$UncaughtExceptionHandler r -> r
    boolean s -> s
    int a -> a
    long b -> b
    android.content.Context t -> t
    long c -> c
    boolean a() -> a
    android.content.Context getContext(android.content.Context) -> a
    void a(android.content.Context) -> b
    boolean b(android.content.Context) -> c
    boolean a(java.lang.String) -> a
    com.tencent.wxop.stat.common.e c(android.content.Context) -> d
    org.json.JSONObject b() -> b
    void a(android.content.Context,com.tencent.wxop.stat.StatSpecifyReportedInfo) -> a
    int a(android.content.Context,boolean,com.tencent.wxop.stat.StatSpecifyReportedInfo) -> a
    void trackBeginPage(android.content.Context,java.lang.String,com.tencent.wxop.stat.StatSpecifyReportedInfo) -> a
    void trackEndPage(android.content.Context,java.lang.String,com.tencent.wxop.stat.StatSpecifyReportedInfo) -> b
    void onResume(android.content.Context,com.tencent.wxop.stat.StatSpecifyReportedInfo) -> b
    boolean startStatService(android.content.Context,java.lang.String,java.lang.String,com.tencent.wxop.stat.StatSpecifyReportedInfo) -> a
    void onPause(android.content.Context,com.tencent.wxop.stat.StatSpecifyReportedInfo) -> c
    void a(android.content.Context,java.lang.Throwable) -> a
    void d(android.content.Context) -> e
    void trackCustomKVEvent(android.content.Context,java.lang.String,java.util.Properties,com.tencent.wxop.stat.StatSpecifyReportedInfo) -> a
    java.util.Properties getCommonKeyValueForKVEvent(java.lang.String) -> b
    void commitEvents(android.content.Context,int) -> a
    void testSpeed(android.content.Context) -> f
    void flushDataToDB(android.content.Context) -> g
    void c() -> c
    void d() -> d
    void e(android.content.Context) -> h
    android.content.Context e() -> e
    com.tencent.wxop.stat.common.StatLogger f() -> f
    java.lang.Thread$UncaughtExceptionHandler g() -> g
    java.lang.Thread$UncaughtExceptionHandler a(java.lang.Thread$UncaughtExceptionHandler) -> a
    java.util.Map h() -> h
    java.lang.String b(java.lang.String) -> c
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String c(java.lang.String) -> d
    long l() -> k
    java.util.Map m() -> l
    long a(long) -> a
com.tencent.wxop.stat.StatSpecifyReportedInfo -> com.tencent.wxop.stat.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    boolean e -> e
    boolean isSendImmediately() -> a
    java.lang.String getVersion() -> b
    java.lang.String getAppKey() -> c
    void setAppKey(java.lang.String) -> a
    java.lang.String getInstallChannel() -> d
    boolean isImportant() -> e
    java.lang.String toString() -> toString
com.tencent.wxop.stat.a -> com.tencent.wxop.stat.h:
    java.util.List a -> a
    int b -> b
    java.lang.String c -> c
    org.apache.http.HttpHost d -> d
    com.tencent.wxop.stat.common.e e -> e
    int f -> f
    com.tencent.wxop.stat.a g -> g
    android.content.Context h -> h
    com.tencent.wxop.stat.common.StatLogger i -> i
    org.apache.http.HttpHost a() -> a
    java.lang.String b() -> b
    int c() -> c
    boolean b(java.lang.String) -> b
    void d() -> d
    void a(java.lang.String) -> a
    void i() -> i
    java.lang.String j() -> j
    void k() -> k
    boolean e() -> e
    boolean f() -> f
    com.tencent.wxop.stat.a a(android.content.Context) -> a
    void l() -> l
    void g() -> g
    void h() -> h
    com.tencent.wxop.stat.common.e a(com.tencent.wxop.stat.a) -> a
com.tencent.wxop.stat.a.b -> az.a:
    com.tencent.wxop.stat.a.c a -> a
    long m -> m
    com.tencent.wxop.stat.a.c b() -> a
    com.tencent.wxop.stat.a.f a() -> b
    void h() -> h
    boolean a(org.json.JSONObject) -> a
com.tencent.wxop.stat.a.c -> az.b:
    java.lang.String a -> a
    org.json.JSONArray b -> b
    org.json.JSONObject c -> c
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.tencent.wxop.stat.a.d -> az.c:
    java.lang.String a -> a
    int m -> m
    int n -> n
    java.lang.Thread o -> o
    void a(int,java.lang.Throwable) -> a
    com.tencent.wxop.stat.a.f a() -> b
    boolean a(org.json.JSONObject) -> a
com.tencent.wxop.stat.a.e -> az.d:
    java.lang.String b -> b
    long c -> c
    int d -> d
    com.tencent.wxop.stat.common.a e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean k -> k
    android.content.Context l -> l
    com.tencent.wxop.stat.StatSpecifyReportedInfo a -> a
    long c() -> c
    com.tencent.wxop.stat.StatSpecifyReportedInfo d() -> d
    android.content.Context e() -> e
    com.tencent.wxop.stat.a.f a() -> b
    boolean f() -> f
    boolean a(org.json.JSONObject) -> a
    boolean b(org.json.JSONObject) -> b
    java.lang.String g() -> g
com.tencent.wxop.stat.a.f -> az.e:
    com.tencent.wxop.stat.a.f a -> a
    com.tencent.wxop.stat.a.f b -> b
    com.tencent.wxop.stat.a.f c -> c
    com.tencent.wxop.stat.a.f d -> d
    com.tencent.wxop.stat.a.f e -> e
    com.tencent.wxop.stat.a.f f -> f
    com.tencent.wxop.stat.a.f g -> g
    com.tencent.wxop.stat.a.f h -> h
    com.tencent.wxop.stat.a.f i -> i
    int j -> j
    com.tencent.wxop.stat.a.f[] k -> k
    int a() -> a
com.tencent.wxop.stat.a.i -> az.f:
    com.tencent.wxop.stat.StatSpecifyReportedInfo a -> a
    com.tencent.wxop.stat.a.f a() -> b
    boolean a(org.json.JSONObject) -> a
com.tencent.wxop.stat.a.j -> az.g:
    java.lang.String a -> a
    java.lang.String m -> m
    java.lang.String n -> n
    void a(java.lang.String) -> a
    com.tencent.wxop.stat.a.f a() -> b
    boolean a(org.json.JSONObject) -> a
com.tencent.wxop.stat.a.k -> az.h:
    java.lang.Long a -> a
    java.lang.String m -> m
    java.lang.String n -> n
    com.tencent.wxop.stat.a.f a() -> b
    boolean a(org.json.JSONObject) -> a
com.tencent.wxop.stat.a.l -> az.i:
    com.tencent.wxop.stat.common.b a -> a
    org.json.JSONObject m -> m
    com.tencent.wxop.stat.a.f a() -> b
    boolean a(org.json.JSONObject) -> a
com.tencent.wxop.stat.ad -> com.tencent.wxop.stat.i:
    android.content.Context a -> a
    int b -> b
    void run() -> run
com.tencent.wxop.stat.ae -> com.tencent.wxop.stat.j:
    android.content.Context a -> a
    void run() -> run
com.tencent.wxop.stat.ag -> com.tencent.wxop.stat.k:
    int[] a -> a
com.tencent.wxop.stat.ah -> com.tencent.wxop.stat.l:
    android.content.Context a -> a
    java.lang.String b -> b
    com.tencent.wxop.stat.StatSpecifyReportedInfo c -> c
    void run() -> run
com.tencent.wxop.stat.aj -> com.tencent.wxop.stat.m:
    android.content.Context a -> a
    com.tencent.wxop.stat.StatSpecifyReportedInfo b -> b
    void run() -> run
com.tencent.wxop.stat.an -> com.tencent.wxop.stat.n:
    android.content.Context a -> a
    com.tencent.wxop.stat.StatSpecifyReportedInfo b -> b
    void run() -> run
com.tencent.wxop.stat.ao -> com.tencent.wxop.stat.o:
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.tencent.wxop.stat.ap -> com.tencent.wxop.stat.p:
    android.content.Context a -> a
    java.util.Map b -> b
    com.tencent.wxop.stat.StatSpecifyReportedInfo c -> c
    java.util.Map a() -> a
    void run() -> run
    com.tencent.wxop.stat.NetworkMonitor a(java.lang.String,int) -> a
com.tencent.wxop.stat.aq -> com.tencent.wxop.stat.q:
    com.tencent.wxop.stat.a.e a -> a
    com.tencent.wxop.stat.StatReportStrategy b -> b
    boolean c -> c
    android.content.Context d -> d
    long e -> e
    long f -> f
    void b() -> b
    void c() -> c
    void a(com.tencent.wxop.stat.h) -> a
    boolean d() -> d
    void a() -> a
    android.content.Context a(com.tencent.wxop.stat.aq) -> a
    com.tencent.wxop.stat.a.e b(com.tencent.wxop.stat.aq) -> b
    boolean c(com.tencent.wxop.stat.aq) -> c
com.tencent.wxop.stat.ar -> com.tencent.wxop.stat.r:
    com.tencent.wxop.stat.aq a -> a
    void a() -> a
    void b() -> b
com.tencent.wxop.stat.as -> com.tencent.wxop.stat.s:
    com.tencent.wxop.stat.aq a -> a
    void a() -> a
    void b() -> b
com.tencent.wxop.stat.at -> com.tencent.wxop.stat.t:
    com.tencent.wxop.stat.aq a -> a
    void a() -> a
    void b() -> b
com.tencent.wxop.stat.au -> com.tencent.wxop.stat.u:
    com.tencent.wxop.stat.bc c -> c
    com.tencent.wxop.stat.bc d -> d
    com.tencent.wxop.stat.common.e e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int a -> a
    com.tencent.wxop.stat.common.a b -> b
    com.tencent.wxop.stat.common.StatLogger h -> h
    android.content.Context i -> i
    com.tencent.wxop.stat.au j -> j
    int k -> k
    java.util.concurrent.ConcurrentHashMap l -> l
    boolean m -> m
    java.util.HashMap n -> n
    int a() -> a
    void a(boolean) -> a
    com.tencent.wxop.stat.au a(android.content.Context) -> a
    com.tencent.wxop.stat.au b() -> b
    com.tencent.wxop.stat.common.a b(android.content.Context) -> b
    java.lang.String a(java.util.List) -> a
    void a(java.util.List,boolean) -> a
    int b(boolean) -> b
    void a(java.util.List,int,boolean) -> a
    void a(java.util.List,int,boolean,boolean) -> a
    void a(java.util.List,boolean,boolean) -> a
    void b(java.util.List,int,boolean) -> b
    void f() -> f
    int g() -> g
    int h() -> h
    void i() -> i
    void c() -> c
    android.database.sqlite.SQLiteDatabase c(boolean) -> c
    android.database.sqlite.SQLiteDatabase d(boolean) -> d
    void a(com.tencent.wxop.stat.a.e,com.tencent.wxop.stat.h,boolean) -> a
    void b(com.tencent.wxop.stat.a.e,com.tencent.wxop.stat.h,boolean,boolean) -> b
    void a(com.tencent.wxop.stat.a.e,com.tencent.wxop.stat.h,boolean,boolean) -> a
    void b(com.tencent.wxop.stat.f) -> b
    void a(com.tencent.wxop.stat.f) -> a
    void d() -> d
    void a(int,boolean) -> a
    void b(int,boolean) -> b
    void a(int) -> a
    void j() -> j
    void a(com.tencent.wxop.stat.au,java.util.List,int,boolean) -> a
    void a(com.tencent.wxop.stat.au,java.util.List,boolean) -> a
    void a(com.tencent.wxop.stat.au) -> a
    void a(com.tencent.wxop.stat.au,com.tencent.wxop.stat.a.e,com.tencent.wxop.stat.h,boolean,boolean) -> a
    void a(com.tencent.wxop.stat.au,com.tencent.wxop.stat.f) -> a
    void a(com.tencent.wxop.stat.au,int,boolean) -> a
    com.tencent.wxop.stat.common.StatLogger e() -> e
com.tencent.wxop.stat.av -> com.tencent.wxop.stat.v:
    java.util.List a -> a
    int b -> b
    boolean c -> c
    boolean d -> d
    com.tencent.wxop.stat.au e -> e
    void run() -> run
com.tencent.wxop.stat.aw -> com.tencent.wxop.stat.w:
    java.util.List a -> a
    boolean b -> b
    boolean c -> c
    com.tencent.wxop.stat.au d -> d
    void run() -> run
com.tencent.wxop.stat.ax -> com.tencent.wxop.stat.x:
    com.tencent.wxop.stat.au a -> a
    void run() -> run
com.tencent.wxop.stat.ay -> com.tencent.wxop.stat.y:
    com.tencent.wxop.stat.a.e a -> a
    com.tencent.wxop.stat.h b -> b
    boolean c -> c
    boolean d -> d
    com.tencent.wxop.stat.au e -> e
    void run() -> run
com.tencent.wxop.stat.az -> com.tencent.wxop.stat.z:
    com.tencent.wxop.stat.f a -> a
    com.tencent.wxop.stat.au b -> b
    void run() -> run
com.tencent.wxop.stat.b -> com.tencent.wxop.stat.aa:
    com.tencent.wxop.stat.a a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.wxop.stat.ba -> com.tencent.wxop.stat.ab:
    java.util.List a -> a
    boolean b -> b
    com.tencent.wxop.stat.au c -> c
    void a() -> a
    void b() -> b
com.tencent.wxop.stat.bb -> com.tencent.wxop.stat.ac:
    int a -> a
    com.tencent.wxop.stat.au b -> b
    void run() -> run
com.tencent.wxop.stat.bc -> com.tencent.wxop.stat.ad:
    java.lang.String a -> a
    android.content.Context b -> b
    void close() -> close
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.wxop.stat.bd -> com.tencent.wxop.stat.ae:
    long a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    java.lang.String toString() -> toString
com.tencent.wxop.stat.c -> com.tencent.wxop.stat.af:
    com.tencent.wxop.stat.b a -> a
    void run() -> run
com.tencent.wxop.stat.common.StatConstants -> ba.a:
    java.lang.String MTA_STORAGE_PRE_TAG -> a
    java.lang.String DATABASE_NAME -> b
com.tencent.wxop.stat.common.StatLogger -> ba.b:
    java.lang.String a -> a
    boolean b -> b
    int c -> c
    boolean isDebugEnable() -> a
    void setDebugEnable(boolean) -> a
    java.lang.String a() -> b
    void info(java.lang.Object) -> a
    void i(java.lang.Object) -> b
    void warn(java.lang.Object) -> c
    void w(java.lang.Object) -> d
    void error(java.lang.Object) -> e
    void error(java.lang.Throwable) -> a
    void e(java.lang.Object) -> f
    void e(java.lang.Throwable) -> b
    void debug(java.lang.Object) -> g
    void d(java.lang.Object) -> h
com.tencent.wxop.stat.common.a -> ba.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    long g -> g
    java.lang.String toString() -> toString
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(int) -> a
    int d() -> d
com.tencent.wxop.stat.common.b -> ba.d:
    com.tencent.wxop.stat.common.d a -> a
    com.tencent.wxop.stat.common.StatLogger d -> d
    java.lang.Integer b -> b
    java.lang.String c -> c
    org.json.JSONObject e -> e
    com.tencent.wxop.stat.common.d a(android.content.Context) -> a
    void a(org.json.JSONObject,java.lang.Thread) -> a
com.tencent.wxop.stat.common.c -> ba.e:
com.tencent.wxop.stat.common.d -> ba.f:
    java.lang.String a -> a
    java.lang.String b -> b
    android.util.DisplayMetrics c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    android.content.Context o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    void a(org.json.JSONObject,java.lang.Thread) -> a
com.tencent.wxop.stat.common.e -> ba.g:
    java.util.concurrent.ExecutorService a -> a
    void a(java.lang.Runnable) -> a
com.tencent.wxop.stat.common.f -> ba.h:
    byte[] a() -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
com.tencent.wxop.stat.common.g -> ba.i:
    boolean a -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
    byte[] b(byte[],int) -> b
    byte[] b(byte[],int,int,int) -> b
com.tencent.wxop.stat.common.h -> ba.j:
    byte[] a -> a
    int b -> b
com.tencent.wxop.stat.common.i -> ba.k:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
com.tencent.wxop.stat.common.j -> ba.l:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int,int,boolean) -> a
com.tencent.wxop.stat.common.k -> ba.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Random e -> e
    android.util.DisplayMetrics f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    com.tencent.wxop.stat.common.StatLogger k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    int n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    long q -> q
    java.lang.String r -> r
    com.tencent.wxop.stat.common.n s -> s
    java.lang.String t -> t
    int u -> u
    long v -> v
    int w -> w
    java.lang.String x -> x
    java.util.Random g() -> g
    int a() -> a
    byte[] a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
    org.apache.http.HttpHost a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    android.util.DisplayMetrics d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    boolean k(android.content.Context) -> k
    java.lang.String l(android.content.Context) -> l
    java.lang.Integer m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    int o(android.content.Context) -> o
    com.tencent.wxop.stat.common.StatLogger b() -> b
    long c() -> c
    java.lang.String a(int) -> a
    java.lang.Long a(java.lang.String,java.lang.String,int,int,java.lang.Long) -> a
    long b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    java.lang.String p(android.content.Context) -> p
    java.lang.String a(long) -> a
    java.lang.String q(android.content.Context) -> q
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String r(android.content.Context) -> r
    java.lang.Integer s(android.content.Context) -> s
    java.lang.String d() -> d
    long e() -> e
    java.lang.String t(android.content.Context) -> t
    long D(android.content.Context) -> C
    long h() -> h
    org.json.JSONObject u(android.content.Context) -> u
    java.lang.String v(android.content.Context) -> v
    int w(android.content.Context) -> w
    void x(android.content.Context) -> x
    boolean a(com.tencent.wxop.stat.StatSpecifyReportedInfo) -> a
    boolean y(android.content.Context) -> y
    void z(android.content.Context) -> z
    int a(android.content.Context,boolean) -> a
    int A(android.content.Context) -> A
    void a(android.content.Context,int) -> a
    java.lang.String C(android.content.Context) -> B
    com.tencent.wxop.stat.common.StatLogger f() -> f
com.tencent.wxop.stat.common.l -> ba.n:
    int a() -> a
    int b() -> b
    int c() -> c
    java.lang.String d() -> d
com.tencent.wxop.stat.common.m -> ba.o:
    boolean accept(java.io.File) -> accept
com.tencent.wxop.stat.common.n -> ba.p:
com.tencent.wxop.stat.common.o -> ba.q:
    int a -> a
    boolean a() -> a
com.tencent.wxop.stat.common.p -> ba.r:
    android.content.SharedPreferences a -> a
    android.content.SharedPreferences a(android.content.Context) -> a
    long a(android.content.Context,java.lang.String,long) -> a
    void b(android.content.Context,java.lang.String,long) -> b
    int a(android.content.Context,java.lang.String,int) -> a
    void b(android.content.Context,java.lang.String,int) -> b
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
com.tencent.wxop.stat.common.q -> ba.s:
    java.lang.String a -> a
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    android.net.wifi.WifiInfo c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    boolean f(android.content.Context) -> f
    org.json.JSONArray a(android.content.Context,int) -> a
com.tencent.wxop.stat.common.r -> ba.t:
    int a(android.net.wifi.ScanResult,android.net.wifi.ScanResult) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.wxop.stat.d -> com.tencent.wxop.stat.ag:
    java.util.Timer a -> a
    com.tencent.wxop.stat.d b -> b
    android.content.Context c -> c
    void a() -> a
    com.tencent.wxop.stat.d a(android.content.Context) -> a
    void a(java.util.TimerTask,long) -> a
    android.content.Context a(com.tencent.wxop.stat.d) -> a
com.tencent.wxop.stat.e -> com.tencent.wxop.stat.ah:
    com.tencent.wxop.stat.d a -> a
    void run() -> run
com.tencent.wxop.stat.f -> com.tencent.wxop.stat.ai:
    int a -> a
    org.json.JSONObject b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String a() -> a
com.tencent.wxop.stat.g -> com.tencent.wxop.stat.aj:
    void a(java.lang.Object) -> a
    void c(java.lang.Object) -> b
    void d(java.lang.Object) -> c
    void e(java.lang.Object) -> d
com.tencent.wxop.stat.h -> com.tencent.wxop.stat.ak:
    void a() -> a
    void b() -> b
com.tencent.wxop.stat.i -> com.tencent.wxop.stat.al:
    com.tencent.wxop.stat.common.StatLogger d -> d
    org.apache.http.impl.client.DefaultHttpClient a -> a
    com.tencent.wxop.stat.common.e b -> b
    java.lang.StringBuilder c -> c
    com.tencent.wxop.stat.i e -> e
    android.content.Context f -> f
    long g -> g
    void a(android.content.Context) -> a
    android.content.Context a() -> a
    com.tencent.wxop.stat.i b(android.content.Context) -> b
    void a(org.json.JSONObject) -> a
    void a(java.util.List,com.tencent.wxop.stat.h) -> a
    void b(java.util.List,com.tencent.wxop.stat.h) -> b
    void a(com.tencent.wxop.stat.a.e,com.tencent.wxop.stat.h) -> a
com.tencent.wxop.stat.j -> com.tencent.wxop.stat.am:
    com.tencent.wxop.stat.i a -> a
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
com.tencent.wxop.stat.k -> com.tencent.wxop.stat.an:
    java.util.List a -> a
    com.tencent.wxop.stat.h b -> b
    com.tencent.wxop.stat.i c -> c
    void run() -> run
com.tencent.wxop.stat.l -> com.tencent.wxop.stat.ao:
    android.content.Context a -> a
    void run() -> run
com.tencent.wxop.stat.m -> com.tencent.wxop.stat.ap:
    android.content.Context a -> a
    com.tencent.wxop.stat.StatSpecifyReportedInfo b -> b
    void run() -> run
com.tencent.wxop.stat.q -> com.tencent.wxop.stat.aq:
    android.content.Context a -> a
    java.lang.Throwable b -> b
    void run() -> run
com.tencent.wxop.stat.t -> com.tencent.wxop.stat.ar:
    void a() -> a
    void b() -> b
com.tencent.wxop.stat.u -> com.tencent.wxop.stat.as:
    android.content.Context a -> a
    com.tencent.wxop.stat.StatSpecifyReportedInfo b -> b
    com.tencent.wxop.stat.a.c c -> c
    void run() -> run
com.tencent.wxop.stat.w -> com.tencent.wxop.stat.at:
    java.lang.String a -> a
    android.content.Context b -> b
    com.tencent.wxop.stat.StatSpecifyReportedInfo c -> c
    void run() -> run
com.umeng.analytics.AnalyticsConfig -> bb.a:
    java.lang.String a -> m
    java.lang.String b -> n
    java.lang.String mWrapperType -> a
    java.lang.String mWrapperVersion -> b
    int mVerticalType -> c
    java.lang.String GPU_VENDER -> d
    java.lang.String GPU_RENDERER -> e
    boolean sEncrypt -> f
    int sLatentWindow -> g
    double[] c -> o
    boolean ACTIVITY_DURATION_OPEN -> h
    boolean COMPRESS_DATA -> i
    boolean ENABLE_MEMORY_BUFFER -> j
    boolean CATCH_EXCEPTION -> k
    long kContinueSessionMillis -> l
    java.lang.String getAppkey(android.content.Context) -> a
    java.lang.String getChannel(android.content.Context) -> b
    java.lang.String getSDKVersion() -> a
    double[] getLocation() -> b
com.umeng.analytics.MobclickAgent -> bb.b:
    com.umeng.analytics.d b -> a
    void openActivityDurationTrack(boolean) -> a
    void onPageStart(java.lang.String) -> a
    void onPageEnd(java.lang.String) -> b
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void onEvent(android.content.Context,java.lang.String) -> a
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> a
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> b
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> c
    void updateOnlineConfig(android.content.Context) -> c
com.umeng.analytics.ReportPolicy -> bb.c:
com.umeng.analytics.ReportPolicy$a -> bb.d:
    u.aly.ak a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$b -> bb.e:
    long a -> a
    long b -> b
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$c -> bb.f:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$d -> bb.g:
    long a -> a
    long b -> b
    u.aly.aa c -> c
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$f -> bb.h:
    long a -> a
    u.aly.aa b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$g -> bb.i:
    boolean a(boolean) -> a
    boolean a() -> a
com.umeng.analytics.ReportPolicy$h -> bb.j:
    android.content.Context a -> a
    boolean a(boolean) -> a
com.umeng.analytics.a -> bb.k:
    java.lang.String[] f -> a
    java.lang.String[] g -> b
com.umeng.analytics.b -> bb.l:
    byte[] a -> a
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    int a(int,java.lang.String) -> a
com.umeng.analytics.c -> bb.m:
    void a() -> a
    void b() -> b
com.umeng.analytics.d -> bb.n:
    com.umeng.analytics.onlineconfig.a a -> a
    android.content.Context b -> b
    com.umeng.analytics.c c -> c
    u.aly.n d -> d
    u.aly.ad e -> e
    u.aly.z f -> f
    u.aly.o g -> g
    u.aly.l h -> h
    boolean i -> i
    void f(android.content.Context) -> d
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void g(android.content.Context) -> e
    void h(android.content.Context) -> f
    void a(android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(java.lang.Throwable) -> a
    void a(com.umeng.analytics.d,android.content.Context) -> a
    void b(com.umeng.analytics.d,android.content.Context) -> b
    u.aly.o a(com.umeng.analytics.d) -> a
com.umeng.analytics.d$1 -> bb.o:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.d$2 -> bb.p:
    android.content.Context a -> a
    com.umeng.analytics.d b -> b
    void a() -> a
com.umeng.analytics.d$3 -> bb.q:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.d$4 -> bb.r:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.analytics.d c -> c
    void a() -> a
com.umeng.analytics.e -> bb.s:
    java.lang.String[] a -> a
    java.lang.String[] a(android.content.Context) -> a
com.umeng.analytics.f -> bb.t:
    java.util.List a -> a
    java.util.concurrent.ExecutorService b -> b
    long c -> c
    java.util.concurrent.ScheduledExecutorService d -> d
    void a(java.lang.Runnable) -> a
    void a() -> a
    void b(java.lang.Runnable) -> b
    void a(java.lang.Runnable,long) -> a
com.umeng.analytics.g -> bb.u:
    void run() -> run
    void a() -> a
com.umeng.analytics.h -> bb.v:
    com.umeng.analytics.h a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    com.umeng.analytics.h$a d -> d
    long e -> e
    long f -> f
    com.umeng.analytics.h a(android.content.Context) -> a
    boolean a(java.io.File) -> a
    java.lang.String[] a() -> a
    int[] c() -> b
    void a(int) -> a
    int d() -> c
    void b(int) -> b
    int e() -> d
    void c(int) -> c
    int d(int) -> d
    void a(int,int) -> a
    byte[] f() -> e
    void a(byte[]) -> a
    void g() -> f
    void b(byte[]) -> b
    boolean h() -> g
    com.umeng.analytics.h$a i() -> h
    android.content.SharedPreferences n() -> j
    android.content.SharedPreferences j() -> i
    java.lang.String o() -> k
    java.lang.String p() -> l
com.umeng.analytics.h$a -> bb.w:
    int a -> a
    java.io.File b -> b
    java.io.FilenameFilter c -> c
    boolean a() -> a
    void a(com.umeng.analytics.h$b) -> a
    void a(byte[]) -> a
com.umeng.analytics.h$a$1 -> bb.x:
    com.umeng.analytics.h$a a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.umeng.analytics.h$b -> bb.y:
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> bc.a:
    void onDataReceived(org.json.JSONObject) -> a
com.umeng.analytics.onlineconfig.a -> bc.b:
    java.lang.String h -> a
    java.lang.String i -> b
    java.lang.String j -> c
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener k -> d
    com.umeng.analytics.onlineconfig.c l -> e
    long m -> f
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.c) -> a
    void a(org.json.JSONObject) -> a
    org.json.JSONObject b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    void a(com.umeng.analytics.onlineconfig.a,org.json.JSONObject) -> a
    org.json.JSONObject a(com.umeng.analytics.onlineconfig.a,android.content.Context) -> a
    com.umeng.analytics.onlineconfig.c a(com.umeng.analytics.onlineconfig.a) -> a
    void a(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
com.umeng.analytics.onlineconfig.a$a -> bc.c:
    org.json.JSONObject e -> e
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.analytics.onlineconfig.a$b -> bc.d:
    android.content.Context a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void run() -> run
    boolean a() -> a
    void b() -> b
com.umeng.analytics.onlineconfig.b -> bc.e:
    org.json.JSONObject a -> a
    boolean b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
com.umeng.analytics.onlineconfig.c -> bc.f:
    void a(int,long) -> a
com.umeng.common.message.DeviceConfig -> bd.a:
    java.lang.String a -> a
    java.lang.String getAppVersionCode(android.content.Context) -> a
    java.lang.String getAppVersionName(android.content.Context) -> b
    boolean checkPermission(android.content.Context,java.lang.String) -> a
    java.lang.String getCPU() -> a
    java.lang.String getDeviceId(android.content.Context) -> c
    java.lang.String getDeviceIdMD5(android.content.Context) -> d
    java.lang.String[] getNetworkAccessMode(android.content.Context) -> e
    int getTimeZone(android.content.Context) -> f
    java.lang.String[] getLocaleInfo(android.content.Context) -> g
    java.util.Locale a(android.content.Context) -> p
    java.lang.String getAppkey(android.content.Context) -> h
    java.lang.String getMetaData(android.content.Context,java.lang.String) -> b
    java.lang.String getMac(android.content.Context) -> i
    java.lang.String getResolution(android.content.Context) -> j
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String getOperator(android.content.Context) -> k
    java.lang.String getChannel(android.content.Context) -> l
    java.lang.String getPackageName(android.content.Context) -> m
    java.lang.String getApplicationLable(android.content.Context) -> n
    java.lang.String getUtdid(android.content.Context) -> o
com.umeng.common.message.Log -> bd.b:
    boolean LOG -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> c
com.umeng.common.message.b -> bd.c:
    java.lang.String C -> A
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    int s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String D -> B
    java.lang.String E -> C
    java.lang.String F -> D
    java.lang.String G -> E
    java.lang.String H -> F
    java.lang.String I -> G
    java.lang.String J -> H
    java.lang.String K -> I
    java.lang.String L -> J
    java.lang.String M -> K
    java.lang.String N -> L
    java.lang.String O -> M
    java.lang.String P -> N
    java.lang.String Q -> O
    java.lang.String R -> P
    java.lang.String S -> Q
    java.lang.String T -> R
    java.lang.String U -> S
    java.lang.String V -> T
    java.lang.String W -> U
    java.lang.String X -> V
    java.lang.String Y -> W
    java.lang.String Z -> X
    java.lang.String aa -> Y
    java.lang.String ab -> Z
    java.lang.String ac -> aa
    void j(org.json.JSONObject) -> b
    void k(org.json.JSONObject) -> c
    void l(org.json.JSONObject) -> d
    void m(org.json.JSONObject) -> e
    void n(org.json.JSONObject) -> f
    void o(org.json.JSONObject) -> g
    void p(org.json.JSONObject) -> h
    void b(org.json.JSONObject) -> a
    void a(android.content.Context,java.lang.String[]) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void b(android.content.Context,java.lang.String[]) -> b
com.umeng.common.message.c -> bd.d:
    java.lang.String a -> a
    com.umeng.common.message.c b -> b
    android.content.Context c -> c
    java.lang.Class d -> d
    java.lang.Class e -> e
    java.lang.Class f -> f
    java.lang.Class g -> g
    java.lang.Class h -> h
    java.lang.Class i -> i
    java.lang.Class j -> j
    java.lang.Class k -> k
    com.umeng.common.message.c a(android.content.Context) -> a
    int c(java.lang.String) -> a
    int h(java.lang.String) -> b
    int a(java.lang.Class,java.lang.String) -> a
com.umeng.message.IUmengRegisterCallback -> com.umeng.message.IUmengRegisterCallback:
    void onRegistered(java.lang.String) -> onRegistered
com.umeng.message.IUmengUnregisterCallback -> com.umeng.message.IUmengUnregisterCallback:
    void onUnregistered(java.lang.String) -> onUnregistered
com.umeng.message.MessageSharedPrefs -> com.umeng.message.MessageSharedPrefs:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    com.umeng.message.MessageSharedPrefs c -> c
    com.umeng.message.MessageSharedPrefs getInstance(android.content.Context) -> getInstance
    void setAppLaunchLogSentAt(long) -> setAppLaunchLogSentAt
    long getAppLaunchLogSentAt() -> getAppLaunchLogSentAt
    boolean hasAppLaunchLogSentToday() -> hasAppLaunchLogSentToday
    java.lang.String getPushIntentServiceClass() -> getPushIntentServiceClass
    boolean getMergeNotificaiton() -> getMergeNotificaiton
    java.lang.String getMessageAppKey() -> getMessageAppKey
    java.lang.String getMessageAppSecret() -> getMessageAppSecret
    java.lang.String getMessageChannel() -> getMessageChannel
    void setAppLaunchLogSendPolicy(int) -> setAppLaunchLogSendPolicy
    void setTagSendPolicy(int) -> setTagSendPolicy
    int getAppLaunchLogSendPolicy() -> getAppLaunchLogSendPolicy
    int a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    void e() -> e
    boolean g() -> f
    boolean a(java.lang.String) -> a
    boolean h() -> g
    boolean i() -> h
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    java.lang.String j() -> i
    int k() -> j
    void setSerialNo(int) -> setSerialNo
    int getSerialNo() -> getSerialNo
com.umeng.message.MsgConstant -> com.umeng.message.MsgConstant:
    java.lang.String e -> b
    java.lang.String f -> c
    java.lang.String LOG_ENDPOINT -> LOG_ENDPOINT
    java.lang.String REGISTER_ENDPOINT -> REGISTER_ENDPOINT
    java.lang.String TAG_ENDPOINT -> TAG_ENDPOINT
    java.lang.String ALIAS_ENDPOINT -> ALIAS_ENDPOINT
    java.lang.String DELETE_ALIAS_ENDPOINT -> DELETE_ALIAS_ENDPOINT
    java.lang.String LAUNCH_ENDPOINT -> LAUNCH_ENDPOINT
    java.lang.String g -> d
    java.lang.String DEFAULT_INTENT_SERVICE_CLASS_NAME -> DEFAULT_INTENT_SERVICE_CLASS_NAME
    long a -> a
com.umeng.message.MsgLogStore -> com.umeng.message.MsgLogStore:
    com.umeng.message.MsgLogStore a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.umeng.message.MsgLogStore$MsgLogStoreHelper c -> c
    android.content.Context d -> d
    com.umeng.message.MsgLogStore getInstance(android.content.Context) -> getInstance
    void a() -> a
    void a(java.io.File) -> a
    java.lang.String b(java.io.File) -> b
    boolean addLog(java.lang.String,int,long) -> addLog
    boolean removeLog(java.lang.String,int) -> removeLog
    java.util.ArrayList getMsgLogs(int) -> getMsgLogs
com.umeng.message.MsgLogStore$1 -> com.umeng.message.MsgLogStore$1:
    com.umeng.message.MsgLogStore a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.umeng.message.MsgLogStore$MsgLog -> com.umeng.message.MsgLogStore$MsgLog:
    java.lang.String msgId -> msgId
    long time -> time
    int actionType -> actionType
    com.umeng.message.MsgLogStore a -> a
    android.content.ContentValues getContentValues() -> getContentValues
com.umeng.message.MsgLogStore$MsgLogStoreHelper -> com.umeng.message.MsgLogStore$MsgLogStoreHelper:
    com.umeng.message.MsgLogStore a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.message.NotificationProxyBroadcastReceiver -> com.umeng.message.NotificationProxyBroadcastReceiver:
    java.lang.String a -> a
    com.umeng.message.UHandler b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.umeng.message.PushAgent -> com.umeng.message.PushAgent:
    com.umeng.message.PushAgent a -> a
    com.umeng.message.tag.TagManager b -> b
    android.content.Context c -> c
    boolean d -> d
    boolean DEBUG -> DEBUG
    java.lang.String e -> e
    com.umeng.message.UHandler f -> f
    com.umeng.message.UHandler g -> g
    com.umeng.message.IUmengRegisterCallback h -> h
    com.umeng.message.IUmengUnregisterCallback i -> i
    com.umeng.message.PushAgent getInstance(android.content.Context) -> getInstance
    void enable() -> enable
    boolean isEnabled() -> isEnabled
    com.umeng.message.UHandler getMessageHandler() -> getMessageHandler
    com.umeng.message.UHandler getNotificationClickHandler() -> getNotificationClickHandler
    java.lang.String getMessageSecret() -> getMessageSecret
    java.lang.String getMessageAppkey() -> getMessageAppkey
    java.lang.String getMessageChannel() -> getMessageChannel
    void onAppStart() -> onAppStart
    java.lang.String getPushIntentServiceClass() -> getPushIntentServiceClass
    int getNoDisturbStartHour() -> getNoDisturbStartHour
    int getNoDisturbStartMinute() -> getNoDisturbStartMinute
    int getNoDisturbEndHour() -> getNoDisturbEndHour
    int getNoDisturbEndMinute() -> getNoDisturbEndMinute
    void setAppLaunchByMessage() -> setAppLaunchByMessage
    boolean isAppLaunchByMessage() -> isAppLaunchByMessage
    boolean getMergeNotificaiton() -> getMergeNotificaiton
    com.umeng.message.IUmengRegisterCallback getRegisterCallback() -> getRegisterCallback
    com.umeng.message.IUmengUnregisterCallback getUnregisterCallback() -> getUnregisterCallback
com.umeng.message.RegistrationReceiver -> com.umeng.message.RegistrationReceiver:
    java.lang.String a(android.content.Context) -> a
com.umeng.message.UHandler -> com.umeng.message.UHandler:
    void handleMessage(android.content.Context,com.umeng.message.entity.UMessage) -> handleMessage
com.umeng.message.UTrack -> com.umeng.message.UTrack:
    java.lang.String a -> a
    org.json.JSONObject b -> b
    com.umeng.message.UTrack c -> c
    java.util.concurrent.ScheduledThreadPoolExecutor d -> d
    android.content.Context e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    com.umeng.message.UTrack getInstance(android.content.Context) -> getInstance
    void a(com.umeng.message.entity.UMessage) -> a
    void trackMsgClick(com.umeng.message.entity.UMessage) -> trackMsgClick
    void trackMsgDismissed(com.umeng.message.entity.UMessage) -> trackMsgDismissed
    void a(java.lang.String,int,long) -> a
    void b(java.lang.String,int,long) -> b
    void sendCachedMsgLog(long) -> sendCachedMsgLog
    void trackAppLaunch(long) -> trackAppLaunch
    void trackRegister() -> trackRegister
    void b() -> b
    boolean c() -> c
    java.lang.String d() -> d
    org.json.JSONObject e() -> e
    void a(com.umeng.message.UTrack,java.lang.String,int,long) -> a
    android.content.Context a(com.umeng.message.UTrack) -> a
    java.lang.String a() -> a
    boolean a(boolean) -> a
    org.json.JSONObject b(com.umeng.message.UTrack) -> b
    boolean b(boolean) -> b
    java.lang.String c(com.umeng.message.UTrack) -> c
    boolean c(boolean) -> c
com.umeng.message.UTrack$1 -> com.umeng.message.UTrack$1:
    java.lang.String a -> a
    int b -> b
    long c -> c
    com.umeng.message.UTrack d -> d
    void run() -> run
com.umeng.message.UTrack$2 -> com.umeng.message.UTrack$2:
    com.umeng.message.UTrack a -> a
    void run() -> run
com.umeng.message.UTrack$3 -> com.umeng.message.UTrack$3:
    com.umeng.message.UTrack a -> a
    void run() -> run
com.umeng.message.UTrack$4 -> com.umeng.message.UTrack$4:
    com.umeng.message.UTrack a -> a
    void run() -> run
com.umeng.message.UmengBaseIntentService -> com.umeng.message.UmengBaseIntentService:
    java.lang.String a -> a
    boolean shouldProcessMessage(android.content.Context,android.content.Intent) -> a
    void onMessage(android.content.Context,android.content.Intent) -> b
    void onError(android.content.Context,java.lang.String) -> a
    void onRegistered(android.content.Context,java.lang.String) -> b
    void onUnregistered(android.content.Context,java.lang.String) -> c
    java.lang.Class getAgooService() -> a
com.umeng.message.UmengBroadcastReceiver -> com.umeng.message.UmengBroadcastReceiver:
    java.lang.String a(android.content.Context) -> a
com.umeng.message.UmengDownloadResourceService -> com.umeng.message.UmengDownloadResourceService:
    java.lang.String TAG -> TAG
    java.util.concurrent.ScheduledThreadPoolExecutor a -> a
    android.content.Context b -> b
    java.lang.Thread m -> d
    java.util.ArrayList c -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void notification(com.umeng.message.entity.UMessage) -> notification
    void downloadResource(com.umeng.message.entity.UMessage,int) -> downloadResource
    void setAlarm(com.umeng.message.entity.UMessage,int) -> setAlarm
    void deleteAlarm(com.umeng.message.entity.UMessage,int) -> deleteAlarm
    android.app.PendingIntent a(com.umeng.message.entity.UMessage,int) -> a
    void close(java.io.Closeable) -> close
    void checkCache() -> checkCache
    void checkDir(java.io.File,long,long) -> checkDir
    long a(java.io.File) -> a
    void b(java.io.File,long) -> b
    java.lang.String getMessageResourceFolder(android.content.Context,com.umeng.message.entity.UMessage) -> getMessageResourceFolder
    void a(java.io.File,long) -> a
    java.lang.Thread a(java.lang.Thread) -> a
com.umeng.message.UmengDownloadResourceService$1 -> com.umeng.message.UmengDownloadResourceService$1:
    java.io.File a -> a
    long b -> b
    void run() -> run
com.umeng.message.UmengDownloadResourceService$DownloadResourceTask -> com.umeng.message.UmengDownloadResourceService$DownloadResourceTask:
    com.umeng.message.entity.UMessage a -> a
    java.util.ArrayList b -> b
    int c -> c
    com.umeng.message.UmengDownloadResourceService d -> d
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    boolean download(java.lang.String) -> download
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.message.UmengIntentService -> com.umeng.message.UmengIntentService:
    java.lang.String a -> a
    void onMessage(android.content.Context,android.content.Intent) -> b
com.umeng.message.UmengMessageHandler -> com.umeng.message.UmengMessageHandler:
    int a -> a
    java.lang.String b -> b
    java.util.Date c -> c
    java.lang.String d -> d
    void handleMessage(android.content.Context,com.umeng.message.entity.UMessage) -> handleMessage
    void dealWithNotificationMessage(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithNotificationMessage
    void a(android.content.Context,android.app.Notification,boolean) -> a
    void a(android.content.Context) -> a
    void dealWithCustomMessage(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithCustomMessage
    android.app.PendingIntent getClickPendingIntent(android.content.Context,com.umeng.message.entity.UMessage) -> getClickPendingIntent
    android.app.PendingIntent getDismissPendingIntent(android.content.Context,com.umeng.message.entity.UMessage) -> getDismissPendingIntent
    boolean isInNoDisturbTime(android.content.Context) -> isInNoDisturbTime
    int getNotificationDefaults(android.content.Context,com.umeng.message.entity.UMessage) -> getNotificationDefaults
    boolean startDownloadResourceService(android.content.Context,com.umeng.message.entity.UMessage) -> startDownloadResourceService
    boolean a(android.content.Context,android.support.v4.app.NotificationCompat$Builder,com.umeng.message.entity.UMessage) -> a
    int getSmallIconId(android.content.Context,com.umeng.message.entity.UMessage) -> getSmallIconId
    android.graphics.Bitmap getLargeIcon(android.content.Context,com.umeng.message.entity.UMessage) -> getLargeIcon
    android.net.Uri getSound(android.content.Context,com.umeng.message.entity.UMessage) -> getSound
    android.app.Notification getNotification(android.content.Context,com.umeng.message.entity.UMessage) -> getNotification
com.umeng.message.UmengMessageHandler$1 -> com.umeng.message.UmengMessageHandler$1:
    android.os.PowerManager a -> a
    com.umeng.message.UmengMessageHandler b -> b
    boolean a() -> a
com.umeng.message.UmengNotificationClickHandler -> com.umeng.message.UmengNotificationClickHandler:
    java.lang.String a -> a
    void handleMessage(android.content.Context,com.umeng.message.entity.UMessage) -> handleMessage
    void openUrl(android.content.Context,com.umeng.message.entity.UMessage) -> openUrl
    void openActivity(android.content.Context,com.umeng.message.entity.UMessage) -> openActivity
    void launchApp(android.content.Context,com.umeng.message.entity.UMessage) -> launchApp
    void dealWithCustomAction(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithCustomAction
    android.content.Intent a(android.content.Intent,com.umeng.message.entity.UMessage) -> a
com.umeng.message.UmengRegistrar -> com.umeng.message.UmengRegistrar:
    java.lang.String b -> a
    void register(android.content.Context,java.lang.String,java.lang.String) -> register
    void a(android.content.Context,boolean) -> a
    boolean isRegisteredToUmeng(android.content.Context) -> isRegisteredToUmeng
    void registerToUmeng(android.content.Context) -> registerToUmeng
    void checkRegisteredToUmeng(android.content.Context) -> checkRegisteredToUmeng
com.umeng.message.UmengService -> com.umeng.message.UmengService:
com.umeng.message.UmengUT -> com.umeng.message.UmengUT:
    boolean b -> a
    void start(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> start
    void stop(android.content.Context) -> stop
    void onCaughException(java.lang.Throwable) -> onCaughException
    void commitEvent(int,java.lang.Object,java.lang.Object) -> commitEvent
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object) -> commitEvent
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String[]) -> commitEvent
    java.lang.String getUtdId(android.content.Context) -> getUtdId
com.umeng.message.entity.UMessage -> be.a:
    java.lang.String msg_id -> a
    java.lang.String display_type -> b
    java.lang.String alias -> c
    java.lang.String ticker -> d
    java.lang.String title -> e
    java.lang.String text -> f
    boolean play_vibrate -> g
    boolean play_lights -> h
    boolean play_sound -> i
    boolean screen_on -> j
    java.lang.String after_open -> k
    java.lang.String custom -> l
    java.lang.String url -> m
    java.lang.String sound -> n
    java.lang.String img -> o
    java.lang.String icon -> p
    java.lang.String activity -> q
    int builder_id -> r
    java.util.Map extra -> s
    org.json.JSONObject a -> v
    java.lang.String largeIcon -> t
    long random_min -> u
    org.json.JSONObject getRaw() -> a
    boolean hasResourceFromInternet() -> b
    boolean isLargeIconFromInternet() -> c
    boolean isSoundFromInternet() -> d
com.umeng.message.proguard.A -> bf.a:
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.k$a J() -> b
    java.util.Map a_() -> c
    boolean a_(com.umeng.message.proguard.k$f) -> a
    java.lang.Object b(com.umeng.message.proguard.k$f) -> b
    com.umeng.message.proguard.P b_() -> d_
com.umeng.message.proguard.B -> bf.b:
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    java.lang.Object d(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> a
    java.lang.Object c(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> b
    java.lang.Object d(byte[]) -> a
    java.lang.Object d(byte[],com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.C -> bf.c:
com.umeng.message.proguard.D -> bf.d:
    com.umeng.message.proguard.p$b a -> a
    java.util.List b -> b
    boolean c -> c
    java.util.List d -> d
    boolean e -> e
    com.umeng.message.proguard.D$b f -> f
    com.umeng.message.proguard.D$a g -> g
    com.umeng.message.proguard.D$c h -> h
    void b() -> a
    void j() -> f
    void k() -> g
    int c() -> b
    boolean d() -> c
    com.umeng.message.proguard.p a(int) -> a
    com.umeng.message.proguard.p a(int,boolean) -> a
    com.umeng.message.proguard.p$a b(int) -> b
    com.umeng.message.proguard.A c(int) -> c
    com.umeng.message.proguard.D a(com.umeng.message.proguard.p) -> a
    com.umeng.message.proguard.D a(java.lang.Iterable) -> a
    java.util.List f() -> d
    void l() -> h
    void a() -> e
    void m() -> i
com.umeng.message.proguard.D$a -> bf.e:
    com.umeng.message.proguard.D a -> a
    int size() -> size
    com.umeng.message.proguard.p$a a(int) -> a
    void a() -> a
    java.lang.Object get(int) -> get
com.umeng.message.proguard.D$b -> bf.f:
    com.umeng.message.proguard.D a -> a
    int size() -> size
    com.umeng.message.proguard.p a(int) -> a
    void a() -> a
    java.lang.Object get(int) -> get
com.umeng.message.proguard.D$c -> bf.g:
    com.umeng.message.proguard.D a -> a
    int size() -> size
    com.umeng.message.proguard.A a(int) -> a
    void a() -> a
    java.lang.Object get(int) -> get
com.umeng.message.proguard.E -> bf.h:
    int[] f -> c
    int g -> d
    com.umeng.message.proguard.g h -> e
    com.umeng.message.proguard.g i -> f
    int j -> g
    int l -> h
    byte a(int) -> a
    int a() -> a
    void a(byte[],int,int,int) -> a
    java.lang.String b(java.lang.String) -> a
    boolean i() -> b
    int a(int,int,int) -> a
    boolean equals(java.lang.Object) -> equals
    boolean c(com.umeng.message.proguard.g) -> a
    int hashCode() -> hashCode
    int o() -> c
    int b(int,int,int) -> b
    com.umeng.message.proguard.h k() -> d
    java.io.InputStream j() -> e
    com.umeng.message.proguard.g$a c() -> f
    java.util.Iterator iterator() -> iterator
    com.umeng.message.proguard.g a(com.umeng.message.proguard.E) -> a
    com.umeng.message.proguard.g b(com.umeng.message.proguard.E) -> b
com.umeng.message.proguard.E$1 -> bf.i:
com.umeng.message.proguard.E$b -> bf.j:
    java.util.Stack a -> a
    com.umeng.message.proguard.w b -> b
    com.umeng.message.proguard.w a(com.umeng.message.proguard.g) -> a
    com.umeng.message.proguard.w b() -> b
    boolean hasNext() -> hasNext
    com.umeng.message.proguard.w a() -> a
    void remove() -> remove
    java.lang.Object next() -> next
com.umeng.message.proguard.E$c -> bf.k:
    com.umeng.message.proguard.E$b c -> c
    com.umeng.message.proguard.g$a d -> d
    int a -> a
    com.umeng.message.proguard.E b -> b
    boolean hasNext() -> hasNext
    java.lang.Byte a() -> a
    byte b() -> b
    void remove() -> remove
    java.lang.Object next() -> next
com.umeng.message.proguard.E$d -> bf.l:
    com.umeng.message.proguard.E$b b -> b
    com.umeng.message.proguard.w c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    com.umeng.message.proguard.E a -> a
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int a(byte[],int,int) -> a
    int read() -> read
    int available() -> available
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void a() -> a
    void b() -> b
com.umeng.message.proguard.L -> bf.m:
    com.umeng.message.proguard.p$b a -> a
    com.umeng.message.proguard.p$a b -> b
    com.umeng.message.proguard.p c -> c
    boolean d -> d
    com.umeng.message.proguard.p c() -> a
    com.umeng.message.proguard.p d() -> b
    com.umeng.message.proguard.p$a e() -> c
    com.umeng.message.proguard.A f() -> d
    com.umeng.message.proguard.L b(com.umeng.message.proguard.p) -> a
    void h() -> f
    void a() -> e
com.umeng.message.proguard.M -> bf.n:
    int a -> a
    java.util.List b -> b
    java.util.Map c -> c
    boolean d -> d
    com.umeng.message.proguard.M$d e -> e
    com.umeng.message.proguard.M a(int) -> a
    void a() -> a
    boolean b() -> b
    int c() -> c
    java.util.Map$Entry c(int) -> b
    java.lang.Iterable e() -> d
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object a(java.lang.Comparable,java.lang.Object) -> a
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object d(int) -> c
    int a(java.lang.Comparable) -> a
    java.util.Set entrySet() -> entrySet
    void f() -> e
    java.util.SortedMap g() -> f
    void h() -> g
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void a(com.umeng.message.proguard.M) -> a
    java.util.List b(com.umeng.message.proguard.M) -> b
    java.lang.Object a(com.umeng.message.proguard.M,int) -> a
    java.util.Map c(com.umeng.message.proguard.M) -> c
com.umeng.message.proguard.M$1 -> bf.o:
    void a() -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.umeng.message.proguard.M$a -> bf.p:
    java.util.Iterator a -> a
    java.lang.Iterable b -> b
    java.lang.Iterable a() -> a
    java.util.Iterator b() -> b
com.umeng.message.proguard.M$a$1 -> bf.q:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.umeng.message.proguard.M$a$2 -> bf.r:
    java.util.Iterator iterator() -> iterator
com.umeng.message.proguard.M$b -> bf.s:
    java.lang.Comparable b -> b
    java.lang.Object c -> c
    com.umeng.message.proguard.M a -> a
    java.lang.Comparable a() -> a
    java.lang.Object getValue() -> getValue
    int a(com.umeng.message.proguard.M$b) -> a
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean a(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getKey() -> getKey
    int compareTo(java.lang.Object) -> compareTo
com.umeng.message.proguard.M$c -> bf.t:
    int b -> b
    boolean c -> c
    java.util.Iterator d -> d
    com.umeng.message.proguard.M a -> a
    boolean hasNext() -> hasNext
    java.util.Map$Entry a() -> a
    void remove() -> remove
    java.util.Iterator b() -> b
    java.lang.Object next() -> next
com.umeng.message.proguard.M$d -> bf.u:
    com.umeng.message.proguard.M a -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean a(java.util.Map$Entry) -> a
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean add(java.lang.Object) -> add
com.umeng.message.proguard.N -> bf.v:
    com.umeng.message.proguard.N$c a -> a
    com.umeng.message.proguard.N$c b -> b
    com.umeng.message.proguard.N$c c -> c
    void a(com.umeng.message.proguard.A,java.lang.Appendable) -> a
    void a(com.umeng.message.proguard.P,java.lang.Appendable) -> a
    java.lang.String b(com.umeng.message.proguard.A) -> a
    java.lang.String b(com.umeng.message.proguard.P) -> a
    void b(int,java.lang.Object,com.umeng.message.proguard.N$d) -> b
    java.lang.String b(int) -> b
    java.lang.String b(long) -> b
    java.lang.String a(com.umeng.message.proguard.g) -> a
    com.umeng.message.proguard.g a(java.lang.CharSequence) -> a
    java.lang.String a(java.lang.String) -> a
    boolean a(byte) -> a
    boolean b(byte) -> b
    int c(byte) -> c
    int c(java.lang.String) -> b
    int d(java.lang.String) -> c
    long e(java.lang.String) -> d
    long f(java.lang.String) -> e
    long a(java.lang.String,boolean,boolean) -> a
    java.lang.String a(int) -> a
    java.lang.String a(long) -> a
    void a(int,java.lang.Object,com.umeng.message.proguard.N$d) -> a
com.umeng.message.proguard.N$1 -> bf.w:
    int[] a -> a
com.umeng.message.proguard.N$a -> bf.x:
com.umeng.message.proguard.N$c -> bf.y:
    boolean a -> a
    boolean b -> b
    com.umeng.message.proguard.N$c a(boolean) -> a
    com.umeng.message.proguard.N$c b(boolean) -> b
    void a(com.umeng.message.proguard.A,com.umeng.message.proguard.N$d) -> a
    void a(com.umeng.message.proguard.k$f,java.lang.Object,com.umeng.message.proguard.N$d) -> a
    void b(com.umeng.message.proguard.k$f,java.lang.Object,com.umeng.message.proguard.N$d) -> b
    void c(com.umeng.message.proguard.k$f,java.lang.Object,com.umeng.message.proguard.N$d) -> c
    void a(com.umeng.message.proguard.P,com.umeng.message.proguard.N$d) -> a
    void a(int,int,java.util.List,com.umeng.message.proguard.N$d) -> a
    com.umeng.message.proguard.N$c a(com.umeng.message.proguard.N$c,boolean) -> a
    com.umeng.message.proguard.N$c b(com.umeng.message.proguard.N$c,boolean) -> b
    void a(com.umeng.message.proguard.N$c,com.umeng.message.proguard.A,com.umeng.message.proguard.N$d) -> a
    void a(com.umeng.message.proguard.N$c,com.umeng.message.proguard.P,com.umeng.message.proguard.N$d) -> a
com.umeng.message.proguard.N$d -> bf.z:
    java.lang.Appendable a -> a
    java.lang.StringBuilder b -> b
    boolean c -> c
    void a() -> a
    void b() -> b
    void a(java.lang.CharSequence) -> a
    void a(java.lang.CharSequence,int) -> a
com.umeng.message.proguard.O -> bf.aa:
    java.util.List b -> a
    com.umeng.message.proguard.s b() -> a
    java.lang.String a(java.util.List) -> a
com.umeng.message.proguard.P -> bf.ab:
    com.umeng.message.proguard.P a -> a
    java.util.Map b -> b
    com.umeng.message.proguard.P$c c -> c
    com.umeng.message.proguard.P$a b() -> a
    com.umeng.message.proguard.P$a a(com.umeng.message.proguard.P) -> a
    com.umeng.message.proguard.P c() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Map h() -> c
    void a(com.umeng.message.proguard.i) -> a
    java.lang.String toString() -> toString
    com.umeng.message.proguard.g f() -> c_
    int d() -> e
    void b(com.umeng.message.proguard.i) -> b
    int i() -> f
    boolean a() -> g
    com.umeng.message.proguard.P$a k() -> h
    com.umeng.message.proguard.P$c l() -> i
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.B m() -> k
    java.util.Map b(com.umeng.message.proguard.P) -> b
com.umeng.message.proguard.P$1 -> bf.ac:
com.umeng.message.proguard.P$a -> bf.ad:
    java.util.Map a -> a
    int b -> b
    com.umeng.message.proguard.P$b$a c -> c
    com.umeng.message.proguard.P$a k() -> f
    com.umeng.message.proguard.P$b$a b(int) -> b
    com.umeng.message.proguard.P b() -> a
    com.umeng.message.proguard.P c() -> b
    com.umeng.message.proguard.P$a d() -> c
    void l() -> h
    com.umeng.message.proguard.P$a a(com.umeng.message.proguard.P) -> a
    com.umeng.message.proguard.P$a a(int,com.umeng.message.proguard.P$b) -> a
    com.umeng.message.proguard.P$a a(int,int) -> a
    boolean a(int) -> a
    com.umeng.message.proguard.P$a b(int,com.umeng.message.proguard.P$b) -> b
    com.umeng.message.proguard.P$a a(com.umeng.message.proguard.h) -> a
    boolean a(int,com.umeng.message.proguard.h) -> a
    com.umeng.message.proguard.P$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    boolean a() -> g
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.P$a j() -> e
com.umeng.message.proguard.P$b -> bf.ae:
    com.umeng.message.proguard.P$b a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    com.umeng.message.proguard.P$b$a a() -> a
    java.util.List c() -> b
    java.util.List d() -> c
    java.util.List e() -> d
    java.util.List f() -> e
    java.util.List g() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object[] h() -> g
    void a(int,com.umeng.message.proguard.i) -> a
    int a(int) -> a
    void b(int,com.umeng.message.proguard.i) -> b
    int b(int) -> b
    java.util.List b(com.umeng.message.proguard.P$b) -> a
    java.util.List a(com.umeng.message.proguard.P$b,java.util.List) -> a
    java.util.List c(com.umeng.message.proguard.P$b) -> b
    java.util.List b(com.umeng.message.proguard.P$b,java.util.List) -> b
    java.util.List d(com.umeng.message.proguard.P$b) -> c
    java.util.List c(com.umeng.message.proguard.P$b,java.util.List) -> c
    java.util.List e(com.umeng.message.proguard.P$b) -> d
    java.util.List d(com.umeng.message.proguard.P$b,java.util.List) -> d
    java.util.List f(com.umeng.message.proguard.P$b) -> e
    java.util.List e(com.umeng.message.proguard.P$b,java.util.List) -> e
com.umeng.message.proguard.P$b$a -> bf.af:
    com.umeng.message.proguard.P$b a -> a
    com.umeng.message.proguard.P$b$a d() -> c
    com.umeng.message.proguard.P$b a() -> a
    com.umeng.message.proguard.P$b$a a(com.umeng.message.proguard.P$b) -> a
    com.umeng.message.proguard.P$b$a a(long) -> a
    com.umeng.message.proguard.P$b$a a(int) -> a
    com.umeng.message.proguard.P$b$a b(long) -> b
    com.umeng.message.proguard.P$b$a a(com.umeng.message.proguard.g) -> a
    com.umeng.message.proguard.P$b$a a(com.umeng.message.proguard.P) -> a
    com.umeng.message.proguard.P$b$a c() -> b
com.umeng.message.proguard.P$c -> bf.ag:
    com.umeng.message.proguard.P c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.Q -> bf.ah:
    com.umeng.message.proguard.v a -> a
    java.lang.String a(int) -> a
    int size() -> size
    com.umeng.message.proguard.g c(int) -> b
    void a(com.umeng.message.proguard.g) -> a
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.Iterator iterator() -> iterator
    java.util.List a() -> a
    java.lang.Object get(int) -> get
    com.umeng.message.proguard.v a(com.umeng.message.proguard.Q) -> a
com.umeng.message.proguard.Q$1 -> bf.ai:
    java.util.ListIterator a -> a
    int b -> b
    com.umeng.message.proguard.Q c -> c
    boolean hasNext() -> hasNext
    java.lang.String a() -> a
    boolean hasPrevious() -> hasPrevious
    java.lang.String b() -> b
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void remove() -> remove
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.lang.Object previous() -> previous
    java.lang.Object next() -> next
com.umeng.message.proguard.Q$2 -> bf.aj:
    java.util.Iterator a -> a
    com.umeng.message.proguard.Q b -> b
    boolean hasNext() -> hasNext
    java.lang.String a() -> a
    void remove() -> remove
    java.lang.Object next() -> next
com.umeng.message.proguard.R -> bf.ak:
    boolean a(byte[],int,int) -> a
    int a(int,byte[],int,int) -> a
    int b(byte[],int,int) -> b
    int c(byte[],int,int) -> c
    int a(int) -> a
    int a(int,int) -> a
    int a(int,int,int) -> a
    int d(byte[],int,int) -> d
com.umeng.message.proguard.S -> bf.al:
    int l -> a
    int m -> b
    int n -> c
    int o -> d
    int a(int) -> a
    int b(int) -> b
    int a(int,int) -> a
com.umeng.message.proguard.S$1 -> bf.am:
com.umeng.message.proguard.S$a -> bf.an:
    com.umeng.message.proguard.S$a a -> a
    com.umeng.message.proguard.S$a b -> b
    com.umeng.message.proguard.S$a c -> c
    com.umeng.message.proguard.S$a d -> d
    com.umeng.message.proguard.S$a e -> e
    com.umeng.message.proguard.S$a f -> f
    com.umeng.message.proguard.S$a g -> g
    com.umeng.message.proguard.S$a h -> h
    com.umeng.message.proguard.S$a i -> i
    com.umeng.message.proguard.S$a j -> j
    com.umeng.message.proguard.S$a k -> k
    com.umeng.message.proguard.S$a l -> l
    com.umeng.message.proguard.S$a m -> m
    com.umeng.message.proguard.S$a n -> n
    com.umeng.message.proguard.S$a o -> o
    com.umeng.message.proguard.S$a p -> p
    com.umeng.message.proguard.S$a q -> q
    com.umeng.message.proguard.S$a r -> r
    com.umeng.message.proguard.S$b s -> s
    int t -> t
    com.umeng.message.proguard.S$a[] u -> u
    com.umeng.message.proguard.S$a[] values() -> values
    com.umeng.message.proguard.S$a valueOf(java.lang.String) -> valueOf
    com.umeng.message.proguard.S$b a() -> a
    int b() -> b
    boolean c() -> c
com.umeng.message.proguard.S$a$1 -> bf.ao:
    boolean c() -> c
com.umeng.message.proguard.S$a$2 -> bf.ap:
    boolean c() -> c
com.umeng.message.proguard.S$a$3 -> bf.aq:
    boolean c() -> c
com.umeng.message.proguard.S$a$4 -> bf.ar:
    boolean c() -> c
com.umeng.message.proguard.S$b -> bf.as:
    com.umeng.message.proguard.S$b a -> a
    com.umeng.message.proguard.S$b b -> b
    com.umeng.message.proguard.S$b c -> c
    com.umeng.message.proguard.S$b d -> d
    com.umeng.message.proguard.S$b e -> e
    com.umeng.message.proguard.S$b f -> f
    com.umeng.message.proguard.S$b g -> g
    com.umeng.message.proguard.S$b h -> h
    com.umeng.message.proguard.S$b i -> i
    java.lang.Object j -> j
    com.umeng.message.proguard.S$b[] k -> k
    com.umeng.message.proguard.S$b[] values() -> values
    com.umeng.message.proguard.S$b valueOf(java.lang.String) -> valueOf
com.umeng.message.proguard.W -> bf.at:
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
    byte[] c(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    void a(java.lang.StringBuffer,byte) -> a
com.umeng.message.proguard.X -> bf.au:
    boolean g -> a
    byte[] a(java.lang.String,int) -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
    java.lang.String b(byte[],int) -> b
    byte[] c(byte[],int) -> c
    byte[] c(byte[],int,int,int) -> b
com.umeng.message.proguard.X$a -> bf.av:
    byte[] a -> a
    int b -> b
com.umeng.message.proguard.X$b -> bf.aw:
    int[] c -> c
    int[] d -> d
    int g -> e
    int h -> f
    int[] i -> g
    boolean a(byte[],int,int,boolean) -> a
com.umeng.message.proguard.X$c -> bf.ax:
    byte[] i -> h
    byte[] j -> i
    byte[] k -> j
    int d -> c
    int l -> k
    boolean e -> d
    boolean f -> e
    boolean g -> f
    byte[] m -> l
    boolean h -> g
    boolean a(byte[],int,int,boolean) -> a
com.umeng.message.proguard.Z -> bf.ay:
    byte[] a(int) -> a
com.umeng.message.proguard.a -> bf.az:
    int a -> a
    boolean a() -> g
    java.lang.String toString() -> toString
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int a(int,java.util.Map) -> a
    com.umeng.message.proguard.O e() -> f
    int a(com.umeng.message.proguard.r$a) -> a
    int a(java.util.List) -> a
com.umeng.message.proguard.a$1 -> bf.ba:
    int[] a -> a
com.umeng.message.proguard.a$a -> bf.bb:
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    void a(com.umeng.message.proguard.x$a,com.umeng.message.proguard.o,com.umeng.message.proguard.k$f,java.lang.Object) -> a
    void b(com.umeng.message.proguard.x$a,com.umeng.message.proguard.o,com.umeng.message.proguard.k$f,java.lang.Object) -> b
    boolean a(com.umeng.message.proguard.x$a,com.umeng.message.proguard.o,com.umeng.message.proguard.k$f) -> a
    com.umeng.message.proguard.x b(com.umeng.message.proguard.x$a,com.umeng.message.proguard.o,com.umeng.message.proguard.k$f) -> b
    void a(com.umeng.message.proguard.x$a,com.umeng.message.proguard.o,com.umeng.message.proguard.k$f,com.umeng.message.proguard.x$a) -> a
    boolean a(com.umeng.message.proguard.h,com.umeng.message.proguard.P$a,com.umeng.message.proguard.n,com.umeng.message.proguard.k$a,com.umeng.message.proguard.x$a,com.umeng.message.proguard.o,int) -> a
    void a(com.umeng.message.proguard.h,com.umeng.message.proguard.P$a,com.umeng.message.proguard.n,com.umeng.message.proguard.k$a,com.umeng.message.proguard.x$a,com.umeng.message.proguard.o) -> a
    void a(com.umeng.message.proguard.h,com.umeng.message.proguard.m$b,com.umeng.message.proguard.n,com.umeng.message.proguard.x$a,com.umeng.message.proguard.o) -> a
    void a(com.umeng.message.proguard.g,com.umeng.message.proguard.m$b,com.umeng.message.proguard.n,com.umeng.message.proguard.x$a,com.umeng.message.proguard.o) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.P) -> a
    com.umeng.message.proguard.O b(com.umeng.message.proguard.x) -> b
    java.util.List b(com.umeng.message.proguard.A) -> a
    void a(com.umeng.message.proguard.A,java.lang.String,java.util.List) -> a
    java.lang.String a(java.lang.String,com.umeng.message.proguard.k$f,int) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.x$a d(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
com.umeng.message.proguard.aB -> bf.bc:
    com.umeng.message.proguard.k$a a -> a
    com.umeng.message.proguard.p$g b -> b
    com.umeng.message.proguard.k$a c -> c
    com.umeng.message.proguard.p$g d -> d
    com.umeng.message.proguard.k$g e -> e
    com.umeng.message.proguard.k$g a() -> a
    com.umeng.message.proguard.k$a b() -> b
    com.umeng.message.proguard.p$g c() -> c
    com.umeng.message.proguard.k$a d() -> d
    com.umeng.message.proguard.p$g e() -> e
    com.umeng.message.proguard.k$g a(com.umeng.message.proguard.k$g) -> a
    com.umeng.message.proguard.k$a a(com.umeng.message.proguard.k$a) -> a
    com.umeng.message.proguard.p$g a(com.umeng.message.proguard.p$g) -> a
    com.umeng.message.proguard.k$a b(com.umeng.message.proguard.k$a) -> b
    com.umeng.message.proguard.p$g b(com.umeng.message.proguard.p$g) -> b
com.umeng.message.proguard.aB$1 -> bf.bd:
    com.umeng.message.proguard.m a(com.umeng.message.proguard.k$g) -> a
com.umeng.message.proguard.aB$a -> bf.be:
    com.umeng.message.proguard.aB$a e -> c
    com.umeng.message.proguard.P f -> d
    com.umeng.message.proguard.B a -> a
    int g -> e
    com.umeng.message.proguard.aB$a$d h -> f
    java.lang.Object i -> g
    com.umeng.message.proguard.aB$a$b j -> h
    byte k -> i
    int l -> j
    com.umeng.message.proguard.aB$a h() -> h
    com.umeng.message.proguard.aB$a k() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean o() -> m
    com.umeng.message.proguard.aB$a$d p() -> n
    boolean q() -> o
    java.lang.String r() -> p
    com.umeng.message.proguard.g s() -> q
    boolean t() -> r
    com.umeng.message.proguard.aB$a$b u() -> s
    void A() -> z
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.aB$a a(byte[]) -> a
    com.umeng.message.proguard.aB$a$a w() -> t
    com.umeng.message.proguard.aB$a$a x() -> u
    com.umeng.message.proguard.aB$a$a a(com.umeng.message.proguard.aB$a) -> a
    com.umeng.message.proguard.aB$a$a y() -> v
    com.umeng.message.proguard.aB$a$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    boolean z() -> y
    com.umeng.message.proguard.aB$a$d a(com.umeng.message.proguard.aB$a,com.umeng.message.proguard.aB$a$d) -> a
    java.lang.Object a(com.umeng.message.proguard.aB$a,java.lang.Object) -> a
    com.umeng.message.proguard.aB$a$b a(com.umeng.message.proguard.aB$a,com.umeng.message.proguard.aB$a$b) -> a
    int a(com.umeng.message.proguard.aB$a,int) -> a
    java.lang.Object b(com.umeng.message.proguard.aB$a) -> b
com.umeng.message.proguard.aB$a$1 -> bf.bf:
    com.umeng.message.proguard.aB$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.aB$a$a -> bf.bg:
    int a -> a
    com.umeng.message.proguard.aB$a$d b -> b
    java.lang.Object c -> c
    com.umeng.message.proguard.aB$a$b d -> d
    com.umeng.message.proguard.L e -> e
    com.umeng.message.proguard.p$g l() -> h
    void E() -> q
    com.umeng.message.proguard.aB$a$a F() -> r
    com.umeng.message.proguard.aB$a$a n() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.aB$a w() -> j
    com.umeng.message.proguard.aB$a x() -> k
    com.umeng.message.proguard.aB$a y() -> l
    com.umeng.message.proguard.aB$a$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.aB$a$a a(com.umeng.message.proguard.aB$a) -> a
    boolean a() -> g
    com.umeng.message.proguard.aB$a$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.aB$a$a a(com.umeng.message.proguard.aB$a$d) -> a
    com.umeng.message.proguard.aB$a$a b(com.umeng.message.proguard.aB$a$b) -> a
    com.umeng.message.proguard.L G() -> s
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.aB$a$a D() -> p
com.umeng.message.proguard.aB$a$b -> bf.bh:
    com.umeng.message.proguard.aB$a$b g -> c
    com.umeng.message.proguard.P h -> d
    com.umeng.message.proguard.B a -> a
    int i -> e
    int j -> f
    int k -> g
    java.lang.Object l -> h
    int n -> i
    java.lang.Object o -> j
    byte p -> k
    int q -> l
    com.umeng.message.proguard.aB$a$b h() -> h
    com.umeng.message.proguard.aB$a$b k() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean o() -> m
    int p() -> n
    boolean q() -> o
    int r() -> p
    boolean s() -> q
    com.umeng.message.proguard.g u() -> r
    boolean v() -> s
    int w() -> t
    boolean x() -> u
    com.umeng.message.proguard.g z() -> v
    void E() -> C
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.aB$a$b$a A() -> y
    com.umeng.message.proguard.aB$a$b$a B() -> z
    com.umeng.message.proguard.aB$a$b$a a(com.umeng.message.proguard.aB$a$b) -> a
    com.umeng.message.proguard.aB$a$b$a C() -> A
    com.umeng.message.proguard.aB$a$b$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    boolean D() -> B
    int a(com.umeng.message.proguard.aB$a$b,int) -> a
    int b(com.umeng.message.proguard.aB$a$b,int) -> b
    java.lang.Object a(com.umeng.message.proguard.aB$a$b,java.lang.Object) -> a
    int c(com.umeng.message.proguard.aB$a$b,int) -> c
    java.lang.Object b(com.umeng.message.proguard.aB$a$b,java.lang.Object) -> b
    int d(com.umeng.message.proguard.aB$a$b,int) -> d
    java.lang.Object b(com.umeng.message.proguard.aB$a$b) -> b
    java.lang.Object c(com.umeng.message.proguard.aB$a$b) -> c
com.umeng.message.proguard.aB$a$b$1 -> bf.bi:
    com.umeng.message.proguard.aB$a$b c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.aB$a$b$a -> bf.bj:
    int a -> a
    int b -> b
    int c -> c
    java.lang.Object d -> d
    int e -> e
    java.lang.Object f -> f
    com.umeng.message.proguard.p$g l() -> h
    void K() -> q
    com.umeng.message.proguard.aB$a$b$a L() -> r
    com.umeng.message.proguard.aB$a$b$a n() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.aB$a$b A() -> j
    com.umeng.message.proguard.aB$a$b B() -> k
    com.umeng.message.proguard.aB$a$b C() -> l
    com.umeng.message.proguard.aB$a$b$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.aB$a$b$a a(com.umeng.message.proguard.aB$a$b) -> a
    boolean a() -> g
    com.umeng.message.proguard.aB$a$b$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.aB$a$b$a a(int) -> a
    com.umeng.message.proguard.aB$a$b$a b(int) -> b
    com.umeng.message.proguard.aB$a$b$a c(int) -> c
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.aB$a$b$a I() -> p
com.umeng.message.proguard.aB$a$c -> bf.bk:
com.umeng.message.proguard.aB$a$d -> bf.bl:
    com.umeng.message.proguard.aB$a$d a -> a
    com.umeng.message.proguard.aB$a$d b -> b
    com.umeng.message.proguard.aB$a$d c -> c
    com.umeng.message.proguard.r$b g -> d
    com.umeng.message.proguard.aB$a$d[] h -> e
    int i -> f
    int j -> g
    com.umeng.message.proguard.aB$a$d[] k -> h
    com.umeng.message.proguard.aB$a$d[] values() -> values
    com.umeng.message.proguard.aB$a$d valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.umeng.message.proguard.aB$a$d a(int) -> a
com.umeng.message.proguard.aB$a$d$1 -> bf.bm:
com.umeng.message.proguard.aB$b -> bf.bn:
com.umeng.message.proguard.aC -> bf.bo:
    com.umeng.message.proguard.k$a a -> a
    com.umeng.message.proguard.p$g b -> b
    com.umeng.message.proguard.k$g c -> c
    com.umeng.message.proguard.k$g a() -> a
    com.umeng.message.proguard.k$a b() -> b
    com.umeng.message.proguard.p$g c() -> c
    com.umeng.message.proguard.k$g a(com.umeng.message.proguard.k$g) -> a
    com.umeng.message.proguard.k$a a(com.umeng.message.proguard.k$a) -> a
    com.umeng.message.proguard.p$g a(com.umeng.message.proguard.p$g) -> a
com.umeng.message.proguard.aC$1 -> bf.bp:
    com.umeng.message.proguard.m a(com.umeng.message.proguard.k$g) -> a
com.umeng.message.proguard.aC$a -> bf.bq:
    com.umeng.message.proguard.aC$a j -> c
    com.umeng.message.proguard.P k -> d
    com.umeng.message.proguard.B a -> a
    int l -> e
    java.lang.Object n -> f
    java.lang.Object o -> g
    int p -> h
    int q -> i
    java.lang.Object r -> j
    java.lang.Object s -> k
    com.umeng.message.proguard.aC$a$b t -> l
    com.umeng.message.proguard.g u -> m
    byte v -> n
    int w -> o
    com.umeng.message.proguard.aC$a h() -> h
    com.umeng.message.proguard.aC$a k() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean o() -> m
    com.umeng.message.proguard.g q() -> n
    boolean r() -> o
    com.umeng.message.proguard.g t() -> p
    boolean u() -> q
    int v() -> r
    boolean w() -> s
    int x() -> t
    boolean y() -> u
    com.umeng.message.proguard.g A() -> v
    boolean B() -> y
    com.umeng.message.proguard.g D() -> z
    boolean E() -> A
    com.umeng.message.proguard.aC$a$b F() -> B
    boolean G() -> C
    com.umeng.message.proguard.g H() -> D
    void U() -> J
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.aC$a$a K() -> E
    com.umeng.message.proguard.aC$a$a L() -> F
    com.umeng.message.proguard.aC$a$a a(com.umeng.message.proguard.aC$a) -> a
    com.umeng.message.proguard.aC$a$a S() -> G
    com.umeng.message.proguard.aC$a$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    boolean T() -> H
    java.lang.Object a(com.umeng.message.proguard.aC$a,java.lang.Object) -> a
    java.lang.Object b(com.umeng.message.proguard.aC$a,java.lang.Object) -> b
    int a(com.umeng.message.proguard.aC$a,int) -> a
    int b(com.umeng.message.proguard.aC$a,int) -> b
    java.lang.Object c(com.umeng.message.proguard.aC$a,java.lang.Object) -> c
    java.lang.Object d(com.umeng.message.proguard.aC$a,java.lang.Object) -> d
    com.umeng.message.proguard.aC$a$b a(com.umeng.message.proguard.aC$a,com.umeng.message.proguard.aC$a$b) -> a
    com.umeng.message.proguard.g a(com.umeng.message.proguard.aC$a,com.umeng.message.proguard.g) -> a
    int c(com.umeng.message.proguard.aC$a,int) -> c
    java.lang.Object b(com.umeng.message.proguard.aC$a) -> b
    java.lang.Object c(com.umeng.message.proguard.aC$a) -> c
    java.lang.Object d(com.umeng.message.proguard.aC$a) -> d
    java.lang.Object e(com.umeng.message.proguard.aC$a) -> e
com.umeng.message.proguard.aC$a$1 -> bf.br:
    com.umeng.message.proguard.aC$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.aC$a$a -> bf.bs:
    int a -> a
    java.lang.Object b -> b
    java.lang.Object c -> c
    int d -> d
    int e -> e
    java.lang.Object f -> f
    java.lang.Object g -> g
    com.umeng.message.proguard.aC$a$b h -> h
    com.umeng.message.proguard.g i -> i
    com.umeng.message.proguard.p$g l() -> h
    void X() -> q
    com.umeng.message.proguard.aC$a$a Y() -> r
    com.umeng.message.proguard.aC$a$a n() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.aC$a I() -> j
    com.umeng.message.proguard.aC$a K() -> k
    com.umeng.message.proguard.aC$a L() -> l
    com.umeng.message.proguard.aC$a$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.aC$a$a a(com.umeng.message.proguard.aC$a) -> a
    boolean a() -> g
    com.umeng.message.proguard.aC$a$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.aC$a$a a(java.lang.String) -> a
    com.umeng.message.proguard.aC$a$a b(java.lang.String) -> b
    com.umeng.message.proguard.aC$a$a a(int) -> a
    com.umeng.message.proguard.aC$a$a b(int) -> b
    com.umeng.message.proguard.aC$a$a c(java.lang.String) -> c
    com.umeng.message.proguard.aC$a$a d(java.lang.String) -> d
    com.umeng.message.proguard.aC$a$a a(com.umeng.message.proguard.aC$a$b) -> a
    com.umeng.message.proguard.aC$a$a i(com.umeng.message.proguard.g) -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.aC$a$a W() -> p
com.umeng.message.proguard.aC$a$b -> bf.bt:
    com.umeng.message.proguard.aC$a$b a -> a
    com.umeng.message.proguard.aC$a$b b -> b
    com.umeng.message.proguard.aC$a$b c -> c
    com.umeng.message.proguard.r$b g -> d
    com.umeng.message.proguard.aC$a$b[] h -> e
    int i -> f
    int j -> g
    com.umeng.message.proguard.aC$a$b[] k -> h
    com.umeng.message.proguard.aC$a$b[] values() -> values
    com.umeng.message.proguard.aC$a$b valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.umeng.message.proguard.aC$a$b a(int) -> a
com.umeng.message.proguard.aC$a$b$1 -> bf.bu:
com.umeng.message.proguard.aC$b -> bf.bv:
com.umeng.message.proguard.aD -> bf.bw:
    java.lang.String[] H -> a
    com.umeng.message.proguard.aD$c K -> b
    java.net.HttpURLConnection L -> c
    java.net.URL M -> d
    java.lang.String N -> e
    java.lang.String U -> f
    int V -> g
    java.net.Proxy T() -> d
    java.net.HttpURLConnection U() -> e
    java.lang.String toString() -> toString
    java.net.HttpURLConnection a() -> a
    java.net.URL P() -> b
    java.lang.String Q() -> c
com.umeng.message.proguard.aD$c -> bf.bx:
    com.umeng.message.proguard.aD$c a -> a
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.net.HttpURLConnection a(java.net.URL,java.net.Proxy) -> a
com.umeng.message.proguard.aD$c$1 -> bf.by:
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.net.HttpURLConnection a(java.net.URL,java.net.Proxy) -> a
com.umeng.message.proguard.aD$e -> bf.bz:
    java.io.IOException a() -> a
    java.lang.Throwable getCause() -> getCause
com.umeng.message.proguard.aE -> bf.ca:
    int d -> a
    java.lang.String e -> b
    java.lang.String f -> c
    int g -> d
    android.content.Context h -> e
    java.lang.String i -> f
    com.umeng.message.proguard.aB$a a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
    java.lang.String a(android.content.Context) -> a
    com.umeng.message.proguard.aB$a a(byte[]) -> a
    byte[] a(org.json.JSONObject) -> a
com.umeng.message.proguard.aI -> bf.cb:
    void a(android.content.Context,java.lang.String,long,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> a
    long c(android.content.Context) -> b
    java.lang.String d(android.content.Context) -> c
    android.content.SharedPreferences f(android.content.Context) -> d
    android.content.SharedPreferences g(android.content.Context) -> e
    android.content.SharedPreferences x(android.content.Context) -> s
    java.lang.String h(android.content.Context) -> f
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,boolean) -> a
    void i(android.content.Context) -> g
    void j(android.content.Context) -> h
    int k(android.content.Context) -> i
    void a(android.content.Context,int) -> a
    boolean m(android.content.Context) -> j
    java.lang.String n(android.content.Context) -> k
    java.lang.String o(android.content.Context) -> l
    java.lang.String p(android.content.Context) -> m
    java.lang.String q(android.content.Context) -> n
    void b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void s(android.content.Context) -> o
    void t(android.content.Context) -> p
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    boolean u(android.content.Context) -> q
    boolean b(android.content.Context,boolean) -> b
    void a(android.content.Context,boolean,long) -> a
    boolean w(android.content.Context) -> r
    void a(android.content.Context,long,int) -> a
com.umeng.message.proguard.aJ -> bf.cc:
    com.umeng.message.proguard.aK a -> a
    void a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> b
com.umeng.message.proguard.aK -> bf.cd:
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> b
com.umeng.message.proguard.aL -> bf.ce:
    void start(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> start
    void stop(android.content.Context) -> stop
    void onCaughException(java.lang.Throwable) -> onCaughException
    void commitEvent(int,java.lang.Object,java.lang.Object) -> commitEvent
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object) -> commitEvent
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String[]) -> commitEvent
    java.lang.String getUtdId(android.content.Context) -> getUtdId
com.umeng.message.proguard.aM -> bf.cf:
    com.umeng.message.proguard.aM a -> a
    com.umeng.message.proguard.aL b -> b
    com.umeng.message.proguard.aM a() -> a
    com.umeng.message.proguard.aL a(android.content.Context) -> a
com.umeng.message.proguard.aN -> bf.cg:
    com.umeng.message.proguard.aL v -> a
    boolean w -> b
    void a(android.content.Context) -> a
    void a(java.lang.Throwable) -> a
    void b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,long) -> a
    void d(android.content.Context) -> d
    void f(android.content.Context) -> e
    void b(android.content.Context,java.lang.String) -> b
    void c(android.content.Context,java.lang.String) -> c
    void d(android.content.Context,java.lang.String) -> d
    void e(android.content.Context,java.lang.String) -> e
    void b(android.content.Context,java.lang.String,java.lang.String) -> a
    void g(android.content.Context,java.lang.String) -> f
    void h(android.content.Context,java.lang.String) -> g
    void a(android.content.Context,long,long) -> a
    void a(android.content.Context,long,java.lang.String) -> a
    void a(android.content.Context,long,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,int,java.lang.String) -> a
    void g(android.content.Context) -> f
    void i(android.content.Context,java.lang.String) -> h
com.umeng.message.proguard.aO -> bf.ch:
    boolean c -> a
    boolean d -> b
    java.util.logging.Logger e -> c
    boolean a() -> a
    void b() -> b
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    java.lang.String b(java.lang.Throwable) -> b
    java.lang.String c() -> c
    java.lang.String a(int) -> a
    java.lang.String a(long) -> a
    java.lang.String a(java.lang.Throwable) -> a
com.umeng.message.proguard.aO$1 -> bf.ci:
com.umeng.message.proguard.aO$a -> bf.cj:
    java.lang.String a -> a
    void a(java.util.logging.LogRecord) -> a
    java.lang.String format(java.util.logging.LogRecord) -> format
com.umeng.message.proguard.aP -> bf.ck:
    com.umeng.message.proguard.aR f -> e
    java.lang.String g -> f
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void b(java.lang.String) -> b
    java.lang.String b() -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    java.lang.String d() -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void e() -> e
    boolean f() -> f
    void g() -> g
com.umeng.message.proguard.aR -> bf.cl:
    void onHandleMessage(java.lang.String) -> onHandleMessage
    void onHandleError(java.lang.String) -> onHandleError
com.umeng.message.proguard.aS -> bf.cm:
    long n -> e
    long o -> f
    long p -> g
    long q -> h
    long r -> i
    long s -> j
    long t -> k
    long u -> l
    long v -> m
    long w -> n
    long x -> o
    long y -> p
    long z -> q
    long A -> r
    boolean B -> s
    com.umeng.message.proguard.aS$b C -> t
    com.umeng.message.proguard.aS$a D -> u
    org.android.agoo.net.mtop.MtopHttpChunked E -> v
    java.lang.String F -> w
    com.umeng.message.proguard.aT G -> x
    org.android.agoo.helper.a H -> y
    int I -> z
    android.app.AlarmManager J -> A
    java.lang.String K -> B
    android.content.BroadcastReceiver P -> C
    void h() -> h
    void i() -> i
    void j() -> j
    void e() -> e
    void a(long,java.lang.String) -> a
    void b(long,java.lang.String) -> b
    void g(java.lang.String) -> g
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void h(java.lang.String) -> h
    void k() -> k
    long l() -> l
    void m() -> m
    long n() -> n
    void a(boolean) -> a
    void a(char[],long) -> a
    void a(int,java.util.Map) -> a
    boolean a(java.util.Map) -> a
    void o() -> o
    void p() -> p
    void q() -> q
    void g() -> g
    void c(long,java.lang.String) -> c
    void d(long,java.lang.String) -> d
    boolean f() -> f
    org.android.agoo.net.mtop.MtopHttpChunked a(com.umeng.message.proguard.aS) -> a
    long b(com.umeng.message.proguard.aS) -> b
    void a(com.umeng.message.proguard.aS,long,java.lang.String) -> a
    long c(com.umeng.message.proguard.aS) -> c
    int a(com.umeng.message.proguard.aS,int) -> a
    int d(com.umeng.message.proguard.aS) -> d
    void e(com.umeng.message.proguard.aS) -> e
    long a(com.umeng.message.proguard.aS,long) -> a
    void b(com.umeng.message.proguard.aS,long,java.lang.String) -> b
    void a(com.umeng.message.proguard.aS,java.lang.String) -> a
    void b(com.umeng.message.proguard.aS,java.lang.String) -> b
    void c(com.umeng.message.proguard.aS,long,java.lang.String) -> c
    void f(com.umeng.message.proguard.aS) -> f
    void a(com.umeng.message.proguard.aS,int,java.util.Map) -> a
    boolean g(com.umeng.message.proguard.aS) -> g
    void a(com.umeng.message.proguard.aS,char[],long) -> a
    long h(com.umeng.message.proguard.aS) -> h
    void i(com.umeng.message.proguard.aS) -> i
    long j(com.umeng.message.proguard.aS) -> j
    void d(com.umeng.message.proguard.aS,long,java.lang.String) -> d
    long k(com.umeng.message.proguard.aS) -> k
    java.lang.String l(com.umeng.message.proguard.aS) -> l
    long m(com.umeng.message.proguard.aS) -> m
    android.app.AlarmManager n(com.umeng.message.proguard.aS) -> n
    void a(com.umeng.message.proguard.aS,boolean) -> a
com.umeng.message.proguard.aS$1 -> bf.cn:
    int b -> b
    com.umeng.message.proguard.aS a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.umeng.message.proguard.aS$2 -> bf.co:
    long b -> b
    com.umeng.message.proguard.aS a -> a
    void a(int,java.util.Map) -> a
    void a() -> a
    void a(int,java.util.Map,java.lang.Throwable) -> a
    void a(char[]) -> a
    void a(java.lang.String) -> a
com.umeng.message.proguard.aS$3 -> bf.cp:
    com.umeng.message.proguard.aS a -> a
    void a(java.lang.String) -> a
    void a(int,java.lang.String) -> a
com.umeng.message.proguard.aS$a -> bf.cq:
    android.content.IntentFilter c -> b
    android.app.PendingIntent d -> c
    android.content.Intent e -> d
    boolean f -> e
    long g -> f
    long h -> g
    com.umeng.message.proguard.aS a -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(long,long,long) -> a
    void b() -> b
    boolean a(com.umeng.message.proguard.aS$a) -> a
    long b(com.umeng.message.proguard.aS$a) -> b
    long c(com.umeng.message.proguard.aS$a) -> c
com.umeng.message.proguard.aS$a$1 -> bf.cr:
    android.content.Intent a -> a
    android.content.Context b -> b
    com.umeng.message.proguard.aS$a c -> c
    void run() -> run
    void a(long) -> a
com.umeng.message.proguard.aS$b -> bf.cs:
    android.content.IntentFilter j -> b
    android.app.PendingIntent k -> c
    android.content.Intent l -> d
    android.os.Handler m -> e
    android.os.HandlerThread n -> f
    boolean o -> g
    boolean p -> h
    long q -> i
    java.lang.String r -> j
    java.util.concurrent.locks.Lock s -> k
    com.umeng.message.proguard.aS a -> a
    void b() -> b
    void c() -> c
    void d() -> d
    boolean a(int,long) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void a(long) -> a
    void a(long,java.lang.String,boolean) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a() -> a
    void a(com.umeng.message.proguard.aS$b) -> a
com.umeng.message.proguard.aT -> bf.ct:
    boolean a -> a
    java.lang.String b -> b
    long a() -> a
    long b() -> b
    long c() -> c
    long d() -> d
    long e() -> e
    long f() -> f
    long g() -> g
    long h() -> h
    long a(long) -> a
    long i() -> i
    long j() -> j
    long k() -> k
    long l() -> l
    long m() -> m
com.umeng.message.proguard.aU -> bf.cu:
    java.lang.String A -> a
    int B -> b
    java.lang.String C -> c
    boolean D -> d
    java.lang.String E -> e
    void a(android.content.Context,android.net.NetworkInfo) -> a
    void b(android.content.Context) -> b
    boolean a(android.content.Context) -> a
    void b(java.lang.String) -> a
    boolean a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    int e() -> e
com.umeng.message.proguard.aW -> bf.cv:
    int g -> a
    int h -> b
    org.apache.http.impl.client.DefaultHttpClient i -> c
    org.apache.http.protocol.HttpContext j -> d
    java.util.Map k -> e
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> a
    org.apache.http.protocol.HttpContext getHttpContext() -> b
    java.lang.String a(java.lang.String,com.umeng.message.proguard.bb) -> a
    java.util.Map a(com.umeng.message.proguard.aW) -> a
com.umeng.message.proguard.aW$1 -> bf.cw:
    com.umeng.message.proguard.aW a -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.umeng.message.proguard.aW$2 -> bf.cx:
    com.umeng.message.proguard.aW a -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.umeng.message.proguard.aW$a -> bf.cy:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.umeng.message.proguard.aX -> bf.cz:
    java.util.concurrent.ThreadPoolExecutor b -> a
    java.util.Map c -> b
    void get(android.content.Context,java.lang.String,com.umeng.message.proguard.bb,com.umeng.message.proguard.aZ) -> a
    void get(android.content.Context,org.apache.http.HttpHost,java.lang.String,org.apache.http.Header[],com.umeng.message.proguard.bb,com.umeng.message.proguard.aZ) -> a
    void a(android.content.Context,org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.umeng.message.proguard.aZ) -> a
    org.apache.http.protocol.HttpContext getHttpContext() -> b
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> a
com.umeng.message.proguard.aY -> bf.da:
    org.apache.http.impl.client.AbstractHttpClient b -> a
    org.apache.http.protocol.HttpContext c -> b
    org.apache.http.client.methods.HttpUriRequest d -> c
    com.umeng.message.proguard.aZ e -> d
    boolean f -> e
    int g -> f
    android.content.Context h -> g
    void run() -> run
    void a() -> a
    void b() -> b
com.umeng.message.proguard.aZ -> bf.db:
    android.os.Handler a -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onFailure(java.lang.Throwable) -> onFailure
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void a(java.lang.String) -> a
    void a(java.lang.Throwable,java.lang.String) -> a
    void a(java.lang.Throwable,byte[]) -> a
    void a() -> a
    void b() -> b
    void b(java.lang.String) -> b
    void b(java.lang.Throwable,java.lang.String) -> b
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    android.os.Message a(int,java.lang.Object) -> a
    void a(org.apache.http.HttpResponse) -> a
com.umeng.message.proguard.aZ$1 -> bf.dc:
    com.umeng.message.proguard.aZ a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.message.proguard.ab -> bf.dd:
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.umeng.message.proguard.ad -> bf.de:
    boolean a(java.lang.String) -> a
    int b(java.lang.String) -> b
com.umeng.message.proguard.ag -> bf.df:
    java.lang.String[] a -> a
    char[] c -> b
    int d -> c
    java.io.Writer e -> d
    java.io.OutputStream f -> e
    java.nio.charset.CharsetEncoder g -> f
    java.nio.ByteBuffer h -> g
    boolean i -> h
    void a(char) -> a
    void a(java.lang.String,int,int) -> a
    void a(char[],int,int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(char[],int,int) -> b
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void endDocument() -> endDocument
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    void entityRef(java.lang.String) -> entityRef
    void a() -> a
    void flush() -> flush
    int getDepth() -> getDepth
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void processingInstruction(java.lang.String) -> processingInstruction
    void setFeature(java.lang.String,boolean) -> setFeature
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
com.umeng.message.proguard.ah -> bf.dg:
    boolean a() -> a
    java.util.Map b() -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    long a(java.lang.String,long) -> a
    com.umeng.message.proguard.ah$a c() -> c
com.umeng.message.proguard.ah$a -> bf.dh:
    com.umeng.message.proguard.ah$a a(java.lang.String,java.lang.String) -> a
    com.umeng.message.proguard.ah$a a(java.lang.String,int) -> a
    com.umeng.message.proguard.ah$a a(java.lang.String,long) -> a
    com.umeng.message.proguard.ah$a a(java.lang.String,float) -> a
    com.umeng.message.proguard.ah$a a(java.lang.String,boolean) -> a
    com.umeng.message.proguard.ah$a a() -> a
    boolean b() -> b
com.umeng.message.proguard.ah$b -> bf.di:
    void a(com.umeng.message.proguard.ah,java.lang.String) -> a
com.umeng.message.proguard.ai -> bf.dj:
    java.lang.String c -> a
    java.lang.String d -> b
    boolean e -> c
    boolean f -> d
    boolean g -> e
    android.content.SharedPreferences h -> f
    com.umeng.message.proguard.ah i -> g
    android.content.SharedPreferences$Editor j -> h
    com.umeng.message.proguard.ah$a k -> i
    android.content.Context l -> j
    com.umeng.message.proguard.aj m -> k
    boolean n -> l
    com.umeng.message.proguard.aj g(java.lang.String) -> b
    java.io.File h(java.lang.String) -> c
    void a(android.content.SharedPreferences,com.umeng.message.proguard.ah) -> a
    void a(com.umeng.message.proguard.ah,android.content.SharedPreferences) -> a
    boolean e() -> b
    void f() -> c
    void a(java.lang.String,long) -> a
    void a(java.lang.String,java.lang.String) -> a
    boolean c() -> a
    java.lang.String b(java.lang.String) -> a
com.umeng.message.proguard.aj -> bf.dk:
    java.lang.Object d -> a
    java.io.File e -> b
    java.lang.Object f -> c
    java.util.HashMap g -> d
    java.io.File a(java.io.File,java.lang.String) -> a
    java.io.File b() -> b
    java.io.File a(java.lang.String) -> a
    com.umeng.message.proguard.ah a(java.lang.String,int) -> a
    java.io.File b(java.io.File) -> b
    java.io.File a(java.io.File) -> a
    java.lang.Object a() -> a
com.umeng.message.proguard.aj$a -> bf.dl:
    java.io.File a -> a
    java.io.File b -> b
    int c -> c
    java.util.Map d -> d
    boolean e -> e
    java.lang.Object f -> f
    java.util.WeakHashMap g -> g
    boolean a() -> a
    void a(boolean) -> a
    boolean d() -> d
    void a(java.util.Map) -> a
    java.util.Map b() -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    long a(java.lang.String,long) -> a
    com.umeng.message.proguard.ah$a c() -> c
    java.io.FileOutputStream a(java.io.File) -> a
    boolean e() -> e
    java.util.WeakHashMap a(com.umeng.message.proguard.aj$a) -> a
    java.util.Map b(com.umeng.message.proguard.aj$a) -> b
    boolean c(com.umeng.message.proguard.aj$a) -> c
com.umeng.message.proguard.aj$a$a -> bf.dm:
    java.util.Map b -> b
    boolean c -> c
    com.umeng.message.proguard.aj$a a -> a
    com.umeng.message.proguard.ah$a a(java.lang.String,java.lang.String) -> a
    com.umeng.message.proguard.ah$a a(java.lang.String,int) -> a
    com.umeng.message.proguard.ah$a a(java.lang.String,long) -> a
    com.umeng.message.proguard.ah$a a(java.lang.String,float) -> a
    com.umeng.message.proguard.ah$a a(java.lang.String,boolean) -> a
    com.umeng.message.proguard.ah$a a() -> a
    boolean b() -> b
com.umeng.message.proguard.ak -> bf.dn:
    void a(java.util.Map,java.io.OutputStream) -> a
    void a(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(int[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    java.util.HashMap a(java.io.InputStream) -> a
    java.util.HashMap a(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList b(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> b
    int[] c(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> c
    java.lang.Object a(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> a
    java.lang.Object b(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> b
com.umeng.message.proguard.al -> bf.do:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    long e -> e
    long f -> f
    void a(long) -> a
    long b() -> a
    void b(long) -> b
    java.lang.String c() -> b
    void a(java.lang.String) -> a
    java.lang.String d() -> c
    void b(java.lang.String) -> b
    java.lang.String e() -> d
    void c(java.lang.String) -> c
    java.lang.String f() -> e
    void d(java.lang.String) -> d
com.umeng.message.proguard.am -> bf.dp:
    com.umeng.message.proguard.al d -> c
    java.lang.String a -> a
    java.lang.Object b -> b
    long a(com.umeng.message.proguard.al) -> a
    com.umeng.message.proguard.al b(android.content.Context) -> b
    com.umeng.message.proguard.al a(android.content.Context) -> a
com.umeng.message.proguard.an -> bf.dq:
    java.lang.String a(android.content.Context) -> a
com.umeng.message.proguard.ao -> bf.dr:
    android.content.Context d -> a
    java.lang.Object e -> b
    com.umeng.message.proguard.ao f -> c
    java.lang.String g -> d
    com.umeng.message.proguard.ap h -> e
    java.lang.String i -> f
    java.lang.String j -> g
    com.umeng.message.proguard.ai k -> h
    com.umeng.message.proguard.ai n -> i
    java.lang.String o -> j
    java.util.regex.Pattern q -> k
    com.umeng.message.proguard.ao a(android.content.Context) -> a
    long a(com.umeng.message.proguard.al) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    java.lang.String b() -> b
    boolean f(java.lang.String) -> f
    java.lang.String a() -> a
    byte[] c() -> c
    java.lang.String a(byte[]) -> a
com.umeng.message.proguard.ap -> bf.ds:
    java.lang.String a -> a
    java.util.Random b -> b
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.umeng.message.proguard.aq -> bf.dt:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.umeng.message.proguard.ar -> bf.du:
    java.lang.IllegalStateException a(java.lang.String,java.io.UnsupportedEncodingException) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    java.lang.String f(byte[]) -> a
com.umeng.message.proguard.as -> bf.dv:
    byte[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String[]) -> a
com.umeng.message.proguard.at -> bf.dw:
    byte[] a -> a
    byte[] p -> i
    byte[] q -> j
    byte[] r -> k
    byte[] t -> l
    byte[] u -> m
    byte[] v -> n
    int w -> o
    int x -> p
    int y -> q
    void a(byte[],int,int) -> a
    java.lang.String d(byte[]) -> a
    byte[] a(byte[],boolean) -> a
    byte[] a(byte[],boolean,boolean) -> a
    byte[] a(byte[],boolean,boolean,int) -> a
    boolean b(byte) -> a
com.umeng.message.proguard.au -> bf.dx:
    byte f -> b
    int n -> a
    int o -> i
    int g -> c
    int p -> j
    byte[] h -> d
    int i -> e
    int q -> k
    boolean j -> f
    int k -> g
    int l -> h
    int c() -> a
    int d() -> b
    void a() -> c
    void a(int) -> a
    int c(byte[],int,int) -> b
    void e() -> d
    byte[] l(byte[]) -> b
    void a(byte[],int,int) -> a
    boolean b(byte) -> a
    boolean n(byte[]) -> c
    long o(byte[]) -> d
com.umeng.message.proguard.ax -> bf.dy:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    boolean d(java.lang.String) -> b
    byte[] a(java.io.InputStream) -> a
    void b(java.io.InputStream) -> b
com.umeng.message.proguard.az -> bf.dz:
    float a -> a
    int a(float) -> a
com.umeng.message.proguard.b -> bf.ea:
    com.umeng.message.proguard.g f() -> c_
    byte[] g() -> I
    com.umeng.message.proguard.O e() -> f
com.umeng.message.proguard.b$a -> bf.eb:
    com.umeng.message.proguard.b$a f() -> f
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> b
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
com.umeng.message.proguard.ba -> bf.ec:
    java.lang.String[] a -> a
    void a(byte[]) -> a
    void b(java.lang.Throwable,byte[]) -> b
    void b(byte[]) -> b
    void a(java.lang.Throwable,byte[]) -> a
    void c(byte[]) -> c
    void c(java.lang.Throwable,byte[]) -> c
    void a(android.os.Message) -> a
    void a(org.apache.http.HttpResponse) -> a
com.umeng.message.proguard.bb -> bf.ed:
    java.lang.String b -> b
    java.util.concurrent.ConcurrentHashMap a -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String toString() -> toString
    void d() -> c
    java.util.List b() -> a
    java.lang.String c() -> b
com.umeng.message.proguard.bc -> bf.ee:
    java.util.HashSet b -> a
    java.util.HashSet c -> b
    int d -> c
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.umeng.message.proguard.bd -> bf.ef:
    com.umeng.message.proguard.bd$a get(android.content.Context,java.lang.String,com.umeng.message.proguard.bb) -> a
    com.umeng.message.proguard.bd$a get(android.content.Context,org.apache.http.HttpHost,java.lang.String,com.umeng.message.proguard.bb) -> a
    org.apache.http.protocol.HttpContext getHttpContext() -> b
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> a
com.umeng.message.proguard.bd$a -> bf.eg:
    int a -> a
    java.lang.String b -> b
com.umeng.message.proguard.be -> bf.eh:
    java.util.concurrent.ThreadPoolExecutor p -> g
    com.umeng.message.proguard.bh q -> h
    java.util.concurrent.Future r -> i
    java.util.concurrent.Future s -> j
    java.lang.String t -> k
    int u -> l
    com.umeng.message.proguard.bf a -> a
    java.io.InputStream b -> b
    int c -> c
    boolean d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    int v -> m
    java.util.concurrent.atomic.AtomicBoolean w -> n
    char[] x -> o
    void callError(boolean) -> a
    boolean hasCallError() -> a
    void a() -> b
    void l() -> o
    int b() -> c
    void addHeader(java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void connect(android.content.Context,java.lang.String,long,com.umeng.message.proguard.bh) -> a
    void disconnect(int) -> a
    com.umeng.message.proguard.bf readyState() -> d
    void close() -> e
    void a(java.lang.String) -> a
    void c() -> f
    void d() -> g
    void e() -> h
    void f() -> i
    void g() -> j
    void a(char[]) -> a
    void b(java.lang.String) -> b
    void a(java.util.Map) -> a
    boolean m() -> p
    void h() -> k
    void a(int,java.util.Map) -> a
    void a(int,java.lang.Throwable) -> a
    java.lang.String i() -> l
    int j() -> m
    boolean k() -> n
    void a(com.umeng.message.proguard.be) -> a
com.umeng.message.proguard.be$1 -> bf.ei:
    java.lang.String a -> a
    com.umeng.message.proguard.be b -> b
    void run() -> run
com.umeng.message.proguard.be$2 -> bf.ej:
    long a -> a
    java.lang.String b -> b
    com.umeng.message.proguard.be c -> c
    void run() -> run
com.umeng.message.proguard.be$3 -> bf.ek:
    int a -> a
    com.umeng.message.proguard.be b -> b
    void run() -> run
com.umeng.message.proguard.be$4 -> bf.el:
    com.umeng.message.proguard.be a -> a
    void run() -> run
com.umeng.message.proguard.bf -> bf.em:
    com.umeng.message.proguard.bf a -> a
    com.umeng.message.proguard.bf b -> b
    com.umeng.message.proguard.bf c -> c
    com.umeng.message.proguard.bf d -> d
    com.umeng.message.proguard.bf[] e -> e
    com.umeng.message.proguard.bf[] values() -> values
    com.umeng.message.proguard.bf valueOf(java.lang.String) -> valueOf
com.umeng.message.proguard.bg -> bf.en:
    java.net.HttpURLConnection m -> g
    void a(java.lang.String) -> a
    java.util.Map a(java.net.HttpURLConnection) -> a
    java.lang.String a(java.util.List) -> a
    void b(java.net.HttpURLConnection) -> b
    void d() -> g
    void c() -> f
    void addHeader(java.lang.String,java.lang.String) -> a
    boolean hasCallError() -> a
    void callError(boolean) -> a
com.umeng.message.proguard.bh -> bf.eo:
    void a(int,java.util.Map) -> a
    void a() -> a
    void a(int,java.util.Map,java.lang.Throwable) -> a
    void a(char[]) -> a
    void a(java.lang.String) -> a
com.umeng.message.proguard.bj -> bf.ep:
    byte[] a() -> a
com.umeng.message.proguard.bl -> bf.eq:
    byte[] a() -> a
com.umeng.message.proguard.bn -> bf.er:
    byte[] a() -> a
com.umeng.message.proguard.bp -> bf.es:
    java.lang.String a(android.content.Context) -> a
    int b(android.content.Context) -> b
com.umeng.message.proguard.bq -> bf.et:
    byte[] n -> a
    byte[] o -> b
    byte[] p -> c
    byte[] q -> d
    byte[] r -> e
    byte[] s -> f
    byte[] b(int) -> a
    int a(byte[],int,byte[],int,int) -> a
    byte[] b(byte[],int,int,int) -> a
    byte[] a(java.lang.String,int) -> a
com.umeng.message.proguard.br -> bf.eu:
    java.lang.String a -> a
    java.lang.String f -> b
    java.lang.String g -> c
    void a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.umeng.message.proguard.br$1 -> bf.ev:
    android.content.Context a -> a
    void run() -> run
com.umeng.message.proguard.bs -> bf.ew:
    java.lang.String a(long) -> a
com.umeng.message.proguard.bt -> bf.ex:
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.io.InputStream,java.lang.String) -> a
    java.lang.String c(java.io.InputStream) -> b
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.umeng.message.proguard.bu -> bf.ey:
    byte[] f -> a
    java.lang.ThreadLocal g -> b
    java.security.spec.AlgorithmParameterSpec h -> c
    java.security.SecureRandom i -> d
    java.lang.String a(java.lang.String,java.lang.String,int) -> a
    byte[] b(byte[],javax.crypto.spec.SecretKeySpec) -> a
    javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,int) -> a
    javax.crypto.Cipher a() -> a
    javax.crypto.spec.SecretKeySpec a(byte[],int) -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
com.umeng.message.proguard.bv -> bf.ez:
    java.lang.String a -> a
    java.lang.String a(byte[]) -> a
com.umeng.message.proguard.bw -> bf.fa:
    int a(byte[],int,int,int) -> a
    int a(long) -> a
    int a(long,java.lang.String) -> a
com.umeng.message.proguard.bx -> bf.fb:
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.Class) -> a
    void b(android.content.Context,java.lang.Class) -> b
com.umeng.message.proguard.by -> bf.fc:
    void a(android.content.Context,java.lang.Class) -> a
    void b(android.content.Context,java.lang.Class) -> b
    void a(android.content.Context) -> a
com.umeng.message.proguard.bz -> bf.fd:
    int b -> a
    int a() -> a
    void a(java.lang.Runnable) -> a
com.umeng.message.proguard.c -> bf.fe:
    com.umeng.message.proguard.n a -> a
    com.umeng.message.proguard.O a(com.umeng.message.proguard.y) -> a
    com.umeng.message.proguard.y b(com.umeng.message.proguard.y) -> b
    com.umeng.message.proguard.y a(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.y b(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.y a(byte[],int,int,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.y b(byte[],int,int,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y b(byte[],com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y b(byte[]) -> b
    java.lang.Object d(byte[],com.umeng.message.proguard.n) -> a
    java.lang.Object d(byte[]) -> a
    java.lang.Object c(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.g -> bf.ff:
    com.umeng.message.proguard.g d -> a
    boolean e -> b
    byte a(int) -> a
    com.umeng.message.proguard.g$a c() -> f
    int a() -> a
    boolean d() -> g
    com.umeng.message.proguard.g a(byte[],int,int) -> a
    com.umeng.message.proguard.g a(byte[]) -> a
    com.umeng.message.proguard.g a(java.lang.String) -> b
    void b(byte[],int,int,int) -> b
    void a(byte[],int,int,int) -> a
    byte[] e() -> h
    java.lang.String b(java.lang.String) -> a
    java.lang.String h() -> i
    boolean i() -> b
    int a(int,int,int) -> a
    java.io.InputStream j() -> e
    com.umeng.message.proguard.h k() -> d
    com.umeng.message.proguard.g$b d(int) -> b
    int o() -> c
    int b(int,int,int) -> b
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
com.umeng.message.proguard.g$1 -> bf.fg:
com.umeng.message.proguard.g$a -> bf.fh:
    byte b() -> b
com.umeng.message.proguard.g$b -> bf.fi:
    com.umeng.message.proguard.i a -> a
    byte[] b -> b
    com.umeng.message.proguard.g a() -> a
    com.umeng.message.proguard.i b() -> b
com.umeng.message.proguard.h -> bf.fj:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.io.InputStream e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    com.umeng.message.proguard.h a(java.io.InputStream) -> a
    com.umeng.message.proguard.h a(byte[],int,int) -> a
    int a() -> a
    void a(int) -> a
    boolean b(int) -> b
    void b() -> b
    double c() -> c
    float d() -> d
    long e() -> e
    long f() -> f
    int g() -> g
    long h() -> h
    int i() -> i
    boolean j() -> j
    java.lang.String k() -> k
    void a(int,com.umeng.message.proguard.y$a,com.umeng.message.proguard.n) -> a
    void a(com.umeng.message.proguard.y$a,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.y a(com.umeng.message.proguard.B,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.g l() -> l
    int m() -> m
    int n() -> n
    int o() -> o
    long p() -> p
    int q() -> q
    long r() -> r
    int s() -> s
    long t() -> t
    int u() -> u
    long v() -> v
    int c(int) -> c
    long a(long) -> a
    int f(int) -> d
    void B() -> z
    void g(int) -> e
    int x() -> w
    boolean y() -> x
    boolean a(boolean) -> a
    byte A() -> y
    byte[] h(int) -> f
    void i(int) -> g
com.umeng.message.proguard.i -> bf.fk:
    byte[] d -> a
    int e -> b
    int f -> c
    java.io.OutputStream g -> d
    com.umeng.message.proguard.i a(byte[]) -> a
    com.umeng.message.proguard.i a(byte[],int,int) -> a
    void a(int,double) -> a
    void a(int,long) -> a
    void b(int,long) -> b
    void a(int,int) -> a
    void c(int,long) -> c
    void b(int,int) -> b
    void a(int,boolean) -> a
    void a(int,com.umeng.message.proguard.y) -> a
    void c(int,com.umeng.message.proguard.y) -> b
    void a(int,com.umeng.message.proguard.g) -> a
    void c(int,int) -> c
    void d(int,int) -> d
    void d(int,com.umeng.message.proguard.y) -> c
    void b(int,com.umeng.message.proguard.g) -> b
    void a(double) -> a
    void a(float) -> a
    void a(long) -> a
    void b(long) -> b
    void b(int) -> a
    void c(long) -> c
    void c(int) -> b
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a(com.umeng.message.proguard.y) -> a
    void c(com.umeng.message.proguard.y) -> b
    void a(com.umeng.message.proguard.g) -> a
    void d(int) -> c
    void e(int) -> d
    void f(int) -> e
    void d(long) -> d
    void g(int) -> f
    void e(long) -> e
    int b(int,double) -> b
    int f(int,long) -> d
    int g(int,long) -> e
    int g(int,int) -> e
    int h(int,long) -> f
    int h(int,int) -> f
    int b(int,boolean) -> b
    int e(int,com.umeng.message.proguard.y) -> d
    int g(int,com.umeng.message.proguard.y) -> e
    int c(int,com.umeng.message.proguard.g) -> c
    int a(int,com.umeng.message.proguard.t) -> a
    int i(int,int) -> g
    int j(int,int) -> h
    int h(int,com.umeng.message.proguard.y) -> f
    int d(int,com.umeng.message.proguard.g) -> d
    int b(int,com.umeng.message.proguard.t) -> b
    int b(double) -> b
    int b(float) -> b
    int f(long) -> f
    int g(long) -> g
    int h(int) -> g
    int h(long) -> h
    int i(int) -> h
    int b(boolean) -> b
    int b(java.lang.String) -> b
    int d(com.umeng.message.proguard.y) -> c
    int f(com.umeng.message.proguard.y) -> d
    int a(com.umeng.message.proguard.t) -> a
    int b(com.umeng.message.proguard.g) -> b
    int j(int) -> i
    int k(int) -> j
    int l(int) -> k
    int i(long) -> i
    int m(int) -> l
    int j(long) -> j
    void d() -> c
    int b() -> a
    void c() -> b
    void a(byte) -> a
    void n(int) -> m
    void c(com.umeng.message.proguard.g) -> c
    void b(byte[]) -> b
    void b(byte[],int,int) -> b
    void a(com.umeng.message.proguard.g,int,int) -> a
    void m(int,int) -> i
    int o(int) -> n
    void p(int) -> o
    int q(int) -> p
    void k(long) -> k
    int l(long) -> l
    void r(int) -> q
    void m(long) -> m
    int s(int) -> r
    long n(long) -> n
com.umeng.message.proguard.i$a -> bf.fl:
com.umeng.message.proguard.j -> bf.fm:
    com.umeng.message.proguard.k$a a -> a
    com.umeng.message.proguard.p$g b -> b
    com.umeng.message.proguard.k$a c -> c
    com.umeng.message.proguard.p$g d -> d
    com.umeng.message.proguard.k$a e -> e
    com.umeng.message.proguard.p$g f -> f
    com.umeng.message.proguard.k$a g -> g
    com.umeng.message.proguard.p$g h -> h
    com.umeng.message.proguard.k$a i -> i
    com.umeng.message.proguard.p$g j -> j
    com.umeng.message.proguard.k$a k -> k
    com.umeng.message.proguard.p$g l -> l
    com.umeng.message.proguard.k$a m -> m
    com.umeng.message.proguard.p$g n -> n
    com.umeng.message.proguard.k$a o -> o
    com.umeng.message.proguard.p$g p -> p
    com.umeng.message.proguard.k$a q -> q
    com.umeng.message.proguard.p$g r -> r
    com.umeng.message.proguard.k$a s -> s
    com.umeng.message.proguard.p$g t -> t
    com.umeng.message.proguard.k$a u -> u
    com.umeng.message.proguard.p$g v -> v
    com.umeng.message.proguard.k$a w -> w
    com.umeng.message.proguard.p$g x -> x
    com.umeng.message.proguard.k$a y -> y
    com.umeng.message.proguard.p$g z -> z
    com.umeng.message.proguard.k$a A -> A
    com.umeng.message.proguard.p$g B -> B
    com.umeng.message.proguard.k$a C -> C
    com.umeng.message.proguard.p$g D -> D
    com.umeng.message.proguard.k$a E -> E
    com.umeng.message.proguard.p$g F -> F
    com.umeng.message.proguard.k$a G -> G
    com.umeng.message.proguard.p$g H -> H
    com.umeng.message.proguard.k$a I -> I
    com.umeng.message.proguard.p$g J -> J
    com.umeng.message.proguard.k$a K -> K
    com.umeng.message.proguard.p$g L -> L
    com.umeng.message.proguard.k$a M -> M
    com.umeng.message.proguard.p$g N -> N
    com.umeng.message.proguard.k$g O -> O
    com.umeng.message.proguard.k$g a() -> a
    com.umeng.message.proguard.k$a b() -> b
    com.umeng.message.proguard.k$a d() -> c
    com.umeng.message.proguard.p$g e() -> d
    com.umeng.message.proguard.k$a f() -> e
    com.umeng.message.proguard.p$g g() -> f
    com.umeng.message.proguard.k$a h() -> g
    com.umeng.message.proguard.p$g i() -> h
    com.umeng.message.proguard.k$a j() -> i
    com.umeng.message.proguard.p$g k() -> j
    com.umeng.message.proguard.k$a l() -> k
    com.umeng.message.proguard.p$g m() -> l
    com.umeng.message.proguard.k$a n() -> m
    com.umeng.message.proguard.p$g o() -> n
    com.umeng.message.proguard.k$a p() -> o
    com.umeng.message.proguard.p$g q() -> p
    com.umeng.message.proguard.k$a r() -> q
    com.umeng.message.proguard.p$g s() -> r
    com.umeng.message.proguard.k$a t() -> s
    com.umeng.message.proguard.p$g u() -> t
    com.umeng.message.proguard.k$a v() -> u
    com.umeng.message.proguard.p$g w() -> v
    com.umeng.message.proguard.k$a x() -> w
    com.umeng.message.proguard.p$g y() -> x
    com.umeng.message.proguard.k$a z() -> y
    com.umeng.message.proguard.p$g A() -> z
    com.umeng.message.proguard.k$a B() -> A
    com.umeng.message.proguard.p$g C() -> B
    com.umeng.message.proguard.k$a D() -> C
    com.umeng.message.proguard.p$g E() -> D
    com.umeng.message.proguard.k$a F() -> E
    com.umeng.message.proguard.p$g G() -> F
    com.umeng.message.proguard.k$a H() -> G
    com.umeng.message.proguard.p$g I() -> H
    com.umeng.message.proguard.k$a J() -> I
    com.umeng.message.proguard.p$g K() -> J
    com.umeng.message.proguard.k$a L() -> K
    com.umeng.message.proguard.p$g M() -> L
    com.umeng.message.proguard.k$a N() -> M
    com.umeng.message.proguard.p$g O() -> N
    com.umeng.message.proguard.k$g a(com.umeng.message.proguard.k$g) -> a
    com.umeng.message.proguard.k$a a(com.umeng.message.proguard.k$a) -> a
    com.umeng.message.proguard.p$g a(com.umeng.message.proguard.p$g) -> a
    com.umeng.message.proguard.k$a b(com.umeng.message.proguard.k$a) -> b
    com.umeng.message.proguard.p$g b(com.umeng.message.proguard.p$g) -> b
    com.umeng.message.proguard.k$a c(com.umeng.message.proguard.k$a) -> c
    com.umeng.message.proguard.p$g c(com.umeng.message.proguard.p$g) -> c
    com.umeng.message.proguard.k$a d(com.umeng.message.proguard.k$a) -> d
    com.umeng.message.proguard.p$g d(com.umeng.message.proguard.p$g) -> d
    com.umeng.message.proguard.k$a e(com.umeng.message.proguard.k$a) -> e
    com.umeng.message.proguard.p$g e(com.umeng.message.proguard.p$g) -> e
    com.umeng.message.proguard.k$a f(com.umeng.message.proguard.k$a) -> f
    com.umeng.message.proguard.p$g f(com.umeng.message.proguard.p$g) -> f
    com.umeng.message.proguard.k$a g(com.umeng.message.proguard.k$a) -> g
    com.umeng.message.proguard.p$g g(com.umeng.message.proguard.p$g) -> g
    com.umeng.message.proguard.k$a h(com.umeng.message.proguard.k$a) -> h
    com.umeng.message.proguard.p$g h(com.umeng.message.proguard.p$g) -> h
    com.umeng.message.proguard.k$a i(com.umeng.message.proguard.k$a) -> i
    com.umeng.message.proguard.p$g i(com.umeng.message.proguard.p$g) -> i
    com.umeng.message.proguard.k$a j(com.umeng.message.proguard.k$a) -> j
    com.umeng.message.proguard.p$g j(com.umeng.message.proguard.p$g) -> j
    com.umeng.message.proguard.k$a k(com.umeng.message.proguard.k$a) -> k
    com.umeng.message.proguard.p$g k(com.umeng.message.proguard.p$g) -> k
    com.umeng.message.proguard.k$a l(com.umeng.message.proguard.k$a) -> l
    com.umeng.message.proguard.p$g l(com.umeng.message.proguard.p$g) -> l
    com.umeng.message.proguard.k$a m(com.umeng.message.proguard.k$a) -> m
    com.umeng.message.proguard.p$g m(com.umeng.message.proguard.p$g) -> m
    com.umeng.message.proguard.k$a n(com.umeng.message.proguard.k$a) -> n
    com.umeng.message.proguard.p$g n(com.umeng.message.proguard.p$g) -> n
    com.umeng.message.proguard.k$a o(com.umeng.message.proguard.k$a) -> o
    com.umeng.message.proguard.p$g o(com.umeng.message.proguard.p$g) -> o
    com.umeng.message.proguard.k$a p(com.umeng.message.proguard.k$a) -> p
    com.umeng.message.proguard.p$g p(com.umeng.message.proguard.p$g) -> p
    com.umeng.message.proguard.k$a q(com.umeng.message.proguard.k$a) -> q
    com.umeng.message.proguard.p$g q(com.umeng.message.proguard.p$g) -> q
    com.umeng.message.proguard.k$a r(com.umeng.message.proguard.k$a) -> r
    com.umeng.message.proguard.p$g r(com.umeng.message.proguard.p$g) -> r
    com.umeng.message.proguard.k$a s(com.umeng.message.proguard.k$a) -> s
    com.umeng.message.proguard.p$g s(com.umeng.message.proguard.p$g) -> s
    com.umeng.message.proguard.k$a t(com.umeng.message.proguard.k$a) -> t
    com.umeng.message.proguard.p$g t(com.umeng.message.proguard.p$g) -> t
com.umeng.message.proguard.j$1 -> bf.fn:
    com.umeng.message.proguard.m a(com.umeng.message.proguard.k$g) -> a
com.umeng.message.proguard.j$A -> bf.fo:
    com.umeng.message.proguard.j$A e -> c
    com.umeng.message.proguard.P f -> d
    com.umeng.message.proguard.B a -> a
    int g -> e
    java.lang.Object h -> f
    java.util.List i -> g
    com.umeng.message.proguard.j$C j -> h
    byte k -> i
    int l -> j
    com.umeng.message.proguard.j$A h() -> h
    com.umeng.message.proguard.j$A i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    java.lang.String o() -> n
    com.umeng.message.proguard.g p() -> o
    int s() -> p
    com.umeng.message.proguard.j$w a(int) -> a
    boolean t() -> q
    com.umeng.message.proguard.j$C u() -> r
    void z() -> v
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$A$a w() -> s
    com.umeng.message.proguard.j$A$a x() -> t
    com.umeng.message.proguard.j$A$a a(com.umeng.message.proguard.j$A) -> a
    com.umeng.message.proguard.j$A$a y() -> u
    com.umeng.message.proguard.j$A$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.lang.Object a(com.umeng.message.proguard.j$A,java.lang.Object) -> a
    java.util.List a(com.umeng.message.proguard.j$A,java.util.List) -> a
    com.umeng.message.proguard.j$C a(com.umeng.message.proguard.j$A,com.umeng.message.proguard.j$C) -> a
    int a(com.umeng.message.proguard.j$A,int) -> a
    java.lang.Object b(com.umeng.message.proguard.j$A) -> b
    java.util.List c(com.umeng.message.proguard.j$A) -> c
com.umeng.message.proguard.j$A$1 -> bf.fp:
    com.umeng.message.proguard.j$A c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$A$a -> bf.fq:
    int a -> a
    java.lang.Object b -> b
    java.util.List c -> c
    com.umeng.message.proguard.D d -> d
    com.umeng.message.proguard.j$C e -> e
    com.umeng.message.proguard.L f -> f
    com.umeng.message.proguard.p$g l() -> h
    void H() -> t
    com.umeng.message.proguard.j$A$a I() -> u
    com.umeng.message.proguard.j$A$a w() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$A x() -> j
    com.umeng.message.proguard.j$A y() -> k
    com.umeng.message.proguard.j$A z() -> l
    com.umeng.message.proguard.j$A$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$A$a a(com.umeng.message.proguard.j$A) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$A$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void K() -> v
    int s() -> p
    com.umeng.message.proguard.j$w a(int) -> a
    com.umeng.message.proguard.D L() -> B
    boolean t() -> q
    com.umeng.message.proguard.j$C u() -> r
    com.umeng.message.proguard.j$A$a b(com.umeng.message.proguard.j$C) -> a
    com.umeng.message.proguard.L M() -> C
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$A$a G() -> s
com.umeng.message.proguard.j$B -> bf.fr:
com.umeng.message.proguard.j$C -> bf.fs:
    com.umeng.message.proguard.j$C c -> c
    com.umeng.message.proguard.P d -> d
    com.umeng.message.proguard.B a -> a
    java.util.List e -> e
    byte f -> f
    int g -> g
    com.umeng.message.proguard.j$C h() -> h
    com.umeng.message.proguard.j$C i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    int p() -> m
    com.umeng.message.proguard.j$G a(int) -> a
    void t() -> q
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$C$a q() -> n
    com.umeng.message.proguard.j$C$a r() -> o
    com.umeng.message.proguard.j$C$a a(com.umeng.message.proguard.j$C) -> a
    com.umeng.message.proguard.j$C$a s() -> p
    com.umeng.message.proguard.j$C$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    java.util.List a(com.umeng.message.proguard.j$C,java.util.List) -> a
    java.util.List b(com.umeng.message.proguard.j$C) -> b
com.umeng.message.proguard.j$C$1 -> bf.ft:
    com.umeng.message.proguard.j$C c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$C$a -> bf.fu:
    int a -> a
    java.util.List b -> b
    com.umeng.message.proguard.D c -> c
    com.umeng.message.proguard.p$g l() -> h
    void y() -> t
    com.umeng.message.proguard.j$C$a z() -> u
    com.umeng.message.proguard.j$C$a q() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$C r() -> j
    com.umeng.message.proguard.j$C s() -> k
    com.umeng.message.proguard.j$C t() -> l
    com.umeng.message.proguard.j$C$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$C$a a(com.umeng.message.proguard.j$C) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$C$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void C() -> v
    int p() -> p
    com.umeng.message.proguard.j$G a(int) -> a
    com.umeng.message.proguard.D D() -> B
    com.umeng.message.proguard.p$c A() -> q
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$C$a x() -> r
com.umeng.message.proguard.j$D -> bf.fv:
com.umeng.message.proguard.j$E -> bf.fw:
    com.umeng.message.proguard.j$E c -> c
    com.umeng.message.proguard.P d -> d
    com.umeng.message.proguard.B a -> a
    java.util.List e -> e
    byte f -> f
    int g -> g
    com.umeng.message.proguard.j$E h() -> h
    com.umeng.message.proguard.j$E i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    void t() -> p
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$E$a q() -> m
    com.umeng.message.proguard.j$E$a r() -> n
    com.umeng.message.proguard.j$E$a a(com.umeng.message.proguard.j$E) -> a
    com.umeng.message.proguard.j$E$a s() -> o
    com.umeng.message.proguard.j$E$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.util.List a(com.umeng.message.proguard.j$E,java.util.List) -> a
    java.util.List b(com.umeng.message.proguard.j$E) -> b
com.umeng.message.proguard.j$E$1 -> bf.fx:
    com.umeng.message.proguard.j$E c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$E$a -> bf.fy:
    int a -> a
    java.util.List b -> b
    com.umeng.message.proguard.D c -> c
    com.umeng.message.proguard.p$g l() -> h
    void y() -> q
    com.umeng.message.proguard.j$E$a z() -> r
    com.umeng.message.proguard.j$E$a q() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$E r() -> j
    com.umeng.message.proguard.j$E s() -> k
    com.umeng.message.proguard.j$E t() -> l
    com.umeng.message.proguard.j$E$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$E$a a(com.umeng.message.proguard.j$E) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$E$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void A() -> s
    com.umeng.message.proguard.D B() -> t
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$E$a x() -> p
com.umeng.message.proguard.j$E$b -> bf.fz:
    com.umeng.message.proguard.j$E$b f -> c
    com.umeng.message.proguard.P g -> d
    com.umeng.message.proguard.B a -> a
    int h -> e
    java.util.List i -> f
    int j -> g
    java.util.List k -> h
    int l -> i
    java.lang.Object n -> j
    java.lang.Object o -> k
    byte p -> l
    int q -> m
    com.umeng.message.proguard.j$E$b h() -> h
    com.umeng.message.proguard.j$E$b i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    java.util.List n() -> m
    java.util.List p() -> n
    boolean r() -> o
    com.umeng.message.proguard.g t() -> p
    boolean u() -> q
    com.umeng.message.proguard.g w() -> r
    void A() -> v
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$E$b$a x() -> s
    com.umeng.message.proguard.j$E$b$a y() -> t
    com.umeng.message.proguard.j$E$b$a a(com.umeng.message.proguard.j$E$b) -> a
    com.umeng.message.proguard.j$E$b$a z() -> u
    com.umeng.message.proguard.j$E$b$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.util.List a(com.umeng.message.proguard.j$E$b,java.util.List) -> a
    java.util.List b(com.umeng.message.proguard.j$E$b,java.util.List) -> b
    java.lang.Object a(com.umeng.message.proguard.j$E$b,java.lang.Object) -> a
    java.lang.Object b(com.umeng.message.proguard.j$E$b,java.lang.Object) -> b
    int a(com.umeng.message.proguard.j$E$b,int) -> a
    java.util.List b(com.umeng.message.proguard.j$E$b) -> b
    java.util.List c(com.umeng.message.proguard.j$E$b) -> c
    java.lang.Object d(com.umeng.message.proguard.j$E$b) -> d
    java.lang.Object e(com.umeng.message.proguard.j$E$b) -> e
com.umeng.message.proguard.j$E$b$1 -> bf.ga:
    com.umeng.message.proguard.j$E$b c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$E$b$a -> bf.gb:
    int a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.lang.Object d -> d
    java.lang.Object e -> e
    com.umeng.message.proguard.p$g l() -> h
    void G() -> q
    com.umeng.message.proguard.j$E$b$a H() -> r
    com.umeng.message.proguard.j$E$b$a x() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$E$b y() -> j
    com.umeng.message.proguard.j$E$b z() -> k
    com.umeng.message.proguard.j$E$b A() -> l
    com.umeng.message.proguard.j$E$b$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$E$b$a a(com.umeng.message.proguard.j$E$b) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$E$b$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void I() -> s
    void K() -> t
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$E$b$a F() -> p
com.umeng.message.proguard.j$E$c -> bf.gc:
com.umeng.message.proguard.j$F -> bf.gd:
com.umeng.message.proguard.j$G -> bf.ge:
    com.umeng.message.proguard.j$G i -> c
    com.umeng.message.proguard.P j -> d
    com.umeng.message.proguard.B a -> a
    int k -> e
    java.util.List l -> f
    java.lang.Object n -> g
    long o -> h
    long p -> i
    double q -> j
    com.umeng.message.proguard.g r -> k
    java.lang.Object s -> l
    byte t -> m
    int u -> n
    com.umeng.message.proguard.j$G h() -> h
    com.umeng.message.proguard.j$G i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    int p() -> m
    com.umeng.message.proguard.j$G$b a(int) -> a
    boolean q() -> n
    com.umeng.message.proguard.g s() -> o
    boolean t() -> p
    long u() -> q
    boolean v() -> r
    long w() -> s
    boolean x() -> t
    double y() -> u
    boolean z() -> v
    com.umeng.message.proguard.g A() -> y
    boolean B() -> z
    com.umeng.message.proguard.g D() -> A
    void H() -> E
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$G$a E() -> B
    com.umeng.message.proguard.j$G$a F() -> C
    com.umeng.message.proguard.j$G$a a(com.umeng.message.proguard.j$G) -> a
    com.umeng.message.proguard.j$G$a G() -> D
    com.umeng.message.proguard.j$G$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.util.List a(com.umeng.message.proguard.j$G,java.util.List) -> a
    java.lang.Object a(com.umeng.message.proguard.j$G,java.lang.Object) -> a
    long a(com.umeng.message.proguard.j$G,long) -> a
    long b(com.umeng.message.proguard.j$G,long) -> b
    double a(com.umeng.message.proguard.j$G,double) -> a
    com.umeng.message.proguard.g a(com.umeng.message.proguard.j$G,com.umeng.message.proguard.g) -> a
    java.lang.Object b(com.umeng.message.proguard.j$G,java.lang.Object) -> b
    int a(com.umeng.message.proguard.j$G,int) -> a
    java.util.List b(com.umeng.message.proguard.j$G) -> b
    java.lang.Object c(com.umeng.message.proguard.j$G) -> c
    java.lang.Object d(com.umeng.message.proguard.j$G) -> d
com.umeng.message.proguard.j$G$1 -> bf.gf:
    com.umeng.message.proguard.j$G c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$G$a -> bf.gg:
    int a -> a
    java.util.List b -> b
    com.umeng.message.proguard.D c -> c
    java.lang.Object d -> d
    long e -> e
    long f -> f
    double g -> g
    com.umeng.message.proguard.g h -> h
    java.lang.Object i -> i
    com.umeng.message.proguard.p$g l() -> h
    void V() -> r
    com.umeng.message.proguard.j$G$a W() -> s
    com.umeng.message.proguard.j$G$a E() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$G F() -> j
    com.umeng.message.proguard.j$G G() -> k
    com.umeng.message.proguard.j$G H() -> l
    com.umeng.message.proguard.j$G$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$G$a a(com.umeng.message.proguard.j$G) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$G$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void X() -> t
    int p() -> p
    com.umeng.message.proguard.j$G$b a(int) -> a
    com.umeng.message.proguard.D Y() -> u
    com.umeng.message.proguard.j$G$a a(long) -> a
    com.umeng.message.proguard.j$G$a b(long) -> b
    com.umeng.message.proguard.j$G$a a(double) -> a
    com.umeng.message.proguard.j$G$a f(com.umeng.message.proguard.g) -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$G$a U() -> q
com.umeng.message.proguard.j$G$b -> bf.gh:
    com.umeng.message.proguard.j$G$b d -> c
    com.umeng.message.proguard.P e -> d
    com.umeng.message.proguard.B a -> a
    int f -> e
    java.lang.Object g -> f
    boolean h -> g
    byte i -> h
    int j -> i
    com.umeng.message.proguard.j$G$b h() -> h
    com.umeng.message.proguard.j$G$b i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    com.umeng.message.proguard.g p() -> n
    boolean q() -> o
    boolean r() -> p
    void v() -> t
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$G$b$a s() -> q
    com.umeng.message.proguard.j$G$b$a t() -> r
    com.umeng.message.proguard.j$G$b$a a(com.umeng.message.proguard.j$G$b) -> a
    com.umeng.message.proguard.j$G$b$a u() -> s
    com.umeng.message.proguard.j$G$b$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.lang.Object a(com.umeng.message.proguard.j$G$b,java.lang.Object) -> a
    boolean a(com.umeng.message.proguard.j$G$b,boolean) -> a
    int a(com.umeng.message.proguard.j$G$b,int) -> a
    java.lang.Object b(com.umeng.message.proguard.j$G$b) -> b
com.umeng.message.proguard.j$G$b$1 -> bf.gi:
    com.umeng.message.proguard.j$G$b c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$G$b$a -> bf.gj:
    int a -> a
    java.lang.Object b -> b
    boolean c -> c
    com.umeng.message.proguard.p$g l() -> h
    void z() -> s
    com.umeng.message.proguard.j$G$b$a A() -> t
    com.umeng.message.proguard.j$G$b$a s() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$G$b t() -> j
    com.umeng.message.proguard.j$G$b u() -> k
    com.umeng.message.proguard.j$G$b v() -> l
    com.umeng.message.proguard.j$G$b$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$G$b$a a(com.umeng.message.proguard.j$G$b) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$G$b$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    boolean n() -> p
    boolean q() -> q
    com.umeng.message.proguard.j$G$b$a a(boolean) -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$G$b$a y() -> r
com.umeng.message.proguard.j$G$c -> bf.gk:
com.umeng.message.proguard.j$H -> bf.gl:
com.umeng.message.proguard.j$a -> bf.gm:
    com.umeng.message.proguard.j$a i -> c
    com.umeng.message.proguard.P j -> d
    com.umeng.message.proguard.B a -> a
    int k -> e
    java.lang.Object l -> f
    java.util.List n -> g
    java.util.List o -> h
    java.util.List p -> i
    java.util.List q -> j
    java.util.List r -> k
    com.umeng.message.proguard.j$u s -> l
    byte t -> m
    int u -> n
    com.umeng.message.proguard.j$a h() -> h
    com.umeng.message.proguard.j$a i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    java.lang.String o() -> n
    com.umeng.message.proguard.g p() -> o
    int s() -> p
    com.umeng.message.proguard.j$k a(int) -> a
    int v() -> q
    com.umeng.message.proguard.j$k c(int) -> b
    int y() -> r
    com.umeng.message.proguard.j$a e(int) -> c
    int B() -> s
    com.umeng.message.proguard.j$c g(int) -> d
    java.util.List C() -> t
    boolean F() -> u
    com.umeng.message.proguard.j$u G() -> v
    void S() -> B
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$a$a c_() -> y
    com.umeng.message.proguard.j$a$a K() -> z
    com.umeng.message.proguard.j$a$a a(com.umeng.message.proguard.j$a) -> a
    com.umeng.message.proguard.j$a$a L() -> A
    com.umeng.message.proguard.j$a$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.lang.Object a(com.umeng.message.proguard.j$a,java.lang.Object) -> a
    java.util.List a(com.umeng.message.proguard.j$a,java.util.List) -> a
    java.util.List b(com.umeng.message.proguard.j$a,java.util.List) -> b
    java.util.List c(com.umeng.message.proguard.j$a,java.util.List) -> c
    java.util.List d(com.umeng.message.proguard.j$a,java.util.List) -> d
    java.util.List e(com.umeng.message.proguard.j$a,java.util.List) -> e
    com.umeng.message.proguard.j$u a(com.umeng.message.proguard.j$a,com.umeng.message.proguard.j$u) -> a
    int a(com.umeng.message.proguard.j$a,int) -> a
    java.lang.Object b(com.umeng.message.proguard.j$a) -> b
    java.util.List c(com.umeng.message.proguard.j$a) -> c
    java.util.List d(com.umeng.message.proguard.j$a) -> d
    java.util.List e(com.umeng.message.proguard.j$a) -> e
    java.util.List f(com.umeng.message.proguard.j$a) -> f
    java.util.List g(com.umeng.message.proguard.j$a) -> g
com.umeng.message.proguard.j$a$1 -> bf.gn:
    com.umeng.message.proguard.j$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$a$a -> bf.go:
    int a -> a
    java.lang.Object b -> b
    java.util.List c -> c
    com.umeng.message.proguard.D d -> d
    java.util.List e -> e
    com.umeng.message.proguard.D f -> f
    java.util.List g -> g
    com.umeng.message.proguard.D h -> h
    java.util.List i -> i
    com.umeng.message.proguard.D j -> j
    java.util.List k -> k
    com.umeng.message.proguard.D l -> l
    com.umeng.message.proguard.j$u m -> m
    com.umeng.message.proguard.L n -> n
    com.umeng.message.proguard.p$g l() -> h
    void ao() -> B
    com.umeng.message.proguard.j$a$a ap() -> C
    com.umeng.message.proguard.j$a$a I() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$a K() -> j
    com.umeng.message.proguard.j$a L() -> k
    com.umeng.message.proguard.j$a M() -> l
    com.umeng.message.proguard.j$a$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$a$a a(com.umeng.message.proguard.j$a) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$a$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void aq() -> D
    int s() -> p
    com.umeng.message.proguard.j$k a(int) -> a
    com.umeng.message.proguard.D ar() -> E
    void as() -> F
    int v() -> q
    com.umeng.message.proguard.j$k c(int) -> b
    com.umeng.message.proguard.D at() -> G
    void au() -> H
    int y() -> r
    com.umeng.message.proguard.j$a e(int) -> c
    com.umeng.message.proguard.D av() -> I
    void aw() -> J
    int B() -> s
    com.umeng.message.proguard.j$c g(int) -> d
    com.umeng.message.proguard.D ax() -> K
    void ay() -> L
    com.umeng.message.proguard.D az() -> M
    boolean F() -> t
    com.umeng.message.proguard.j$u G() -> u
    com.umeng.message.proguard.j$a$a b(com.umeng.message.proguard.j$u) -> a
    com.umeng.message.proguard.L aG() -> N
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$a$a an() -> v
com.umeng.message.proguard.j$a$b -> bf.gp:
    com.umeng.message.proguard.j$a$b d -> c
    com.umeng.message.proguard.P e -> d
    com.umeng.message.proguard.B a -> a
    int f -> e
    int g -> f
    int h -> g
    byte i -> h
    int j -> i
    com.umeng.message.proguard.j$a$b h() -> h
    com.umeng.message.proguard.j$a$b i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    int o() -> n
    boolean p() -> o
    int q() -> p
    void u() -> t
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$a$b$a r() -> q
    com.umeng.message.proguard.j$a$b$a s() -> r
    com.umeng.message.proguard.j$a$b$a a(com.umeng.message.proguard.j$a$b) -> a
    com.umeng.message.proguard.j$a$b$a t() -> s
    com.umeng.message.proguard.j$a$b$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    int a(com.umeng.message.proguard.j$a$b,int) -> a
    int b(com.umeng.message.proguard.j$a$b,int) -> b
    int c(com.umeng.message.proguard.j$a$b,int) -> c
com.umeng.message.proguard.j$a$b$1 -> bf.gq:
    com.umeng.message.proguard.j$a$b c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$a$b$a -> bf.gr:
    int a -> a
    int b -> b
    int c -> c
    com.umeng.message.proguard.p$g l() -> h
    void y() -> q
    com.umeng.message.proguard.j$a$b$a z() -> r
    com.umeng.message.proguard.j$a$b$a r() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$a$b s() -> j
    com.umeng.message.proguard.j$a$b t() -> k
    com.umeng.message.proguard.j$a$b u() -> l
    com.umeng.message.proguard.j$a$b$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$a$b$a a(com.umeng.message.proguard.j$a$b) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$a$b$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.j$a$b$a a(int) -> a
    com.umeng.message.proguard.j$a$b$a b(int) -> b
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$a$b$a x() -> p
com.umeng.message.proguard.j$a$c -> bf.gs:
com.umeng.message.proguard.j$b -> bf.gt:
com.umeng.message.proguard.j$c -> bf.gu:
    com.umeng.message.proguard.j$c e -> c
    com.umeng.message.proguard.P f -> d
    com.umeng.message.proguard.B a -> a
    int g -> e
    java.lang.Object h -> f
    java.util.List i -> g
    com.umeng.message.proguard.j$e j -> h
    byte k -> i
    int l -> j
    com.umeng.message.proguard.j$c h() -> h
    com.umeng.message.proguard.j$c i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    java.lang.String o() -> n
    com.umeng.message.proguard.g p() -> o
    int s() -> p
    com.umeng.message.proguard.j$g a(int) -> a
    boolean t() -> q
    com.umeng.message.proguard.j$e u() -> r
    void z() -> v
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$c$a w() -> s
    com.umeng.message.proguard.j$c$a x() -> t
    com.umeng.message.proguard.j$c$a a(com.umeng.message.proguard.j$c) -> a
    com.umeng.message.proguard.j$c$a y() -> u
    com.umeng.message.proguard.j$c$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.lang.Object a(com.umeng.message.proguard.j$c,java.lang.Object) -> a
    java.util.List a(com.umeng.message.proguard.j$c,java.util.List) -> a
    com.umeng.message.proguard.j$e a(com.umeng.message.proguard.j$c,com.umeng.message.proguard.j$e) -> a
    int a(com.umeng.message.proguard.j$c,int) -> a
    java.lang.Object b(com.umeng.message.proguard.j$c) -> b
    java.util.List c(com.umeng.message.proguard.j$c) -> c
com.umeng.message.proguard.j$c$1 -> bf.gv:
    com.umeng.message.proguard.j$c c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$c$a -> bf.gw:
    int a -> a
    java.lang.Object b -> b
    java.util.List c -> c
    com.umeng.message.proguard.D d -> d
    com.umeng.message.proguard.j$e e -> e
    com.umeng.message.proguard.L f -> f
    com.umeng.message.proguard.p$g l() -> h
    void H() -> t
    com.umeng.message.proguard.j$c$a I() -> u
    com.umeng.message.proguard.j$c$a w() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$c x() -> j
    com.umeng.message.proguard.j$c y() -> k
    com.umeng.message.proguard.j$c z() -> l
    com.umeng.message.proguard.j$c$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$c$a a(com.umeng.message.proguard.j$c) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$c$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void K() -> v
    int s() -> p
    com.umeng.message.proguard.j$g a(int) -> a
    com.umeng.message.proguard.D L() -> B
    boolean t() -> q
    com.umeng.message.proguard.j$e u() -> r
    com.umeng.message.proguard.j$c$a b(com.umeng.message.proguard.j$e) -> a
    com.umeng.message.proguard.L M() -> C
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$c$a G() -> s
com.umeng.message.proguard.j$d -> bf.gx:
com.umeng.message.proguard.j$e -> bf.gy:
    com.umeng.message.proguard.j$e d -> c
    com.umeng.message.proguard.P e -> d
    com.umeng.message.proguard.B a -> a
    int f -> e
    boolean g -> f
    java.util.List h -> g
    byte i -> h
    int j -> i
    com.umeng.message.proguard.j$e h() -> h
    com.umeng.message.proguard.j$e i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    boolean o() -> n
    int r() -> o
    com.umeng.message.proguard.j$G a(int) -> a
    void v() -> s
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$e$a s() -> p
    com.umeng.message.proguard.j$e$a t() -> q
    com.umeng.message.proguard.j$e$a a(com.umeng.message.proguard.j$e) -> a
    com.umeng.message.proguard.j$e$a u() -> r
    com.umeng.message.proguard.j$e$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    boolean a(com.umeng.message.proguard.j$e,boolean) -> a
    java.util.List a(com.umeng.message.proguard.j$e,java.util.List) -> a
    int a(com.umeng.message.proguard.j$e,int) -> a
    java.util.List b(com.umeng.message.proguard.j$e) -> b
com.umeng.message.proguard.j$e$1 -> bf.gz:
    com.umeng.message.proguard.j$e c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$e$a -> bf.ha:
    int a -> a
    boolean b -> b
    java.util.List c -> c
    com.umeng.message.proguard.D d -> d
    com.umeng.message.proguard.p$g l() -> h
    void D() -> t
    com.umeng.message.proguard.j$e$a E() -> u
    com.umeng.message.proguard.j$e$a s() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$e t() -> j
    com.umeng.message.proguard.j$e u() -> k
    com.umeng.message.proguard.j$e v() -> l
    com.umeng.message.proguard.j$e$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$e$a a(com.umeng.message.proguard.j$e) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$e$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.j$e$a a(boolean) -> a
    void F() -> v
    int r() -> p
    com.umeng.message.proguard.j$G a(int) -> a
    com.umeng.message.proguard.D G() -> B
    com.umeng.message.proguard.p$c A() -> q
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$e$a C() -> r
com.umeng.message.proguard.j$f -> bf.hb:
com.umeng.message.proguard.j$g -> bf.hc:
    com.umeng.message.proguard.j$g e -> c
    com.umeng.message.proguard.P f -> d
    com.umeng.message.proguard.B a -> a
    int g -> e
    java.lang.Object h -> f
    int i -> g
    com.umeng.message.proguard.j$i j -> h
    byte k -> i
    int l -> j
    com.umeng.message.proguard.j$g h() -> h
    com.umeng.message.proguard.j$g i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    java.lang.String o() -> n
    com.umeng.message.proguard.g p() -> o
    boolean q() -> p
    int r() -> q
    boolean s() -> r
    com.umeng.message.proguard.j$i t() -> s
    void y() -> y
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$g$a v() -> t
    com.umeng.message.proguard.j$g$a w() -> u
    com.umeng.message.proguard.j$g$a a(com.umeng.message.proguard.j$g) -> a
    com.umeng.message.proguard.j$g$a x() -> v
    com.umeng.message.proguard.j$g$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.lang.Object a(com.umeng.message.proguard.j$g,java.lang.Object) -> a
    int a(com.umeng.message.proguard.j$g,int) -> a
    com.umeng.message.proguard.j$i a(com.umeng.message.proguard.j$g,com.umeng.message.proguard.j$i) -> a
    int b(com.umeng.message.proguard.j$g,int) -> b
    java.lang.Object b(com.umeng.message.proguard.j$g) -> b
com.umeng.message.proguard.j$g$1 -> bf.hd:
    com.umeng.message.proguard.j$g c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$g$a -> bf.he:
    int a -> a
    java.lang.Object b -> b
    int c -> c
    com.umeng.message.proguard.j$i d -> d
    com.umeng.message.proguard.L e -> e
    com.umeng.message.proguard.p$g l() -> h
    void E() -> s
    com.umeng.message.proguard.j$g$a F() -> t
    com.umeng.message.proguard.j$g$a v() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$g w() -> j
    com.umeng.message.proguard.j$g x() -> k
    com.umeng.message.proguard.j$g y() -> l
    com.umeng.message.proguard.j$g$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$g$a a(com.umeng.message.proguard.j$g) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$g$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.j$g$a a(int) -> a
    boolean s() -> p
    com.umeng.message.proguard.j$i t() -> q
    com.umeng.message.proguard.j$g$a b(com.umeng.message.proguard.j$i) -> a
    com.umeng.message.proguard.L G() -> u
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$g$a D() -> r
com.umeng.message.proguard.j$h -> bf.hf:
com.umeng.message.proguard.j$i -> bf.hg:
    com.umeng.message.proguard.j$i c -> c
    com.umeng.message.proguard.P d -> d
    com.umeng.message.proguard.B a -> a
    java.util.List e -> e
    byte f -> f
    int g -> g
    com.umeng.message.proguard.j$i h() -> h
    com.umeng.message.proguard.j$i i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    int p() -> m
    com.umeng.message.proguard.j$G a(int) -> a
    void t() -> q
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$i$a q() -> n
    com.umeng.message.proguard.j$i$a r() -> o
    com.umeng.message.proguard.j$i$a a(com.umeng.message.proguard.j$i) -> a
    com.umeng.message.proguard.j$i$a s() -> p
    com.umeng.message.proguard.j$i$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    java.util.List a(com.umeng.message.proguard.j$i,java.util.List) -> a
    java.util.List b(com.umeng.message.proguard.j$i) -> b
com.umeng.message.proguard.j$i$1 -> bf.hh:
    com.umeng.message.proguard.j$i c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$i$a -> bf.hi:
    int a -> a
    java.util.List b -> b
    com.umeng.message.proguard.D c -> c
    com.umeng.message.proguard.p$g l() -> h
    void y() -> t
    com.umeng.message.proguard.j$i$a z() -> u
    com.umeng.message.proguard.j$i$a q() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$i r() -> j
    com.umeng.message.proguard.j$i s() -> k
    com.umeng.message.proguard.j$i t() -> l
    com.umeng.message.proguard.j$i$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$i$a a(com.umeng.message.proguard.j$i) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$i$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void C() -> v
    int p() -> p
    com.umeng.message.proguard.j$G a(int) -> a
    com.umeng.message.proguard.D D() -> B
    com.umeng.message.proguard.p$c A() -> q
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$i$a x() -> r
com.umeng.message.proguard.j$j -> bf.hj:
com.umeng.message.proguard.j$k -> bf.hk:
    com.umeng.message.proguard.j$k j -> c
    com.umeng.message.proguard.P k -> d
    com.umeng.message.proguard.B a -> a
    int l -> e
    java.lang.Object n -> f
    int o -> g
    com.umeng.message.proguard.j$k$b p -> h
    com.umeng.message.proguard.j$k$c q -> i
    java.lang.Object r -> j
    java.lang.Object s -> k
    java.lang.Object t -> l
    com.umeng.message.proguard.j$m u -> m
    byte v -> n
    int w -> o
    com.umeng.message.proguard.j$k h() -> h
    com.umeng.message.proguard.j$k i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    java.lang.String o() -> n
    com.umeng.message.proguard.g p() -> o
    boolean q() -> p
    int r() -> q
    boolean s() -> r
    com.umeng.message.proguard.j$k$b t() -> s
    boolean u() -> t
    com.umeng.message.proguard.j$k$c v() -> u
    boolean w() -> v
    java.lang.String x() -> y
    com.umeng.message.proguard.g y() -> z
    boolean z() -> A
    java.lang.String A() -> B
    com.umeng.message.proguard.g B() -> C
    boolean C() -> D
    java.lang.String D() -> E
    com.umeng.message.proguard.g E() -> F
    boolean F() -> G
    com.umeng.message.proguard.j$m G() -> H
    void T() -> N
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$k$a K() -> J
    com.umeng.message.proguard.j$k$a L() -> K
    com.umeng.message.proguard.j$k$a a(com.umeng.message.proguard.j$k) -> a
    com.umeng.message.proguard.j$k$a S() -> L
    com.umeng.message.proguard.j$k$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.lang.Object a(com.umeng.message.proguard.j$k,java.lang.Object) -> a
    int a(com.umeng.message.proguard.j$k,int) -> a
    com.umeng.message.proguard.j$k$b a(com.umeng.message.proguard.j$k,com.umeng.message.proguard.j$k$b) -> a
    com.umeng.message.proguard.j$k$c a(com.umeng.message.proguard.j$k,com.umeng.message.proguard.j$k$c) -> a
    java.lang.Object b(com.umeng.message.proguard.j$k,java.lang.Object) -> b
    java.lang.Object c(com.umeng.message.proguard.j$k,java.lang.Object) -> c
    java.lang.Object d(com.umeng.message.proguard.j$k,java.lang.Object) -> d
    com.umeng.message.proguard.j$m a(com.umeng.message.proguard.j$k,com.umeng.message.proguard.j$m) -> a
    int b(com.umeng.message.proguard.j$k,int) -> b
    java.lang.Object b(com.umeng.message.proguard.j$k) -> b
    java.lang.Object c(com.umeng.message.proguard.j$k) -> c
    java.lang.Object d(com.umeng.message.proguard.j$k) -> d
    java.lang.Object e(com.umeng.message.proguard.j$k) -> e
com.umeng.message.proguard.j$k$1 -> bf.hl:
    com.umeng.message.proguard.j$k c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$k$a -> bf.hm:
    int a -> a
    java.lang.Object b -> b
    int c -> c
    com.umeng.message.proguard.j$k$b d -> d
    com.umeng.message.proguard.j$k$c e -> e
    java.lang.Object f -> f
    java.lang.Object g -> g
    java.lang.Object h -> h
    com.umeng.message.proguard.j$m i -> i
    com.umeng.message.proguard.L j -> j
    com.umeng.message.proguard.p$g l() -> h
    void Z() -> s
    com.umeng.message.proguard.j$k$a aa() -> t
    com.umeng.message.proguard.j$k$a I() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$k K() -> j
    com.umeng.message.proguard.j$k L() -> k
    com.umeng.message.proguard.j$k M() -> l
    com.umeng.message.proguard.j$k$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$k$a a(com.umeng.message.proguard.j$k) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$k$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.j$k$a a(int) -> a
    com.umeng.message.proguard.j$k$a a(com.umeng.message.proguard.j$k$b) -> a
    com.umeng.message.proguard.j$k$a a(com.umeng.message.proguard.j$k$c) -> a
    boolean F() -> p
    com.umeng.message.proguard.j$m G() -> q
    com.umeng.message.proguard.j$k$a b(com.umeng.message.proguard.j$m) -> a
    com.umeng.message.proguard.L ab() -> u
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$k$a Y() -> r
com.umeng.message.proguard.j$k$b -> bf.hn:
    com.umeng.message.proguard.j$k$b a -> a
    com.umeng.message.proguard.j$k$b b -> b
    com.umeng.message.proguard.j$k$b c -> c
    com.umeng.message.proguard.r$b g -> d
    com.umeng.message.proguard.j$k$b[] h -> e
    int i -> f
    int j -> g
    com.umeng.message.proguard.j$k$b[] k -> h
    com.umeng.message.proguard.j$k$b[] values() -> values
    com.umeng.message.proguard.j$k$b valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.umeng.message.proguard.j$k$b a(int) -> a
com.umeng.message.proguard.j$k$b$1 -> bf.ho:
com.umeng.message.proguard.j$k$c -> bf.hp:
    com.umeng.message.proguard.j$k$c a -> a
    com.umeng.message.proguard.j$k$c b -> b
    com.umeng.message.proguard.j$k$c c -> c
    com.umeng.message.proguard.j$k$c d -> d
    com.umeng.message.proguard.j$k$c e -> e
    com.umeng.message.proguard.j$k$c f -> f
    com.umeng.message.proguard.j$k$c g -> g
    com.umeng.message.proguard.j$k$c h -> h
    com.umeng.message.proguard.j$k$c i -> i
    com.umeng.message.proguard.j$k$c j -> j
    com.umeng.message.proguard.j$k$c k -> k
    com.umeng.message.proguard.j$k$c l -> l
    com.umeng.message.proguard.j$k$c m -> m
    com.umeng.message.proguard.j$k$c n -> n
    com.umeng.message.proguard.j$k$c o -> o
    com.umeng.message.proguard.j$k$c p -> p
    com.umeng.message.proguard.j$k$c q -> q
    com.umeng.message.proguard.j$k$c r -> r
    com.umeng.message.proguard.r$b K -> s
    com.umeng.message.proguard.j$k$c[] L -> t
    int M -> u
    int N -> v
    com.umeng.message.proguard.j$k$c[] O -> w
    com.umeng.message.proguard.j$k$c[] values() -> values
    com.umeng.message.proguard.j$k$c valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.umeng.message.proguard.j$k$c a(int) -> a
com.umeng.message.proguard.j$k$c$1 -> bf.hq:
com.umeng.message.proguard.j$l -> bf.hr:
com.umeng.message.proguard.j$m -> bf.hs:
    com.umeng.message.proguard.j$m i -> c
    com.umeng.message.proguard.P j -> d
    com.umeng.message.proguard.B a -> a
    int k -> e
    com.umeng.message.proguard.j$m$b l -> f
    boolean n -> g
    boolean o -> h
    boolean p -> i
    java.lang.Object q -> j
    boolean r -> k
    java.util.List s -> l
    byte t -> m
    int u -> n
    com.umeng.message.proguard.j$m h() -> h
    com.umeng.message.proguard.j$m i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    com.umeng.message.proguard.j$m$b o() -> n
    boolean p() -> o
    boolean q() -> p
    boolean r() -> q
    boolean s() -> r
    boolean t() -> s
    boolean u() -> t
    boolean v() -> u
    com.umeng.message.proguard.g x() -> v
    boolean y() -> y
    boolean z() -> z
    int C() -> A
    com.umeng.message.proguard.j$G a(int) -> a
    void G() -> E
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$m$a D() -> B
    com.umeng.message.proguard.j$m$a E() -> C
    com.umeng.message.proguard.j$m$a a(com.umeng.message.proguard.j$m) -> a
    com.umeng.message.proguard.j$m$a F() -> D
    com.umeng.message.proguard.j$m$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.j$m$b a(com.umeng.message.proguard.j$m,com.umeng.message.proguard.j$m$b) -> a
    boolean a(com.umeng.message.proguard.j$m,boolean) -> a
    boolean b(com.umeng.message.proguard.j$m,boolean) -> b
    boolean c(com.umeng.message.proguard.j$m,boolean) -> c
    java.lang.Object a(com.umeng.message.proguard.j$m,java.lang.Object) -> a
    boolean d(com.umeng.message.proguard.j$m,boolean) -> d
    java.util.List a(com.umeng.message.proguard.j$m,java.util.List) -> a
    int a(com.umeng.message.proguard.j$m,int) -> a
    java.lang.Object b(com.umeng.message.proguard.j$m) -> b
    java.util.List c(com.umeng.message.proguard.j$m) -> c
com.umeng.message.proguard.j$m$1 -> bf.ht:
    com.umeng.message.proguard.j$m c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$m$a -> bf.hu:
    int a -> a
    com.umeng.message.proguard.j$m$b b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    java.lang.Object f -> f
    boolean g -> g
    java.util.List h -> h
    com.umeng.message.proguard.D i -> i
    com.umeng.message.proguard.p$g l() -> h
    void U() -> t
    com.umeng.message.proguard.j$m$a V() -> u
    com.umeng.message.proguard.j$m$a D() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$m E() -> j
    com.umeng.message.proguard.j$m F() -> k
    com.umeng.message.proguard.j$m G() -> l
    com.umeng.message.proguard.j$m$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$m$a a(com.umeng.message.proguard.j$m) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$m$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.j$m$a a(com.umeng.message.proguard.j$m$b) -> a
    com.umeng.message.proguard.j$m$a a(boolean) -> a
    com.umeng.message.proguard.j$m$a b(boolean) -> b
    com.umeng.message.proguard.j$m$a c(boolean) -> c
    com.umeng.message.proguard.j$m$a d(boolean) -> d
    void W() -> v
    int C() -> p
    com.umeng.message.proguard.j$G a(int) -> a
    com.umeng.message.proguard.D X() -> B
    com.umeng.message.proguard.p$c A() -> q
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$m$a T() -> r
com.umeng.message.proguard.j$m$b -> bf.hv:
    com.umeng.message.proguard.j$m$b a -> a
    com.umeng.message.proguard.j$m$b b -> b
    com.umeng.message.proguard.j$m$b c -> c
    com.umeng.message.proguard.r$b g -> d
    com.umeng.message.proguard.j$m$b[] h -> e
    int i -> f
    int j -> g
    com.umeng.message.proguard.j$m$b[] k -> h
    com.umeng.message.proguard.j$m$b[] values() -> values
    com.umeng.message.proguard.j$m$b valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.umeng.message.proguard.j$m$b a(int) -> a
com.umeng.message.proguard.j$m$b$1 -> bf.hw:
com.umeng.message.proguard.j$n -> bf.hx:
com.umeng.message.proguard.j$o -> bf.hy:
    com.umeng.message.proguard.j$o n -> c
    com.umeng.message.proguard.P o -> d
    com.umeng.message.proguard.B a -> a
    int p -> e
    java.lang.Object q -> f
    java.lang.Object r -> g
    com.umeng.message.proguard.v s -> h
    java.util.List t -> i
    java.util.List u -> j
    java.util.List v -> k
    java.util.List w -> l
    java.util.List x -> m
    java.util.List y -> n
    com.umeng.message.proguard.j$s z -> o
    com.umeng.message.proguard.j$E A -> p
    byte B -> q
    int C -> r
    com.umeng.message.proguard.j$o h() -> h
    com.umeng.message.proguard.j$o i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    java.lang.String o() -> n
    com.umeng.message.proguard.g p() -> o
    boolean q() -> p
    java.lang.String r() -> q
    com.umeng.message.proguard.g s() -> r
    java.util.List t() -> s
    int u() -> t
    java.lang.String a(int) -> a
    java.util.List v() -> u
    int w() -> v
    int c(int) -> b
    java.util.List x() -> y
    int B() -> z
    com.umeng.message.proguard.j$a e(int) -> c
    int E() -> A
    com.umeng.message.proguard.j$c g(int) -> d
    int H() -> B
    com.umeng.message.proguard.j$A i(int) -> e
    int S() -> C
    com.umeng.message.proguard.j$k k(int) -> f
    boolean T() -> D
    com.umeng.message.proguard.j$s U() -> E
    boolean W() -> F
    com.umeng.message.proguard.j$E X() -> G
    void ae() -> L
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$o a(byte[]) -> a
    com.umeng.message.proguard.j$o a(byte[],com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.j$o$a Z() -> H
    com.umeng.message.proguard.j$o$a aa() -> J
    com.umeng.message.proguard.j$o$a a(com.umeng.message.proguard.j$o) -> a
    com.umeng.message.proguard.j$o$a ab() -> K
    com.umeng.message.proguard.j$o$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.lang.Object a(com.umeng.message.proguard.j$o,java.lang.Object) -> a
    java.lang.Object b(com.umeng.message.proguard.j$o,java.lang.Object) -> b
    com.umeng.message.proguard.v a(com.umeng.message.proguard.j$o,com.umeng.message.proguard.v) -> a
    java.util.List a(com.umeng.message.proguard.j$o,java.util.List) -> a
    java.util.List b(com.umeng.message.proguard.j$o,java.util.List) -> b
    java.util.List c(com.umeng.message.proguard.j$o,java.util.List) -> c
    java.util.List d(com.umeng.message.proguard.j$o,java.util.List) -> d
    java.util.List e(com.umeng.message.proguard.j$o,java.util.List) -> e
    java.util.List f(com.umeng.message.proguard.j$o,java.util.List) -> f
    com.umeng.message.proguard.j$s a(com.umeng.message.proguard.j$o,com.umeng.message.proguard.j$s) -> a
    com.umeng.message.proguard.j$E a(com.umeng.message.proguard.j$o,com.umeng.message.proguard.j$E) -> a
    int a(com.umeng.message.proguard.j$o,int) -> a
    java.lang.Object b(com.umeng.message.proguard.j$o) -> b
    java.lang.Object c(com.umeng.message.proguard.j$o) -> c
    com.umeng.message.proguard.v d(com.umeng.message.proguard.j$o) -> d
    java.util.List e(com.umeng.message.proguard.j$o) -> e
    java.util.List f(com.umeng.message.proguard.j$o) -> f
    java.util.List g(com.umeng.message.proguard.j$o) -> g
    java.util.List h(com.umeng.message.proguard.j$o) -> h
    java.util.List i(com.umeng.message.proguard.j$o) -> i
    java.util.List j(com.umeng.message.proguard.j$o) -> j
com.umeng.message.proguard.j$o$1 -> bf.hz:
    com.umeng.message.proguard.j$o c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$o$a -> bf.ia:
    int a -> a
    java.lang.Object b -> b
    java.lang.Object c -> c
    com.umeng.message.proguard.v d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List g -> g
    com.umeng.message.proguard.D h -> h
    java.util.List i -> i
    com.umeng.message.proguard.D j -> j
    java.util.List k -> k
    com.umeng.message.proguard.D l -> l
    java.util.List m -> m
    com.umeng.message.proguard.D n -> n
    com.umeng.message.proguard.j$s o -> o
    com.umeng.message.proguard.L p -> p
    com.umeng.message.proguard.j$E q -> q
    com.umeng.message.proguard.L r -> r
    com.umeng.message.proguard.p$g l() -> h
    void aG() -> B
    com.umeng.message.proguard.j$o$a aH() -> C
    com.umeng.message.proguard.j$o$a I() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$o M() -> j
    com.umeng.message.proguard.j$o N() -> k
    com.umeng.message.proguard.j$o O() -> l
    com.umeng.message.proguard.j$o$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$o$a a(com.umeng.message.proguard.j$o) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$o$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void aI() -> D
    void aJ() -> E
    void aK() -> F
    void aL() -> G
    int B() -> p
    com.umeng.message.proguard.j$a e(int) -> a
    com.umeng.message.proguard.D aM() -> H
    void aN() -> I
    int E() -> q
    com.umeng.message.proguard.j$c g(int) -> b
    com.umeng.message.proguard.D aO() -> J
    void aP() -> K
    int H() -> r
    com.umeng.message.proguard.j$A i(int) -> c
    com.umeng.message.proguard.D aQ() -> L
    void aR() -> M
    int S() -> s
    com.umeng.message.proguard.j$k k(int) -> d
    com.umeng.message.proguard.D aS() -> N
    boolean T() -> t
    com.umeng.message.proguard.j$s U() -> u
    com.umeng.message.proguard.j$o$a b(com.umeng.message.proguard.j$s) -> a
    com.umeng.message.proguard.L aT() -> O
    com.umeng.message.proguard.j$o$a b(com.umeng.message.proguard.j$E) -> a
    com.umeng.message.proguard.L aU() -> P
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$o$a az() -> v
com.umeng.message.proguard.j$p -> bf.ib:
com.umeng.message.proguard.j$s -> bf.ic:
    com.umeng.message.proguard.j$s l -> c
    com.umeng.message.proguard.P n -> d
    com.umeng.message.proguard.B a -> a
    int o -> e
    java.lang.Object p -> f
    java.lang.Object q -> g
    boolean r -> h
    boolean s -> i
    com.umeng.message.proguard.j$s$b t -> j
    java.lang.Object u -> k
    boolean v -> l
    boolean w -> m
    boolean x -> n
    java.util.List y -> o
    byte z -> p
    int A -> q
    com.umeng.message.proguard.j$s h() -> h
    com.umeng.message.proguard.j$s i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    com.umeng.message.proguard.g p() -> n
    boolean q() -> o
    com.umeng.message.proguard.g s() -> p
    boolean t() -> q
    boolean u() -> r
    boolean v() -> s
    boolean w() -> t
    boolean x() -> u
    com.umeng.message.proguard.j$s$b y() -> v
    boolean z() -> y
    com.umeng.message.proguard.g g_() -> z
    boolean C() -> A
    boolean D() -> B
    boolean E() -> C
    boolean F() -> D
    boolean G() -> E
    boolean H() -> F
    int S() -> G
    com.umeng.message.proguard.j$G a(int) -> a
    void ae() -> Q
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$s$a T() -> H
    com.umeng.message.proguard.j$s$a U() -> J
    com.umeng.message.proguard.j$s$a a(com.umeng.message.proguard.j$s) -> a
    com.umeng.message.proguard.j$s$a V() -> K
    com.umeng.message.proguard.j$s$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    java.lang.Object a(com.umeng.message.proguard.j$s,java.lang.Object) -> a
    java.lang.Object b(com.umeng.message.proguard.j$s,java.lang.Object) -> b
    boolean a(com.umeng.message.proguard.j$s,boolean) -> a
    boolean b(com.umeng.message.proguard.j$s,boolean) -> b
    com.umeng.message.proguard.j$s$b a(com.umeng.message.proguard.j$s,com.umeng.message.proguard.j$s$b) -> a
    java.lang.Object c(com.umeng.message.proguard.j$s,java.lang.Object) -> c
    boolean c(com.umeng.message.proguard.j$s,boolean) -> c
    boolean d(com.umeng.message.proguard.j$s,boolean) -> d
    boolean e(com.umeng.message.proguard.j$s,boolean) -> e
    java.util.List a(com.umeng.message.proguard.j$s,java.util.List) -> a
    int a(com.umeng.message.proguard.j$s,int) -> a
    java.lang.Object b(com.umeng.message.proguard.j$s) -> b
    java.lang.Object c(com.umeng.message.proguard.j$s) -> c
    java.lang.Object d(com.umeng.message.proguard.j$s) -> d
    java.util.List e(com.umeng.message.proguard.j$s) -> e
com.umeng.message.proguard.j$s$1 -> bf.id:
    com.umeng.message.proguard.j$s c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$s$a -> bf.ie:
    int a -> a
    java.lang.Object b -> b
    java.lang.Object c -> c
    boolean d -> d
    boolean e -> e
    com.umeng.message.proguard.j$s$b f -> f
    java.lang.Object g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    java.util.List k -> k
    com.umeng.message.proguard.D l -> l
    com.umeng.message.proguard.p$g l() -> h
    void ag() -> t
    com.umeng.message.proguard.j$s$a an() -> u
    com.umeng.message.proguard.j$s$a I() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$s M() -> j
    com.umeng.message.proguard.j$s N() -> k
    com.umeng.message.proguard.j$s O() -> l
    com.umeng.message.proguard.j$s$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$s$a a(com.umeng.message.proguard.j$s) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$s$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.j$s$a a(boolean) -> a
    com.umeng.message.proguard.j$s$a b(boolean) -> b
    com.umeng.message.proguard.j$s$a a(com.umeng.message.proguard.j$s$b) -> a
    com.umeng.message.proguard.j$s$a c(boolean) -> c
    com.umeng.message.proguard.j$s$a d(boolean) -> d
    com.umeng.message.proguard.j$s$a e(boolean) -> e
    void ao() -> v
    int S() -> p
    com.umeng.message.proguard.j$G a(int) -> a
    com.umeng.message.proguard.D ap() -> B
    com.umeng.message.proguard.p$c A() -> q
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$s$a ae() -> r
com.umeng.message.proguard.j$s$b -> bf.if:
    com.umeng.message.proguard.j$s$b a -> a
    com.umeng.message.proguard.j$s$b b -> b
    com.umeng.message.proguard.j$s$b c -> c
    com.umeng.message.proguard.r$b g -> d
    com.umeng.message.proguard.j$s$b[] h -> e
    int i -> f
    int j -> g
    com.umeng.message.proguard.j$s$b[] k -> h
    com.umeng.message.proguard.j$s$b[] values() -> values
    com.umeng.message.proguard.j$s$b valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.umeng.message.proguard.j$s$b a(int) -> a
com.umeng.message.proguard.j$s$b$1 -> bf.ig:
com.umeng.message.proguard.j$t -> bf.ih:
com.umeng.message.proguard.j$u -> bf.ii:
    com.umeng.message.proguard.j$u e -> c
    com.umeng.message.proguard.P f -> d
    com.umeng.message.proguard.B a -> a
    int g -> e
    boolean h -> f
    boolean i -> g
    java.util.List j -> h
    byte k -> i
    int l -> j
    com.umeng.message.proguard.j$u h() -> h
    com.umeng.message.proguard.j$u i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    boolean o() -> n
    boolean p() -> o
    boolean q() -> p
    int t() -> q
    com.umeng.message.proguard.j$G a(int) -> a
    void x() -> u
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$u$a u() -> r
    com.umeng.message.proguard.j$u$a v() -> s
    com.umeng.message.proguard.j$u$a a(com.umeng.message.proguard.j$u) -> a
    com.umeng.message.proguard.j$u$a w() -> t
    com.umeng.message.proguard.j$u$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    boolean a(com.umeng.message.proguard.j$u,boolean) -> a
    boolean b(com.umeng.message.proguard.j$u,boolean) -> b
    java.util.List a(com.umeng.message.proguard.j$u,java.util.List) -> a
    int a(com.umeng.message.proguard.j$u,int) -> a
    java.util.List b(com.umeng.message.proguard.j$u) -> b
com.umeng.message.proguard.j$u$1 -> bf.ij:
    com.umeng.message.proguard.j$u c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$u$a -> bf.ik:
    int a -> a
    boolean b -> b
    boolean c -> c
    java.util.List d -> d
    com.umeng.message.proguard.D e -> e
    com.umeng.message.proguard.p$g l() -> h
    void G() -> t
    com.umeng.message.proguard.j$u$a H() -> u
    com.umeng.message.proguard.j$u$a u() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$u v() -> j
    com.umeng.message.proguard.j$u w() -> k
    com.umeng.message.proguard.j$u x() -> l
    com.umeng.message.proguard.j$u$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$u$a a(com.umeng.message.proguard.j$u) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$u$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    com.umeng.message.proguard.j$u$a a(boolean) -> a
    com.umeng.message.proguard.j$u$a b(boolean) -> b
    void I() -> v
    int t() -> p
    com.umeng.message.proguard.j$G a(int) -> a
    com.umeng.message.proguard.D K() -> B
    com.umeng.message.proguard.p$c A() -> q
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$u$a F() -> r
com.umeng.message.proguard.j$v -> bf.il:
com.umeng.message.proguard.j$w -> bf.im:
    com.umeng.message.proguard.j$w f -> c
    com.umeng.message.proguard.P g -> d
    com.umeng.message.proguard.B a -> a
    int h -> e
    java.lang.Object i -> f
    java.lang.Object j -> g
    java.lang.Object k -> h
    com.umeng.message.proguard.j$y l -> i
    byte n -> j
    int o -> k
    com.umeng.message.proguard.j$w h() -> h
    com.umeng.message.proguard.j$w i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    boolean n() -> m
    java.lang.String o() -> n
    com.umeng.message.proguard.g p() -> o
    boolean q() -> p
    java.lang.String r() -> q
    com.umeng.message.proguard.g s() -> r
    boolean t() -> s
    java.lang.String u() -> t
    com.umeng.message.proguard.g v() -> u
    boolean w() -> v
    com.umeng.message.proguard.j$y x() -> y
    void C() -> C
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$w$a z() -> z
    com.umeng.message.proguard.j$w$a A() -> A
    com.umeng.message.proguard.j$w$a a(com.umeng.message.proguard.j$w) -> a
    com.umeng.message.proguard.j$w$a B() -> B
    com.umeng.message.proguard.j$w$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    java.lang.Object a(com.umeng.message.proguard.j$w,java.lang.Object) -> a
    java.lang.Object b(com.umeng.message.proguard.j$w,java.lang.Object) -> b
    java.lang.Object c(com.umeng.message.proguard.j$w,java.lang.Object) -> c
    com.umeng.message.proguard.j$y a(com.umeng.message.proguard.j$w,com.umeng.message.proguard.j$y) -> a
    int a(com.umeng.message.proguard.j$w,int) -> a
    java.lang.Object b(com.umeng.message.proguard.j$w) -> b
    java.lang.Object c(com.umeng.message.proguard.j$w) -> c
    java.lang.Object d(com.umeng.message.proguard.j$w) -> d
com.umeng.message.proguard.j$w$1 -> bf.in:
    com.umeng.message.proguard.j$w c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$w$a -> bf.io:
    int a -> a
    java.lang.Object b -> b
    java.lang.Object c -> c
    java.lang.Object d -> d
    com.umeng.message.proguard.j$y e -> e
    com.umeng.message.proguard.L f -> f
    com.umeng.message.proguard.p$g l() -> h
    void K() -> s
    com.umeng.message.proguard.j$w$a L() -> t
    com.umeng.message.proguard.j$w$a z() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$w A() -> j
    com.umeng.message.proguard.j$w B() -> k
    com.umeng.message.proguard.j$w C() -> l
    com.umeng.message.proguard.j$w$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$w$a a(com.umeng.message.proguard.j$w) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$w$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    boolean w() -> p
    com.umeng.message.proguard.j$y x() -> q
    com.umeng.message.proguard.j$w$a b(com.umeng.message.proguard.j$y) -> a
    com.umeng.message.proguard.L M() -> u
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$w$a I() -> r
com.umeng.message.proguard.j$x -> bf.ip:
com.umeng.message.proguard.j$y -> bf.iq:
    com.umeng.message.proguard.j$y c -> c
    com.umeng.message.proguard.P d -> d
    com.umeng.message.proguard.B a -> a
    java.util.List e -> e
    byte f -> f
    int g -> g
    com.umeng.message.proguard.j$y h() -> h
    com.umeng.message.proguard.j$y i() -> i
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.B m() -> k
    int p() -> m
    com.umeng.message.proguard.j$G a(int) -> a
    void t() -> q
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.j$y$a q() -> n
    com.umeng.message.proguard.j$y$a r() -> o
    com.umeng.message.proguard.j$y$a a(com.umeng.message.proguard.j$y) -> a
    com.umeng.message.proguard.j$y$a s() -> p
    com.umeng.message.proguard.j$y$a a(com.umeng.message.proguard.p$b) -> a
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    java.util.List a(com.umeng.message.proguard.j$y,java.util.List) -> a
    java.util.List b(com.umeng.message.proguard.j$y) -> b
com.umeng.message.proguard.j$y$1 -> bf.ir:
    com.umeng.message.proguard.j$y c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.j$y$a -> bf.is:
    int a -> a
    java.util.List b -> b
    com.umeng.message.proguard.D c -> c
    com.umeng.message.proguard.p$g l() -> h
    void y() -> t
    com.umeng.message.proguard.j$y$a z() -> u
    com.umeng.message.proguard.j$y$a q() -> i
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.j$y r() -> j
    com.umeng.message.proguard.j$y s() -> k
    com.umeng.message.proguard.j$y t() -> l
    com.umeng.message.proguard.j$y$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.j$y$a a(com.umeng.message.proguard.j$y) -> a
    boolean a() -> g
    com.umeng.message.proguard.j$y$a e(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> d
    void C() -> v
    int p() -> p
    com.umeng.message.proguard.j$G a(int) -> a
    com.umeng.message.proguard.D D() -> B
    com.umeng.message.proguard.p$c A() -> q
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.b$a b(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> c
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.j$y$a x() -> r
com.umeng.message.proguard.j$z -> bf.it:
com.umeng.message.proguard.k -> bf.iu:
    java.lang.String b(com.umeng.message.proguard.k$g,com.umeng.message.proguard.k$a,java.lang.String) -> b
    java.lang.String a(com.umeng.message.proguard.k$g,com.umeng.message.proguard.k$a,java.lang.String) -> a
com.umeng.message.proguard.k$1 -> bf.iv:
    int[] a -> a
    int[] b -> b
com.umeng.message.proguard.k$a -> bf.iw:
    int a -> a
    com.umeng.message.proguard.j$a b -> b
    java.lang.String c -> c
    com.umeng.message.proguard.k$g d -> d
    com.umeng.message.proguard.k$a e -> e
    com.umeng.message.proguard.k$a[] f -> f
    com.umeng.message.proguard.k$d[] g -> g
    com.umeng.message.proguard.k$f[] h -> h
    com.umeng.message.proguard.k$f[] i -> i
    com.umeng.message.proguard.j$a b() -> a
    java.lang.String c() -> b
    java.lang.String d() -> c
    com.umeng.message.proguard.k$g e() -> d
    com.umeng.message.proguard.j$u g() -> e
    java.util.List h() -> f
    java.util.List j() -> g
    boolean a(int) -> a
    com.umeng.message.proguard.k$f b(int) -> b
    void m() -> i
    void a(com.umeng.message.proguard.j$a) -> a
    com.umeng.message.proguard.x l() -> h
    void a(com.umeng.message.proguard.k$a) -> a
    void a(com.umeng.message.proguard.k$a,com.umeng.message.proguard.j$a) -> a
com.umeng.message.proguard.k$b -> bf.ix:
    java.util.Set b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    java.util.Map e -> e
    boolean a -> a
    void a(com.umeng.message.proguard.k$g) -> a
    com.umeng.message.proguard.k$h a(java.lang.String) -> a
    com.umeng.message.proguard.k$h a(java.lang.String,com.umeng.message.proguard.k$b$c) -> a
    boolean a(com.umeng.message.proguard.k$h) -> a
    boolean b(com.umeng.message.proguard.k$h) -> b
    com.umeng.message.proguard.k$h a(java.lang.String,com.umeng.message.proguard.k$h,com.umeng.message.proguard.k$b$c) -> a
    void c(com.umeng.message.proguard.k$h) -> c
    void a(java.lang.String,com.umeng.message.proguard.k$g) -> a
    void a(com.umeng.message.proguard.k$f) -> a
    void a(com.umeng.message.proguard.k$e) -> a
    void d(com.umeng.message.proguard.k$h) -> d
    java.util.Map a(com.umeng.message.proguard.k$b) -> a
    java.util.Map b(com.umeng.message.proguard.k$b) -> b
com.umeng.message.proguard.k$b$a -> bf.iy:
    com.umeng.message.proguard.k$h a -> a
    int b -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.umeng.message.proguard.k$b$b -> bf.iz:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.message.proguard.k$g c -> c
    com.umeng.message.proguard.x l() -> h
    java.lang.String c() -> b
    java.lang.String d() -> c
    com.umeng.message.proguard.k$g e() -> d
com.umeng.message.proguard.k$b$c -> bf.ja:
    com.umeng.message.proguard.k$b$c a -> a
    com.umeng.message.proguard.k$b$c b -> b
    com.umeng.message.proguard.k$b$c c -> c
    com.umeng.message.proguard.k$b$c[] d -> d
    com.umeng.message.proguard.k$b$c[] values() -> values
    com.umeng.message.proguard.k$b$c valueOf(java.lang.String) -> valueOf
com.umeng.message.proguard.k$c -> bf.jb:
    java.lang.String b -> a
    com.umeng.message.proguard.x c -> b
    java.lang.String d -> c
com.umeng.message.proguard.k$d -> bf.jc:
    int a -> a
    com.umeng.message.proguard.j$c b -> b
    java.lang.String c -> c
    com.umeng.message.proguard.k$g d -> d
    com.umeng.message.proguard.k$a e -> e
    com.umeng.message.proguard.k$e[] f -> f
    com.umeng.message.proguard.j$c b() -> a
    java.lang.String c() -> b
    java.lang.String d() -> c
    com.umeng.message.proguard.k$g e() -> d
    java.util.List h() -> e
    com.umeng.message.proguard.k$e a(java.lang.String) -> a
    com.umeng.message.proguard.k$e a(int) -> a
    void a(com.umeng.message.proguard.j$c) -> a
    com.umeng.message.proguard.x l() -> h
    void a(com.umeng.message.proguard.k$d,com.umeng.message.proguard.j$c) -> a
com.umeng.message.proguard.k$e -> bf.jd:
    int a -> a
    com.umeng.message.proguard.j$g b -> b
    java.lang.String c -> c
    com.umeng.message.proguard.k$g d -> d
    com.umeng.message.proguard.k$d e -> e
    com.umeng.message.proguard.j$g f() -> e
    java.lang.String c() -> b
    int a() -> a
    java.lang.String d() -> c
    com.umeng.message.proguard.k$g e() -> d
    com.umeng.message.proguard.k$d g() -> f
    void a(com.umeng.message.proguard.j$g) -> a
    com.umeng.message.proguard.x l() -> h
    void a(com.umeng.message.proguard.k$e,com.umeng.message.proguard.j$g) -> a
com.umeng.message.proguard.k$f -> bf.je:
    com.umeng.message.proguard.S$a[] a -> a
    int b -> b
    com.umeng.message.proguard.j$k c -> c
    java.lang.String d -> d
    com.umeng.message.proguard.k$g e -> e
    com.umeng.message.proguard.k$a f -> f
    com.umeng.message.proguard.k$f$b g -> g
    com.umeng.message.proguard.k$a h -> h
    com.umeng.message.proguard.k$a i -> i
    com.umeng.message.proguard.k$d j -> j
    java.lang.Object k -> k
    int a() -> a
    com.umeng.message.proguard.j$k b() -> e
    java.lang.String c() -> b
    int f() -> f
    java.lang.String d() -> c
    com.umeng.message.proguard.k$f$a g() -> g
    com.umeng.message.proguard.S$b h() -> i
    com.umeng.message.proguard.k$g e() -> d
    com.umeng.message.proguard.k$f$b i() -> j
    com.umeng.message.proguard.S$a j() -> k
    boolean k() -> l
    boolean m() -> m
    boolean n() -> n
    boolean o() -> o
    boolean p() -> p
    java.lang.Object r() -> q
    com.umeng.message.proguard.j$m s() -> r
    boolean t() -> s
    com.umeng.message.proguard.k$a u() -> t
    com.umeng.message.proguard.k$a v() -> u
    com.umeng.message.proguard.k$a w() -> v
    com.umeng.message.proguard.k$d x() -> w
    int a(com.umeng.message.proguard.k$f) -> a
    void z() -> x
    void a(com.umeng.message.proguard.j$k) -> a
    com.umeng.message.proguard.y$a a(com.umeng.message.proguard.y$a,com.umeng.message.proguard.y) -> a
    com.umeng.message.proguard.x l() -> h
    int compareTo(java.lang.Object) -> compareTo
    void b(com.umeng.message.proguard.k$f) -> b
    void a(com.umeng.message.proguard.k$f,com.umeng.message.proguard.j$k) -> a
com.umeng.message.proguard.k$f$a -> bf.jf:
    com.umeng.message.proguard.k$f$a a -> a
    com.umeng.message.proguard.k$f$a b -> b
    com.umeng.message.proguard.k$f$a c -> c
    com.umeng.message.proguard.k$f$a d -> d
    com.umeng.message.proguard.k$f$a e -> e
    com.umeng.message.proguard.k$f$a f -> f
    com.umeng.message.proguard.k$f$a g -> g
    com.umeng.message.proguard.k$f$a h -> h
    com.umeng.message.proguard.k$f$a i -> i
    java.lang.Object j -> j
    com.umeng.message.proguard.k$f$a[] k -> k
    com.umeng.message.proguard.k$f$a[] values() -> values
    com.umeng.message.proguard.k$f$a valueOf(java.lang.String) -> valueOf
    java.lang.Object a(com.umeng.message.proguard.k$f$a) -> a
com.umeng.message.proguard.k$f$b -> bf.jg:
    com.umeng.message.proguard.k$f$b a -> a
    com.umeng.message.proguard.k$f$b b -> b
    com.umeng.message.proguard.k$f$b c -> c
    com.umeng.message.proguard.k$f$b d -> d
    com.umeng.message.proguard.k$f$b e -> e
    com.umeng.message.proguard.k$f$b f -> f
    com.umeng.message.proguard.k$f$b g -> g
    com.umeng.message.proguard.k$f$b h -> h
    com.umeng.message.proguard.k$f$b i -> i
    com.umeng.message.proguard.k$f$b j -> j
    com.umeng.message.proguard.k$f$b k -> k
    com.umeng.message.proguard.k$f$b l -> l
    com.umeng.message.proguard.k$f$b m -> m
    com.umeng.message.proguard.k$f$b n -> n
    com.umeng.message.proguard.k$f$b o -> o
    com.umeng.message.proguard.k$f$b p -> p
    com.umeng.message.proguard.k$f$b q -> q
    com.umeng.message.proguard.k$f$b r -> r
    com.umeng.message.proguard.k$f$a s -> s
    com.umeng.message.proguard.k$f$b[] t -> t
    com.umeng.message.proguard.k$f$b[] values() -> values
    com.umeng.message.proguard.k$f$b valueOf(java.lang.String) -> valueOf
    com.umeng.message.proguard.k$f$a b() -> a
    com.umeng.message.proguard.k$f$b a(com.umeng.message.proguard.j$k$c) -> a
com.umeng.message.proguard.k$g -> bf.jh:
    com.umeng.message.proguard.j$o a -> a
    com.umeng.message.proguard.k$a[] b -> b
    com.umeng.message.proguard.k$d[] c -> c
    com.umeng.message.proguard.k$j[] d -> d
    com.umeng.message.proguard.k$f[] e -> e
    com.umeng.message.proguard.k$g[] f -> f
    com.umeng.message.proguard.k$g[] g -> g
    com.umeng.message.proguard.k$b h -> h
    com.umeng.message.proguard.j$o a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.util.List e() -> d
    java.util.List j() -> e
    com.umeng.message.proguard.k$g a(com.umeng.message.proguard.j$o,com.umeng.message.proguard.k$g[]) -> a
    void a(java.lang.String[],com.umeng.message.proguard.k$g[],com.umeng.message.proguard.k$g$a) -> a
    void k() -> f
    void a(com.umeng.message.proguard.j$o) -> a
    com.umeng.message.proguard.k$b a(com.umeng.message.proguard.k$g) -> a
com.umeng.message.proguard.k$g$a -> bf.ji:
    com.umeng.message.proguard.m a(com.umeng.message.proguard.k$g) -> a
com.umeng.message.proguard.k$h -> bf.jj:
    com.umeng.message.proguard.x l() -> h
    java.lang.String c() -> b
    java.lang.String d() -> c
    com.umeng.message.proguard.k$g e() -> d
com.umeng.message.proguard.k$i -> bf.jk:
    int a -> a
    com.umeng.message.proguard.j$w b -> b
    java.lang.String c -> c
    com.umeng.message.proguard.k$g d -> d
    com.umeng.message.proguard.k$j e -> e
    com.umeng.message.proguard.k$a f -> f
    com.umeng.message.proguard.k$a g -> g
    com.umeng.message.proguard.j$w b() -> a
    java.lang.String c() -> b
    java.lang.String d() -> c
    com.umeng.message.proguard.k$g e() -> d
    void j() -> e
    void a(com.umeng.message.proguard.j$w) -> a
    com.umeng.message.proguard.x l() -> h
    void a(com.umeng.message.proguard.k$i) -> a
    void a(com.umeng.message.proguard.k$i,com.umeng.message.proguard.j$w) -> a
com.umeng.message.proguard.k$j -> bf.jl:
    int a -> a
    com.umeng.message.proguard.j$A b -> b
    java.lang.String c -> c
    com.umeng.message.proguard.k$g d -> d
    com.umeng.message.proguard.k$i[] e -> e
    com.umeng.message.proguard.j$A b() -> a
    java.lang.String c() -> b
    java.lang.String d() -> c
    com.umeng.message.proguard.k$g e() -> d
    void h() -> e
    void a(com.umeng.message.proguard.j$A) -> a
    com.umeng.message.proguard.x l() -> h
    void a(com.umeng.message.proguard.k$j) -> a
    void a(com.umeng.message.proguard.k$j,com.umeng.message.proguard.j$A) -> a
com.umeng.message.proguard.l -> bf.jm:
    com.umeng.message.proguard.k$a a -> a
    com.umeng.message.proguard.o b -> b
    com.umeng.message.proguard.P c -> c
    int d -> d
    com.umeng.message.proguard.l a(com.umeng.message.proguard.k$a) -> a
    com.umeng.message.proguard.l$a b(com.umeng.message.proguard.k$a) -> b
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.l h() -> h
    java.util.Map a_() -> c
    boolean a_(com.umeng.message.proguard.k$f) -> a
    java.lang.Object b(com.umeng.message.proguard.k$f) -> b
    com.umeng.message.proguard.P b_() -> d_
    boolean b(com.umeng.message.proguard.k$a,com.umeng.message.proguard.o) -> b
    boolean a() -> g
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.l$a k() -> i
    com.umeng.message.proguard.l$a l() -> l
    com.umeng.message.proguard.B m() -> k
    void d(com.umeng.message.proguard.k$f) -> c
    com.umeng.message.proguard.x$a M() -> w
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.y$a O() -> j
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.k$a a(com.umeng.message.proguard.l) -> a
    com.umeng.message.proguard.o b(com.umeng.message.proguard.l) -> b
    com.umeng.message.proguard.P c(com.umeng.message.proguard.l) -> c
    boolean a(com.umeng.message.proguard.k$a,com.umeng.message.proguard.o) -> a
com.umeng.message.proguard.l$1 -> bf.jn:
    com.umeng.message.proguard.l a -> a
    com.umeng.message.proguard.l c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
    java.lang.Object d(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> a
com.umeng.message.proguard.l$a -> bf.jo:
    com.umeng.message.proguard.k$a a -> a
    com.umeng.message.proguard.o b -> b
    com.umeng.message.proguard.P c -> c
    com.umeng.message.proguard.l$a d(com.umeng.message.proguard.x) -> d
    com.umeng.message.proguard.l l() -> h
    com.umeng.message.proguard.l m() -> i
    com.umeng.message.proguard.l$a n() -> j
    boolean a() -> g
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.l o() -> k
    java.util.Map a_() -> c
    com.umeng.message.proguard.l$a d(com.umeng.message.proguard.k$f) -> c
    boolean a_(com.umeng.message.proguard.k$f) -> a
    java.lang.Object b(com.umeng.message.proguard.k$f) -> b
    com.umeng.message.proguard.l$a a(com.umeng.message.proguard.k$f,java.lang.Object) -> a
    com.umeng.message.proguard.l$a b(com.umeng.message.proguard.k$f,java.lang.Object) -> b
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.l$a c(com.umeng.message.proguard.P) -> b
    com.umeng.message.proguard.l$a d(com.umeng.message.proguard.P) -> c
    void h(com.umeng.message.proguard.k$f) -> e
    void q() -> l
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.P) -> a
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.x) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x$a e(com.umeng.message.proguard.P) -> d
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.k$f,java.lang.Object) -> c
    com.umeng.message.proguard.x$a d(com.umeng.message.proguard.k$f,java.lang.Object) -> d
    com.umeng.message.proguard.x$a g(com.umeng.message.proguard.k$f) -> d
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.x R() -> a
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
com.umeng.message.proguard.m -> bf.jp:
    java.util.Map a -> a
    java.util.Map b -> b
    com.umeng.message.proguard.m c -> c
    com.umeng.message.proguard.m b() -> a
    com.umeng.message.proguard.m$b a(com.umeng.message.proguard.k$a,int) -> a
com.umeng.message.proguard.m$a -> bf.jq:
    com.umeng.message.proguard.k$a a -> a
    int b -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.umeng.message.proguard.m$b -> bf.jr:
    com.umeng.message.proguard.k$f a -> a
    com.umeng.message.proguard.x b -> b
com.umeng.message.proguard.n -> bf.js:
    boolean a -> a
    java.util.Map b -> b
    com.umeng.message.proguard.n c -> c
    boolean e() -> b
    com.umeng.message.proguard.n g() -> c
com.umeng.message.proguard.o -> bf.jt:
    com.umeng.message.proguard.M a -> a
    boolean b -> b
    boolean c -> c
    com.umeng.message.proguard.o d -> d
    com.umeng.message.proguard.o a() -> a
    com.umeng.message.proguard.o b() -> b
    void c() -> c
    boolean d() -> d
    com.umeng.message.proguard.o e() -> e
    java.util.Map g() -> f
    void a(java.util.Map,java.util.Map$Entry) -> a
    java.util.Iterator h() -> g
    boolean a(com.umeng.message.proguard.o$a) -> a
    java.lang.Object b(com.umeng.message.proguard.o$a) -> b
    void a(com.umeng.message.proguard.o$a,java.lang.Object) -> a
    void b(com.umeng.message.proguard.o$a,java.lang.Object) -> b
    void a(com.umeng.message.proguard.S$a,java.lang.Object) -> a
    boolean i() -> h
    boolean a(java.util.Map$Entry) -> a
    int a(com.umeng.message.proguard.S$a,boolean) -> a
    void a(com.umeng.message.proguard.o) -> a
    void b(java.util.Map$Entry) -> b
    java.lang.Object a(com.umeng.message.proguard.h,com.umeng.message.proguard.S$a) -> a
    void a(com.umeng.message.proguard.i) -> a
    void b(com.umeng.message.proguard.i) -> b
    void a(java.util.Map$Entry,com.umeng.message.proguard.i) -> a
    void a(com.umeng.message.proguard.i,com.umeng.message.proguard.S$a,int,java.lang.Object) -> a
    void a(com.umeng.message.proguard.i,com.umeng.message.proguard.S$a,java.lang.Object) -> a
    void a(com.umeng.message.proguard.o$a,java.lang.Object,com.umeng.message.proguard.i) -> a
    int j() -> i
    int k() -> j
    int c(java.util.Map$Entry) -> c
    int a(com.umeng.message.proguard.S$a,int,java.lang.Object) -> a
    int b(com.umeng.message.proguard.S$a,java.lang.Object) -> b
    int c(com.umeng.message.proguard.o$a,java.lang.Object) -> c
    java.lang.Object clone() -> clone
com.umeng.message.proguard.o$1 -> bf.ju:
    int[] a -> a
    int[] b -> b
com.umeng.message.proguard.o$a -> bf.jv:
    int f() -> f
    com.umeng.message.proguard.S$a j() -> k
    com.umeng.message.proguard.S$b h() -> i
    boolean n() -> n
    boolean o() -> o
    com.umeng.message.proguard.y$a a(com.umeng.message.proguard.y$a,com.umeng.message.proguard.y) -> a
com.umeng.message.proguard.p -> bf.jw:
    boolean m -> b
    com.umeng.message.proguard.B m() -> k
    com.umeng.message.proguard.p$g l() -> l
    com.umeng.message.proguard.k$a J() -> b
    java.util.Map h() -> h
    boolean a() -> g
    java.util.Map a_() -> c
    boolean a_(com.umeng.message.proguard.k$f) -> a
    java.lang.Object b(com.umeng.message.proguard.k$f) -> b
    com.umeng.message.proguard.P b_() -> d_
    boolean a(com.umeng.message.proguard.h,com.umeng.message.proguard.P$a,com.umeng.message.proguard.n,int) -> a
    void ad() -> M
    com.umeng.message.proguard.x$a b(com.umeng.message.proguard.p$b) -> b
    java.lang.reflect.Method b(java.lang.Class,java.lang.String,java.lang.Class[]) -> b
    java.lang.Object b(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> b
    java.util.Map a(com.umeng.message.proguard.p) -> a
    java.lang.reflect.Method a(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    java.lang.Object a(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> a
com.umeng.message.proguard.p$1 -> bf.jx:
com.umeng.message.proguard.p$a -> bf.jy:
    com.umeng.message.proguard.p$b a -> a
    com.umeng.message.proguard.p$a$a b -> b
    boolean c -> c
    com.umeng.message.proguard.P d -> d
    void aB() -> w
    void aC() -> x
    boolean aD() -> y
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.p$g l() -> h
    com.umeng.message.proguard.k$a J() -> b
    java.util.Map a_() -> c
    java.util.Map k() -> i
    com.umeng.message.proguard.x$a g(com.umeng.message.proguard.k$f) -> d
    boolean a_(com.umeng.message.proguard.k$f) -> a
    java.lang.Object b(com.umeng.message.proguard.k$f) -> b
    com.umeng.message.proguard.p$a a(com.umeng.message.proguard.k$f,java.lang.Object) -> a
    com.umeng.message.proguard.p$a b(com.umeng.message.proguard.k$f,java.lang.Object) -> b
    com.umeng.message.proguard.p$a c(com.umeng.message.proguard.P) -> b
    com.umeng.message.proguard.p$a d(com.umeng.message.proguard.P) -> c
    boolean a() -> g
    com.umeng.message.proguard.P b_() -> d_
    com.umeng.message.proguard.p$b aE() -> z
    void aF() -> A
    com.umeng.message.proguard.a$a a(com.umeng.message.proguard.P) -> a
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x$a e(com.umeng.message.proguard.P) -> d
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.k$f,java.lang.Object) -> c
    com.umeng.message.proguard.x$a d(com.umeng.message.proguard.k$f,java.lang.Object) -> d
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    java.util.Map a(com.umeng.message.proguard.p$a) -> a
com.umeng.message.proguard.p$a$a -> bf.jz:
    com.umeng.message.proguard.p$a a -> a
    void a() -> e
com.umeng.message.proguard.p$b -> bf.ka:
    void a() -> e
com.umeng.message.proguard.p$c -> bf.kb:
    com.umeng.message.proguard.o a -> a
    com.umeng.message.proguard.p$c A() -> q
    void k() -> i
    boolean af() -> s
    com.umeng.message.proguard.o m() -> j
    boolean a() -> g
    java.util.Map a_() -> c
    java.lang.Object b(com.umeng.message.proguard.k$f) -> b
    boolean a_(com.umeng.message.proguard.k$f) -> a
    com.umeng.message.proguard.p$c e(com.umeng.message.proguard.k$f,java.lang.Object) -> e
    com.umeng.message.proguard.p$c f(com.umeng.message.proguard.k$f,java.lang.Object) -> f
    void a(com.umeng.message.proguard.p$d) -> a
    void h(com.umeng.message.proguard.k$f) -> c
    com.umeng.message.proguard.p$a b(com.umeng.message.proguard.k$f,java.lang.Object) -> b
    com.umeng.message.proguard.p$a a(com.umeng.message.proguard.k$f,java.lang.Object) -> a
    com.umeng.message.proguard.p$a ai() -> m
    com.umeng.message.proguard.a$a d() -> e
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.k$f,java.lang.Object) -> c
    com.umeng.message.proguard.x$a d(com.umeng.message.proguard.k$f,java.lang.Object) -> d
    com.umeng.message.proguard.b$a f() -> f
    java.lang.Object clone() -> clone
    com.umeng.message.proguard.o a(com.umeng.message.proguard.p$c) -> a
com.umeng.message.proguard.p$d -> bf.kc:
    com.umeng.message.proguard.o a -> a
    boolean W() -> L
    boolean a() -> g
    boolean a(com.umeng.message.proguard.h,com.umeng.message.proguard.P$a,com.umeng.message.proguard.n,int) -> a
    void ad() -> M
    com.umeng.message.proguard.p$d$a X() -> N
    int Z() -> O
    java.util.Map ab() -> P
    java.util.Map a_() -> c
    boolean a_(com.umeng.message.proguard.k$f) -> a
    java.lang.Object b(com.umeng.message.proguard.k$f) -> b
    void d(com.umeng.message.proguard.k$f) -> c
    com.umeng.message.proguard.o a(com.umeng.message.proguard.p$d) -> a
com.umeng.message.proguard.p$d$a -> bf.kd:
    java.util.Iterator b -> b
    java.util.Map$Entry c -> c
    boolean d -> d
    com.umeng.message.proguard.p$d a -> a
    void a(int,com.umeng.message.proguard.i) -> a
com.umeng.message.proguard.p$e -> bf.ke:
com.umeng.message.proguard.p$g -> bf.kf:
    com.umeng.message.proguard.k$a a -> a
    com.umeng.message.proguard.p$g$a[] b -> b
    java.lang.String[] c -> c
    boolean d -> d
    com.umeng.message.proguard.p$g a(java.lang.Class,java.lang.Class) -> a
    com.umeng.message.proguard.p$g$a a(com.umeng.message.proguard.k$f) -> a
    com.umeng.message.proguard.k$a a(com.umeng.message.proguard.p$g) -> a
    com.umeng.message.proguard.p$g$a a(com.umeng.message.proguard.p$g,com.umeng.message.proguard.k$f) -> a
com.umeng.message.proguard.p$g$a -> bf.kg:
    java.lang.Object a(com.umeng.message.proguard.p) -> a
    java.lang.Object a(com.umeng.message.proguard.p$a) -> a
    void a(com.umeng.message.proguard.p$a,java.lang.Object) -> a
    void b(com.umeng.message.proguard.p$a,java.lang.Object) -> b
    boolean b(com.umeng.message.proguard.p) -> b
    boolean b(com.umeng.message.proguard.p$a) -> b
    com.umeng.message.proguard.x$a a() -> a
com.umeng.message.proguard.p$g$b -> bf.kh:
    java.lang.reflect.Method k -> k
    java.lang.reflect.Method l -> l
    java.lang.Object a(com.umeng.message.proguard.p) -> a
    java.lang.Object a(com.umeng.message.proguard.p$a) -> a
    void b(com.umeng.message.proguard.p$a,java.lang.Object) -> b
com.umeng.message.proguard.p$g$c -> bf.ki:
    java.lang.Class a -> a
    java.lang.reflect.Method b -> b
    java.lang.reflect.Method c -> c
    java.lang.reflect.Method d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.reflect.Method h -> h
    java.lang.reflect.Method i -> i
    java.lang.reflect.Method j -> j
    java.lang.Object a(com.umeng.message.proguard.p) -> a
    java.lang.Object a(com.umeng.message.proguard.p$a) -> a
    void a(com.umeng.message.proguard.p$a,java.lang.Object) -> a
    void b(com.umeng.message.proguard.p$a,java.lang.Object) -> b
    boolean b(com.umeng.message.proguard.p) -> b
    boolean b(com.umeng.message.proguard.p$a) -> b
    void d(com.umeng.message.proguard.p$a) -> c
    com.umeng.message.proguard.x$a a() -> a
com.umeng.message.proguard.p$g$d -> bf.kj:
    java.lang.reflect.Method k -> k
    java.lang.Object a(java.lang.Object) -> a
    void b(com.umeng.message.proguard.p$a,java.lang.Object) -> b
    com.umeng.message.proguard.x$a a() -> a
com.umeng.message.proguard.p$g$e -> bf.kk:
    java.lang.reflect.Method h -> h
    java.lang.reflect.Method i -> i
    java.lang.Object a(com.umeng.message.proguard.p) -> a
    java.lang.Object a(com.umeng.message.proguard.p$a) -> a
    void a(com.umeng.message.proguard.p$a,java.lang.Object) -> a
com.umeng.message.proguard.p$g$f -> bf.kl:
    java.lang.Class a -> a
    java.lang.reflect.Method b -> b
    java.lang.reflect.Method c -> c
    java.lang.reflect.Method d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.Object a(com.umeng.message.proguard.p) -> a
    java.lang.Object a(com.umeng.message.proguard.p$a) -> a
    void a(com.umeng.message.proguard.p$a,java.lang.Object) -> a
    void b(com.umeng.message.proguard.p$a,java.lang.Object) -> b
    boolean b(com.umeng.message.proguard.p) -> b
    boolean b(com.umeng.message.proguard.p$a) -> b
    com.umeng.message.proguard.x$a a() -> a
com.umeng.message.proguard.p$g$g -> bf.km:
    java.lang.reflect.Method h -> h
    java.lang.reflect.Method i -> i
    java.lang.Object a(java.lang.Object) -> a
    void a(com.umeng.message.proguard.p$a,java.lang.Object) -> a
    com.umeng.message.proguard.x$a a() -> a
com.umeng.message.proguard.r -> bf.kn:
com.umeng.message.proguard.r$a -> bf.ko:
    int a() -> a
com.umeng.message.proguard.r$b -> bf.kp:
com.umeng.message.proguard.s -> bf.kq:
    com.umeng.message.proguard.y b -> a
    com.umeng.message.proguard.s a(com.umeng.message.proguard.y) -> a
    com.umeng.message.proguard.y a() -> a
    com.umeng.message.proguard.s b() -> b
    com.umeng.message.proguard.s c() -> c
    com.umeng.message.proguard.s d() -> d
    com.umeng.message.proguard.s e() -> e
    com.umeng.message.proguard.s f() -> f
    com.umeng.message.proguard.s g() -> g
    com.umeng.message.proguard.s h() -> h
    com.umeng.message.proguard.s i() -> i
com.umeng.message.proguard.t -> bf.kr:
    com.umeng.message.proguard.y a -> a
    com.umeng.message.proguard.n b -> b
    com.umeng.message.proguard.g c -> c
    com.umeng.message.proguard.y d -> d
    boolean e -> e
    com.umeng.message.proguard.y a() -> a
    com.umeng.message.proguard.y a(com.umeng.message.proguard.y) -> a
    int b() -> b
    com.umeng.message.proguard.g c() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void d() -> d
com.umeng.message.proguard.t$1 -> bf.ks:
com.umeng.message.proguard.t$a -> bf.kt:
    java.util.Map$Entry a -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    com.umeng.message.proguard.t a() -> a
    java.lang.Object setValue(java.lang.Object) -> setValue
com.umeng.message.proguard.t$b -> bf.ku:
    java.util.Iterator a -> a
    boolean hasNext() -> hasNext
    java.util.Map$Entry a() -> a
    void remove() -> remove
    java.lang.Object next() -> next
com.umeng.message.proguard.u -> bf.kv:
    com.umeng.message.proguard.v a -> a
    java.util.List b -> b
    java.lang.String a(int) -> a
    int size() -> size
    java.lang.String a(int,java.lang.String) -> a
    void b(int,java.lang.String) -> b
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.String b(int) -> c
    void clear() -> clear
    void a(com.umeng.message.proguard.g) -> a
    com.umeng.message.proguard.g c(int) -> b
    java.lang.String a(java.lang.Object) -> a
    java.util.List a() -> a
    java.lang.Object remove(int) -> remove
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.umeng.message.proguard.v -> bf.kw:
    com.umeng.message.proguard.g c(int) -> b
    void a(com.umeng.message.proguard.g) -> a
    java.util.List a() -> a
com.umeng.message.proguard.w -> bf.kx:
    byte[] f -> c
    int g -> d
    byte a(int) -> a
    int a() -> a
    void a(byte[],int,int,int) -> a
    java.lang.String b(java.lang.String) -> a
    boolean i() -> b
    int a(int,int,int) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.umeng.message.proguard.w,int,int) -> a
    int hashCode() -> hashCode
    int o() -> c
    int b(int,int,int) -> b
    java.io.InputStream j() -> e
    com.umeng.message.proguard.h k() -> d
    com.umeng.message.proguard.g$a c() -> f
    int b() -> j
    java.util.Iterator iterator() -> iterator
com.umeng.message.proguard.w$1 -> bf.ky:
com.umeng.message.proguard.w$a -> bf.kz:
    int b -> b
    int c -> c
    com.umeng.message.proguard.w a -> a
    boolean hasNext() -> hasNext
    java.lang.Byte a() -> a
    byte b() -> b
    void remove() -> remove
    java.lang.Object next() -> next
com.umeng.message.proguard.x -> bf.la:
    com.umeng.message.proguard.B m() -> k
    com.umeng.message.proguard.x$a N() -> x
    com.umeng.message.proguard.x$a M() -> w
com.umeng.message.proguard.x$a -> bf.lb:
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.x) -> c
    com.umeng.message.proguard.x ak() -> o
    com.umeng.message.proguard.x aj() -> n
    com.umeng.message.proguard.k$a J() -> b
    com.umeng.message.proguard.x$a g(com.umeng.message.proguard.k$f) -> d
    com.umeng.message.proguard.x$a d(com.umeng.message.proguard.k$f,java.lang.Object) -> d
    com.umeng.message.proguard.x$a c(com.umeng.message.proguard.k$f,java.lang.Object) -> c
    com.umeng.message.proguard.x$a e(com.umeng.message.proguard.P) -> d
    com.umeng.message.proguard.x$a d(com.umeng.message.proguard.g,com.umeng.message.proguard.n) -> c
com.umeng.message.proguard.y -> bf.lc:
    void a(com.umeng.message.proguard.i) -> a
    int d() -> e
    com.umeng.message.proguard.B m() -> k
    com.umeng.message.proguard.g f() -> c_
    com.umeng.message.proguard.y$a O() -> j
com.umeng.message.proguard.y$a -> bf.ld:
    com.umeng.message.proguard.y am() -> d
    com.umeng.message.proguard.y$a c(com.umeng.message.proguard.h,com.umeng.message.proguard.n) -> b
com.umeng.message.proguard.z -> bf.le:
    boolean a() -> g
com.umeng.message.tag.TagManager -> bg.a:
    java.lang.String a -> a
    com.umeng.message.tag.TagManager d -> b
    android.content.Context e -> c
    com.umeng.message.tag.TagManager getInstance(android.content.Context) -> a
com.yongdata.agent.sdk.android.YDAgent -> com.yongdata.agent.sdk.android.YDAgent:
    java.lang.String TAG -> TAG
    com.yongdata.agent.sdk.android.YDAppAgent ydAppAgent -> ydAppAgent
    boolean initialized -> initialized
    java.lang.Object lock -> lock
    com.yongdata.agent.sdk.android.YDAppAgent appAgent() -> appAgent
    void init(android.content.Context) -> init
com.yongdata.agent.sdk.android.YDAppAgent -> com.yongdata.agent.sdk.android.YDAppAgent:
    java.lang.String TAG -> TAG
    com.yongdata.agent.sdk.android.YDAppAgent instance -> instance
    com.yongdata.agent.sdk.android.a.a agentConfig -> agentConfig
    android.content.SharedPreferences sharedPreferences -> sharedPreferences
    com.yongdata.agent.sdk.android.a.b stats -> stats
    boolean $assertionsDisabled -> $assertionsDisabled
    com.yongdata.agent.sdk.android.YDAppAgent with(android.content.Context) -> with
    void doInit(android.content.Context) -> doInit
    void setCatchUncaughtExceptions(boolean) -> setCatchUncaughtExceptions
    void setReportLocation(boolean) -> setReportLocation
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void openActivityDurationTrack(boolean) -> openActivityDurationTrack
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void onResume(android.app.Activity) -> onResume
    void onPause(android.app.Activity) -> onPause
    void onError(java.lang.String) -> onError
    void onError(java.lang.Throwable) -> onError
    void onEvent(java.lang.String) -> onEvent
    void onEvent(java.lang.String,java.lang.String) -> onEvent
    void onEvent(java.lang.String,java.util.Map) -> onEvent
    void onEvent(java.lang.String,java.lang.String,java.util.Map) -> onEvent
    void onEvent(java.lang.String,int) -> onEvent
    void onEvent(java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(java.lang.String,java.util.Map,int) -> onEvent
    void onEvent(java.lang.String,java.lang.String,java.util.Map,int) -> onEvent
    void setGlobalKV(java.lang.String,java.lang.String) -> setGlobalKV
    void removeGlobalKV(java.lang.String) -> removeGlobalKV
    void onKillProcess() -> onKillProcess
    void onUserLogin(java.lang.String) -> onUserLogin
    void onUserLogin(java.lang.String,java.lang.String) -> onUserLogin
    void onUserLogout() -> onUserLogout
com.yongdata.agent.sdk.android.a.a -> com.yongdata.agent.sdk.android.a.a:
    java.lang.String TAG -> TAG
    long a -> a
    java.lang.String a -> a
    java.lang.String b -> b
    java.net.URI a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean a -> a
    boolean b -> b
    long b -> b
    boolean c -> c
    void a(android.content.Context) -> a
    void a(com.yongdata.agent.sdk.android.a.a) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String getSerial() -> getSerial
    void b(java.lang.String) -> b
    java.lang.String b() -> b
    void c(java.lang.String) -> c
    boolean a() -> a
    void a(boolean) -> a
    long a() -> a
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    boolean b() -> b
    void setCatchUncaughtExceptions(boolean) -> setCatchUncaughtExceptions
    java.lang.String c() -> c
    void d(java.lang.String) -> d
    java.net.URI a() -> a
    void a(java.net.URI) -> a
    boolean c() -> c
    void setReportLocation(boolean) -> setReportLocation
com.yongdata.agent.sdk.android.a.a.a -> com.yongdata.agent.sdk.android.a.a.a:
    int a(com.yongdata.agent.sdk.android.a.b.e[]) -> a
    void a(int,com.yongdata.agent.sdk.android.a.a.b) -> a
    void a(com.yongdata.agent.sdk.android.a.b.e[]) -> a
    int count() -> count
    boolean isEmpty() -> isEmpty
    void close() -> close
com.yongdata.agent.sdk.android.a.a.b -> com.yongdata.agent.sdk.android.a.a.b:
    void b(com.yongdata.agent.sdk.android.a.b.e[]) -> b
com.yongdata.agent.sdk.android.a.a.c -> com.yongdata.agent.sdk.android.a.a.c:
    java.lang.String y -> y
    int c -> c
    java.lang.String z -> z
    com.yongdata.agent.sdk.android.a.a.e a -> a
    boolean $assertionsDisabled -> $assertionsDisabled
    com.yongdata.agent.sdk.android.a.a.a a() -> a
    com.yongdata.agent.sdk.android.a.a.a a(android.content.Context) -> a
com.yongdata.agent.sdk.android.a.a.d -> com.yongdata.agent.sdk.android.a.a.d:
    java.util.concurrent.LinkedBlockingQueue a -> a
    boolean $assertionsDisabled -> $assertionsDisabled
    int a(com.yongdata.agent.sdk.android.a.b.e[]) -> a
    void a(int,com.yongdata.agent.sdk.android.a.a.b) -> a
    void a(com.yongdata.agent.sdk.android.a.b.e[]) -> a
    int count() -> count
    boolean isEmpty() -> isEmpty
    void close() -> close
com.yongdata.agent.sdk.android.a.a.e -> com.yongdata.agent.sdk.android.a.a.e:
    java.lang.String TAG -> TAG
    java.lang.String A -> A
    java.lang.String TYPE -> TYPE
    java.lang.String B -> B
    java.lang.String SERIAL -> SERIAL
    java.lang.String t -> t
    java.lang.String m -> m
    java.lang.String LOCATION -> LOCATION
    java.lang.String NETWORK -> NETWORK
    java.lang.String C -> C
    int d -> d
    java.lang.String tableName -> tableName
    com.yongdata.agent.sdk.android.a.f.f a -> a
    boolean $assertionsDisabled -> $assertionsDisabled
    com.yongdata.agent.sdk.android.a.a.e a(android.content.Context,java.lang.String,int,java.lang.String) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    int a(com.yongdata.agent.sdk.android.a.b.e[]) -> a
    com.yongdata.agent.sdk.android.a.b.e a(android.database.Cursor) -> a
    void a(int,com.yongdata.agent.sdk.android.a.a.b) -> a
    void a(com.yongdata.agent.sdk.android.a.b.e[]) -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
    int count() -> count
    boolean isEmpty() -> isEmpty
    int a(android.database.sqlite.SQLiteDatabase) -> a
    void close() -> close
    void lock() -> lock
    void unlock() -> unlock
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void a(android.database.Cursor) -> a
com.yongdata.agent.sdk.android.a.b -> com.yongdata.agent.sdk.android.a.b:
    java.lang.String TAG -> TAG
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String MODEL -> MODEL
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String RESOLUTION -> RESOLUTION
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String NAME -> NAME
    java.lang.String n -> n
    java.lang.String LABEL -> LABEL
    java.lang.String o -> o
    java.lang.String SIGNATURE -> SIGNATURE
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    com.yongdata.agent.sdk.android.a.a.a a -> a
    com.yongdata.agent.sdk.android.a.e.b a -> a
    com.yongdata.agent.sdk.android.a.b.h a -> a
    java.lang.String v -> v
    com.yongdata.agent.sdk.android.a.a agentConfig -> agentConfig
    com.yongdata.agent.sdk.android.a.e a -> a
    java.util.Map a -> a
    java.util.Map b -> b
    int a -> a
    int b -> b
    boolean $assertionsDisabled -> $assertionsDisabled
    void init() -> init
    void onEvent(java.lang.String,java.lang.String,java.util.Map) -> onEvent
    void onEvent(java.lang.String,java.lang.String,java.util.Map,int) -> onEvent
    void setGlobalKV(java.lang.String,java.lang.String) -> setGlobalKV
    void removeGlobalKV(java.lang.String) -> removeGlobalKV
    void onUserLogin(java.lang.String,java.lang.String) -> onUserLogin
    void onUserLogout() -> onUserLogout
    void onKillProcess() -> onKillProcess
    void onError(java.lang.Throwable) -> onError
    void onError(java.lang.String) -> onError
    void onResume(android.app.Activity) -> onResume
    void onPause(android.app.Activity) -> onPause
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void a() -> a
    void a(com.yongdata.agent.sdk.android.a.e.a) -> a
    void a(java.lang.String,java.lang.String) -> a
    void e(java.lang.String) -> e
    void a(java.lang.String,java.util.Map) -> a
    void a(java.lang.String,java.util.Map,java.lang.String) -> a
    java.lang.String d() -> d
    com.yongdata.agent.sdk.android.a.e.b a(com.yongdata.agent.sdk.android.a.b) -> a
    com.yongdata.agent.sdk.android.a.a a(com.yongdata.agent.sdk.android.a.b) -> a
    void a(com.yongdata.agent.sdk.android.a.b,com.yongdata.agent.sdk.android.a.e.a) -> a
    java.lang.String a(com.yongdata.agent.sdk.android.a.b) -> a
    com.yongdata.agent.sdk.android.a.a.a a(com.yongdata.agent.sdk.android.a.b) -> a
    com.yongdata.agent.sdk.android.a.b.h a(com.yongdata.agent.sdk.android.a.b) -> a
com.yongdata.agent.sdk.android.a.b.a -> com.yongdata.agent.sdk.android.a.b.a:
    java.lang.String TAG -> TAG
    com.yongdata.agent.sdk.android.a.b.h b -> b
    com.yongdata.agent.sdk.android.a.a.a a -> a
    android.content.Context a -> a
    boolean d -> d
    long d -> d
    long e -> e
    int e -> e
    boolean $assertionsDisabled -> $assertionsDisabled
    void a(com.yongdata.agent.sdk.android.a.b.e[],int) -> a
    void b() -> b
    boolean d() -> d
    boolean a(android.content.Context) -> a
    java.lang.String d() -> d
    com.yongdata.agent.sdk.android.a.b.h a(com.yongdata.agent.sdk.android.a.b.a) -> a
com.yongdata.agent.sdk.android.a.b.b -> com.yongdata.agent.sdk.android.a.b.b:
    com.yongdata.agent.sdk.android.a.b.a a -> a
    void b(com.yongdata.agent.sdk.android.a.b.e[]) -> b
com.yongdata.agent.sdk.android.a.b.c -> com.yongdata.agent.sdk.android.a.b.c:
    java.lang.String TAG -> TAG
    java.net.URI b -> b
    com.yongdata.agent.sdk.android.a.b.d a -> a
    boolean $assertionsDisabled -> $assertionsDisabled
    void a(com.yongdata.agent.sdk.android.a.b.e[],int) -> a
com.yongdata.agent.sdk.android.a.b.d -> com.yongdata.agent.sdk.android.a.b.d:
    java.lang.String D -> D
    com.yongdata.agent.sdk.android.a.c.i a -> a
    void c(com.yongdata.agent.sdk.android.a.b.e[]) -> c
    java.lang.String a(java.lang.String) -> a
com.yongdata.agent.sdk.android.a.b.e -> com.yongdata.agent.sdk.android.a.b.e:
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String TYPE -> TYPE
    java.lang.String SERIAL -> SERIAL
    java.lang.String t -> t
    java.lang.String m -> m
    java.lang.String LOCATION -> LOCATION
    java.lang.String NETWORK -> NETWORK
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String type -> type
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String v -> v
    java.lang.String location -> location
    java.lang.String L -> L
    long f -> f
    java.util.Map c -> c
    java.lang.String getType() -> getType
    java.lang.String getSerial() -> getSerial
    java.lang.String c() -> c
    java.lang.String getLocation() -> getLocation
    long b() -> b
    java.util.Map a() -> a
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.util.Map getParameterMap() -> getParameterMap
    java.lang.String toString() -> toString
    java.lang.String a(com.yongdata.agent.sdk.android.a.b.e,java.lang.String) -> a
    java.lang.String b(com.yongdata.agent.sdk.android.a.b.e,java.lang.String) -> b
    java.lang.String c(com.yongdata.agent.sdk.android.a.b.e,java.lang.String) -> c
    java.lang.String d(com.yongdata.agent.sdk.android.a.b.e,java.lang.String) -> d
    java.lang.String e(com.yongdata.agent.sdk.android.a.b.e,java.lang.String) -> e
    java.lang.String f(com.yongdata.agent.sdk.android.a.b.e,java.lang.String) -> f
    long a(com.yongdata.agent.sdk.android.a.b.e,long) -> a
    java.util.Map a(com.yongdata.agent.sdk.android.a.b.e,java.util.Map) -> a
com.yongdata.agent.sdk.android.a.b.f -> com.yongdata.agent.sdk.android.a.b.f:
com.yongdata.agent.sdk.android.a.b.g -> com.yongdata.agent.sdk.android.a.b.g:
    java.lang.String type -> type
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String v -> v
    java.lang.String location -> location
    java.lang.String L -> L
    long f -> f
    java.util.Map c -> c
    com.yongdata.agent.sdk.android.a.b.g a(java.lang.String) -> a
    com.yongdata.agent.sdk.android.a.b.g b(java.lang.String) -> b
    com.yongdata.agent.sdk.android.a.b.g c(java.lang.String) -> c
    com.yongdata.agent.sdk.android.a.b.g d(java.lang.String) -> d
    com.yongdata.agent.sdk.android.a.b.g e(java.lang.String) -> e
    com.yongdata.agent.sdk.android.a.b.g a(long) -> a
    com.yongdata.agent.sdk.android.a.b.g f(java.lang.String) -> f
    com.yongdata.agent.sdk.android.a.b.g a(java.util.Map) -> a
    com.yongdata.agent.sdk.android.a.b.g a(java.lang.String,java.lang.Object) -> a
    com.yongdata.agent.sdk.android.a.b.e a() -> a
com.yongdata.agent.sdk.android.a.b.h -> com.yongdata.agent.sdk.android.a.b.h:
    void a(com.yongdata.agent.sdk.android.a.b.e[],int) -> a
com.yongdata.agent.sdk.android.a.b.i -> com.yongdata.agent.sdk.android.a.b.i:
    java.lang.String TAG -> TAG
    com.yongdata.agent.sdk.android.a.a a -> a
    android.content.Context a -> a
    boolean e -> e
    boolean f -> f
    boolean $assertionsDisabled -> $assertionsDisabled
    com.yongdata.agent.sdk.android.a.a a() -> a
    com.yongdata.agent.sdk.android.a.b.i a(com.yongdata.agent.sdk.android.a.a) -> a
    android.content.Context getContext() -> getContext
    com.yongdata.agent.sdk.android.a.b.i a(android.content.Context) -> a
    boolean e() -> e
    com.yongdata.agent.sdk.android.a.b.i a() -> a
    boolean f() -> f
    com.yongdata.agent.sdk.android.a.b.i b() -> b
    com.yongdata.agent.sdk.android.a.b.h a() -> a
    com.yongdata.agent.sdk.android.a.b.h b() -> b
    com.yongdata.agent.sdk.android.a.b.h c() -> c
com.yongdata.agent.sdk.android.a.c -> com.yongdata.agent.sdk.android.a.c:
    com.yongdata.agent.sdk.android.a.b a -> a
    void run() -> run
com.yongdata.agent.sdk.android.a.c.a -> com.yongdata.agent.sdk.android.a.c.a:
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void reset() -> reset
com.yongdata.agent.sdk.android.a.c.b -> com.yongdata.agent.sdk.android.a.c.b:
    java.lang.String TAG -> TAG
    com.yongdata.agent.sdk.android.a.d.a a -> a
    com.yongdata.agent.sdk.android.a.c.g a(com.yongdata.agent.sdk.android.a.c.e) -> a
    java.lang.String a(com.yongdata.agent.sdk.android.a.c.e) -> a
    java.net.HttpURLConnection a(com.yongdata.agent.sdk.android.a.c.e,com.yongdata.agent.sdk.android.a.d.a) -> a
    com.yongdata.agent.sdk.android.a.c.g a(java.net.HttpURLConnection) -> a
com.yongdata.agent.sdk.android.a.c.c -> com.yongdata.agent.sdk.android.a.c.c:
    java.io.InputStream a -> a
    long g -> g
    boolean $assertionsDisabled -> $assertionsDisabled
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void close() -> close
    boolean isRepeatable() -> isRepeatable
    void reset() -> reset
com.yongdata.agent.sdk.android.a.c.d -> com.yongdata.agent.sdk.android.a.c.d:
    com.yongdata.agent.sdk.android.a.c.d GET -> GET
    com.yongdata.agent.sdk.android.a.c.d PUT -> PUT
    com.yongdata.agent.sdk.android.a.c.d POST -> POST
    com.yongdata.agent.sdk.android.a.c.d DELETE -> DELETE
    com.yongdata.agent.sdk.android.a.c.d[] $VALUES -> $VALUES
    com.yongdata.agent.sdk.android.a.c.d[] a() -> a
    com.yongdata.agent.sdk.android.a.c.d a(java.lang.String) -> a
com.yongdata.agent.sdk.android.a.c.e -> com.yongdata.agent.sdk.android.a.c.e:
    java.lang.String M -> M
    com.yongdata.agent.sdk.android.a.c.d a -> a
    java.util.Map d -> d
    java.util.Map e -> e
    com.yongdata.agent.sdk.android.a.c.a a -> a
    boolean $assertionsDisabled -> $assertionsDisabled
    java.lang.String l() -> l
    com.yongdata.agent.sdk.android.a.c.e a(java.lang.String) -> a
    com.yongdata.agent.sdk.android.a.c.d a() -> a
    com.yongdata.agent.sdk.android.a.c.e a(com.yongdata.agent.sdk.android.a.c.d) -> a
    java.util.Map getParameters() -> getParameters
    com.yongdata.agent.sdk.android.a.c.e a(java.util.Map) -> a
    com.yongdata.agent.sdk.android.a.c.e a(java.lang.String,java.lang.String) -> a
    java.util.Map getHeaders() -> getHeaders
    com.yongdata.agent.sdk.android.a.c.e b(java.util.Map) -> b
    com.yongdata.agent.sdk.android.a.c.e b(java.lang.String,java.lang.String) -> b
    com.yongdata.agent.sdk.android.a.c.e b(java.lang.String) -> b
    boolean containsHeader(java.lang.String) -> containsHeader
    com.yongdata.agent.sdk.android.a.c.a a() -> a
    com.yongdata.agent.sdk.android.a.c.e a(com.yongdata.agent.sdk.android.a.c.a) -> a
    void close() -> close
com.yongdata.agent.sdk.android.a.c.f -> com.yongdata.agent.sdk.android.a.c.f:
    void a(com.yongdata.agent.sdk.android.a.c.e) -> a
com.yongdata.agent.sdk.android.a.c.g -> com.yongdata.agent.sdk.android.a.c.g:
    java.util.Map e -> e
    com.yongdata.agent.sdk.android.a.c.a a -> a
    int status -> status
    boolean $assertionsDisabled -> $assertionsDisabled
    java.util.Map getHeaders() -> getHeaders
    com.yongdata.agent.sdk.android.a.c.g a(java.util.Map) -> a
    com.yongdata.agent.sdk.android.a.c.g a(java.lang.String,java.lang.String) -> a
    com.yongdata.agent.sdk.android.a.c.g a(java.lang.String) -> a
    boolean containsHeader(java.lang.String) -> containsHeader
    com.yongdata.agent.sdk.android.a.c.a a() -> a
    com.yongdata.agent.sdk.android.a.c.g a(com.yongdata.agent.sdk.android.a.c.a) -> a
    int getStatus() -> getStatus
    com.yongdata.agent.sdk.android.a.c.g a(int) -> a
    boolean g() -> g
    void close() -> close
com.yongdata.agent.sdk.android.a.c.h -> com.yongdata.agent.sdk.android.a.c.h:
    void a(com.yongdata.agent.sdk.android.a.c.g) -> a
com.yongdata.agent.sdk.android.a.c.i -> com.yongdata.agent.sdk.android.a.c.i:
    java.net.URI a -> a
    java.util.List a -> a
    java.util.List b -> b
    com.yongdata.agent.sdk.android.a.c.j a -> a
    java.net.URI a() -> a
    com.yongdata.agent.sdk.android.a.c.i a(com.yongdata.agent.sdk.android.a.c.f[]) -> a
    com.yongdata.agent.sdk.android.a.c.i a(int,com.yongdata.agent.sdk.android.a.c.f[]) -> a
    java.util.List a() -> a
    com.yongdata.agent.sdk.android.a.c.i a(com.yongdata.agent.sdk.android.a.c.h[]) -> a
    com.yongdata.agent.sdk.android.a.c.i a(int,com.yongdata.agent.sdk.android.a.c.h[]) -> a
    java.util.List b() -> b
    com.yongdata.agent.sdk.android.a.c.i a(com.yongdata.agent.sdk.android.a.c.j) -> a
    com.yongdata.agent.sdk.android.a.c.j a() -> a
    void b(com.yongdata.agent.sdk.android.a.c.e) -> b
    com.yongdata.agent.sdk.android.a.c.g b(com.yongdata.agent.sdk.android.a.c.e) -> b
    com.yongdata.agent.sdk.android.a.c.g a(com.yongdata.agent.sdk.android.a.c.e) -> a
com.yongdata.agent.sdk.android.a.c.j -> com.yongdata.agent.sdk.android.a.c.j:
    com.yongdata.agent.sdk.android.a.c.k a(com.yongdata.agent.sdk.android.a.c.e,com.yongdata.agent.sdk.android.a.c.g,java.lang.Exception,int) -> a
com.yongdata.agent.sdk.android.a.c.k -> com.yongdata.agent.sdk.android.a.c.k:
    boolean g -> g
    long h -> h
    com.yongdata.agent.sdk.android.a.c.k a -> a
    boolean isRetry() -> isRetry
    long c() -> c
    com.yongdata.agent.sdk.android.a.c.k a() -> a
    com.yongdata.agent.sdk.android.a.c.k a(long) -> a
com.yongdata.agent.sdk.android.a.c.l -> com.yongdata.agent.sdk.android.a.c.l:
    java.lang.String N -> N
    java.lang.String charset -> charset
    long g -> g
    java.io.ByteArrayInputStream a -> a
    boolean $assertionsDisabled -> $assertionsDisabled
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    java.lang.String getCharset() -> getCharset
    boolean isRepeatable() -> isRepeatable
    void reset() -> reset
    void close() -> close
    java.lang.String toString() -> toString
com.yongdata.agent.sdk.android.a.d -> com.yongdata.agent.sdk.android.a.d:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    com.yongdata.agent.sdk.android.a.a agentConfig -> agentConfig
    void start() -> start
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.yongdata.agent.sdk.android.a.d.a -> com.yongdata.agent.sdk.android.a.d.a:
    int DEFAULT_CONNECT_TIMEOUT -> DEFAULT_CONNECT_TIMEOUT
    int f -> f
    java.lang.String O -> O
    int g -> g
    int connectTimeout -> connectTimeout
    int h -> h
    java.lang.String userAgent -> userAgent
    int i -> i
    boolean h -> h
    int getConnectTimeout() -> getConnectTimeout
    com.yongdata.agent.sdk.android.a.d.a a(int) -> a
    int getSocketTimeout() -> getSocketTimeout
    com.yongdata.agent.sdk.android.a.d.a b(int) -> b
    java.lang.String m() -> m
    com.yongdata.agent.sdk.android.a.d.a a(java.lang.String) -> a
    int a() -> a
    com.yongdata.agent.sdk.android.a.d.a c(int) -> c
    boolean h() -> h
    void b(boolean) -> b
com.yongdata.agent.sdk.android.a.d.b -> com.yongdata.agent.sdk.android.a.d.b:
    long serialVersionUID -> serialVersionUID
com.yongdata.agent.sdk.android.a.d.c -> com.yongdata.agent.sdk.android.a.d.c:
    com.yongdata.agent.sdk.android.a.c.i a(java.net.URI,com.yongdata.agent.sdk.android.a.d.a) -> a
com.yongdata.agent.sdk.android.a.d.d -> com.yongdata.agent.sdk.android.a.d.d:
    java.lang.String P -> P
    boolean $assertionsDisabled -> $assertionsDisabled
    void a(com.yongdata.agent.sdk.android.a.c.e) -> a
com.yongdata.agent.sdk.android.a.d.e -> com.yongdata.agent.sdk.android.a.d.e:
    long i -> i
    int i -> i
    boolean $assertionsDisabled -> $assertionsDisabled
    com.yongdata.agent.sdk.android.a.d.e a(com.yongdata.agent.sdk.android.a.d.a) -> a
    com.yongdata.agent.sdk.android.a.c.k a(com.yongdata.agent.sdk.android.a.c.e,com.yongdata.agent.sdk.android.a.c.g,java.lang.Exception,int) -> a
com.yongdata.agent.sdk.android.a.d.f -> com.yongdata.agent.sdk.android.a.d.f:
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    boolean $assertionsDisabled -> $assertionsDisabled
    void a(com.yongdata.agent.sdk.android.a.c.g) -> a
    void a(int) -> a
com.yongdata.agent.sdk.android.a.d.g -> com.yongdata.agent.sdk.android.a.d.g:
    long serialVersionUID -> serialVersionUID
    int status -> status
    java.lang.String code -> code
    java.lang.String requestId -> requestId
    java.lang.String host -> host
    int getStatus() -> getStatus
    java.lang.String getCode() -> getCode
    java.lang.String n() -> n
    void f(java.lang.String) -> f
    java.lang.String getHost() -> getHost
    void setHost(java.lang.String) -> setHost
    java.lang.String toString() -> toString
com.yongdata.agent.sdk.android.a.e -> com.yongdata.agent.sdk.android.a.e:
    java.lang.String TAG -> TAG
    android.content.Context a -> a
    java.lang.String e() -> e
    java.lang.String getLocation() -> getLocation
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
com.yongdata.agent.sdk.android.a.e.a -> com.yongdata.agent.sdk.android.a.e.a:
    java.lang.String v -> v
    long startTime -> startTime
    long j -> j
    java.lang.String j() -> j
    com.yongdata.agent.sdk.android.a.e.a a(java.lang.String) -> a
    long getStartTime() -> getStartTime
    com.yongdata.agent.sdk.android.a.e.a a(long) -> a
    long getEndTime() -> getEndTime
    com.yongdata.agent.sdk.android.a.e.a b(long) -> b
com.yongdata.agent.sdk.android.a.e.b -> com.yongdata.agent.sdk.android.a.e.b:
    void b(com.yongdata.agent.sdk.android.a.e.a) -> b
    void remove() -> remove
    com.yongdata.agent.sdk.android.a.e.a a() -> a
com.yongdata.agent.sdk.android.a.e.c -> com.yongdata.agent.sdk.android.a.e.c:
    java.lang.String m -> m
    java.lang.String START_TIME -> START_TIME
    java.lang.String U -> U
    java.lang.String name -> name
    android.content.Context a -> a
    void b(com.yongdata.agent.sdk.android.a.e.a) -> b
    void remove() -> remove
    com.yongdata.agent.sdk.android.a.e.a a() -> a
com.yongdata.agent.sdk.android.a.f -> com.yongdata.agent.sdk.android.a.f:
    java.lang.String w -> w
    java.lang.String x -> x
    java.util.UUID uuid -> uuid
    void b(android.content.Context) -> b
    java.util.UUID a() -> a
    java.lang.String i() -> i
com.yongdata.agent.sdk.android.a.f.a -> com.yongdata.agent.sdk.android.a.f.a:
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
com.yongdata.agent.sdk.android.a.f.b -> com.yongdata.agent.sdk.android.a.f.b:
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String a(java.util.Date) -> a
    java.util.Date a(java.lang.String) -> a
    java.lang.String b(java.util.Date) -> b
    java.util.Date b(java.lang.String) -> b
    java.text.DateFormat a(java.lang.String) -> a
com.yongdata.agent.sdk.android.a.f.c -> com.yongdata.agent.sdk.android.a.f.c:
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ae -> ae
    java.lang.String W -> W
    java.lang.String af -> af
com.yongdata.agent.sdk.android.a.f.d -> com.yongdata.agent.sdk.android.a.f.d:
    java.lang.String ag -> ag
    boolean $assertionsDisabled -> $assertionsDisabled
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.util.Map) -> a
    java.lang.String b(java.lang.String) -> b
com.yongdata.agent.sdk.android.a.f.e -> com.yongdata.agent.sdk.android.a.f.e:
    boolean $assertionsDisabled -> $assertionsDisabled
    void a(java.io.Closeable) -> a
    byte[] a(java.io.InputStream) -> a
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.io.InputStream,java.lang.String) -> a
com.yongdata.agent.sdk.android.a.f.f -> com.yongdata.agent.sdk.android.a.f.f:
    java.io.FileOutputStream a -> a
    java.nio.channels.FileChannel a -> a
    java.nio.channels.FileLock a -> a
    boolean $assertionsDisabled -> $assertionsDisabled
    com.yongdata.agent.sdk.android.a.f.f a(android.content.Context,java.lang.String) -> a
    void lock() -> lock
    void unlock() -> unlock
    void close() -> close
com.yongdata.agent.sdk.android.a.f.g -> com.yongdata.agent.sdk.android.a.f.g:
    boolean $assertionsDisabled -> $assertionsDisabled
    org.json.JSONObject a(java.lang.String) -> a
    org.json.JSONArray a(java.lang.String) -> a
    java.util.Map a(org.json.JSONObject) -> a
    java.util.List a(org.json.JSONArray) -> a
    java.lang.String b(java.util.Map) -> b
    java.lang.String a(java.util.Collection) -> a
    org.json.JSONObject a(java.util.Map) -> a
    org.json.JSONArray a(java.util.Collection) -> a
    java.lang.Object a(java.lang.Object) -> a
com.yongdata.agent.sdk.android.a.f.h -> com.yongdata.agent.sdk.android.a.f.h:
    void a(java.lang.Object,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
com.yongdata.agent.sdk.android.a.f.i -> com.yongdata.agent.sdk.android.a.f.i:
    java.lang.String ah -> ah
    java.lang.String V -> V
    boolean a(java.lang.String) -> a
    java.lang.String a(java.lang.Iterable,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(byte[]) -> a
com.yongdata.agent.sdk.android.a.f.j -> com.yongdata.agent.sdk.android.a.f.j:
    java.lang.String ai -> ai
    java.util.Properties a -> a
    java.lang.String getPackageName() -> getPackageName
    java.lang.String o() -> o
    java.lang.String m() -> m
com.yongdata.agent.sdk.android.a.g -> com.yongdata.agent.sdk.android.a.g:
    java.lang.String TAG -> TAG
    java.lang.String SIGNATURE -> SIGNATURE
    java.lang.String r -> r
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.Object lock -> lock
    com.yongdata.agent.sdk.android.a.g a -> a
    java.lang.String d -> d
    java.lang.String e -> e
    com.yongdata.agent.sdk.android.a.a.a a -> a
    com.yongdata.agent.sdk.android.a.b.h b -> b
    long c -> c
    boolean isInitialized() -> isInitialized
    void a(com.yongdata.agent.sdk.android.a.a,com.yongdata.agent.sdk.android.a.b.h) -> a
    com.yongdata.agent.sdk.android.a.g a() -> a
    void onError(java.lang.Throwable) -> onError
    void a(java.lang.Throwable,java.lang.String) -> a
    com.yongdata.agent.sdk.android.a.a.a a(com.yongdata.agent.sdk.android.a.g) -> a
    com.yongdata.agent.sdk.android.a.b.h a(com.yongdata.agent.sdk.android.a.g) -> a
com.yongdata.agent.sdk.android.a.h -> com.yongdata.agent.sdk.android.a.h:
    com.yongdata.agent.sdk.android.a.g b -> b
    void run() -> run
org.achartengine.ChartFactory -> org.achartengine.a:
    org.achartengine.GraphicalView getLineChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void checkParameters(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
org.achartengine.GraphicalActivity -> org.achartengine.GraphicalActivity:
    org.achartengine.GraphicalView mView -> a
    org.achartengine.chart.AbstractChart mChart -> b
    void onCreate(android.os.Bundle) -> onCreate
org.achartengine.GraphicalView -> org.achartengine.GraphicalView:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    android.graphics.Rect mRect -> c
    android.os.Handler mHandler -> d
    android.graphics.RectF mZoomR -> e
    android.graphics.Bitmap zoomInImage -> f
    android.graphics.Bitmap zoomOutImage -> g
    android.graphics.Bitmap fitZoomImage -> h
    int zoomSize -> i
    int ZOOM_BUTTONS_COLOR -> j
    org.achartengine.tools.Zoom mZoomIn -> k
    org.achartengine.tools.Zoom mZoomOut -> l
    org.achartengine.tools.FitZoom mFitZoom -> m
    android.graphics.Paint mPaint -> n
    org.achartengine.ITouchHandler mTouchHandler -> o
    float oldX -> p
    float oldY -> q
    boolean mDrawn -> r
    org.achartengine.model.SeriesSelection getCurrentSeriesAndPoint() -> getCurrentSeriesAndPoint
    void onDraw(android.graphics.Canvas) -> onDraw
    void setZoomRate(float) -> setZoomRate
    void zoomIn() -> a
    void zoomOut() -> b
    void zoomReset() -> c
    android.graphics.RectF getZoomRectangle() -> getZoomRectangle
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> d
org.achartengine.GraphicalView$1 -> org.achartengine.b:
    org.achartengine.GraphicalView this$0 -> a
    void run() -> run
org.achartengine.ITouchHandler -> org.achartengine.c:
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandler -> org.achartengine.d:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    float oldX2 -> d
    float oldY2 -> e
    android.graphics.RectF zoomR -> f
    org.achartengine.tools.Pan mPan -> g
    org.achartengine.tools.Zoom mPinchZoom -> h
    org.achartengine.GraphicalView graphicalView -> i
    boolean handleTouch(android.view.MotionEvent) -> a
    void applyZoom(float,int) -> a
org.achartengine.TouchHandlerOld -> org.achartengine.e:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    android.graphics.RectF zoomR -> d
    org.achartengine.tools.Pan mPan -> e
    org.achartengine.GraphicalView graphicalView -> f
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.chart.AbstractChart -> bh.a:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    void drawBackground(org.achartengine.renderer.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> a
    int drawLegend(android.graphics.Canvas,org.achartengine.renderer.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> a
    void drawString(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint) -> a
    boolean getExceed(float,org.achartengine.renderer.DefaultRenderer,int,int) -> a
    boolean isVertical(org.achartengine.renderer.DefaultRenderer) -> a
    java.lang.String getLabel(java.text.NumberFormat,double) -> a
    float[] calculateDrawPoints(float,float,float,float,int,int) -> a
    void drawPath(android.graphics.Canvas,java.util.List,android.graphics.Paint,boolean) -> a
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    int getLegendSize(org.achartengine.renderer.DefaultRenderer,int,float) -> a
    boolean isNullValue(double) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
org.achartengine.chart.ClickableArea -> bh.b:
    android.graphics.RectF rect -> a
    double x -> b
    double y -> c
    android.graphics.RectF getRect() -> a
    double getX() -> b
    double getY() -> c
org.achartengine.chart.LineChart -> bh.c:
    org.achartengine.chart.ScatterChart pointsChart -> c
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a
org.achartengine.chart.LineChart$1 -> bh.d:
    int[] $SwitchMap$org$achartengine$renderer$XYSeriesRenderer$FillOutsideLine$Type -> a
org.achartengine.chart.PointStyle -> bh.e:
    org.achartengine.chart.PointStyle X -> a
    org.achartengine.chart.PointStyle CIRCLE -> b
    org.achartengine.chart.PointStyle TRIANGLE -> c
    org.achartengine.chart.PointStyle SQUARE -> d
    org.achartengine.chart.PointStyle DIAMOND -> e
    org.achartengine.chart.PointStyle POINT -> f
    java.lang.String mName -> g
    org.achartengine.chart.PointStyle[] $VALUES -> h
    org.achartengine.chart.PointStyle[] values() -> values
    org.achartengine.chart.PointStyle valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> a
    java.lang.String toString() -> toString
org.achartengine.chart.RoundChart -> bh.f:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    int mCenterX -> b
    int mCenterY -> c
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    org.achartengine.renderer.DefaultRenderer getRenderer() -> a
    int getCenterX() -> b
    int getCenterY() -> c
    void setCenterX(int) -> b
    void setCenterY(int) -> c
org.achartengine.chart.ScatterChart -> bh.g:
    float size -> c
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> b
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> a
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> c
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> b
org.achartengine.chart.ScatterChart$1 -> bh.h:
    int[] $SwitchMap$org$achartengine$chart$PointStyle -> a
org.achartengine.chart.XYChart -> bh.i:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    float mScale -> c
    float mTranslate -> d
    org.achartengine.model.Point mCenter -> e
    android.graphics.Rect mScreenR -> f
    java.util.Map mCalcRange -> g
    java.util.Map clickableAreas -> h
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    java.util.List getXLabels(double,double,int) -> a
    java.util.Map getYLabels(double[],double[],int) -> a
    java.util.List getValidLabels(java.util.List) -> a
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> a
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> a
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> a
    void transform(android.graphics.Canvas,float,boolean) -> a
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    void drawYLabels(java.util.Map,android.graphics.Canvas,android.graphics.Paint,int,int,int,int,double[],double[]) -> a
    void drawXTextLabels(java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,boolean,int,int,int,double,double,double) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> b
    org.achartengine.model.XYMultipleSeriesDataset getDataset() -> c
    double[] getCalcRange(int) -> b
    int getLabelLinePos(android.graphics.Paint$Align) -> a
    double[] toRealPoint(float,float,int) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> a
    boolean isRenderNullValues() -> d
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a
org.achartengine.model.Point -> bi.a:
    float mX -> a
    float mY -> b
    float getX() -> a
    float getY() -> b
org.achartengine.model.SeriesSelection -> bi.b:
    int mSeriesIndex -> a
    int mPointIndex -> b
    double mXValue -> c
    double mValue -> d
org.achartengine.model.XYMultipleSeriesDataset -> bi.c:
    java.util.List mSeries -> a
    void addSeries(org.achartengine.model.XYSeries) -> a
    void removeSeries(org.achartengine.model.XYSeries) -> b
    org.achartengine.model.XYSeries getSeriesAt(int) -> a
    int getSeriesCount() -> a
    org.achartengine.model.XYSeries[] getSeries() -> b
org.achartengine.model.XYSeries -> bi.d:
    java.lang.String mTitle -> a
    org.achartengine.util.IndexXYMap mXY -> b
    double mMinX -> c
    double mMaxX -> d
    double mMinY -> e
    double mMaxY -> f
    int mScaleNumber -> g
    java.util.List mAnnotations -> h
    org.achartengine.util.IndexXYMap mStringXY -> i
    int getScaleNumber() -> a
    void initRange() -> k
    void updateRange(double,double) -> b
    java.lang.String getTitle() -> b
    void add(double,double) -> a
    double getPadding() -> c
    void clear() -> d
    double getX(int) -> a
    double getY(int) -> b
    double getAnnotationX(int) -> c
    double getAnnotationY(int) -> d
    int getAnnotationCount() -> e
    java.lang.String getAnnotationAt(int) -> e
    java.util.SortedMap getRange(double,double,boolean) -> a
    int getIndexForKey(double) -> a
    int getItemCount() -> f
    double getMinX() -> g
    double getMinY() -> h
    double getMaxX() -> i
    double getMaxY() -> j
org.achartengine.renderer.BasicStroke -> bj.a:
    org.achartengine.renderer.BasicStroke SOLID -> a
    org.achartengine.renderer.BasicStroke DASHED -> b
    org.achartengine.renderer.BasicStroke DOTTED -> c
    android.graphics.Paint$Cap mCap -> d
    android.graphics.Paint$Join mJoin -> e
    float mMiter -> f
    float[] mIntervals -> g
    float mPhase -> h
    android.graphics.Paint$Cap getCap() -> a
    android.graphics.Paint$Join getJoin() -> b
    float getMiter() -> c
    float[] getIntervals() -> d
    float getPhase() -> e
org.achartengine.renderer.DefaultRenderer -> bj.b:
    java.lang.String mChartTitle -> a
    float mChartTitleTextSize -> b
    android.graphics.Typeface REGULAR_TEXT_FONT -> c
    java.lang.String mTextTypefaceName -> d
    int mTextTypefaceStyle -> e
    android.graphics.Typeface mTextTypeface -> f
    int mBackgroundColor -> g
    boolean mApplyBackgroundColor -> h
    boolean mShowAxes -> i
    int mAxesColor -> j
    boolean mShowLabels -> k
    int mLabelsColor -> l
    float mLabelsTextSize -> m
    boolean mShowLegend -> n
    float mLegendTextSize -> o
    boolean mFitLegend -> p
    boolean mShowGridX -> q
    boolean mShowGridY -> r
    boolean mShowCustomTextGrid -> s
    java.util.List mRenderers -> t
    boolean mAntialiasing -> u
    int mLegendHeight -> v
    int[] mMargins -> w
    float mScale -> x
    boolean mPanEnabled -> y
    boolean mZoomEnabled -> z
    boolean mZoomButtonsVisible -> A
    float mZoomRate -> B
    boolean mExternalZoomEnabled -> C
    float mOriginalScale -> D
    boolean mClickEnabled -> E
    int selectableBuffer -> F
    boolean mInScroll -> G
    float mStartAngle -> H
    java.lang.String getChartTitle() -> a
    float getChartTitleTextSize() -> b
    void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int) -> a
    int getSeriesRendererCount() -> c
    int getBackgroundColor() -> d
    boolean isApplyBackgroundColor() -> e
    int getAxesColor() -> f
    int getLabelsColor() -> g
    float getLabelsTextSize() -> h
    boolean isShowAxes() -> i
    boolean isShowLabels() -> j
    boolean isShowGridX() -> k
    boolean isShowGridY() -> l
    boolean isShowCustomTextGrid() -> m
    boolean isShowLegend() -> n
    boolean isFitLegend() -> o
    java.lang.String getTextTypefaceName() -> p
    int getTextTypefaceStyle() -> q
    android.graphics.Typeface getTextTypeface() -> r
    float getLegendTextSize() -> s
    boolean isAntialiasing() -> t
    float getScale() -> u
    float getOriginalScale() -> v
    void setScale(float) -> a
    boolean isZoomEnabled() -> w
    boolean isZoomButtonsVisible() -> x
    boolean isExternalZoomEnabled() -> y
    float getZoomRate() -> z
    boolean isPanEnabled() -> A
    boolean isClickEnabled() -> B
    int getSelectableBuffer() -> C
    int getLegendHeight() -> D
    int[] getMargins() -> E
    boolean isInScroll() -> F
org.achartengine.renderer.SimpleSeriesRenderer -> bj.c:
    int mColor -> a
    boolean mDisplayChartValues -> b
    int mDisplayChartValuesDistance -> c
    float mChartValuesTextSize -> d
    android.graphics.Paint$Align mChartValuesTextAlign -> e
    float mChartValuesSpacing -> f
    org.achartengine.renderer.BasicStroke mStroke -> g
    boolean mGradientEnabled -> h
    boolean mShowLegendItem -> i
    java.text.NumberFormat mChartValuesFormat -> j
    boolean mDisplayBoundingPoints -> k
    int getColor() -> a
    void setColor(int) -> a
    boolean isDisplayChartValues() -> b
    int getDisplayChartValuesDistance() -> c
    float getChartValuesTextSize() -> d
    android.graphics.Paint$Align getChartValuesTextAlign() -> e
    float getChartValuesSpacing() -> f
    org.achartengine.renderer.BasicStroke getStroke() -> g
    boolean isShowLegendItem() -> h
    boolean isDisplayBoundingPoints() -> i
    java.text.NumberFormat getChartValuesFormat() -> j
org.achartengine.renderer.XYMultipleSeriesRenderer -> bj.d:
    java.lang.String mXTitle -> a
    java.lang.String[] mYTitle -> b
    float mAxisTitleTextSize -> c
    double[] mMinX -> d
    double[] mMaxX -> e
    double[] mMinY -> f
    double[] mMaxY -> g
    int mXLabels -> h
    int mYLabels -> i
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> j
    java.util.Map mXTextLabels -> k
    java.util.Map mYTextLabels -> l
    boolean mPanXEnabled -> m
    boolean mPanYEnabled -> n
    boolean mZoomXEnabled -> o
    boolean mZoomYEnabled -> p
    double mBarSpacing -> q
    int mMarginsColor -> r
    double[] mPanLimits -> s
    double[] mZoomLimits -> t
    float mXLabelsAngle -> u
    float mYLabelsAngle -> v
    java.util.Map initialRange -> w
    float mPointSize -> x
    int mGridColor -> y
    int scalesCount -> z
    android.graphics.Paint$Align xLabelsAlign -> A
    android.graphics.Paint$Align[] yLabelsAlign -> B
    float mXLabelsPadding -> C
    float mYLabelsPadding -> D
    float mYLabelsVerticalPadding -> E
    android.graphics.Paint$Align[] yAxisAlign -> F
    int mXLabelsColor -> G
    int[] mYLabelsColor -> H
    boolean mXRoundedLabels -> I
    java.text.NumberFormat mLabelFormat -> J
    float mBarWidth -> K
    double mZoomInLimitX -> L
    double mZoomInLimitY -> M
    void initAxesRange(int) -> b
    void initAxesRangeForScale(int) -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation getOrientation() -> G
    java.lang.String getXTitle() -> H
    java.lang.String getYTitle() -> I
    java.lang.String getYTitle(int) -> d
    float getAxisTitleTextSize() -> J
    double getXAxisMin(int) -> e
    void setXAxisMin(double,int) -> a
    boolean isMinXSet(int) -> f
    double getXAxisMax(int) -> g
    void setXAxisMax(double,int) -> b
    boolean isMaxXSet(int) -> h
    double getYAxisMin(int) -> i
    void setYAxisMin(double,int) -> c
    boolean isMinYSet(int) -> j
    double getYAxisMax(int) -> k
    void setYAxisMax(double,int) -> d
    boolean isMaxYSet(int) -> l
    int getXLabels() -> K
    java.lang.String getXTextLabel(java.lang.Double) -> a
    java.lang.Double[] getXTextLabelLocations() -> L
    java.lang.String getYTextLabel(java.lang.Double,int) -> a
    java.lang.Double[] getYTextLabelLocations(int) -> m
    int getYLabels() -> M
    boolean isPanEnabled() -> A
    boolean isPanXEnabled() -> N
    boolean isPanYEnabled() -> O
    boolean isZoomEnabled() -> w
    boolean isZoomXEnabled() -> P
    boolean isZoomYEnabled() -> Q
    int getMarginsColor() -> R
    void setMarginsColor(int) -> n
    int getGridColor() -> S
    double[] getPanLimits() -> T
    double[] getZoomLimits() -> U
    float getXLabelsAngle() -> V
    float getYLabelsAngle() -> W
    float getPointSize() -> X
    void setRange(double[],int) -> a
    boolean isInitialRangeSet() -> Y
    boolean isInitialRangeSet(int) -> o
    double[] getInitialRange(int) -> p
    int getXLabelsColor() -> Z
    int getYLabelsColor(int) -> q
    android.graphics.Paint$Align getXLabelsAlign() -> aa
    android.graphics.Paint$Align getYLabelsAlign(int) -> r
    android.graphics.Paint$Align getYAxisAlign(int) -> s
    float getXLabelsPadding() -> ab
    float getYLabelsPadding() -> ac
    float getYLabelsVerticalPadding() -> ad
    java.text.NumberFormat getLabelFormat() -> ae
    double getZoomInLimitX() -> af
    double getZoomInLimitY() -> ag
    int getScalesCount() -> ah
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> bj.e:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> b
    int mAngle -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] $VALUES -> d
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] values() -> values
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
    int getAngle() -> a
org.achartengine.renderer.XYSeriesRenderer -> bj.f:
    boolean mFillPoints -> a
    java.util.List mFillBelowLine -> b
    org.achartengine.chart.PointStyle mPointStyle -> c
    float mPointStrokeWidth -> d
    float mLineWidth -> e
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine[] getFillOutsideLine() -> k
    boolean isFillPoints() -> l
    org.achartengine.chart.PointStyle getPointStyle() -> m
    float getPointStrokeWidth() -> n
    float getLineWidth() -> o
    void setLineWidth(float) -> a
org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine -> bj.g:
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type mType -> a
    int mColor -> b
    int[] mFillRange -> c
    int getColor() -> a
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type getType() -> b
    int[] getFillRange() -> c
org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type -> bj.h:
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type NONE -> a
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BOUNDS_ALL -> b
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BOUNDS_BELOW -> c
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BOUNDS_ABOVE -> d
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BELOW -> e
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type ABOVE -> f
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type[] $VALUES -> g
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type[] values() -> values
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type valueOf(java.lang.String) -> valueOf
org.achartengine.tools.AbstractTool -> bk.a:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    double[] getRange(int) -> a
    void checkRange(double[],int) -> a
    void setXRange(double,double,int) -> a
    void setYRange(double,double,int) -> b
org.achartengine.tools.FitZoom -> bk.b:
    void apply() -> a
org.achartengine.tools.Pan -> bk.c:
    java.util.List mPanListeners -> c
    boolean limitsReachedX -> d
    boolean limitsReachedY -> e
    void apply(float,float,float,float) -> a
    double getAxisRatio(double[]) -> a
    void notifyPanListeners() -> a
org.achartengine.tools.PanListener -> bk.d:
    void panApplied() -> a
org.achartengine.tools.Zoom -> bk.e:
    boolean mZoomIn -> c
    float mZoomRate -> d
    java.util.List mZoomListeners -> e
    boolean limitsReachedX -> f
    boolean limitsReachedY -> g
    void setZoomRate(float) -> a
    void apply(int) -> b
    void notifyZoomListeners(org.achartengine.tools.ZoomEvent) -> a
    void notifyZoomResetListeners() -> a
org.achartengine.tools.ZoomEvent -> bk.f:
    boolean mZoomIn -> a
    float mZoomRate -> b
org.achartengine.tools.ZoomListener -> bk.g:
    void zoomApplied(org.achartengine.tools.ZoomEvent) -> a
    void zoomReset() -> a
org.achartengine.util.IndexXYMap -> bl.a:
    java.util.List indexList -> a
    double maxXDifference -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void updateMaxXDifference() -> a
    void clear() -> clear
    java.lang.Object getXByIndex(int) -> a
    java.lang.Object getYByIndex(int) -> b
    int getIndexForKey(java.lang.Object) -> a
org.achartengine.util.MathHelper -> bl.b:
    java.text.NumberFormat FORMAT -> a
    java.util.List getLabels(double,double,int) -> a
    double[] computeLabels(double,double,int) -> b
    double roundUp(double) -> a
org.android.agoo.client.AgooSettings -> org.android.agoo.client.a:
    void setUTVersion(android.content.Context,java.lang.String) -> a
    void setAgooSecurityMode(android.content.Context,boolean) -> a
    boolean isAgooSoSecurityMode(android.content.Context) -> a
    long getAgooReleaseTime() -> a
    boolean isAgooTestMode(android.content.Context) -> b
    java.lang.String getPullUrl(android.content.Context) -> c
    java.lang.String getApollUrl(android.content.Context) -> d
    org.android.agoo.client.AgooSettings$Mode getMode(android.content.Context) -> e
    long getTargetTime(android.content.Context) -> f
    long getTargetTime(android.content.Context,long) -> a
org.android.agoo.client.AgooSettings$1 -> org.android.agoo.client.b:
org.android.agoo.client.AgooSettings$Mode -> org.android.agoo.client.c:
    org.android.agoo.client.AgooSettings$Mode TEST -> a
    org.android.agoo.client.AgooSettings$Mode PREVIEW -> b
    org.android.agoo.client.AgooSettings$Mode RELEASE -> c
    int a -> d
    org.android.agoo.client.AgooSettings$Mode[] b -> e
    org.android.agoo.client.AgooSettings$Mode[] values() -> values
    org.android.agoo.client.AgooSettings$Mode valueOf(java.lang.String) -> valueOf
    int getPushApollPort() -> a
    java.lang.String getPushApollIp() -> b
org.android.agoo.client.AgooSettings$Mode$1 -> org.android.agoo.client.d:
    java.lang.String getPushApollIp() -> b
    int getPushApollPort() -> a
org.android.agoo.client.AgooSettings$Mode$2 -> org.android.agoo.client.e:
    java.lang.String getPushApollIp() -> b
    int getPushApollPort() -> a
org.android.agoo.client.AgooSettings$Mode$3 -> org.android.agoo.client.f:
    java.lang.String getPushApollIp() -> b
    int getPushApollPort() -> a
org.android.agoo.client.BaseBroadcastReceiver -> org.android.agoo.client.BaseBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context,android.content.Intent) -> a
    java.lang.String a(android.content.Context) -> a
org.android.agoo.client.BaseBroadcastReceiver$1 -> org.android.agoo.client.g:
    android.content.Context a -> a
    android.content.Intent b -> b
    org.android.agoo.client.BaseBroadcastReceiver c -> c
    void run() -> run
org.android.agoo.client.BaseIntentService -> org.android.agoo.client.BaseIntentService:
    org.android.agoo.net.mtop.IMtopSynClient b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    java.lang.String e -> d
    android.os.PowerManager$WakeLock j -> e
    java.lang.Object k -> f
    java.util.Random l -> g
    org.android.agoo.service.IElectionService n -> h
    android.content.ServiceConnection o -> i
    boolean p -> j
    org.android.agoo.service.IMessageService q -> k
    android.content.ServiceConnection r -> l
    void a() -> b
    boolean shouldProcessMessage(android.content.Context,android.content.Intent) -> a
    void onUserCommand(android.content.Context,android.content.Intent) -> c
    void onUserHandleIntent(android.content.Context,android.content.Intent) -> d
    void onMessage(android.content.Context,android.content.Intent) -> b
    java.lang.Class getAgooService() -> a
    void onError(android.content.Context,java.lang.String) -> a
    void onRegistered(android.content.Context,java.lang.String) -> b
    void onUnregistered(android.content.Context,java.lang.String) -> c
    boolean onRecoverableError(android.content.Context,java.lang.String) -> d
    void a(android.content.Context,android.content.Intent) -> e
    void b(android.content.Context,android.content.Intent) -> f
    void c(android.content.Context,android.content.Intent) -> g
    void a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    void b(android.content.Context,java.lang.String,java.lang.String[]) -> b
    void d(android.content.Context,android.content.Intent) -> h
    void e(android.content.Context,android.content.Intent) -> i
    void f(android.content.Context,android.content.Intent) -> j
    void g(android.content.Context,android.content.Intent) -> k
    void h(android.content.Context,android.content.Intent) -> l
    void i(android.content.Context,android.content.Intent) -> m
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void a(android.content.Context,android.content.Intent,java.lang.String) -> a
    void a(android.content.Context,java.lang.String) -> e
    void b(android.content.Context,java.lang.String) -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void c(android.content.Context,java.lang.String) -> g
    void d(android.content.Context) -> d
    void j(android.content.Context,android.content.Intent) -> n
    void k(android.content.Context,android.content.Intent) -> o
    void e(android.content.Context) -> e
    void f(android.content.Context) -> f
    void l(android.content.Context,android.content.Intent) -> p
    void m(android.content.Context,android.content.Intent) -> q
    void g(android.content.Context) -> g
    boolean b() -> c
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void c() -> d
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    org.android.agoo.service.IElectionService a(org.android.agoo.client.BaseIntentService,org.android.agoo.service.IElectionService) -> a
    org.android.agoo.service.IElectionService a(org.android.agoo.client.BaseIntentService) -> a
    void a(org.android.agoo.client.BaseIntentService,android.content.Context) -> a
    boolean b(org.android.agoo.client.BaseIntentService) -> b
    boolean a(org.android.agoo.client.BaseIntentService,boolean) -> a
    org.android.agoo.service.IMessageService a(org.android.agoo.client.BaseIntentService,org.android.agoo.service.IMessageService) -> a
    void b(org.android.agoo.client.BaseIntentService,android.content.Context) -> b
    void c(org.android.agoo.client.BaseIntentService,android.content.Context) -> c
org.android.agoo.client.BaseIntentService$1 -> org.android.agoo.client.h:
    org.android.agoo.client.BaseIntentService a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.android.agoo.client.BaseIntentService$2 -> org.android.agoo.client.i:
    java.lang.String a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    org.android.agoo.client.BaseIntentService d -> d
    void run() -> run
org.android.agoo.client.BaseIntentService$3 -> org.android.agoo.client.j:
    org.android.agoo.client.BaseIntentService a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.android.agoo.client.BaseRegistrar -> org.android.agoo.client.k:
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void b(android.content.Context) -> a
    java.lang.String getRegistrationId(android.content.Context) -> getRegistrationId
    boolean isRegistered(android.content.Context) -> isRegistered
org.android.agoo.client.IntentHelper -> org.android.agoo.client.l:
    android.content.Intent createComandIntent(android.content.Context,java.lang.String) -> a
    java.lang.String getAgooCommand(android.content.Context) -> a
    java.lang.String getAgooStart(android.content.Context) -> b
    java.lang.String getAgooCockroach(android.content.Context) -> c
org.android.agoo.client.MessageService -> org.android.agoo.client.m:
    android.database.sqlite.SQLiteOpenHelper q -> a
    org.android.agoo.client.MessageService r -> b
    android.content.Context s -> c
    org.android.agoo.client.MessageService getSingleton(android.content.Context) -> a
    void addMessage(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,int,long,int,int) -> a
    void notice(java.lang.String) -> a
    boolean hasMessageDuplicate(java.lang.String,int) -> a
    void reloadMessageAtTime() -> a
    long a(long,int) -> a
    void handleMessageAtTime(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,long,int,int) -> a
    boolean report(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
org.android.agoo.client.MessageService$MessageDBHelper -> org.android.agoo.client.n:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
org.android.agoo.helper.PhoneHelper -> bm.a:
    java.lang.String a() -> b
    java.lang.String getImsi(android.content.Context) -> a
    java.lang.String getLocalMacAddress(android.content.Context) -> b
    java.lang.String getSerialNum() -> a
    java.lang.String getAndroidId(android.content.Context) -> c
org.android.agoo.helper.a -> bm.b:
    int e -> a
    java.util.concurrent.ThreadPoolExecutor f -> b
    com.umeng.message.proguard.bd g -> c
    android.content.Context h -> d
    java.lang.String i -> e
    void a(org.android.agoo.helper.a$b) -> a
    void a(com.umeng.message.proguard.bd$a,org.android.agoo.helper.a$b,org.android.agoo.client.AgooSettings$Mode) -> a
    void b(org.android.agoo.helper.a$b) -> b
    java.lang.String a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int a(android.content.Context,java.lang.String[]) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a(android.content.Context,int) -> a
    com.umeng.message.proguard.bd a(org.android.agoo.helper.a) -> a
    com.umeng.message.proguard.bd a(org.android.agoo.helper.a,com.umeng.message.proguard.bd) -> a
    void a(org.android.agoo.helper.a,com.umeng.message.proguard.bd$a,org.android.agoo.helper.a$b,org.android.agoo.client.AgooSettings$Mode) -> a
org.android.agoo.helper.a$a -> bm.c:
    java.lang.String a -> a
    org.android.agoo.helper.a$b b -> b
    android.content.Context c -> c
    org.android.agoo.helper.a d -> d
    void run() -> run
org.android.agoo.helper.a$b -> bm.d:
    void a(java.lang.String) -> a
    void a(int,java.lang.String) -> a
org.android.agoo.net.mtop.IMtopSynClient -> bn.a:
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void setBaseUrl(java.lang.String) -> c
    org.android.agoo.net.mtop.Result getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> a
org.android.agoo.net.mtop.MtopAsyncClientV3 -> bn.b:
    java.lang.String b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest,org.android.agoo.net.mtop.MtopResponseHandler) -> a
    void setBaseUrl(java.lang.String) -> c
org.android.agoo.net.mtop.MtopHttpChunked -> bn.c:
    java.lang.String l -> g
    java.lang.String m -> h
    java.lang.String n -> i
    void setBaseUrl(java.lang.String) -> c
    void setDefaultAppkey(java.lang.String) -> d
    void setDefaultAppSecret(java.lang.String) -> e
    void connect(android.content.Context,org.android.agoo.net.mtop.MtopRequest,long,com.umeng.message.proguard.bh) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(java.lang.String,com.umeng.message.proguard.bb) -> a
org.android.agoo.net.mtop.MtopRequest -> bn.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    long h -> h
    boolean i -> i
    java.lang.String j -> j
    java.util.Map k -> k
    java.util.Map l -> l
    boolean isHasSigin() -> a
    long getTime() -> b
    java.lang.String getDeviceId() -> c
    void setDeviceId(java.lang.String) -> a
    java.util.Map getSysParams() -> d
    java.lang.String getTtId() -> e
    void setTtId(java.lang.String) -> b
    java.lang.String getApi() -> f
    void setApi(java.lang.String) -> c
    java.lang.String getV() -> g
    void setV(java.lang.String) -> d
    java.lang.String getSId() -> h
    java.lang.String getEcode() -> i
    java.util.Map getParams() -> j
    void putParams(java.lang.String,java.lang.Object) -> a
    java.lang.String getAppKey() -> k
    void setAppKey(java.lang.String) -> e
    java.lang.String getAppSecret() -> l
    void setAppSecret(java.lang.String) -> f
org.android.agoo.net.mtop.MtopRequestHelper -> bn.e:
    void checkAppKeyAndAppSecret(org.android.agoo.net.mtop.MtopRequest,java.lang.String,java.lang.String) -> a
    com.umeng.message.proguard.bb getUrlWithRequestParams(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> a
    long a() -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.util.Map) -> a
org.android.agoo.net.mtop.MtopResponseHandler -> bn.f:
    void b(java.lang.String) -> b
    void onFailure(java.lang.String,java.lang.String) -> onFailure
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
org.android.agoo.net.mtop.MtopResponseHelper -> bn.g:
    org.android.agoo.net.mtop.Result parse(java.lang.String) -> a
org.android.agoo.net.mtop.MtopSyncClientV3 -> bn.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void setBaseUrl(java.lang.String) -> c
    org.android.agoo.net.mtop.Result getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> a
org.android.agoo.net.mtop.Result -> bn.i:
    boolean a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    boolean isSuccess() -> a
    void setSuccess(boolean) -> a
    java.lang.String getData() -> b
    void setData(java.lang.String) -> a
    java.lang.String getRetDesc() -> c
    void setRetDesc(java.lang.String) -> b
    java.lang.String getRetCode() -> d
    void setRetCode(java.lang.String) -> c
    int getHttpCode() -> e
    java.lang.String toString() -> toString
org.android.agoo.proc.ServiceProtect -> org.android.agoo.proc.ServiceProtect:
    boolean b -> a
    int start(java.lang.String,java.lang.String,java.lang.String,int) -> start
    void stop() -> stop
    int hasRted() -> hasRted
    boolean a() -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int) -> a
    int a(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void b() -> b
    boolean c() -> c
org.android.agoo.proc.a -> org.android.agoo.proc.a:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
org.android.agoo.proc.b -> org.android.agoo.proc.b:
    android.content.Context a -> a
    android.os.HandlerThread m -> b
    android.os.Handler n -> c
    boolean o -> d
    boolean handleMessage(android.os.Message) -> handleMessage
    void f() -> f
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    boolean hasComeFromCock(android.content.Intent) -> hasComeFromCock
    void onDestroy() -> onDestroy
    void a() -> a
    int a(int,int) -> a
    void a(android.content.Context) -> a
    void g() -> g
    void b() -> b
    void c() -> c
    void a(android.content.Intent,int,int) -> a
    void d() -> d
    void e() -> e
org.android.agoo.proc.c -> org.android.agoo.proc.c:
    byte[] a(java.lang.String,java.lang.String) -> a
org.android.agoo.proc.d -> org.android.agoo.proc.d:
    java.lang.String h -> b
    java.lang.String a -> a
    java.lang.String[] j -> c
    java.lang.String[] k -> d
    java.lang.String[] l -> e
    java.util.HashMap m -> f
    android.content.Context n -> g
    java.io.File o -> h
    org.android.agoo.proc.d a(android.content.Context) -> a
    boolean a(java.lang.String,byte[]) -> a
    boolean a(java.lang.String,java.io.FileInputStream) -> a
    org.android.agoo.proc.d$a a() -> a
    org.android.agoo.proc.d$a b() -> b
    org.android.agoo.proc.d$a a(java.lang.String) -> a
    void c() -> c
    void b(java.lang.String) -> b
    java.lang.String a(android.os.Build,java.lang.String) -> a
    java.io.File c(java.lang.String) -> c
org.android.agoo.proc.d$a -> org.android.agoo.proc.e:
    boolean a -> a
    boolean b -> b
    boolean a() -> a
    void a(boolean) -> a
    void b(boolean) -> b
org.android.agoo.service.AgooService -> org.android.agoo.service.AgooService:
    com.umeng.message.proguard.aP d -> b
    long e -> c
    org.android.agoo.service.AgooService$ReElection f -> d
    android.app.AlarmManager g -> e
    java.lang.String h -> f
    java.lang.String i -> g
    java.lang.String j -> h
    java.lang.String k -> i
    java.lang.String l -> j
    java.lang.String m -> k
    org.android.agoo.service.IMessageService$Stub n -> l
    void b() -> b
    boolean f() -> f
    void d() -> d
    void a(android.content.Intent,int,int) -> a
    void e() -> e
    boolean g() -> g
    void h() -> h
    void c() -> c
    void onHandleMessage(java.lang.String) -> onHandleMessage
    void onHandleError(java.lang.String) -> onHandleError
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,android.os.Bundle) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    com.umeng.message.proguard.aP a(org.android.agoo.service.AgooService) -> a
    android.content.Context b(org.android.agoo.service.AgooService) -> b
    java.lang.String c(org.android.agoo.service.AgooService) -> c
    java.lang.String d(org.android.agoo.service.AgooService) -> d
    android.content.Context e(org.android.agoo.service.AgooService) -> e
    android.content.Context f(org.android.agoo.service.AgooService) -> f
    android.content.Context g(org.android.agoo.service.AgooService) -> g
    void a(org.android.agoo.service.AgooService,java.lang.String,java.lang.String) -> a
    android.content.Context h(org.android.agoo.service.AgooService) -> h
    android.content.Context i(org.android.agoo.service.AgooService) -> i
    android.app.AlarmManager j(org.android.agoo.service.AgooService) -> j
    android.content.Context k(org.android.agoo.service.AgooService) -> k
    android.content.Context l(org.android.agoo.service.AgooService) -> l
    android.app.AlarmManager a(org.android.agoo.service.AgooService,android.app.AlarmManager) -> a
org.android.agoo.service.AgooService$1 -> org.android.agoo.service.AgooService$1:
    org.android.agoo.service.AgooService a -> a
    boolean ping() -> ping
    void probe() -> probe
org.android.agoo.service.AgooService$1$1 -> org.android.agoo.service.AgooService$1$1:
    org.android.agoo.service.AgooService$1 a -> a
    void run() -> run
org.android.agoo.service.AgooService$ReElection -> org.android.agoo.service.AgooService$ReElection:
    android.content.IntentFilter d -> b
    android.app.PendingIntent e -> c
    android.content.Intent f -> d
    boolean g -> e
    org.android.agoo.service.AgooService a -> a
    void a() -> a
    void start() -> start
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void destory() -> destory
    boolean a(org.android.agoo.service.AgooService$ReElection,boolean) -> a
org.android.agoo.service.AgooService$ReElection$1 -> org.android.agoo.service.AgooService$ReElection$1:
    android.content.Context a -> a
    org.android.agoo.service.AgooService$ReElection b -> b
    void run() -> run
org.android.agoo.service.ElectionService -> org.android.agoo.service.ElectionService:
    java.util.Map b -> a
    java.util.Map c -> b
    java.util.Map d -> c
    java.lang.String i -> d
    android.os.Handler j -> e
    java.util.List k -> f
    long l -> g
    boolean m -> h
    android.os.HandlerThread n -> i
    java.util.concurrent.atomic.AtomicInteger o -> j
    long p -> k
    android.content.Context q -> l
    org.android.agoo.service.IElectionService$Stub r -> m
    java.util.Random s -> n
    org.android.agoo.service.ElectionService$ElectionResult t -> o
    boolean handleMessage(android.os.Message) -> handleMessage
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void a(java.lang.String,long) -> a
    java.lang.String a(java.util.List) -> a
    void a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    void c() -> c
    void onDestroy() -> onDestroy
    void d() -> d
    void e() -> e
    boolean a(org.android.agoo.service.ElectionService) -> a
    void a(org.android.agoo.service.ElectionService,java.lang.String,long) -> a
    void b(org.android.agoo.service.ElectionService) -> b
    long a(org.android.agoo.service.ElectionService,long) -> a
    java.util.Map c(org.android.agoo.service.ElectionService) -> c
    java.util.Map d(org.android.agoo.service.ElectionService) -> d
    void a(org.android.agoo.service.ElectionService,java.lang.String) -> a
org.android.agoo.service.ElectionService$1 -> org.android.agoo.service.ElectionService$1:
    org.android.agoo.service.ElectionService a -> a
    void election(java.lang.String,long,java.lang.String) -> election
org.android.agoo.service.ElectionService$2 -> org.android.agoo.service.ElectionService$2:
    org.android.agoo.service.ElectionService a -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.String,java.lang.String) -> onFailure
org.android.agoo.service.ElectionService$ElectionResult -> org.android.agoo.service.ElectionService$ElectionResult:
    long a -> a
    java.lang.String b -> b
    java.util.HashMap c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getElectionSource() -> getElectionSource
    void setElectionSource(java.lang.String) -> setElectionSource
    long getTimeout() -> getTimeout
    void setTimeout(long) -> setTimeout
    java.util.HashMap getSudoMap() -> getSudoMap
    void putSudo(java.lang.String,java.lang.String) -> putSudo
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.android.agoo.service.ElectionService$ElectionResult$1 -> org.android.agoo.service.ElectionService$ElectionResult$1:
    org.android.agoo.service.ElectionService$ElectionResult createFromParcel(android.os.Parcel) -> createFromParcel
    org.android.agoo.service.ElectionService$ElectionResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.android.agoo.service.IElectionService -> org.android.agoo.service.IElectionService:
    void election(java.lang.String,long,java.lang.String) -> election
org.android.agoo.service.IElectionService$Stub -> org.android.agoo.service.IElectionService$Stub:
    org.android.agoo.service.IElectionService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.android.agoo.service.IElectionService$Stub$Proxy -> org.android.agoo.service.IElectionService$Stub$Proxy:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void election(java.lang.String,long,java.lang.String) -> election
org.android.agoo.service.IMessageService -> org.android.agoo.service.IMessageService:
    boolean ping() -> ping
    void probe() -> probe
org.android.agoo.service.IMessageService$Stub -> org.android.agoo.service.IMessageService$Stub:
    org.android.agoo.service.IMessageService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.android.agoo.service.IMessageService$Stub$Proxy -> org.android.agoo.service.IMessageService$Stub$Proxy:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    boolean ping() -> ping
    void probe() -> probe
org.apache.http.entity.mime.FormBodyPart -> bo.a:
    java.lang.String name -> a
    org.apache.http.entity.mime.Header header -> b
    org.apache.http.entity.mime.content.ContentBody body -> c
    java.lang.String getName() -> a
    org.apache.http.entity.mime.content.ContentBody getBody() -> b
    org.apache.http.entity.mime.Header getHeader() -> c
    void addField(java.lang.String,java.lang.String) -> a
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> a
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> b
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> c
org.apache.http.entity.mime.Header -> bo.b:
    java.util.List fields -> a
    java.util.Map fieldMap -> b
    void addField(org.apache.http.entity.mime.MinimalField) -> a
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> bo.c:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> a
    org.apache.http.util.ByteArrayBuffer CR_LF -> b
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> c
    java.lang.String subType -> d
    java.nio.charset.Charset charset -> e
    java.lang.String boundary -> f
    java.util.List parts -> g
    org.apache.http.entity.mime.HttpMultipartMode mode -> h
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> a
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.io.OutputStream) -> a
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> a
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> a
    java.util.List getBodyParts() -> a
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> a
    java.lang.String getBoundary() -> b
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> a
    void writeTo(java.io.OutputStream) -> a
    long getTotalLength() -> c
org.apache.http.entity.mime.HttpMultipart$1 -> bo.d:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> a
org.apache.http.entity.mime.HttpMultipartMode -> bo.e:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> a
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> b
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> c
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> bo.f:
    java.nio.charset.Charset DEFAULT_CHARSET -> a
org.apache.http.entity.mime.MinimalField -> bo.g:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> a
    java.lang.String getBody() -> b
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> bo.h:
    char[] MULTIPART_CHARS -> a
    org.apache.http.entity.mime.HttpMultipart multipart -> b
    org.apache.http.Header contentType -> c
    long length -> d
    boolean dirty -> e
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String generateBoundary() -> a
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> a
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> bp.a:
    java.lang.String mimeType -> a
    java.lang.String mediaType -> b
    java.lang.String subType -> c
    java.lang.String getMimeType() -> a
org.apache.http.entity.mime.content.ContentBody -> bp.b:
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
org.apache.http.entity.mime.content.ContentDescriptor -> bp.c:
    java.lang.String getMimeType() -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
org.apache.http.entity.mime.content.FileBody -> bp.d:
    java.io.File file -> a
    java.lang.String filename -> b
    java.lang.String charset -> c
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
org.apache.http.entity.mime.content.StringBody -> bp.e:
    byte[] content -> a
    java.nio.charset.Charset charset -> b
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
u.aly.a -> bq.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.util.List d -> d
    u.aly.ay e -> e
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean g() -> g
    u.aly.ay d() -> d
    java.util.List e() -> e
    void a(java.util.List) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String f() -> f
    void a(u.aly.az) -> a
u.aly.aa -> bq.b:
    int d -> d
    int a -> a
    int b -> b
    int e -> e
    long c -> c
    long f -> f
    long g -> g
    android.content.Context n -> h
    void b(android.content.Context) -> b
    boolean f() -> a
    void g() -> b
    void h() -> c
    void i() -> d
    void j() -> e
    void k() -> f
    void l() -> g
    boolean m() -> h
    long n() -> i
    long o() -> j
    u.aly.ap a(android.content.Context) -> a
    void a() -> k
    void b() -> l
    void c() -> m
    void d() -> n
u.aly.ab -> bq.c:
    java.lang.String a -> a
    long b -> b
u.aly.ac -> bq.d:
    u.aly.bm a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
u.aly.ad -> bq.e:
    java.util.Map b -> a
    java.util.ArrayList c -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void a(android.content.Context) -> a
    java.util.List a(android.content.SharedPreferences) -> a
u.aly.ae -> bq.f:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Map d -> d
u.aly.af -> bq.g:
    java.util.HashMap b(java.util.Map) -> b
    u.aly.ae a(java.lang.String,java.lang.String,java.util.Map) -> a
    java.lang.String b(java.lang.String,java.lang.String,java.util.Map) -> b
    void a(u.aly.bn,java.lang.String) -> a
u.aly.ag -> bq.h:
    java.lang.String a(java.lang.Throwable) -> a
    void a(u.aly.bn,java.lang.String) -> a
u.aly.ai -> bq.i:
    void a(org.json.JSONArray) -> a
u.aly.aj -> bq.j:
    void a(u.aly.bn,java.lang.String) -> a
u.aly.ak -> bq.k:
    int h -> a
    long i -> b
    u.aly.bn a(android.content.Context,u.aly.bn) -> a
    u.aly.bl a(android.content.Context) -> a
    long a() -> a
    void a(int) -> a
    boolean c() -> b
u.aly.al -> bq.l:
    u.aly.al a -> a
    u.aly.al b -> b
    u.aly.al c -> c
    u.aly.al d -> d
    int e -> e
    u.aly.al[] f -> f
    u.aly.al[] values() -> values
    u.aly.al valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.al a(int) -> a
u.aly.am -> bq.m:
    u.aly.dl c -> c
    u.aly.db d -> d
    java.util.Map e -> e
    long a -> a
    byte g -> f
    java.util.Map b -> b
    boolean e() -> a
    void a(boolean) -> a
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void f() -> b
    u.aly.dl h() -> c
    u.aly.db i() -> d
u.aly.am$1 -> bq.n:
u.aly.am$a -> bq.o:
    void a(u.aly.dg,u.aly.am) -> a
    void b(u.aly.dg,u.aly.am) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.am$b -> bq.p:
    u.aly.am$a a() -> a
    u.aly.do b() -> b
u.aly.am$c -> bq.q:
    void a(u.aly.dg,u.aly.am) -> a
    void b(u.aly.dg,u.aly.am) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.am$d -> bq.r:
    u.aly.am$c a() -> a
    u.aly.do b() -> b
u.aly.am$e -> bq.s:
    u.aly.am$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.am$e[] e -> e
    u.aly.am$e[] values() -> values
    u.aly.am$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.an -> bq.t:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    void a(boolean) -> a
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> a
    u.aly.dl k() -> b
    u.aly.db l() -> c
    u.aly.db m() -> d
u.aly.an$1 -> bq.u:
u.aly.an$a -> bq.v:
    void a(u.aly.dg,u.aly.an) -> a
    void b(u.aly.dg,u.aly.an) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.an$b -> bq.w:
    u.aly.an$a a() -> a
    u.aly.do b() -> b
u.aly.an$c -> bq.x:
    void a(u.aly.dg,u.aly.an) -> a
    void b(u.aly.dg,u.aly.an) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.an$d -> bq.y:
    u.aly.an$c a() -> a
    u.aly.do b() -> b
u.aly.an$e -> bq.z:
    u.aly.an$e a -> a
    u.aly.an$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.an$e[] f -> f
    u.aly.an$e[] values() -> values
    u.aly.an$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ao -> bq.aa:
    u.aly.dl l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    u.aly.bk e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte z -> x
    u.aly.ao$e[] A -> y
    java.util.Map k -> k
    u.aly.ao a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ao b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.ao a(int) -> a
    boolean l() -> b
    void c(boolean) -> c
    u.aly.ao c(java.lang.String) -> c
    boolean o() -> c
    void d(boolean) -> d
    u.aly.ao a(u.aly.bk) -> a
    void e(boolean) -> e
    u.aly.ao d(java.lang.String) -> d
    void f(boolean) -> f
    u.aly.ao e(java.lang.String) -> e
    void g(boolean) -> g
    u.aly.ao f(java.lang.String) -> f
    boolean A() -> d
    void h(boolean) -> h
    u.aly.ao g(java.lang.String) -> g
    boolean D() -> e
    void i(boolean) -> i
    u.aly.ao c(int) -> b
    boolean G() -> f
    void j(boolean) -> j
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void H() -> g
    u.aly.dl I() -> h
    u.aly.db J() -> i
    u.aly.db K() -> j
    u.aly.db L() -> k
    u.aly.db M() -> l
    u.aly.db N() -> m
    u.aly.db O() -> n
    u.aly.db P() -> o
    u.aly.db Q() -> p
    u.aly.db R() -> q
    u.aly.db S() -> r
u.aly.ao$1 -> bq.ab:
u.aly.ao$a -> bq.ac:
    void a(u.aly.dg,u.aly.ao) -> a
    void b(u.aly.dg,u.aly.ao) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ao$b -> bq.ad:
    u.aly.ao$a a() -> a
    u.aly.do b() -> b
u.aly.ao$c -> bq.ae:
    void a(u.aly.dg,u.aly.ao) -> a
    void b(u.aly.dg,u.aly.ao) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ao$d -> bq.af:
    u.aly.ao$c a() -> a
    u.aly.do b() -> b
u.aly.ao$e -> bq.ag:
    u.aly.ao$e a -> a
    u.aly.ao$e b -> b
    u.aly.ao$e c -> c
    u.aly.ao$e d -> d
    u.aly.ao$e e -> e
    u.aly.ao$e f -> f
    u.aly.ao$e g -> g
    u.aly.ao$e h -> h
    u.aly.ao$e i -> i
    u.aly.ao$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.ao$e[] n -> n
    u.aly.ao$e[] values() -> values
    u.aly.ao$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ap -> bq.ah:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    int a -> a
    int b -> b
    int c -> c
    byte m -> j
    u.aly.ap$e[] n -> k
    java.util.Map d -> d
    u.aly.ap a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ap c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ap d(int) -> c
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dl n() -> e
    u.aly.db o() -> f
    u.aly.db p() -> g
    u.aly.db q() -> h
u.aly.ap$1 -> bq.ai:
u.aly.ap$a -> bq.aj:
    void a(u.aly.dg,u.aly.ap) -> a
    void b(u.aly.dg,u.aly.ap) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ap$b -> bq.ak:
    u.aly.ap$a a() -> a
    u.aly.do b() -> b
u.aly.ap$c -> bq.al:
    void a(u.aly.dg,u.aly.ap) -> a
    void b(u.aly.dg,u.aly.ap) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ap$d -> bq.am:
    u.aly.ap$c a() -> a
    u.aly.do b() -> b
u.aly.ap$e -> bq.an:
    u.aly.ap$e a -> a
    u.aly.ap$e b -> b
    u.aly.ap$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ap$e[] g -> g
    u.aly.ap$e[] values() -> values
    u.aly.ap$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.aq -> bq.ao:
    u.aly.dl c -> c
    u.aly.db d -> d
    java.util.Map e -> e
    u.aly.bd a -> a
    u.aly.aq$e[] f -> f
    java.util.Map b -> b
    u.aly.aq a(u.aly.bd) -> a
    boolean e() -> a
    void a(boolean) -> a
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void f() -> b
    u.aly.dl h() -> c
    u.aly.db i() -> d
u.aly.aq$1 -> bq.ap:
u.aly.aq$a -> bq.aq:
    void a(u.aly.dg,u.aly.aq) -> a
    void b(u.aly.dg,u.aly.aq) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.aq$b -> bq.ar:
    u.aly.aq$a a() -> a
    u.aly.do b() -> b
u.aly.aq$c -> bq.as:
    void a(u.aly.dg,u.aly.aq) -> a
    void b(u.aly.dg,u.aly.aq) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.aq$d -> bq.at:
    u.aly.aq$c a() -> a
    u.aly.do b() -> b
u.aly.aq$e -> bq.au:
    u.aly.aq$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.aq$e[] e -> e
    u.aly.aq$e[] values() -> values
    u.aly.aq$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ar -> bq.av:
    u.aly.dl s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    u.aly.db w -> w
    u.aly.db x -> x
    u.aly.db y -> y
    u.aly.db z -> z
    u.aly.db A -> A
    u.aly.db B -> B
    u.aly.db C -> C
    u.aly.db D -> D
    u.aly.db E -> E
    u.aly.db F -> F
    u.aly.db G -> G
    u.aly.db H -> H
    u.aly.db I -> I
    u.aly.db J -> J
    java.util.Map K -> K
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    u.aly.bi i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    byte O -> L
    u.aly.ar$e[] P -> M
    java.util.Map r -> r
    u.aly.ar a(java.lang.String) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ar b(java.lang.String) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ar c(java.lang.String) -> c
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    u.aly.ar e(java.lang.String) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.ar f(java.lang.String) -> e
    boolean u() -> f
    void f(boolean) -> f
    u.aly.ar g(java.lang.String) -> f
    boolean x() -> g
    void g(boolean) -> g
    u.aly.ar h(java.lang.String) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.ar a(u.aly.bi) -> a
    boolean D() -> i
    void i(boolean) -> i
    boolean G() -> j
    void k(boolean) -> j
    boolean J() -> k
    void m(boolean) -> k
    u.aly.ar i(java.lang.String) -> h
    boolean M() -> l
    void n(boolean) -> l
    u.aly.ar j(java.lang.String) -> i
    boolean P() -> m
    void o(boolean) -> m
    u.aly.ar a(long) -> a
    boolean S() -> n
    void p(boolean) -> n
    u.aly.ar k(java.lang.String) -> j
    boolean V() -> o
    void q(boolean) -> o
    u.aly.ar l(java.lang.String) -> k
    boolean Y() -> p
    void r(boolean) -> p
    u.aly.ar m(java.lang.String) -> l
    boolean ab() -> q
    void s(boolean) -> q
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void ac() -> r
    u.aly.dl ad() -> s
    u.aly.db ae() -> t
    u.aly.db af() -> u
    u.aly.db ag() -> v
    u.aly.db ah() -> w
    u.aly.db ai() -> x
    u.aly.db aj() -> y
    u.aly.db ak() -> z
    u.aly.db al() -> A
    u.aly.db am() -> B
    u.aly.db an() -> C
    u.aly.db ao() -> D
    u.aly.db ap() -> E
    u.aly.db aq() -> F
    u.aly.db ar() -> G
    u.aly.db as() -> H
    u.aly.db at() -> I
    u.aly.db au() -> J
u.aly.ar$1 -> bq.aw:
u.aly.ar$a -> bq.ax:
    void a(u.aly.dg,u.aly.ar) -> a
    void b(u.aly.dg,u.aly.ar) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ar$b -> bq.ay:
    u.aly.ar$a a() -> a
    u.aly.do b() -> b
u.aly.ar$c -> bq.az:
    void a(u.aly.dg,u.aly.ar) -> a
    void b(u.aly.dg,u.aly.ar) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ar$d -> bq.ba:
    u.aly.ar$c a() -> a
    u.aly.do b() -> b
u.aly.ar$e -> bq.bb:
    u.aly.ar$e a -> a
    u.aly.ar$e b -> b
    u.aly.ar$e c -> c
    u.aly.ar$e d -> d
    u.aly.ar$e e -> e
    u.aly.ar$e f -> f
    u.aly.ar$e g -> g
    u.aly.ar$e h -> h
    u.aly.ar$e i -> i
    u.aly.ar$e j -> j
    u.aly.ar$e k -> k
    u.aly.ar$e l -> l
    u.aly.ar$e m -> m
    u.aly.ar$e n -> n
    u.aly.ar$e o -> o
    u.aly.ar$e p -> p
    u.aly.ar$e q -> q
    java.util.Map r -> r
    short s -> s
    java.lang.String t -> t
    u.aly.ar$e[] u -> u
    u.aly.ar$e[] values() -> values
    u.aly.ar$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.at -> bq.bc:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    long a -> a
    java.lang.String b -> b
    u.aly.au c -> c
    byte k -> j
    u.aly.at$e[] l -> k
    java.util.Map d -> d
    u.aly.at a(long) -> a
    boolean e() -> a
    void b(boolean) -> a
    u.aly.at a(java.lang.String) -> a
    void c(boolean) -> b
    u.aly.at a(u.aly.au) -> a
    boolean l() -> b
    void d(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> c
    u.aly.dl n() -> d
    u.aly.db o() -> e
    u.aly.db p() -> f
    u.aly.db q() -> g
u.aly.at$1 -> bq.bd:
u.aly.at$a -> bq.be:
    void a(u.aly.dg,u.aly.at) -> a
    void b(u.aly.dg,u.aly.at) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.at$b -> bq.bf:
    u.aly.at$a a() -> a
    u.aly.do b() -> b
u.aly.at$c -> bq.bg:
    void a(u.aly.dg,u.aly.at) -> a
    void b(u.aly.dg,u.aly.at) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.at$d -> bq.bh:
    u.aly.at$c a() -> a
    u.aly.do b() -> b
u.aly.at$e -> bq.bi:
    u.aly.at$e a -> a
    u.aly.at$e b -> b
    u.aly.at$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.at$e[] g -> g
    u.aly.at$e[] values() -> values
    u.aly.at$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.au -> bq.bj:
    u.aly.au a -> a
    u.aly.au b -> b
    int c -> c
    u.aly.au[] d -> d
    u.aly.au[] values() -> values
    u.aly.au valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.au a(int) -> a
u.aly.av -> bq.bk:
    u.aly.dl g -> g
    u.aly.db h -> h
    u.aly.db i -> i
    u.aly.db j -> j
    u.aly.db k -> k
    u.aly.db l -> l
    java.util.Map m -> m
    java.lang.String a -> a
    java.util.Map b -> b
    long c -> c
    int d -> d
    long e -> e
    byte q -> n
    u.aly.av$e[] r -> o
    java.util.Map f -> f
    u.aly.av a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.av a(java.util.Map) -> a
    void b(boolean) -> b
    u.aly.av a(long) -> a
    boolean m() -> a
    void c(boolean) -> c
    u.aly.av a(int) -> a
    boolean p() -> b
    void d(boolean) -> d
    u.aly.av b(long) -> b
    boolean s() -> c
    void e(boolean) -> e
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void t() -> d
    u.aly.dl u() -> e
    u.aly.db v() -> f
    u.aly.db w() -> g
    u.aly.db x() -> h
    u.aly.db y() -> i
    u.aly.db z() -> j
u.aly.av$1 -> bq.bl:
u.aly.av$a -> bq.bm:
    void a(u.aly.dg,u.aly.av) -> a
    void b(u.aly.dg,u.aly.av) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.av$b -> bq.bn:
    u.aly.av$a a() -> a
    u.aly.do b() -> b
u.aly.av$c -> bq.bo:
    void a(u.aly.dg,u.aly.av) -> a
    void b(u.aly.dg,u.aly.av) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.av$d -> bq.bp:
    u.aly.av$c a() -> a
    u.aly.do b() -> b
u.aly.av$e -> bq.bq:
    u.aly.av$e a -> a
    u.aly.av$e b -> b
    u.aly.av$e c -> c
    u.aly.av$e d -> d
    u.aly.av$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.av$e[] i -> i
    u.aly.av$e[] values() -> values
    u.aly.av$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ax -> bq.br:
    u.aly.dl f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    u.aly.db i -> i
    u.aly.db j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    byte m -> l
    u.aly.ax$e[] n -> m
    java.util.Map e -> e
    u.aly.ax a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ax b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.ax c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.ax a(long) -> a
    boolean o() -> b
    void d(boolean) -> d
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void p() -> c
    u.aly.dl q() -> d
    u.aly.db r() -> e
    u.aly.db s() -> f
    u.aly.db t() -> g
    u.aly.db u() -> h
u.aly.ax$1 -> bq.bs:
u.aly.ax$a -> bq.bt:
    void a(u.aly.dg,u.aly.ax) -> a
    void b(u.aly.dg,u.aly.ax) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ax$b -> bq.bu:
    u.aly.ax$a a() -> a
    u.aly.do b() -> b
u.aly.ax$c -> bq.bv:
    void a(u.aly.dg,u.aly.ax) -> a
    void b(u.aly.dg,u.aly.ax) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ax$d -> bq.bw:
    u.aly.ax$c a() -> a
    u.aly.do b() -> b
u.aly.ax$e -> bq.bx:
    u.aly.ax$e a -> a
    u.aly.ax$e b -> b
    u.aly.ax$e c -> c
    u.aly.ax$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.ax$e[] h -> h
    u.aly.ax$e[] values() -> values
    u.aly.ax$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ay -> bq.by:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    int c -> c
    byte l -> j
    java.util.Map d -> d
    java.lang.String c() -> a
    u.aly.ay a(java.lang.String) -> a
    void a(boolean) -> a
    long f() -> b
    u.aly.ay a(long) -> a
    boolean i() -> c
    void b(boolean) -> b
    int j() -> d
    u.aly.ay a(int) -> a
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dl n() -> g
    u.aly.db o() -> h
    u.aly.db p() -> i
    u.aly.db q() -> j
u.aly.ay$1 -> bq.bz:
u.aly.ay$a -> bq.ca:
    void a(u.aly.dg,u.aly.ay) -> a
    void b(u.aly.dg,u.aly.ay) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ay$b -> bq.cb:
    u.aly.ay$a a() -> a
    u.aly.do b() -> b
u.aly.ay$c -> bq.cc:
    void a(u.aly.dg,u.aly.ay) -> a
    void b(u.aly.dg,u.aly.ay) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ay$d -> bq.cd:
    u.aly.ay$c a() -> a
    u.aly.do b() -> b
u.aly.ay$e -> bq.ce:
    u.aly.ay$e a -> a
    u.aly.ay$e b -> b
    u.aly.ay$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ay$e[] g -> g
    u.aly.ay$e[] values() -> values
    u.aly.ay$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.az -> bq.cf:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    java.util.List b -> b
    java.lang.String c -> c
    u.aly.az$e[] j -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    u.aly.az a(java.util.Map) -> a
    void a(boolean) -> a
    java.util.List j() -> b
    u.aly.az a(java.util.List) -> a
    boolean l() -> c
    void b(boolean) -> b
    boolean o() -> d
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void p() -> e
    u.aly.dl q() -> f
    u.aly.db r() -> g
    u.aly.db s() -> h
    u.aly.db t() -> i
u.aly.az$1 -> bq.cg:
u.aly.az$a -> bq.ch:
    void a(u.aly.dg,u.aly.az) -> a
    void b(u.aly.dg,u.aly.az) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.az$b -> bq.ci:
    u.aly.az$a a() -> a
    u.aly.do b() -> b
u.aly.az$c -> bq.cj:
    void a(u.aly.dg,u.aly.az) -> a
    void b(u.aly.dg,u.aly.az) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.az$d -> bq.ck:
    u.aly.az$c a() -> a
    u.aly.do b() -> b
u.aly.az$e -> bq.cl:
    u.aly.az$e a -> a
    u.aly.az$e b -> b
    u.aly.az$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.az$e[] g -> g
    u.aly.az$e[] values() -> values
    u.aly.az$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.b -> bq.cm:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.ba -> bq.cn:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    int b -> b
    java.lang.String c -> c
    byte k -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    boolean f() -> b
    void a(boolean) -> a
    int h() -> c
    u.aly.ba a(int) -> a
    boolean j() -> d
    void b(boolean) -> b
    java.lang.String k() -> e
    u.aly.ba a(java.lang.String) -> a
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void n() -> f
    u.aly.dl o() -> g
    u.aly.db p() -> h
    u.aly.db q() -> i
    u.aly.db r() -> j
u.aly.ba$1 -> bq.co:
u.aly.ba$a -> bq.cp:
    void a(u.aly.dg,u.aly.ba) -> a
    void b(u.aly.dg,u.aly.ba) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ba$b -> bq.cq:
    u.aly.ba$a a() -> a
    u.aly.do b() -> b
u.aly.ba$c -> bq.cr:
    void a(u.aly.dg,u.aly.ba) -> a
    void b(u.aly.dg,u.aly.ba) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.ba$d -> bq.cs:
    u.aly.ba$c a() -> a
    u.aly.do b() -> b
u.aly.ba$e -> bq.ct:
    u.aly.ba$e a -> a
    u.aly.ba$e b -> b
    u.aly.ba$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ba$e[] g -> g
    u.aly.ba$e[] values() -> values
    u.aly.ba$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bb -> bq.cu:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    byte k -> j
    u.aly.bb$e[] l -> k
    java.util.Map d -> d
    java.lang.String c() -> a
    boolean e() -> b
    void a(boolean) -> a
    long f() -> c
    boolean i() -> d
    void b(boolean) -> b
    java.lang.String j() -> e
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dl n() -> g
    u.aly.db o() -> h
    u.aly.db p() -> i
    u.aly.db q() -> j
u.aly.bb$1 -> bq.cv:
u.aly.bb$a -> bq.cw:
    void a(u.aly.dg,u.aly.bb) -> a
    void b(u.aly.dg,u.aly.bb) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bb$b -> bq.cx:
    u.aly.bb$a a() -> a
    u.aly.do b() -> b
u.aly.bb$c -> bq.cy:
    void a(u.aly.dg,u.aly.bb) -> a
    void b(u.aly.dg,u.aly.bb) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bb$d -> bq.cz:
    u.aly.bb$c a() -> a
    u.aly.do b() -> b
u.aly.bb$e -> bq.da:
    u.aly.bb$e a -> a
    u.aly.bb$e b -> b
    u.aly.bb$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bb$e[] g -> g
    u.aly.bb$e[] values() -> values
    u.aly.bb$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bc -> bq.db:
    u.aly.dl f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    u.aly.db i -> i
    u.aly.db j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    u.aly.bc$e[] l -> l
    java.util.Map e -> e
    java.lang.String c() -> a
    u.aly.bc a(java.lang.String) -> a
    void a(boolean) -> a
    void a(u.aly.at) -> a
    boolean k() -> b
    void b(boolean) -> b
    void a(u.aly.av) -> a
    boolean p() -> c
    void c(boolean) -> c
    boolean u() -> d
    void d(boolean) -> d
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void v() -> e
    u.aly.dl w() -> f
    u.aly.db x() -> g
    u.aly.db y() -> h
    u.aly.db z() -> i
    u.aly.db A() -> j
u.aly.bc$1 -> bq.dc:
u.aly.bc$a -> bq.dd:
    void a(u.aly.dg,u.aly.bc) -> a
    void b(u.aly.dg,u.aly.bc) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bc$b -> bq.de:
    u.aly.bc$a a() -> a
    u.aly.do b() -> b
u.aly.bc$c -> bq.df:
    void a(u.aly.dg,u.aly.bc) -> a
    void b(u.aly.dg,u.aly.bc) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bc$d -> bq.dg:
    u.aly.bc$c a() -> a
    u.aly.do b() -> b
u.aly.bc$e -> bq.dh:
    u.aly.bc$e a -> a
    u.aly.bc$e b -> b
    u.aly.bc$e c -> c
    u.aly.bc$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.bc$e[] h -> h
    u.aly.bc$e[] values() -> values
    u.aly.bc$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bd -> bq.di:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    int a -> a
    long b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dl k() -> d
    u.aly.db l() -> e
    u.aly.db m() -> f
u.aly.bd$1 -> bq.dj:
u.aly.bd$a -> bq.dk:
    void a(u.aly.dg,u.aly.bd) -> a
    void b(u.aly.dg,u.aly.bd) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bd$b -> bq.dl:
    u.aly.bd$a a() -> a
    u.aly.do b() -> b
u.aly.bd$c -> bq.dm:
    void a(u.aly.dg,u.aly.bd) -> a
    void b(u.aly.dg,u.aly.bd) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bd$d -> bq.dn:
    u.aly.bd$c a() -> a
    u.aly.do b() -> b
u.aly.bd$e -> bq.do:
    u.aly.bd$e a -> a
    u.aly.bd$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bd$e[] f -> f
    u.aly.bd$e[] values() -> values
    u.aly.bd$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.be -> bq.dp:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    double a -> a
    double b -> b
    long c -> c
    byte m -> j
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dl n() -> e
    u.aly.db o() -> f
    u.aly.db p() -> g
    u.aly.db q() -> h
u.aly.be$1 -> bq.dq:
u.aly.be$a -> bq.dr:
    void a(u.aly.dg,u.aly.be) -> a
    void b(u.aly.dg,u.aly.be) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.be$b -> bq.ds:
    u.aly.be$a a() -> a
    u.aly.do b() -> b
u.aly.be$c -> bq.dt:
    void a(u.aly.dg,u.aly.be) -> a
    void b(u.aly.dg,u.aly.be) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.be$d -> bq.du:
    u.aly.be$c a() -> a
    u.aly.do b() -> b
u.aly.be$e -> bq.dv:
    u.aly.be$e a -> a
    u.aly.be$e b -> b
    u.aly.be$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.be$e[] g -> g
    u.aly.be$e[] values() -> values
    u.aly.be$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bf -> bq.dw:
    u.aly.dl l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    java.util.Map w -> w
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    u.aly.al i -> i
    java.lang.String j -> j
    byte B -> x
    u.aly.bf$e[] C -> y
    java.util.Map k -> k
    u.aly.bf a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.bf a(java.lang.String) -> a
    boolean i() -> b
    void b(boolean) -> b
    u.aly.bf b(java.lang.String) -> b
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.bf c(java.lang.String) -> c
    boolean u() -> f
    void f(boolean) -> f
    boolean x() -> g
    void g(boolean) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.bf a(u.aly.al) -> a
    boolean D() -> i
    void i(boolean) -> i
    u.aly.bf e(java.lang.String) -> d
    boolean G() -> j
    void j(boolean) -> j
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void H() -> k
    u.aly.dl I() -> l
    u.aly.db J() -> m
    u.aly.db K() -> n
    u.aly.db L() -> o
    u.aly.db M() -> p
    u.aly.db N() -> q
    u.aly.db O() -> r
    u.aly.db P() -> s
    u.aly.db Q() -> t
    u.aly.db R() -> u
    u.aly.db S() -> v
u.aly.bf$1 -> bq.dx:
u.aly.bf$a -> bq.dy:
    void a(u.aly.dg,u.aly.bf) -> a
    void b(u.aly.dg,u.aly.bf) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bf$b -> bq.dz:
    u.aly.bf$a a() -> a
    u.aly.do b() -> b
u.aly.bf$c -> bq.ea:
    void a(u.aly.dg,u.aly.bf) -> a
    void b(u.aly.dg,u.aly.bf) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bf$d -> bq.eb:
    u.aly.bf$c a() -> a
    u.aly.do b() -> b
u.aly.bf$e -> bq.ec:
    u.aly.bf$e a -> a
    u.aly.bf$e b -> b
    u.aly.bf$e c -> c
    u.aly.bf$e d -> d
    u.aly.bf$e e -> e
    u.aly.bf$e f -> f
    u.aly.bf$e g -> g
    u.aly.bf$e h -> h
    u.aly.bf$e i -> i
    u.aly.bf$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.bf$e[] n -> n
    u.aly.bf$e[] values() -> values
    u.aly.bf$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bg -> bq.ed:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    long b -> b
    byte i -> h
    java.util.Map c -> c
    u.aly.bg a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bg a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> b
    u.aly.dl k() -> c
    u.aly.db l() -> d
    u.aly.db m() -> e
u.aly.bg$1 -> bq.ee:
u.aly.bg$a -> bq.ef:
    void a(u.aly.dg,u.aly.bg) -> a
    void b(u.aly.dg,u.aly.bg) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bg$b -> bq.eg:
    u.aly.bg$a a() -> a
    u.aly.do b() -> b
u.aly.bg$c -> bq.eh:
    void a(u.aly.dg,u.aly.bg) -> a
    void b(u.aly.dg,u.aly.bg) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bg$d -> bq.ei:
    u.aly.bg$c a() -> a
    u.aly.do b() -> b
u.aly.bg$e -> bq.ej:
    u.aly.bg$e a -> a
    u.aly.bg$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bg$e[] f -> f
    u.aly.bg$e[] values() -> values
    u.aly.bg$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bh -> bq.ek:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map a -> a
    java.lang.Object a(u.aly.dg,u.aly.db) -> a
    void c(u.aly.dg) -> c
    java.lang.Object a(u.aly.dg,short) -> a
    void d(u.aly.dg) -> d
    u.aly.db a(u.aly.bh$a) -> a
    u.aly.dl c() -> a
    u.aly.bh$a a(short) -> a
    void b(java.lang.String) -> a
    void b(long) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.bh) -> a
    int hashCode() -> hashCode
    u.aly.co b(short) -> b
    u.aly.db a(u.aly.co) -> a
u.aly.bh$1 -> bq.el:
    int[] a -> a
u.aly.bh$a -> bq.em:
    u.aly.bh$a a -> a
    u.aly.bh$a b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bh$a[] f -> f
    u.aly.bh$a[] values() -> values
    u.aly.bh$a valueOf(java.lang.String) -> valueOf
    u.aly.bh$a a(int) -> a
    u.aly.bh$a b(int) -> b
    short a() -> a
    java.lang.String b() -> b
u.aly.bi -> bq.en:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dl k() -> d
    u.aly.db l() -> e
    u.aly.db m() -> f
u.aly.bi$1 -> bq.eo:
u.aly.bi$a -> bq.ep:
    void a(u.aly.dg,u.aly.bi) -> a
    void b(u.aly.dg,u.aly.bi) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bi$b -> bq.eq:
    u.aly.bi$a a() -> a
    u.aly.do b() -> b
u.aly.bi$c -> bq.er:
    void a(u.aly.dg,u.aly.bi) -> a
    void b(u.aly.dg,u.aly.bi) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bi$d -> bq.es:
    u.aly.bi$c a() -> a
    u.aly.do b() -> b
u.aly.bi$e -> bq.et:
    u.aly.bi$e a -> a
    u.aly.bi$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bi$e[] f -> f
    u.aly.bi$e[] values() -> values
    u.aly.bi$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bj -> bq.eu:
    u.aly.dl e -> e
    u.aly.db f -> f
    u.aly.db g -> g
    u.aly.db h -> h
    java.util.Map i -> i
    int a -> a
    java.lang.String b -> b
    u.aly.ba c -> c
    byte k -> j
    u.aly.bj$e[] l -> k
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    java.lang.String f() -> b
    boolean i() -> c
    void b(boolean) -> b
    u.aly.ba j() -> d
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dl n() -> g
    u.aly.db o() -> h
    u.aly.db p() -> i
    u.aly.db q() -> j
u.aly.bj$1 -> bq.ev:
u.aly.bj$a -> bq.ew:
    void a(u.aly.dg,u.aly.bj) -> a
    void b(u.aly.dg,u.aly.bj) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bj$b -> bq.ex:
    u.aly.bj$a a() -> a
    u.aly.do b() -> b
u.aly.bj$c -> bq.ey:
    void a(u.aly.dg,u.aly.bj) -> a
    void b(u.aly.dg,u.aly.bj) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bj$d -> bq.ez:
    u.aly.bj$c a() -> a
    u.aly.do b() -> b
u.aly.bj$e -> bq.fa:
    u.aly.bj$e a -> a
    u.aly.bj$e b -> b
    u.aly.bj$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bj$e[] g -> g
    u.aly.bj$e[] values() -> values
    u.aly.bj$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bk -> bq.fb:
    u.aly.bk a -> a
    u.aly.bk b -> b
    u.aly.bk c -> c
    u.aly.bk d -> d
    int e -> e
    u.aly.bk[] f -> f
    u.aly.bk[] values() -> values
    u.aly.bk valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.bk a(int) -> a
u.aly.bl -> bq.fc:
    u.aly.dl i -> i
    u.aly.db j -> j
    u.aly.db k -> k
    u.aly.db l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    java.util.Map q -> q
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.List e -> e
    java.util.List f -> f
    u.aly.bm g -> g
    byte u -> r
    u.aly.bl$e[] v -> s
    java.util.Map h -> h
    u.aly.bl a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bl a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    u.aly.bl b(long) -> b
    boolean l() -> b
    void c(boolean) -> c
    u.aly.bl c(long) -> c
    boolean o() -> c
    void d(boolean) -> d
    int p() -> d
    u.aly.bl a(java.util.List) -> a
    boolean t() -> e
    void e(boolean) -> e
    void a(u.aly.be) -> a
    u.aly.bl b(java.util.List) -> b
    boolean y() -> f
    void f(boolean) -> f
    u.aly.bl a(u.aly.bm) -> a
    boolean B() -> g
    void g(boolean) -> g
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void C() -> h
    u.aly.dl D() -> i
    u.aly.db E() -> j
    u.aly.db F() -> k
    u.aly.db G() -> l
    u.aly.db H() -> m
    u.aly.db I() -> n
    u.aly.db J() -> o
    u.aly.db K() -> p
u.aly.bl$1 -> bq.fd:
u.aly.bl$a -> bq.fe:
    void a(u.aly.dg,u.aly.bl) -> a
    void b(u.aly.dg,u.aly.bl) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bl$b -> bq.ff:
    u.aly.bl$a a() -> a
    u.aly.do b() -> b
u.aly.bl$c -> bq.fg:
    void a(u.aly.dg,u.aly.bl) -> a
    void b(u.aly.dg,u.aly.bl) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bl$d -> bq.fh:
    u.aly.bl$c a() -> a
    u.aly.do b() -> b
u.aly.bl$e -> bq.fi:
    u.aly.bl$e a -> a
    u.aly.bl$e b -> b
    u.aly.bl$e c -> c
    u.aly.bl$e d -> d
    u.aly.bl$e e -> e
    u.aly.bl$e f -> f
    u.aly.bl$e g -> g
    java.util.Map h -> h
    short i -> i
    java.lang.String j -> j
    u.aly.bl$e[] k -> k
    u.aly.bl$e[] values() -> values
    u.aly.bl$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bm -> bq.fj:
    u.aly.dl d -> d
    u.aly.db e -> e
    u.aly.db f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.bm a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.bm c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dl k() -> d
    u.aly.db l() -> e
    u.aly.db m() -> f
u.aly.bm$1 -> bq.fk:
u.aly.bm$a -> bq.fl:
    void a(u.aly.dg,u.aly.bm) -> a
    void b(u.aly.dg,u.aly.bm) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bm$b -> bq.fm:
    u.aly.bm$a a() -> a
    u.aly.do b() -> b
u.aly.bm$c -> bq.fn:
    void a(u.aly.dg,u.aly.bm) -> a
    void b(u.aly.dg,u.aly.bm) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bm$d -> bq.fo:
    u.aly.bm$c a() -> a
    u.aly.do b() -> b
u.aly.bm$e -> bq.fp:
    u.aly.bm$e a -> a
    u.aly.bm$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.bm$e[] f -> f
    u.aly.bm$e[] values() -> values
    u.aly.bm$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bn -> bq.fq:
    u.aly.dl m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    u.aly.db w -> w
    u.aly.db x -> x
    java.util.Map y -> y
    u.aly.ap a -> a
    u.aly.ao b -> b
    u.aly.ar c -> c
    u.aly.bf d -> d
    u.aly.am e -> e
    java.util.List f -> f
    java.util.List g -> g
    u.aly.ba h -> h
    u.aly.az i -> i
    u.aly.an j -> j
    u.aly.aq k -> k
    u.aly.bn$e[] z -> z
    java.util.Map l -> l
    u.aly.bn a(u.aly.ap) -> a
    void a(boolean) -> a
    u.aly.bn a(u.aly.ao) -> a
    void b(boolean) -> b
    u.aly.bn a(u.aly.ar) -> a
    void c(boolean) -> c
    u.aly.bn a(u.aly.bf) -> a
    void d(boolean) -> d
    u.aly.bn a(u.aly.am) -> a
    boolean r() -> a
    void e(boolean) -> e
    int s() -> b
    void a(u.aly.bc) -> a
    java.util.List u() -> c
    u.aly.bn a(java.util.List) -> a
    boolean w() -> d
    void f(boolean) -> f
    void a(u.aly.bl) -> a
    java.util.List z() -> e
    u.aly.bn b(java.util.List) -> b
    boolean B() -> f
    void g(boolean) -> g
    u.aly.bn a(u.aly.ba) -> a
    boolean E() -> g
    void h(boolean) -> h
    u.aly.bn a(u.aly.az) -> a
    boolean H() -> h
    void i(boolean) -> i
    u.aly.bn a(u.aly.an) -> a
    boolean K() -> i
    void j(boolean) -> j
    u.aly.bn a(u.aly.aq) -> a
    boolean N() -> j
    void k(boolean) -> k
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void O() -> k
    u.aly.dl P() -> l
    u.aly.db Q() -> m
    u.aly.db R() -> n
    u.aly.db S() -> o
    u.aly.db T() -> p
    u.aly.db U() -> q
    u.aly.db V() -> r
    u.aly.db W() -> s
    u.aly.db X() -> t
    u.aly.db Y() -> u
    u.aly.db Z() -> v
    u.aly.db aa() -> w
u.aly.bn$1 -> bq.fr:
u.aly.bn$a -> bq.fs:
    void a(u.aly.dg,u.aly.bn) -> a
    void b(u.aly.dg,u.aly.bn) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bn$b -> bq.ft:
    u.aly.bn$a a() -> a
    u.aly.do b() -> b
u.aly.bn$c -> bq.fu:
    void a(u.aly.dg,u.aly.bn) -> a
    void b(u.aly.dg,u.aly.bn) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bn$d -> bq.fv:
    u.aly.bn$c a() -> a
    u.aly.do b() -> b
u.aly.bn$e -> bq.fw:
    u.aly.bn$e a -> a
    u.aly.bn$e b -> b
    u.aly.bn$e c -> c
    u.aly.bn$e d -> d
    u.aly.bn$e e -> e
    u.aly.bn$e f -> f
    u.aly.bn$e g -> g
    u.aly.bn$e h -> h
    u.aly.bn$e i -> i
    u.aly.bn$e j -> j
    u.aly.bn$e k -> k
    java.util.Map l -> l
    short m -> m
    java.lang.String n -> n
    u.aly.bn$e[] o -> o
    u.aly.bn$e[] values() -> values
    u.aly.bn$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bp -> bq.fx:
    u.aly.dl l -> l
    u.aly.db m -> m
    u.aly.db n -> n
    u.aly.db o -> o
    u.aly.db p -> p
    u.aly.db q -> q
    u.aly.db r -> r
    u.aly.db s -> s
    u.aly.db t -> t
    u.aly.db u -> u
    u.aly.db v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.nio.ByteBuffer g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte B -> x
    u.aly.bp$e[] C -> y
    java.util.Map k -> k
    u.aly.bp a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bp b(java.lang.String) -> b
    void b(boolean) -> b
    u.aly.bp c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.bp a(int) -> a
    boolean o() -> a
    void d(boolean) -> d
    u.aly.bp c(int) -> b
    boolean r() -> b
    void e(boolean) -> e
    u.aly.bp d(int) -> c
    boolean u() -> c
    void f(boolean) -> f
    u.aly.bp a(byte[]) -> a
    u.aly.bp a(java.nio.ByteBuffer) -> a
    void g(boolean) -> g
    u.aly.bp d(java.lang.String) -> d
    void h(boolean) -> h
    u.aly.bp e(java.lang.String) -> e
    void i(boolean) -> i
    u.aly.bp e(int) -> d
    boolean H() -> d
    void j(boolean) -> j
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.String toString() -> toString
    void I() -> e
    u.aly.dl J() -> f
    u.aly.db K() -> g
    u.aly.db L() -> h
    u.aly.db M() -> i
    u.aly.db N() -> j
    u.aly.db O() -> k
    u.aly.db P() -> l
    u.aly.db Q() -> m
    u.aly.db R() -> n
    u.aly.db S() -> o
    u.aly.db T() -> p
u.aly.bp$1 -> bq.fy:
u.aly.bp$a -> bq.fz:
    void a(u.aly.dg,u.aly.bp) -> a
    void b(u.aly.dg,u.aly.bp) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bp$b -> bq.ga:
    u.aly.bp$a a() -> a
    u.aly.do b() -> b
u.aly.bp$c -> bq.gb:
    void a(u.aly.dg,u.aly.bp) -> a
    void b(u.aly.dg,u.aly.bp) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.bp$d -> bq.gc:
    u.aly.bp$c a() -> a
    u.aly.do b() -> b
u.aly.bp$e -> bq.gd:
    u.aly.bp$e a -> a
    u.aly.bp$e b -> b
    u.aly.bp$e c -> c
    u.aly.bp$e d -> d
    u.aly.bp$e e -> e
    u.aly.bp$e f -> f
    u.aly.bp$e g -> g
    u.aly.bp$e h -> h
    u.aly.bp$e i -> i
    u.aly.bp$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.bp$e[] n -> n
    u.aly.bp$e[] values() -> values
    u.aly.bp$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bq -> bq.ge:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    java.lang.String d(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String[] j(android.content.Context) -> e
    boolean k(android.content.Context) -> f
    boolean l(android.content.Context) -> g
    int m(android.content.Context) -> h
    java.lang.String[] n(android.content.Context) -> i
    java.util.Locale x(android.content.Context) -> r
    java.lang.String o(android.content.Context) -> j
    java.lang.String p(android.content.Context) -> k
    int[] r(android.content.Context) -> l
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String s(android.content.Context) -> m
    java.lang.String t(android.content.Context) -> n
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
    boolean w(android.content.Context) -> q
u.aly.br -> bq.gf:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
u.aly.bw -> bq.gg:
    java.lang.String a -> a
    java.util.Map b -> b
    u.aly.by a(u.aly.bx,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams b() -> b
    void b(java.lang.String) -> b
u.aly.bx -> bq.gh:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
u.aly.by -> bq.gi:
u.aly.c -> bq.gj:
    byte[] a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    byte[] f -> f
    byte[] g -> g
    byte[] h -> h
    int i -> i
    int j -> j
    int k -> k
    byte[] l -> l
    byte[] m -> m
    boolean n -> n
    java.lang.String a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(int) -> a
    void a(boolean) -> a
    u.aly.c a(android.content.Context,java.lang.String,byte[]) -> a
    u.aly.c b(android.content.Context,java.lang.String,byte[]) -> b
    void b() -> b
    byte[] a(byte[],int) -> a
    byte[] d() -> d
    byte[] e() -> e
    byte[] c() -> c
    java.lang.String toString() -> toString
u.aly.cc -> bq.gk:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
u.aly.cd -> bq.gl:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean d(java.lang.String) -> c
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
u.aly.ce -> bq.gm:
    boolean a(byte,int) -> a
    boolean a(int,int) -> a
    int b(int,int) -> b
    byte a(byte,int,boolean) -> a
    int a(int,int,boolean) -> a
u.aly.cf -> bq.gn:
    short[] a -> a
    int b -> b
    short a() -> a
    void a(short) -> a
    void d() -> c
    void c() -> b
    java.lang.String toString() -> toString
u.aly.ch -> bq.go:
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
u.aly.ci -> bq.gp:
    java.util.Comparator a -> a
    int a(byte,byte) -> a
    int a(int,int) -> a
    int a(byte[],byte[]) -> a
    int a(java.lang.Comparable,java.lang.Comparable) -> a
    int a(java.util.List,java.util.List) -> a
    int a(java.util.Set,java.util.Set) -> a
    int a(java.util.Map,java.util.Map) -> a
    void a(java.nio.ByteBuffer,java.lang.StringBuilder) -> a
    java.lang.String a(byte) -> a
u.aly.ci$1 -> bq.gq:
u.aly.ci$a -> bq.gr:
    int compare(java.lang.Object,java.lang.Object) -> compare
u.aly.ck -> bq.gs:
    u.aly.dg a -> a
    u.aly.dt b -> b
    void a(u.aly.ch,byte[]) -> a
u.aly.cn -> bq.gt:
u.aly.co -> bq.gu:
    short a() -> a
u.aly.cq -> bq.gv:
    java.io.ByteArrayOutputStream a -> a
    u.aly.ds b -> b
    u.aly.dg c -> c
    byte[] a(u.aly.ch) -> a
u.aly.cr -> bq.gw:
    java.lang.Object b -> b
    u.aly.co c -> c
    java.util.Map a -> a
    u.aly.co i() -> b
    java.lang.Object j() -> c
    boolean k() -> d
    void a(u.aly.dg) -> a
    void b(u.aly.dg) -> b
    java.lang.Object a(u.aly.dg,u.aly.db) -> a
    void c(u.aly.dg) -> c
    java.lang.Object a(u.aly.dg,short) -> a
    void d(u.aly.dg) -> d
    u.aly.dl c() -> a
    u.aly.db a(u.aly.co) -> a
    u.aly.co b(short) -> b
    java.lang.String toString() -> toString
u.aly.cr$1 -> bq.gx:
u.aly.cr$a -> bq.gy:
    void a(u.aly.dg,u.aly.cr) -> a
    void b(u.aly.dg,u.aly.cr) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.cr$b -> bq.gz:
    u.aly.cr$a a() -> a
    u.aly.do b() -> b
u.aly.cr$c -> bq.ha:
    void a(u.aly.dg,u.aly.cr) -> a
    void b(u.aly.dg,u.aly.cr) -> b
    void a(u.aly.dg,u.aly.ch) -> a
    void b(u.aly.dg,u.aly.ch) -> b
u.aly.cr$d -> bq.hb:
    u.aly.cr$c a() -> a
    u.aly.do b() -> b
u.aly.cs -> bq.hc:
    java.lang.Class a -> a
u.aly.ct -> bq.hd:
    java.lang.String a -> a
    byte b -> b
    u.aly.cu c -> c
    java.util.Map d -> d
    void a(java.lang.Class,java.util.Map) -> a
u.aly.cu -> bq.he:
    byte b -> b
    boolean a -> a
    java.lang.String c -> c
    boolean d -> d
u.aly.cv -> bq.hf:
    u.aly.cu a -> a
u.aly.cw -> bq.hg:
    u.aly.cu a -> a
    u.aly.cu c -> c
u.aly.cy -> bq.hh:
    java.lang.Class a -> a
u.aly.cz -> bq.hi:
    u.aly.dl h -> f
    boolean c -> a
    boolean d -> b
    int e -> c
    boolean f -> d
    byte[] i -> g
    byte[] j -> h
    byte[] k -> i
    byte[] l -> j
    byte[] m -> k
    byte[] n -> l
    byte[] o -> m
    byte[] p -> n
    void a(u.aly.dl) -> a
    void b() -> a
    void a(u.aly.db) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.dd) -> a
    void e() -> d
    void a(u.aly.dc) -> a
    void f() -> e
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dl j() -> f
    void k() -> g
    u.aly.db l() -> h
    void m() -> i
    u.aly.dd n() -> j
    void o() -> k
    u.aly.dc p() -> l
    void q() -> m
    u.aly.dk r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.lang.String b(int) -> b
    java.nio.ByteBuffer A() -> w
    int a(byte[],int,int) -> a
    void c(int) -> c
    void d(int) -> d
u.aly.cz$a -> bq.hj:
    boolean a -> a
    boolean b -> b
    int c -> c
    u.aly.dg a(u.aly.du) -> a
u.aly.d -> bq.hk:
    java.lang.String b -> b
    java.io.File c -> c
    u.aly.az d -> d
    long e -> e
    long f -> f
    java.util.Set g -> g
    u.aly.d$a h -> h
    u.aly.d a -> a
    u.aly.d a(android.content.Context) -> a
    boolean a(u.aly.a) -> a
    void a() -> a
    u.aly.az b() -> b
    void g() -> f
    void d() -> c
    void e() -> d
    void f() -> e
    u.aly.az h() -> g
    void a(u.aly.az) -> a
u.aly.d$a -> bq.hl:
    android.content.Context a -> a
    java.util.Set b -> b
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void b() -> b
u.aly.da -> bq.hm:
    u.aly.dl d -> d
    u.aly.db e -> f
    byte[] f -> g
    u.aly.cf m -> h
    short n -> i
    u.aly.db o -> j
    java.lang.Boolean p -> k
    long q -> l
    byte[] a -> a
    byte[] b -> b
    byte[] r -> m
    byte[] c -> c
    void B() -> x
    void a(u.aly.dl) -> a
    void b() -> a
    void a(u.aly.db) -> a
    void a(u.aly.db,byte) -> a
    void d() -> c
    void a(u.aly.dd) -> a
    void a(u.aly.dc) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    void a(byte[],int,int) -> a
    void e() -> d
    void f() -> e
    void c() -> b
    void a(byte,int) -> a
    void b(int) -> b
    void b(long) -> b
    long c(long) -> c
    int c(int) -> c
    void a(long,byte[],int) -> a
    void b(byte) -> b
    void d(int) -> d
    u.aly.dl j() -> f
    void k() -> g
    u.aly.db l() -> h
    u.aly.dd n() -> j
    u.aly.dc p() -> l
    u.aly.dk r() -> n
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    byte[] e(int) -> e
    void f(int) -> f
    void m() -> i
    void o() -> k
    void q() -> m
    void s() -> o
    int E() -> z
    long F() -> A
    int g(int) -> g
    long d(long) -> d
    long a(byte[]) -> a
    boolean c(byte) -> c
    byte d(byte) -> d
    byte e(byte) -> e
u.aly.da$a -> bq.hn:
    long a -> a
    u.aly.dg a(u.aly.du) -> a
u.aly.db -> bq.ho:
    java.lang.String a -> a
    byte b -> b
    short c -> c
    java.lang.String toString() -> toString
u.aly.dc -> bq.hp:
    byte a -> a
    int b -> b
u.aly.dd -> bq.hq:
    byte a -> a
    byte b -> b
    int c -> c
u.aly.dg -> bq.hr:
    u.aly.du g -> e
    void a(u.aly.dl) -> a
    void b() -> a
    void a(u.aly.db) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.dd) -> a
    void e() -> d
    void a(u.aly.dc) -> a
    void f() -> e
    void a(boolean) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dl j() -> f
    void k() -> g
    u.aly.db l() -> h
    void m() -> i
    u.aly.dd n() -> j
    void o() -> k
    u.aly.dc p() -> l
    void q() -> m
    u.aly.dk r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    void B() -> x
    java.lang.Class D() -> y
u.aly.dh -> bq.hs:
    int g -> a
u.aly.di -> bq.ht:
    u.aly.dg a(u.aly.du) -> a
u.aly.dj -> bq.hu:
    int a -> a
    void a(u.aly.dg,byte) -> a
    void a(u.aly.dg,byte,int) -> a
u.aly.dk -> bq.hv:
    byte a -> a
    int b -> b
u.aly.dl -> bq.hw:
    java.lang.String a -> a
u.aly.dm -> bq.hx:
    java.lang.Class D() -> y
    void a(java.util.BitSet,int) -> a
    java.util.BitSet b(int) -> b
    java.util.BitSet a(byte[]) -> a
    byte[] b(java.util.BitSet,int) -> b
u.aly.do -> bq.hy:
    void b(u.aly.dg,u.aly.ch) -> b
    void a(u.aly.dg,u.aly.ch) -> a
u.aly.dp -> bq.hz:
    u.aly.do b() -> b
u.aly.dq -> bq.ia:
u.aly.dr -> bq.ib:
u.aly.ds -> bq.ic:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
u.aly.dt -> bq.id:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
    void c(byte[],int,int) -> c
    void e() -> a
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.du -> bq.ie:
    int a(byte[],int,int) -> a
    int d(byte[],int,int) -> d
    void b(byte[]) -> b
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dv -> bq.if:
    int f -> a
u.aly.e -> bq.ig:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.f -> bq.ih:
    byte[] b -> a
    u.aly.w c -> b
    u.aly.ba d -> c
    u.aly.f e -> d
    android.content.Context f -> e
    u.aly.f a(android.content.Context) -> a
    void a(u.aly.w) -> a
    java.lang.String a(u.aly.ba) -> a
    boolean c(u.aly.ba) -> c
    byte[] a(u.aly.bb) -> a
    void b(u.aly.ba) -> b
    u.aly.ba a(u.aly.ba,u.aly.ba) -> a
    void e() -> d
    int a(java.lang.String) -> a
    u.aly.ba a() -> a
    void b() -> b
    void c() -> c
u.aly.g -> bq.ii:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.h -> bq.ij:
    java.lang.String f() -> f
u.aly.i -> bq.ik:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.j -> bq.il:
    java.util.regex.Pattern c -> a
    android.content.Context d -> b
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(java.lang.String) -> b
    java.io.File h() -> h
u.aly.k -> bq.im:
    u.aly.s a -> a
    com.umeng.analytics.h b -> b
    u.aly.aa c -> c
    u.aly.ak d -> d
    u.aly.k$a e -> e
    int f -> f
    int g -> g
    android.content.Context h -> h
    void a() -> a
    void a(u.aly.q) -> a
    void b(u.aly.q) -> b
    void b() -> b
    void a(boolean) -> a
    void d(int) -> d
    void a(u.aly.bn) -> a
    u.aly.bn a(int[]) -> a
    u.aly.bn a(byte[]) -> a
    byte[] b(u.aly.bn) -> b
    boolean b(boolean) -> b
    boolean d() -> c
    void e() -> d
    boolean f() -> e
    void e(int) -> e
    void a(int,long) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    com.umeng.analytics.h a(u.aly.k) -> a
    u.aly.aa b(u.aly.k) -> b
    u.aly.ak c(u.aly.k) -> c
    android.content.Context d(u.aly.k) -> d
    void a(u.aly.k,int) -> a
u.aly.k$1 -> bq.in:
    u.aly.k a -> a
    void a() -> a
u.aly.k$a -> bq.io:
    long b -> b
    int c -> c
    int d -> d
    com.umeng.analytics.ReportPolicy$g e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    boolean j -> j
    u.aly.k a -> a
    void a() -> a
    boolean b() -> b
    com.umeng.analytics.ReportPolicy$g c() -> c
    com.umeng.analytics.ReportPolicy$g b(int,int) -> b
    int c(int) -> c
    void d() -> d
    void a(int) -> a
    void b(int) -> b
    void a(int,int) -> a
u.aly.l -> bq.ip:
    u.aly.p a -> a
    android.content.Context b -> b
    u.aly.l c -> c
    u.aly.l a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.a) -> a
    void a(u.aly.q) -> a
    void b(u.aly.q) -> b
    void b() -> b
    u.aly.p a(u.aly.l) -> a
u.aly.l$1 -> bq.iq:
    u.aly.q a -> a
    u.aly.l b -> b
    void a() -> a
u.aly.l$3 -> bq.ir:
    u.aly.l a -> a
    void a() -> a
u.aly.m -> bq.is:
    java.lang.String a -> a
    boolean b -> b
    android.content.SharedPreferences c -> c
    java.util.Map d -> d
    void a(boolean) -> a
    void a(java.lang.String,u.aly.ae) -> a
    u.aly.ae b(java.lang.String) -> a
    void c(java.lang.String) -> b
    boolean d(java.lang.String) -> c
u.aly.n -> bq.it:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    u.aly.v b -> b
    void a(u.aly.v) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
u.aly.o -> bq.iu:
    int a -> a
    int b -> b
    u.aly.m c -> c
    android.content.Context d -> d
    u.aly.l e -> e
    void a(java.lang.String,java.lang.String,long,int) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
u.aly.p -> bq.iv:
    void b(u.aly.q) -> b
    void a(u.aly.q) -> a
    void b() -> b
u.aly.q -> bq.iw:
    void a(u.aly.bn,java.lang.String) -> a
u.aly.r -> bq.ix:
    void a() -> k
    void b() -> l
    void c() -> m
    void d() -> n
u.aly.s -> bq.iy:
    java.util.List a -> a
    u.aly.am b -> b
    u.aly.ao c -> c
    u.aly.ar d -> d
    u.aly.bf e -> e
    android.content.Context f -> f
    int b() -> a
    void a(u.aly.q) -> a
    void a(u.aly.bn) -> a
    void a(u.aly.am) -> a
    u.aly.ao c() -> b
    u.aly.ar d() -> c
    u.aly.bf e() -> d
    u.aly.ba f() -> e
    u.aly.az g() -> f
    u.aly.ap h() -> g
    u.aly.an i() -> h
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
u.aly.t -> bq.iz:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    android.content.Context d -> d
    u.aly.r e -> e
    void a(u.aly.r) -> a
    byte[] a(byte[]) -> a
    boolean a() -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
u.aly.u -> bq.ja:
    java.lang.String a(java.io.Serializable) -> a
    java.lang.Object a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] b(java.lang.String) -> b
u.aly.v -> bq.jb:
    void a(java.lang.Throwable) -> a
u.aly.w -> bq.jc:
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
u.aly.x -> bq.jd:
    android.content.SharedPreferences a(android.content.Context,java.lang.String) -> a
    android.content.SharedPreferences a(android.content.Context) -> a
u.aly.y -> bq.je:
    u.aly.d d -> a
    u.aly.f e -> b
    int f -> c
    android.content.Context g -> d
    u.aly.aa h -> e
    u.aly.t i -> f
    u.aly.bn j -> g
    boolean k -> h
    boolean l -> i
    void a(u.aly.bn) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void a(u.aly.w) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    int a(byte[]) -> a
    byte[] b(u.aly.bn) -> b
    u.aly.t a(u.aly.y) -> a
    int a(u.aly.y,byte[]) -> a
    u.aly.aa b(u.aly.y) -> b
    boolean c(u.aly.y) -> c
u.aly.y$1 -> bq.jf:
    u.aly.y a -> a
    void a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void c(java.io.File) -> c
u.aly.z -> bq.jg:
    java.lang.String d -> a
    java.lang.String e -> b
    java.lang.String g -> c
    u.aly.aj a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    boolean b(android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,android.content.SharedPreferences) -> a
    java.lang.String g(android.content.Context) -> e
vi.com.gdi.bgl.android.java.EnvDrawText -> vi.com.gdi.bgl.android.java.EnvDrawText:
    java.lang.String a -> a
    android.graphics.Paint pt -> pt
    int iWordWidthMax -> iWordWidthMax
    int iWordHightMax -> iWordHightMax
    boolean bBmpChange -> bBmpChange
    android.graphics.Bitmap bmp -> bmp
    android.graphics.Canvas canvasTemp -> canvasTemp
    int[] buffer -> buffer
    android.util.SparseArray fontCache -> fontCache
    int[] drawText(java.lang.String,int,int,int[],int,int,int,int) -> drawText
    short[] getTextSize(java.lang.String,int) -> getTextSize
    void registFontCache(int,android.graphics.Typeface) -> registFontCache
    void removeFontCache(int) -> removeFontCache
vi.com.gdi.bgl.android.java.a -> vi.com.gdi.bgl.android.java.a:
    android.graphics.Typeface a -> a
    int b -> b
